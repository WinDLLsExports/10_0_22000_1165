  t$E
 ;B<t
 @ZnD
 A^_^
 A^_^H
 A_A^_
 A_A^_^]
 A_A^_H
 A_A^A\
 A_A^A\_^
 A_A^A\H
 A_A^A]
 A_A^A]A\_
 A_A^A]A\_^[
 A_A^A]A\_^]
 and D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS::Flags set to D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE
 at the Amplification Shader stage
 at the Domain Shader stage
 at the Geometry Shader stage
 at the Hull Shader stage
 at the Mesh Shader stage
 at the Pixel Shader stage
 at the Vertex Shader stage
 but there are required rate control configurations active that are reported as no supported in the SupportFlags
 H3E H3E
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Microsoft Operations Puerto Rico1
 nor with shader atomics running on an LDA peer. See D3D12_FEATURE_DATA_CROSS_NODE::AtomicShaderInstructions
 Operating System
 or to memory on another LDA peer
 Windows
!]_0t
!|$ L
!|$PL
!|$t!|$`A
!D$xH!
!t$ A
!t$ L
!This program cannot be run in DOS mode.
!TkjE
"""""""
"%b+@0
"Microsoft Window
"r$r&
#!+)31;9
#G9$(s@I
$$5X,
$5)cw
$8< t
$9tMF
$L9@ s
$Microsoft Ireland Operations Limited1&0$
%%+qi
%;kQn
%d.%d.%d.%d
%D9C(u
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%Microsoft Windows Production PCA 2011
%Microsoft Windows Production PCA 20110
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' has a different system value defined in the output stage vs input stage.
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' has mismatched data types between the output stage and input stage.
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' in each signature have different min precision levels, when they must bet identical. 
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' is defined for mismatched hardware registers between the output stage and input stage.
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' of the input stage has a hardware register component mask that does not match the output of the previous stage.
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' of the input stage has a hardware register component mask that is not a subset of the output of the previous stage.
%s - %s linkage error: Signatures between stages are incompatible. The input stage requires Semantic/Index (%s,%d) as input, but it is not provided by the output stage.
%s - %s linkage error: Stages are incompatible with each other. Semantic '%s' is always read by the downstream shader, but never written by the upstream shader (even though the semantic is present in its output signature).
%s can not be called on a resource associated with a heap that has the CPU page properties of D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE. Heaps of the type D3D12_HEAP_TYPE_DEFAULT should be assumed to have these properties.
%s can not be called on a resource created with the CreateReservedResource API. The CPU page mapping is not kept in-sync with the GPU tile mapping configuration.
%s can not be called on a resource when it is either multisampled, is one of a few exceptional formats, has D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set in D3D12_RESOURCE_DESC::Flags, has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set in D3D12_RESOURCE_DESC::Flags, has D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set in D3D12_RESOURCE_DESC::Flags, is a volume texture with multiple mip levels & an opaque layout or strides,  or is a sampler feedback resource. The resource layout is %s, which is %sopaque. The resource format is %s, which is %ssupported. The resource dimension is %s, has %u samples, has %u mip levels, The D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL is %sset. The D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY is %sset. The D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY is %sset. 
%s cannot be called for buffers.
%s has a format of %s that does not match the decoder heap which has a format of %s.
%s is not NULL, not empty, and specifies an area past the subresource extent. D3D12_RANGE::Begin is %I64u, D3D12_RANGE::End is %I64u, and subresource %u has only %I64u bytes.
%s is smaller than the matching decoder heap.  Decoder Heap Width: %d, Decoder Heap Height: %d, Resource Width: %I64u, Resource Height: %d
%s must be NULL or specify an empty range when %s is invoked for a resource with an opaque layout or opaque strides. The resource layout is %s, which is opaque. %s is%s NULL.
%s stage inputs do not fit within maximum vertex size of %d components when accounting for expansion of components that are dependent on ViewID by the declared ViewInstanceCount (%d), based on the compiler's component packing rules.
%s stage outputs do not fit within maximum vertex size of %d components when accounting for expansion of components that are dependent on ViewID by the declared ViewInstanceCount (%d), based on the compiler's component packing rules.
%s stage patch constant inputs do not fit within maximum vertex size of %d components when accounting for expansion of components that are dependent on ViewID by the declared ViewInstanceCount (%d), based on the compiler's component packing rules.
%s stage validation metadata required for PSOs used with view instancing is invalid or incorrect version.
%s stage validation metadata required for PSOs used with view instancing is missing or invalid.
%s\%s
%sSubresource is too large for the resource. The value is %u, when the resource only has %u subresources.
%u.%u.%u.%u
&S|9a
(.*.,
(|$ H
(~gh/
(A^_^[
(A_A^A]A\_^][
(caller: %p) 
(D$ f
(D$ H
(D$ I
(D$ L
(D$@f
(D$0f
(L$@f
(L*V(L*P(L*V(L*V(L*V(L*V(L*@(Y
(root parameter [%u], visibility %s)
(root parameter [%u], visibility %s, descriptor table slot [%u])
(root parameter[%u], visibility %s, descriptor table slot [%u])
(static sampler [%u], visibility %s)
(t$ H
(t$@H
(t$`I
(t$0H
(t$PI
(T*x,d.H0p2z4
)#1+93A
)D$`3
)E@fI
)f9*t
)I0fD9R
)L$03
)Microsoft Root Certificate Authority 20100
)t$ H
)t$0H
*:M4}
*`{Cm
*H90t
, 1, 4, 8
, 1, 4, 8, 16
, ArraySize: 
, Depth: 
, Dimension=Buffer, Size=
, Dimension=Texture1D, Width=
, Dimension=Texture2D, Width=
, Dimension=Texture3D, Width=
, Height=
, MipLevels=
, Type=CUSTOM
, Type=DEFAULT
, Type=READBACK
, Type=UPLOAD
, UniqueId=0x
,531ga63upCaKfOWSkzoQ6yKuCQ7U8JeuHOM17c7fYm8=0Z
,f({s?
,LL&R/
.?3V1
.?AUDeleter@CShaderCache@@
.?AV_com_error@@
.?AV_System_error@std@@
.?AV<lambda_0474ac31c26aaadad35fcbc02332bc7a>@@
.?AV<lambda_0bbb27d9c11bee5e3dad1398d51bc0a4>@@
.?AV<lambda_168df43b891ff8bc8637df0afcc1cbe2>@@
.?AV<lambda_25d5d94c99717912d806a68b49de23fa>@@
.?AV<lambda_2f1984013f35abcf49722d1b6c8b7161>@@
.?AV<lambda_314afbbc72f9f1aa4d7fb041717af3d0>@@
.?AV<lambda_3d94d160bed37a98a1b5ad68dc0f3c3e>@@
.?AV<lambda_3ec0e0d38a2f911ddff43573830253e5>@@
.?AV<lambda_581f0ae6153d140c83e67dfa5fe3108c>@@
.?AV<lambda_6c6f7c263ad9267b9034e080f68bd452>@@
.?AV<lambda_6eda4431c6aaaae69ab3dc36e8270d98>@@
.?AV<lambda_6fe0e90b9d5ff28e6466d1425cc213a5>@@
.?AV<lambda_73bb3971fd2bafa74b866f0e82e2c023>@@
.?AV<lambda_79c516b52db05f295842e3858ef5d16b>@@
.?AV<lambda_7d756980a8b78d8505682dcf8a49bb93>@@
.?AV<lambda_807f208f42cd90d7d2a82723e52bbb92>@@
.?AV<lambda_8992807309c84c01dd484515892362bd>@@
.?AV<lambda_911ae15366e1e013327c9316450ae20d>@@
.?AV<lambda_9601aa66b4dc6b77675529252bee3954>@@
.?AV<lambda_98ca3fd89b4353354feb28647b1e55ce>@@
.?AV<lambda_9e66f2205d15dd8950ab36eb03726987>@@
.?AV<lambda_a5d7a736399e7559c3ae2fe42868cb15>@@
.?AV<lambda_bcefbb1edeb21848175fe318ffc3e6fb>@@
.?AV<lambda_c2ef2a188817fb28802048e9ffcbab50>@@
.?AV<lambda_c3911188b630ac6d0566f5ba04393d66>@@
.?AV<lambda_c7d36569a2360db735fe993bb06c5a5d>@@
.?AV<lambda_d6b3fa67b7480e4e1881f60c7cf05cb8>@@
.?AV<lambda_d9916cbeb8f7e17be18c70b3a0d281ba>@@
.?AV<lambda_f2efcb8b1bb607a87aefdad9f70da802>@@
.?AV<lambda_f5c3e1e60ad44720c90b3d8a6fbba5df>@@
.?AV<lambda_faade8190854c2db097cfdbb850364b6>@@
.?AV<lambda_fdcbdc8b0de07e3c2f6168de3eab5911>@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVbad_cast@std@@
.?AVbad_weak_ptr@std@@
.?AVbuffer_overlap@CheckedReader@RDAT@hlsl@@
.?AVbuffer_overrun@CheckedReader@RDAT@hlsl@@
.?AVexception@CheckedReader@RDAT@hlsl@@
.?AVexception@std@@
.?AVlength_error@std@@
.?AVResultException@wil@@
.?AVruntime_error@std@@
.?AVsystem_error@std@@
.?AVtype_info@@
.|6b8}
.+D8B1Qy
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$brc
.data$r$brc
.data$rs$brc
.DDIData
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gehcont
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.P6AJIPEBX_KAEBU_GUID@@PEAPEAXPEAX@Z
.pdata
.rdata
.rdata$brc
.rdata$r
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.text_hf
.text_hf$x
.tls$
.tls$ZZZ
.xdata
.xdata$x
:9w u5
:D$`uR
:DXBC
;|$8r
;D$0s
;Q su
;S r=D;K$v9;S r2H
;T$8r
;t$ps
??0?$basic_ios@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@_N@Z
??0?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0_Lockit@std@@QEAA@H@Z
??1?$basic_ios@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_ostream@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1_Lockit@std@@QEAA@XZ
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@_K@Z
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@I@Z
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
??Bid@locale@std@@QEAA_KXZ
?_Getcat@?$ctype@G@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_Osfx@?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAXXZ
?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAPEAGXZ
?_Syserror_map@std@@YAPEBDH@Z
?_Throw_C_error@std@@YAXH@Z
?_Throw_Cpp_error@std@@YAXH@Z
?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_Xbad_function_call@std@@YAXXZ
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
?flush@?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV12@XZ
?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXH@Z
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
?id@?$ctype@G@std@@2V0locale@2@A
?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAXAEBVlocale@2@@Z
?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAPEAV12@PEAG_J@Z
?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAXH_N@Z
?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JXZ
?sputc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGG@Z
?sputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAA_JPEBG_J@Z
?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAHXZ
?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAGXZ
?uncaught_exception@std@@YA_NXZ
?widen@?$ctype@G@std@@QEBAGD@Z
?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEAG_J@Z
?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEBG_J@Z
@ 9B r
@ L9A t'
@.data
@.didat
@.reloc
@@H9x8t
@`L9@0t
@8:t'
@8|$@t
@8|$Ht
@8<(u
@8=jn
@8=ro
@8l$pu
@8s?u
@8s>u
@8sHu
@8w0t
@A^_^
@A^_^[]
@A^_^][
@A^A\]
@A_A^]
@A_A^^
@A_A^_
@A_A^_^[
@A_A^_^]
@A_A^A\
@A_A^A]
@A_A^A]A\_
@A_A^A]A\_^[
@A_A^A]A\_^]
@dx'\
@e5:ih
@I;Uhr#I;Upw
@M;Ehr
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SVAUAVAWH
@SVAVAWH
@SVWATAUAVAW
@SVWATAUAVAWH
@SVWATAVAWH
@SVWAUAVAWH
@SVWAVAWH
@SVWAVH
@SVWAVM
@SVWH
@tB,T
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAVAWH
@USVWATAVH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWH
@USWAUAVAWH
@UVWH
@XL9@(t
[ UVWATAUAVAWH
[%hs(%hs)]
[%hs]
[:ta@
[L/RD
[O'J0
\$ D9
\$ E3
\$ H;
\$ H;\$(tBH
\$ H3
\$ I;_
\$ M3
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ UVWH
\$ VWATAVAWH
\$ VWAUAVAWH
\$ VWAVH
\$ WATAUAVAWH
\$ WH
\$(D#
\$@9w uC
\$@H#
\$@L+
\$`A9
\$`I;X
\$0E3
\$0H;
\$0I;
\$8D!|$0
\$8E3
\$8H;
\$8L;
\$8M;
\$AD9
\$AD9I
\$DA;
\$HA;_xt
\$hD;
\$hE3
\$PE3
\$PI;
\$xH;] t
\$xH;]0tqL
\$xH;]0u
\$xI;
])C`|]
]`H;]h
]boV1
^4h&H
^z`vd
__C_specific_handler
__current_exception
__current_exception_context
__CxxFrameHandler4
__std_terminate
__std_type_info_compare
_Cnd_broadcast
_Cnd_destroy_in_situ
_Cnd_do_broadcast_at_thread_exit
_Cnd_init_in_situ
_Cnd_signal
_Cnd_wait
_CxxThrowException
_initterm
_initterm_e
_Mtx_destroy_in_situ
_Mtx_init_in_situ
_Mtx_lock
_Mtx_trylock
_Mtx_unlock
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o___stdio_common_vswprintf_s
_o__beginthreadex
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__fdclass
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__stricmp
_o__wcsicmp
_o_atoi
_o_ceil
_o_ceilf
_o_free
_o_isdigit
_o_log2
_o_malloc
_o_mbsrtowcs
_o_mbstowcs
_o_terminate
_o_tolower
_o_wcscpy_s
_Thrd_hardware_concurrency
_Thrd_id
_Thrd_join
_VEN_%X&DEV_%X&SUBSYS_%X&REV_%X
` AUAVAWD
` AUAVAWH
` AVH
` UAVAWH
`(r"L
`.rdata
`.text_hf
`0^0\
`A^_^[]
`A_A^_^]
`A_A^A]A\_^]
`XL9`(t
{ ATAVAWH
{ AVH
{0H9C8u
|$ ATAVAWH
|$ AVH
|$ dw
|$ E3
|$ UATAUAVAWH
|$ UAUAVH
|$ UAVAWH
|$ UH
|$(A^
|$(A_
|$(E#
|$(H;
|$(I3
|$@9=
|$@A_A^A]A\
|$@D8
|$@I;
|$@L;
|$@M;
|$@Mk
|$`H;]
|$`H9
|$`M+
|$`Xt
|$0A_A^
|$0E3
|$0H;
|$0I;
|$0M#
|$4t9D
|$8A^A]A\
|$8A_A^A\
|$8E3
|$8H;
|$8M#
|$HE3
|$HH;
|$hI;
|$HM#
|$P@8
|$pA9|$p
|$PD9v`t9D
|$pE;|$p
|$PE3
|$pfD
|$pH;
|$PHcD$XH
|$pI;
|$PL#
|$pu"
|$xE3
|$xI;
|$XL;
|$Xt7
|.0L+
}0H+}(H
~L_CG
~mI|3
~y9(tnD9
+,7B^
+t$x;
+ZZDK
<!r_H
<(r>H
<(r0H
<(rJH
<(rrH
<Y!s#H*
<zqcG
=CDestroyContext
=Hys#F
> `$>&`*
>`Gt1>
>DXIL
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
0$FL 
040904B0
0A^_^
0A^_^[]
0A^_^][
0A^A\_
0A^A]A\
0A_A\_
0A_A^]
0A_A^_
0A_A^_^[
0A_A^A\
0A_A^A\_^
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0h=&.^
0H90t
0L9s@t
0x%08X
1(0&0
1,0*0
10.0.22000.653
10.0.22000.653 (WinBuild.160101.0800)
111019184142Z
1r9#or
20220428022738.892Z0
20220428102522Z
20220429102522Z0t0:
210902182341Z
210930182225Z
211028192746Z
220901182341Z0p1
229879+4675790
230126192746Z0
261019185142Z0
300930183225Z0|1
3333333
3D$8%x
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
3L3L$8M
4/Vu0
420_OPAQUE
6CaOJC
6F$XH
7LELX
7pDz<8
8\$@u
8\$Pt
8\$Xt
8_^][
8A^_^[
8A_A^A]A\_^][
8A3@$A
8D$:t
8D$Au
8H99L
8L$ tdL
8sKE;
8T$0t$
9#A+I
9\$0t
9\$4u
9\$xA
9\$xu
9|$`v+
9} v=H
97tKA
98t<H
9A(unA
9A@uG
9A<uTA
9A8uaA
9A98uCA9x
9C<roL
9C<rrL
9C8r|u
9C8ryu
9D$`u8
9E t"
9E$t"
9E9K 
9G0v+
9L$Dt
9L$Dv
9L$Tt
9Ocr4
9pvbt
9t$0t#
9T$8v
9t$x@
9uPtzH
A ;B 
A A9C r
A buffer cannot be created on a D3D12_HEAP_TYPE_UPLOAD or D3D12_HEAP_TYPE_READBACK heap when either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS is used.
A buffer resource cannot be created on a heap with the D3D12_HEAP_FLAG_DENY_BUFFERS flag.
A bundle cannot be passed to ExecuteCommandLists.
A command signature must contain 1 Draw/Dispatch/DispatchMesh/DispatchRay command.
A command signature must contain exactly 1 Draw/Dispatch/DispatchMesh/DispatchRays command.  That command must come last.
A copy command list cannot issue queries against a standard timestamp query heap. Copy command lists may only issue timetamp queries against COPY_QUEUE_TIMESTAMP query heaps.
A D9@ u
A D9@ u.L
A DepthStencilView cannot be created from a NULL Resource and NULL Desc.
A DepthStencilView cannot be created of a Buffer nor Texture3D Resource.
A DepthStencilView cannot be created of a Resource that did not specify D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL.
A H9EPt"
A multisampled resource cannot set D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS in D3D12_RESOURCE_DESC::Flags.DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %u.
A multisampled resource cannot set D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS in D3D12_RESOURCE_DESC::Flags.DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %u.
A multisampled resource must have either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set in D3D12_RESOURCE_DESC::Flags. DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %u.
A non-zero Flags field (%#x) is not valid, unless the GetFeatureLevel returns D3D_FEATURE_LEVEL_11_0 or greater.
A NULL pSamplerDesc was specified.
A pointer to resource data cannot be obtained when the resource has an opaque memory layout or opaque strides. ppData must be NULL in order to use WriteToSubresource and ReadFromSubresource. The resource layout is %s, which is opaque.
A RenderTargetView cannot be created from a NULL Resource and NULL Desc.
A RenderTargetView cannot be created of a Resource that did not specify the RENDER_TARGET MiscFlag.
A root signature should be specified if and only if the command signature indicates that root arguments will be changed.
A sampler feedback DXGI_FORMAT was specified, but the device reports D3D12_SAMPLER_FEEDBACK_TIER_NONE.
A Shader is declaring a resource object as a texture using a register mapped to a root descriptor SRV (ShaderRegister=%u, RegisterSpace=%u).  SRV or UAV root descriptors can only be Raw or Structured buffers.
A Shader is declaring a structured UAV with counter using a register mapped to a root descriptor UAV (ShaderRegister=%u, RegisterSpace=%u).  SRV or UAV root descriptors can only be Raw or Structured buffers.
A Shader is declaring a typed UAV using a register mapped to a root descriptor UAV (ShaderRegister=%u, RegisterSpace=%u).  SRV or UAV root descriptors can only be Raw or Structured buffers.
A shader is using atomic int64 operations on a descriptor heap resource (ShaderRegister=%u, RegisterSpace=%u), which the device does not support. Check the AtomicInt64OnDescriptorHeapResourceSupported capability via the CheckFeatureSupport() API.
A ShaderResourceView cannot be created from a NULL Resource and NULL Desc.
A ShaderResourceView cannot be created of a Resource that did specify the D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE MiscFlag.
A single command list cannot write to multiple buffers within a particular swapchain.
A texture resource cannot be created on a D3D12_HEAP_TYPE_UPLOAD or D3D12_HEAP_TYPE_READBACK heap. Investigate CopyTextureRegion to copy texture data in CPU accessible buffers, or investigate D3D12_HEAP_TYPE_CUSTOM and WriteToSubresource for UMA adapter optimizations.
A texture resource with either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set cannot be created on a heap with the D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES flag.
A texture resource without either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set cannot be created on a heap with the D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES flag.
A texture that has D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set in D3D12_RESOURCE_DESC::Flags must be created with a format that either can be used as a depth stencil, or cast to a format that could be used as a depth stencil. FeatureLevel is %s. D3D12_RESOURCE_DESC::Format is %s.%s
A texture that has D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET set in D3D12_RESOURCE_DESC::Flags must be created with a format that either can be used as a render target, or cast to a format that could be used as a render target. FeatureLevel is %s. D3D12_RESOURCE_DESC::Format is %s.%s
A texture that has D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS set in D3D12_RESOURCE_DESC::Flags must be created with a format that either can be used as unordered access, or cast to a format that could be used as unordered access. FeatureLevel is %s. D3D12_RESOURCE_DESC::Format is %s.%s
A u0H
A UnorderedAccessView cannot be created of a Resource that did not specify the D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS Flag.
A UnorderedAccessView cannot be created with a counter Resource that did not specify the D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS Flag.
A View cannot be created using a NULL Desc, when the Resource was created with a typeless Format. Default Desc parameters cannot be used, as a fully qualified Format must be supplied.
A View of a Buffer cannot be created using a NULL Desc. Default Desc parameters cannot be used, as a Format must be supplied.
A View of a non-Structured Buffer cannot be created using a NULL Desc. Default Desc parameters cannot be used, as a Format must be supplied.
A$+A 
A(;B(u
A(L;ApL
A;\$pr
A;I8r
A;o r
A?fB;
A@A_A^A]
A@H!AH
A@H9A
A^_^[
A^_^[]
A^_^][
A^A\_
A^A\_^[]
A^A]]
A^A]A\_^
A_A]]
A_A^]
A_A^^[
A_A^_
A_A^_^[
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^_H
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[
A_A^A\_^[]
A_A^A\_^H
A_A^A]
A_A^A]^[
A_A^A]_[]
A_A^A]_^
A_A^A]_^[
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_[
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A`H!AhH!Ap
A<9B<s
A>f;C
A8;B8
A8@0t
A8]8t
A8_0t8
A8_UNORM
A89] v(H
A89~ v(H
A89B8r
A9_`r
A9|$pv\
A91tnA
A91u.H
A91u+H
A94$v]L
A94$vPL
A98v*A
A99t:A
A99t3A
A99t9A
A99tXA
A99u/
A99u+H
A9Gxv
A9o v)
A9Q4v
A9Q8v
A9v$t7
A9x(t
A9x@u
abort
Access parameter must be GENERIC_ALL.
AcquireKeyedMutex
AcquireSRWLockExclusive
AcquireSRWLockShared
adapterLuid
AddressU unrecognized.
AddressV unrecognized.
AddressW unrecognized.
AdjustValue
AH;n r
AhdJ!
AlignedBufferOffset is too large.
AlignedBufferOffset must be a multiple of 8.
AlignedDestinationBufferOffset is not a multiple of 8.
AlignedDestinationBufferOffset/ElementCount exceeds range destination buffer.
Alignment
AllocateLocallyUniqueId
Allocation append failed. Resource handle likely stale.
AllocationInfo
AllowDevelopmentWithoutDevLicense
AMPLIFICATION
Amplification Shader
Amplification shader stage validation metadata required for PSOs used with view instancing is missing or invalid.
An invalid parameter was passed to RSSetShadingRate
An invalid parameter was passed to RSSetShadingRateImage
An invalid sampler feedback mip region was specified. Mip region width and height must be a power-of-two number greater than or equal to 4, less than or equal to half the size of most detailed mip of the paired texture.
An invalid sampler feedback mip region was specified; the Depth field must be equal to 0 or 1.
An UnorderedAccessView cannot be created from a NULL Resource and NULL Desc.
anyhit
Aon9H
Ap;Bpu[
api-ms-win-appmodel-unlock-l1-1-0.dll
api-ms-win-core-apiquery-l2-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-memory-l1-1-1.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-processthreads-l1-1-3.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-quirks-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-core-version-l1-1-1.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-ansi-l2-1-0.dll
APISequenceNumber
appAdapterMask
Application-managed shader caches are currently disabled.
AppName
AppVer
AR!H+
Argument and count resources must be buffers.
Argument buffer & count buffer offsets must be 4 byte aligned.
Argument buffer overflow.
ArraySize
AS specified without MS
as.,k{n?,
AssociatedFlag
ASTC_10X10_FLOAT
ASTC_10X10_TYPELESS
ASTC_10X10_UNORM
ASTC_10X10_UNORM_SRGB
ASTC_10X5_FLOAT
ASTC_10X5_TYPELESS
ASTC_10X5_UNORM
ASTC_10X5_UNORM_SRGB
ASTC_10X6_FLOAT
ASTC_10X6_TYPELESS
ASTC_10X6_UNORM
ASTC_10X6_UNORM_SRGB
ASTC_10X8_FLOAT
ASTC_10X8_TYPELESS
ASTC_10X8_UNORM
ASTC_10X8_UNORM_SRGB
ASTC_12X10_FLOAT
ASTC_12X10_TYPELESS
ASTC_12X10_UNORM
ASTC_12X10_UNORM_SRGB
ASTC_12X12_FLOAT
ASTC_12X12_TYPELESS
ASTC_12X12_UNORM
ASTC_12X12_UNORM_SRGB
ASTC_4X4_FLOAT
ASTC_4X4_TYPELESS
ASTC_4X4_UNORM
ASTC_4X4_UNORM_SRGB
ASTC_5X4_FLOAT
ASTC_5X4_TYPELESS
ASTC_5X4_UNORM
ASTC_5X4_UNORM_SRGB
ASTC_5X5_FLOAT
ASTC_5X5_TYPELESS
ASTC_5X5_UNORM
ASTC_5X5_UNORM_SRGB
ASTC_6X5_FLOAT
ASTC_6X5_TYPELESS
ASTC_6X5_UNORM
ASTC_6X5_UNORM_SRGB
ASTC_6X6_FLOAT
ASTC_6X6_TYPELESS
ASTC_6X6_UNORM
ASTC_6X6_UNORM_SRGB
ASTC_8X5_FLOAT
ASTC_8X5_TYPELESS
ASTC_8X5_UNORM
ASTC_8X5_UNORM_SRGB
ASTC_8X6_FLOAT
ASTC_8X6_TYPELESS
ASTC_8X6_UNORM
ASTC_8X6_UNORM_SRGB
ASTC_8X8_FLOAT
ASTC_8X8_TYPELESS
ASTC_8X8_UNORM
ASTC_8X8_UNORM_SRGB
ATAVAWH
atomic_and
atomic_cmp_store
atomic_iadd
atomic_imax
atomic_imin
atomic_or
atomic_umax
atomic_umin
atomic_xor
AtomicCopyBufferUINT
AtomicCopyBufferUINT64
AtomicCopyBufferUINT64 can only be used on UMA architectures.
Attempting to disable already-disabled caches.
Attempting to enable already-enabled caches.
auto calculated from resource dimensions to be 
AutoDebugName
B @u_
B A3A
B(A9(L
B(A9H(A
B,8A,
b/Ynb
B@H9A@
B`9A`us
b}0D9
B<A9@<r
B<A9C<s
B10G10R10A2_UNORM
B4G4R4A4_UNORM
B4G4R4X4_UNORM
B5G5R5A1_UNORM
B5G5R5X1_UNORM
B5G6R5_UNORM
B8<2u
B8A9@8r
B8A9C8r
B8G8R8A8_TYPELESS
B8G8R8A8_UNORM
B8G8R8A8_UNORM_SRGB
B8G8R8X8_TYPELESS
B8G8R8X8_UNORM
B8G8R8X8_UNORM_SRGB
BackFace.StencilDepthFailOp has an unrecognized value.
BackFace.StencilFailOp has an unrecognized value.
BackFace.StencilFunc has an unrecognized value.
BackFace.StencilPassOp has an unrecognized value.
BackgroundThreadCount
BackgroundWork
bad allocation
bad array new length
bad cast
bad_weak_ptr
BApL+
BaseFormatObjectAttributes
BasicEventOnce
BC1_TYPELESS
BC1_UNORM
BC1_UNORM_SRGB
BC2_TYPELESS
BC2_UNORM
BC2_UNORM_SRGB
BC3_TYPELESS
BC3_UNORM
BC3_UNORM_SRGB
BC4_SNORM
BC4_TYPELESS
BC4_UNORM
BC5_SNORM
BC5_TYPELESS
BC5_UNORM
BC6H_SF16
BC6H_TYPELESS
BC6H_UF16
BC7_TYPELESS
BC7_UNORM
BC7_UNORM_SRGB
BD$8H
Bd9Aduk
Before and after states must be different.
BeginEvent
BeginQuery
BeginQuery is not supported with D3D12_QUERY_TYPE specified.  Examples include D3D12_QUERY_TYPE_TIMESTAMP and D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS.
BeginRenderPass
BeginRenderPass called during an existing Render Pass.
BeginRenderPass called without D3D12_RENDER_PASS_FLAG_RESUMING_PASS after a suspended Render Pass.
BeginSubmission
BeginTrackedWorkload
bfrev
Bh9Ahuc
BHH9AH
Bigabigabiga
BitRate
BitstreamEncryption
BlendOp[ %d ] does not equal BlendOp[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
BlendOp[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND_OP.
BlendOpAlpha[ %d ] does not equal BlendOpAlpha[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
BlendOpAlpha[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND_OP.
BlockSize
BMAP,
BMAP\
BMAPD
BMAPT
Both DstOffset and SrcOffset must be naturally aligned to guarentee atomic memory operations. DstOffset = %I64u, SrcOffset = %I64u.
both MS and VS, HS, DS, GS, or CS specified
both VS and CS specified
BP9APu{
bPicEntry
BreadcrumbContextsCount
BreadcrumbCount
BreadcrumbIndex
Breadcrumbs
break
breakc
Buffer
buffer_overlap
buffer_overrun
BufferSize
bufinfo
BuildRaytracingAccelerationStructure
Bundle
BundleMarkers
BxH9AxuLH
ByteStride
C D8U@u
C H9C
C(H+C
C,9C$
C\$@H
c}0D9
C89C0
C8H;C@t
C9fD9?u-
callc
CallContext:[%hs] 
Can only signal completion event when committing results.
Cannot append range with implicit lower bound after an unbounded range (descriptor table slot [%u], root parameter [%u]).
Cannot mix HwQueue scheduling with context scheduling. This command queue does not own the HwQueue's requested context, but owns software contexts.
Cannot mix HwQueue scheduling with context scheduling. This command queue owns HwQueues without owning their contexts, and cannot accept a software context.
Cannot specify enable and disable at the same time.
CB2:fF
CBV_SRV_UAV
CchDebugObjectName
CchNewDebugObjectName
CchOldDebugObjectName
CD$@H
CDevice::CreateVideoEncoder arguments are not correct Invalid encoder flags: %d Invalid maximum ME precision: %d Invalid codec: %d Invalid profile: %d Invalid codec configuration: %d Invalid input format: %d
Certain resources are restricted to certain D3D12_RESOURCE_STATES states, and cannot be changed. Resources on D3D12_HEAP_TYPE_READBACK heaps requires D3D12_RESOURCE_STATE_COPY_DEST or D3D12_RESOURCE_STATE_RESOLVE_DEST. Reserved buffers used exclusively for texture placement requires D3D12_RESOURCE_STATE_COMMON.
Certain resources are restricted to certain D3D12_RESOURCE_STATES states, and cannot be changed. Resources on D3D12_HEAP_TYPE_UPLOAD heaps requires D3D12_RESOURCE_STATE_GENERIC_READ or D3D12_RESOURCE_STATE_RESOLVE_SOURCE. Reserved buffers used exclusively for texture placement requires D3D12_RESOURCE_STATE_COMMON.
CHAN0
cHD;s@s 
check_access_fully_mapped
CheckFeatureSupport Failed
CheckFeatureSupport for D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT failed
CheckFeatureSupport for D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES failed
CheckFeatureSupport for D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM failed.
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
ClearDepthStencilView
ClearRenderTargetView
ClearState
ClearUnorderedAccessView
ClearUnorderedAccessViewFloat
ClearUnorderedAccessViewUint
Close fails because the command list has an open Render Pass. Render Passes must be ended within the Command List they begin.
Close fails because the command list has queries outstanding.
CloseHandle
closesthit
CloseThreadpoolTimer
CloseThreadpoolWait
CLSIDFromString
Command list closing ran out of memory.
Command list out of memory translating arguments.
Command list recording ran out of memory.
Command List Type Bundle
Command List Type Compute
Command List Type Copy
Command List Type Direct
Command List Type Video Decode
Command List Type Video Encode
Command List Type Video Process
Command list types other than copy cannot issue queries against a COPY_QUEUE_TIMESTAMP query heap.
Command lists must be closed before execution.
Command lists must be successfully closed before execution.
Command lists must have matching type to queue.
Command signature byte stride (%u bytes) is not large enough.  Required size is (%u bytes).
Command signature byte stride (%u bytes) must be a multiple of 4.
Command signature byte stride must be a multiple of 4 bytes.
CommandAllocator
CommandAllocatorUnacquire
CommandId
CommandList
CommandListCount
CommandPool
CommandQueue
CommandRecorder
CommandRecorderAcquire
CommandRecorderUnacquire
CommandSignature
Committed 
CompanyName
ComparisonFunc unrecognized.
CompletedAPISequenceNumber
CompletedAPISequenceNumberSize
ComplexData
Compute
Compute ShaderAmplification Shader
constant buffer view
Content Protection Resources GetCaps failed due to out of memory.
Content Protection Streaming GetCaps failed due to out of memory.
contentProtectionResources
contentProtectionStreaming
ContextCount
Contexts
Contexts for scheduling groups must be hardware scheduled.
ContextString
continue
continuec
Control Points
CopyBufferRegion
CopyRaytracingAccelerationStructure
CopyResource
CopyTextureRegion
CopyTileMappings
CopyTiles
CoTaskMemAlloc
CoTaskMemFree
Count
Count buffer overflow.
countbits
Counter resources must be buffers.
Counter UAVs are only supported on buffers.
Counter UAVs require a non-NULL D3D12_UNORDERED_ACCESS_VIEW_DESC.
Counter UAVs require a non-NULL pResource.
CounterOffsetInBytes must be a multiple of D3D12_UAV_COUNTER_PLACEMENT_ALIGNMENT (%u).
CounterOffsetInBytes must not exceed the counter resource size.
CPUFrequency
CPUPageProperty
CPUTimeHigh
CreateAllocation2
CreateAllocation2 - StandardAllocation
CreateBundleObject
CreateCommandListNodeMask
CreateContext
CreateContextCb or CreateContextVirtualCb called outside of queue creation.
CreateContextVirtual
CreateContextVirtual (SynchronizationOnly)
CreateDevice
CreateDXGIFactory2
CreateEventA
CreateFileA
CreateFileW
CreateHeapSharedHandle
CreateHwQueue
CreateKeyedMutex
CreateKeyedMutexFence
CreateMutexExW
CreatePagingQueue
CreateProtectedSession
CreateSemaphoreExW
CreateStateObjectUsage
CreateSynchronizationObject
CreateSynchronizationObject2
CreateThread
CreateThreadpoolTimer
CreateThreadpoolWait
CreateTrackedWorkload
CreationNodeMask
CRIM`
CT$(L
CT$@H
Ct9CLu
CtD9c }
CullMode has an unrecognized value.
CurrPic
CustomDriverMarker
cut_stream
D ^"-
D!|$`H
D!l$0L
D!L$4
D!L$8
D!L$H
D$ A;
D$ D#
D$ D+
D$ D8#
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
D$ H;
D$ Hk
D$ I3
D$ L3
d$ UAUAWH
d$$A;
D$( t
D$(A;
D$(A+
d$(E#
D$(E3
D$(fA
D$(H+
D$,D8-\
D$@@2
D$@A#
D$@A+
D$@D8
D$@E3
D$@E9/
d$@fD
D$@H!|$XH
D$@H!t$PH
D$@H#
D$@H;
D$@H+
D$@I;
D$@L;
D$@M;
D$\D;
D$\D8
D$\ugD
D$`A+
D$`D#
D$`D;
D$`D8l$`udH
D$`E;
D$`E3
D$`fH
D$`H!D$pL
D$`H;
D$`H+
D$`H9
D$`I;
D$`L+
D$`Lc
D$`Li
D$`Lk
D$`th.
D$0E3
D$0H;
D$0H;W8t
D$0H+
D$0H9H s
D$0H9x s
D$0L9p s
D$49L$8t
D$8A;
d$8E3
D$8E3
d$8E9'H
D$8H#
D$8H;
D$8H9
D$8L;0H
d$dA;
D$DE3
D$dI+
D$DM;
D$HA;
D$hD9n@t
D$hD9nDt
D$hD9nHt
D$HE3
d$HE3
d$hE3
D$HE3
D$hE3
D$hfE
D$hfE;
D$HH#
D$hH#
D$HH#
D$hH#
D$HH#
D$hH#
D$HH#
D$hH#
D$HH+
D$hH+
D$HH+
D$hH+
D$HH+
D$HI;
D$hI+
D$HM+
D$LD;
D$lE;
D$LL9
D$p@8
D$PD;
D$PD+
D$PD8
D$pD9
D$PD9
D$pE3
D$PE3
D$PE9/t(H
D$pE9t$
D$PH#
D$pH;
D$pH+
D$PH+
D$pH+D$`H
D$PH9D$@
D$pHc
D$PI;
D$pI;
D$PI;
D$PI;E
D$PL+
D$PM;
D$T9D$H
D$TA9O
D$tD;
D$VD9
D$x@2
D$xE3
D$XE3
D$xfI
D$XH#
D$xH;
d$XH;
D$xH;
D$XH+
D$xH+
D$XH+D$HH
D$XH9D$HsMH
D$XHc
D$XHk
D$XI;
D$xI;
D$xI+
D$XIi
D$XIk
D$XL;
d$xL9
D)0)h
D:"uHO
D:@ r
D:@!w
D;[Ht
D;=9d
D;5Bd
D;BXr
D;d$\
D;D$dr
D;D$Tr
D;D$Xr
D;L$\r
D;l$D
D;l$xr
D;t$(
D;T$Xr
D;V<sH
D;V4w
d}0D9
D+D$x
D+D$xD
D+KLA
D+L$X
D<@H3
D16_UNORM
D16_UNORM_S8_UINT
D24_UNORM_S8_UINT
D32_FLOAT
D32_FLOAT_S8X24_UINT
D3D Background Thread %d
D3D Error %08x: (%d@%d) at %p - %s
D3D_FEATURE_LEVEL_1_0_CORE
D3D_FEATURE_LEVEL_10_0
D3D_FEATURE_LEVEL_10_1
D3D_FEATURE_LEVEL_11_0
D3D_FEATURE_LEVEL_11_1
D3D_FEATURE_LEVEL_12_0
D3D_FEATURE_LEVEL_12_1
D3D_FEATURE_LEVEL_12_2
D3D_FEATURE_LEVEL_9_1
D3D_FEATURE_LEVEL_9_2
D3D_FEATURE_LEVEL_9_3
D3D10DDI_CREATEDEVICE_FLAG_DISABLE_EXTRA_THREAD_CREATION
D3D10DDICreateDeviceFlags
D3D11 bind flags (0x%x) were provided to ID3D12CompatibilityDevice::CreateSharedResource which are not supported by the D3D12 resource desc.
D3D11 CPU access flags (0x%x) were provided to ID3D12CompatibilityDevice::CreateSharedResource which are not supported by the D3D12 heap properties.
D3D12 Device Removed Extended Data
D3D12 SDKLayers dll does not match the D3D12SDKVersion of D3D12 Core dll.
D3D12 SDKLayers dll in the D3D12SDKPath does not match the D3D12SDKVersion of D3D12 Core dll.
D3D12 SDKLayers dll not found at D3D12SDKPath.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_CODEC_CONFIGURATION_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_CODEC_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_GOP_STRUCTURE_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_INPUT_FORMAT_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_INTRA_REFRESH_MODE_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RATE_CONTROL_CONFIGURATION_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RATE_CONTROL_MODE_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RESOLUTION_NOT_SUPPORTED_IN_LIST.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_SUBREGION_LAYOUT_MODE_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Individual feature query calls for input arguments for D3D12_FEATURE_DATA_VIDEO_ENCODER_SUPPORT are (0x%x) but combined support check returned (0x%x). This might be due to mutually exclusive features that are supported individually but not together. Please check the following configuration areas for such restrictions.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Invalid pic_order_cnt_type should be 0 for GOPS with B Frames
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Invalid pic_order_cnt_type should be 2 for GOPS with only I and P Frames
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Invalid pic_order_cnt_type should be 2 for GOPS with only I Frames
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] log2_max_frame_num_minus4 or m_log2_max_pic_order_cnt_lsb_minus4 have a bigger frame address range than MaxDPBCapacity reported in D3D12_FEATURE_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support for resolution when querying feature checks: D3D12_FEATURE_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support for resolution when querying feature checks: D3D12_FEATURE_VIDEO_ENCODER_OUTPUT_RESOLUTION.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_CODEC.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_INPUT_FORMAT.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_INTRA_REFRESH_MODE.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_RATE_CONTROL_MODE.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Values allowed for pic_order_cnt_type are 0 or 2.
D3D12: DeveloperMode disabled while device running in a mode that expected it to be on.
D3D12: Removing Device.
D3D12: SetStablePowerState is only available when developer mode is enabled.
D3D12: SetStablePowerState is only available when the D3D SDK layers are installed.
D3D12_CLEAR_VALUE::DepthStencil::Depth is outside the valid range of 0.0f to 1.0f. Depth = %f.
D3D12_CLEAR_VALUE::Format cannot be a typeless format. A fully qualified format must be supplied. Format = %s.
D3D12_CLEAR_VALUE::Format is not supported at the current feature level. Format = %s and FeatureLevel is %s.
D3D12_CLEAR_VALUE::Format is unrecognized. The value is %u.
D3D12_CLEAR_VALUE::Format must be equal to D3D12_RESOURCE_DESC::Format, when the resource format is not a typeless format. D3D12_CLEAR_VALUE::Format = %s, D3D12_RESOURCE_DESC::Format = %s.
D3D12_CLEAR_VALUE::Format must belong to the same format cast group as D3D12_RESOURCE_DESC::Format. D3D12_CLEAR_VALUE::Format = %s, D3D12_RESOURCE_DESC::Format = %s.
D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE
D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE
D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY
D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT
D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE
D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS
D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT
D3D12_CPU_PAGE_PROPERTY_MAX_VALID
D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE
D3D12_CPU_PAGE_PROPERTY_UNKNOWN
D3D12_CPU_PAGE_PROPERTY_WRITE_BACK
D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE
D3D12_DEFAULT_MSAA_RESOURCE_PLACEMENT_ALIGNMENT
D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT
D3D12_DESCRIPTOR_HEAP_DESC.Flags - invalid flags, must be 0 or D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE. 
D3D12_DESCRIPTOR_HEAP_DESC.Flags cannot include D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE when D3D12_DESCRIPTOR_HEAP_DESC.Type is D3D12_DESCRIPTOR_HEAP_TYPE_RTV or D3D12_DESCRIPTOR_HEAP_TYPE_DSV.
D3D12_DESCRIPTOR_HEAP_DESC.NumDescriptors %d, but the limit for shader visible sampler heaps is %d 
D3D12_DESCRIPTOR_HEAP_DESC.NumDescriptors %d, device supports D3D12_RESOURCE_BINDING_TIER_1 which limits shader visible descriptor heap size to %d.
D3D12_DESCRIPTOR_HEAP_DESC.NumDescriptors %d, device supports D3D12_RESOURCE_BINDING_TIER_2 which limits shader visible descriptor heap size to %d.
D3D12_DESCRIPTOR_HEAP_DESC.Type set to %d - invalid desciptor heap type. 
D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE
D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV
D3D12_DESCRIPTOR_HEAP_TYPE_DSV
D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES
D3D12_DESCRIPTOR_HEAP_TYPE_RTV
D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER
D3D12_FEATURE_D3D10_X_HARDWARE_OPTIONS_COMPUTE_SHADERS_PLUS_RAW_AND_STRUCTURED_BUFFERS_VIA_SHADER_4_X
D3D12_FEATURE_DOUBLES_DOUBLE_PRECISION_FLOAT_SHADER_OPS
D3D12_FEATURE_THREADING_DRIVER_CONCURRENT_CREATES
D3D12_FEATURE_VIDEO_ARCHITECTURE::%sSubresourceIndex exceeds the number of subresources for the associated resource.
D3D12_HEAP_DESC::Alignment is invalid. The value is %I64u, and it must be either 0 (for automatic alignment to 64KiB), 64KiB, or 4MiB for MSAA resources.
D3D12_HEAP_DESC::SizeInBytes is invalid. The size is %I64u, and it must be less than %I64u and non-zero.
D3D12_HEAP_FLAG_ALLOW_DISPLAY
D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS
D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS fails when D3D12_FEATURE_DATA_CROSS_NODE::AtomicShaderInstructions is FALSE, the heap type is D3D12_HEAP_TYPE_DEFAULT, and VisibleNodeMask contains bits not in the CreationNodeMask. These properties suggest the application is trying to use shader atomic instructions to memory on an LDA peer. That only works when the hardware supports AtomicShaderInstructions.
D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS fails when the heap type allows CPU access; but isn't D3D12_HEAP_TYPE_CUSTOM. These properties suggest the application may be trying to use shader atomic instructions with CPU interlocked operations%s. Not all hardware supports atomics with CPU interlocked operations%s.
D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH
D3D12_HEAP_FLAG_DENY_BUFFERS
D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES
D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES
D3D12_HEAP_FLAG_HARDWARE_PROTECTED
D3D12_HEAP_FLAG_SHARED
D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_ALLOW_DISPLAY for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_DENY_BUFFERS for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_HARDWARE_PROTECTED for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS has invalid flag combinations set. D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH may not be set with CPU inaccessible heaps, which is defined by D3D12_HEAP_PROPERTIES.
D3D12_HEAP_FLAGS has invalid flag combinations set. D3D12_HEAP_FLAG_SHARED may not be set when creating CPU accessible heaps, which is defined by D3D12_HEAP_PROPERTIES. But, some shared CPU accessible heaps can be accomplished through OpenExistingHeap. See MSDN for more details.
D3D12_HEAP_FLAGS has invalid flag combinations set. The following flags may not all be set simultaneously. Exactly one must be left unset, or all may be left unset when the adapter supports D3D12_RESOURCE_HEAP_TIER_2 or creating a heap in conjunction with D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER: D3D12_FEATURE_DATA_D3D12_OPTIONS::ResourceHeapTier = %s, D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER = %u, D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES = %u, D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES = %u, and D3D12_HEAP_FLAG_DENY_BUFFERS = %u.
D3D12_HEAP_FLAGS has invalid flag combinations set. When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set, all the following must not be set: D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES = %u, D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES = %u, and D3D12_HEAP_FLAG_DENY_BUFFERS = %u.
D3D12_HEAP_FLAGS has recognized flags set. The value is 0x%x, and the following flags are unrecognized: 0x%x.
D3D12_HEAP_FLAGS may only have D3D12_HEAP_FLAG_ALLOW_DISPLAY set when used with CreateCommittedResource.
D3D12_HEAP_PROPERTIES is invalid. D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE must be used with D3D12_MEMORY_POOL_L1.
D3D12_HEAP_PROPERTIES is invalid. D3D12_CPU_PAGE_PROPERTY_UNKNOWN cannot be used with D3D12_HEAP_TYPE_CUSTOM.
D3D12_HEAP_PROPERTIES is invalid. D3D12_CPU_PAGE_PROPERTY_UNKNOWN must be used when creating heaps that are not D3D12_HEAP_TYPE_CUSTOM.
D3D12_HEAP_PROPERTIES is invalid. D3D12_MEMORY_POOL_UNKNOWN cannot be used with D3D12_HEAP_TYPE_CUSTOM.
D3D12_HEAP_PROPERTIES is invalid. D3D12_MEMORY_POOL_UNKNOWN must be used when creating heaps that are not D3D12_HEAP_TYPE_CUSTOM.
D3D12_HEAP_PROPERTIES is invalid. Only D3D12_MEMORY_POOL_L0 can be used on UMA architectures. Use CheckFeatureSupport with D3D12_FEATURE_ARCHITECTURE1 to understand architectural capabilities.
D3D12_HEAP_PROPERTIES is invalid. VisibleNodeMask must contain CreationNodeMask
D3D12_HEAP_PROPERTIES::CPUPageProperty is unrecognized. The value is %d.
D3D12_HEAP_PROPERTIES::MemoryPoolPreference is unrecognized. The value is %d.
D3D12_HEAP_PROPERTIES::Type is unrecognized. The value is %d.
D3D12_HEAP_TYPE is invalid. It cannot be D3D12_HEAP_TYPE_CUSTOM when requesting translation to custom properties.
D3D12_HEAP_TYPE is unrecognized. The value is %d.
D3D12_HEAP_TYPE_CUSTOM
D3D12_HEAP_TYPE_CUSTOM is not supported by D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_TYPE_DEFAULT
D3D12_HEAP_TYPE_READBACK
D3D12_HEAP_TYPE_UNKNOWN
D3D12_HEAP_TYPE_UPLOAD
D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS can't be used in a command signature unless the device supports D3D12_RAYTRACING_TIER_1_1+.
D3D12_MEMORY_POOL_L0
D3D12_MEMORY_POOL_L1
D3D12_MEMORY_POOL_MAX_VALID
D3D12_MEMORY_POOL_UNKNOWN
D3D12_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_16X16
D3D12_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_8X8
D3D12_MOTION_ESTIMATOR_VECTOR_PRECISION_QUARTER_PEL
D3D12_PLACED_SUBRESOURCE_FOOTPRINT::Offset must be a multiple of %u, aka. D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT. Offset is %I64u.
D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE
D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH
D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT
D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE
D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED
D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE
D3D12_QUERY_HEAP_TYPE_JPEG
D3D12_QUERY_HEAP_TYPE_OCCLUSION
D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS
D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS1
D3D12_QUERY_HEAP_TYPE_SO_STATISTICS
D3D12_QUERY_HEAP_TYPE_TIMESTAMP
D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate is invalid or specifies a region larger than D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D.  D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_INPUT::PixelWidth / BlockSize = %u D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_INPUT::PixelHeight / BlockSize = %u D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate.X = %llu D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate.Y = %u D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate.Z = %u pMotionVectorTexture2D Width = %u pMotionVectorTexture2D Height = %u 
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate.SubresourceIndex exceeds the number of subresources for the associated resource.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D has a format of %s.  It must have a format of DXGI_FORMAT_R16G16_SINT or DXGI_FORMAT_R16G16_SNORM.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D has MipLevels != 1 which is not supported with EstimateMotion.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D must not be a reserved resource.
D3D12_RESOURCE_BINDING_TIER_1
D3D12_RESOURCE_BINDING_TIER_2
D3D12_RESOURCE_BINDING_TIER_3
D3D12_RESOURCE_DESC::Alignment cannot be 4096 for planar formats.
D3D12_RESOURCE_DESC::Alignment cannot be 4KB, since D3D12_RESOURCE_DESC::Width, D3D12_RESOURCE_DESC::Height, and/ or D3D12_RESOURCE_DESC::DepthOrArraySize are too large. 4KB alignment requires the most detailed mip level be theoretically 64KB or smaller. A 4KB tile shape for %s and %s is %u texels wide, %u texels high, and %u texels deep. When Width = %I64u, Height = %u, and Depth = %u, the number of tiles needed is %I64u, while 16 tiles is the maximum.
D3D12_RESOURCE_DESC::Alignment cannot be 64KB, since D3D12_RESOURCE_DESC::Width, D3D12_RESOURCE_DESC::Height, and/ or D3D12_RESOURCE_DESC::DepthOrArraySize are too large. 64KB alignment requires the most detailed mip level be theoretically 4MB or smaller. A 64KB tile shape for %s and %s is %u texels wide, %u texels high, and %u texels deep. When Width = %I64u, Height = %u, and Depth = %u, the number of tiles needed is %I64u, while 64 tiles is the maximum.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. Buffers must have this field set to %I64u (aka. %s) or 0.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. MSAA resources must have this field set to %I64u (aka. %s), %I64u (aka. %s), or 0.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. Non-MSAA resources must have this field set to %I64u (aka. %s), %u (aka. %s), or 0.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. Resources with D3D12_RESOURCE_DESC::Flags with either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL must set Alignment equal to %I64u (aka. %s), or 0.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. When D3D12_RESOURCE_DESC::Layout is %s, the Alignment field must be either %I64u (aka. %s) or 0.
D3D12_RESOURCE_DESC::DepthOrArraySize is invalid.  The value is %u.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, DepthOrArraySize must be 1.
D3D12_RESOURCE_DESC::Dimension cannot be D3D12_RESOURCE_DIMENSION_TEXTURE1D when creating reserved resources.
D3D12_RESOURCE_DESC::Dimension is invalid.  The value is %s.  D3D12_TEXTURE_LAYOUT_ROW_MAJOR is only supported with D3D12_RESOURCE_DIMENSION_BUFFER or D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_RESOURCE_DESC::Dimension is invalid. The value is %s.
D3D12_RESOURCE_DESC::Dimension is unrecognized. The value is %u.
D3D12_RESOURCE_DESC::Flags can only combine D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY with these flags: 0x%x.  Unsupported flags specified: 0x%x.
D3D12_RESOURCE_DESC::Flags can only combine D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY with these flags: 0x%x.  Unsupported flags specified: 0x%x.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY for D3D12_RESOURCE_DESC::Layout == D3D12_TEXTURE_LAYOUT_UNKNOWN.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY for D3D12_RESOURCE_DESC::MipLevels == 1.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY for D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY for D3D12_RESOURCE_DESC::Layout == D3D12_TEXTURE_LAYOUT_UNKNOWN.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY for D3D12_RESOURCE_DESC::MipLevels == 1.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY for D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set with D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET, D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS, nor D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE set without D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL, D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY or D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set if the device does not support video.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set if the device does not support video.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set, but the D3D12_RESOURCE_DESC::Format specified does not support D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT Format = %s.
D3D12_RESOURCE_DESC::Flags has unrecognized bits. The value is 0x%x, and the unrecognized bits are 0x%x.
D3D12_RESOURCE_DESC::Flags is invalid.  The value is %x.  D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER must be specified if and only if D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set.
D3D12_RESOURCE_DESC::Flags is invalid.  The value is 0x%x.  The D3D12 device being used only supports copies to/from row major textures.  Neither D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET nor D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS may be set.
D3D12_RESOURCE_DESC::Flags is invalid.  The value is 0x%x.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL flag cannot be set.
D3D12_RESOURCE_DESC::Format is invalid.  The value is %s.  When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set, the format cannot be YUV or planar.
D3D12_RESOURCE_DESC::Format is invalid.  The value is %s.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, the format cannot be YUV.
D3D12_RESOURCE_DESC::Format is not supported at the current feature level. Format = %s and FeatureLevel is %s.
D3D12_RESOURCE_DESC::Format is not supported with D3D12_HEAP_FLAG_ALLOW_DISPLAY at the current feature level. Format = %s, FeatureLevel is %s.
D3D12_RESOURCE_DESC::Format is not supported with D3D12_RESOURCE_DESC::Dimension at the current feature level. Format = %s, Dimension = %s, FeatureLevel is %s.
D3D12_RESOURCE_DESC::Format is unrecognized. The value is %u.
D3D12_RESOURCE_DESC::Format must be DXGI_FORMAT_UNKNOWN when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. Format = %s.
D3D12_RESOURCE_DESC::Height and D3D12_RESOURCE_DESC::DepthOrArraySize must be 1 when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. Height = %u and DepthOrArraySize = %u.
D3D12_RESOURCE_DESC::Layout can be D3D12_TEXTURE_LAYOUT_ROW_MAJOR only when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER or when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_TEXTURE2D and the D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER flag is set.Dimension is %s.  Layout is %s. Cross adapter is %sset.
D3D12_RESOURCE_DESC::Layout is invalid due to interactions with other resource properties. When it is D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE, D3D12_RESOURCE_DESC::Format can not be one of the DXGI_FORMAT_R32G32B32_TYPELESS group, D3D12_RESOURCE_DESC:Flags cannot have D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set, and D3D12_RESOURCE_DESC::SampleDesc::Count must be 1. Format is %s, D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL is %s set, and Count is %u.
D3D12_RESOURCE_DESC::Layout is invalid for the current device, because it does not support standard swizzle (D3D12_FEATURE_DATA_D3D12_OPTIONS::StandardSwizzle64KBSupported is FALSE). For cross-adapter-shared textures on such devices, D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLErequires that the follow flags not be set: D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET, D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL, D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS.
D3D12_RESOURCE_DESC::Layout is invalid for the current device, because it does not support standard swizzle. D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE can only be used when either D3D12_FEATURE_DATA_D3D12_OPTIONS::StandardSwizzle64KBSupported is TRUE,or the D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER flag is set.
D3D12_RESOURCE_DESC::Layout is unrecognized. The value is %u.
D3D12_RESOURCE_DESC::Layout must be D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE when creating reserved resources.
D3D12_RESOURCE_DESC::Layout must be D3D12_TEXTURE_LAYOUT_ROW_MAJOR when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. Layout = %s.
D3D12_RESOURCE_DESC::MipLevels is invalid.  The value is %u.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, MipLevels must be 1.
D3D12_RESOURCE_DESC::MipLevels must be 0 or <= %u when the largest texture dimension, D3D12_RESOURCE_DESC::%s, is %I64u. MipLevels is %u.
D3D12_RESOURCE_DESC::MipLevels must be 1 when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. MipLevels = %u.
D3D12_RESOURCE_DESC::MipLevels must be 1 when D3D12_RESOURCE_DESC::Format is %s, at the current feature level. MipLevels is %s%u. FeatureLevel is %s.D3D12_FEATURE_DATA_FORMAT_SUPPORT::Support1 does not include D3D12_FORMAT_SUPPORT1_MIP when calling CheckFeatureSupport with D3D12_FEATURE_FORMAT_SUPPORT.
D3D12_RESOURCE_DESC::MiscFlag cannot have D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::MiscFlag cannot have D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS set when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::SampleDesc is invalid.  Count is %u, quality is %u.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, the sample count must be 1, and the sample quality must be 0.
D3D12_RESOURCE_DESC::SampleDesc must be { Count: 1, Quality: 0 } when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. SampleDesc = { %u, %u }.
D3D12_RESOURCE_DESC::SampleDesc::Count cannot be 0.
D3D12_RESOURCE_DESC::SampleDesc::Count must be 1 when number of mip levels is not 1, or Dimension is not D3D12_RESOURCE_DIMENSION_TEXTURE2D. SampleDesc::Count is %u, MipLevels is %s%u, and Dimension is %s.
D3D12_RESOURCE_DESC::Width, D3D12_RESOURCE_DESC::Height, and D3D12_RESOURCE_DESC::DepthOrArraySize cannot be 0. The minimum value is 1. Width = %I64u, Height = %u, and DepthOrArraySize = %u.
D3D12_RESOURCE_DESC::Width, D3D12_RESOURCE_DESC::Height, and/ or D3D12_RESOURCE_DESC::DepthOrArraySize are too large for the D3D12_RESOURCE_DESC::Dimension and FeatureLevel. Width = %I64u and must be <= %u, Height = %u and must be <= %u, DepthOrArraySize = %u and must be <= %u, Dimension = %s, and FeatureLevel = %s.
D3D12_RESOURCE_DIMENSION_BUFFER
D3D12_RESOURCE_DIMENSION_MAX_VALID
D3D12_RESOURCE_DIMENSION_TEXTURE1D
D3D12_RESOURCE_DIMENSION_TEXTURE2D
D3D12_RESOURCE_DIMENSION_TEXTURE3D
D3D12_RESOURCE_DIMENSION_UNKNOWN
D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER
D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL
D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET
D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS
D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS
D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE
D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY
D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY
D3D12_RESOURCE_HEAP_TIER_1
D3D12_RESOURCE_HEAP_TIER_2
D3D12_RESOURCE_STATES has an invalid combination of state bits.
D3D12_RESOURCE_STATES has bits that mismatch support required from D3D12_RESOURCE_FLAGS.
D3D12_RESOURCE_STATES has bits that mismatch support required from the D3D12_RESOURCE_DIMENSION.
D3D12_RESOURCE_STATES has invalid flags for 3D command list.
D3D12_RESOURCE_STATES has invalid flags for compute command list.
D3D12_RESOURCE_STATES has invalid flags for copy command list.
D3D12_RESOURCE_STATES has invalid flags for video decode command list.
D3D12_RESOURCE_STATES has invalid flags for video encode command list.
D3D12_RESOURCE_STATES has invalid flags for video process command list.
D3D12_RESOURCE_STATES has reserved bits set.
D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE combined with other flag(s) that don't make sense (root signature flags %x).
D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE not supported if device does not support raytracing (root signature flags %x).
D3D12_SHADER_CACHE_FLAG_DRIVER_VERSIONED
D3D12_SHADER_CACHE_FLAG_NONE
D3D12_SHADER_CACHE_FLAG_USE_WORKING_DIR
D3D12_SHADER_CACHE_MODE_DISK
D3D12_SHADER_CACHE_MODE_MEMORY
D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT
D3D12_SMALL_RESOURCE_PLACEMENT_ALIGNMENT
D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE invalid on a device that does not support raytracing.
D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE
D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE
D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK
D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG/_CONFIG1
D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG
D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG
D3D12_SUBRESOURCE_FOOTPRINT::Format is not supported at the current feature level with the dimensionality implied by the D3D12_SUBRESOURCE_FOOTPRINT::Height and D3D12_SUBRESOURCE_FOOTPRINT::Depth. Format = %s, Dimension = %s, Height = %u, Depth = %u, and FeatureLevel is %s.
D3D12_SUBRESOURCE_FOOTPRINT::Format is not supported at the current feature level. Format = %s and FeatureLevel is %s.
D3D12_SUBRESOURCE_FOOTPRINT::Format is unrecognized. The value is %u.
D3D12_SUBRESOURCE_FOOTPRINT::Format may not be a DXGI_FORMAT_R32G8X24_TYPELESS or DXGI_FORMAT_R24G8_TYPELESS family format. These formats are planar.  Use DXGI_FORMAT_R32_TYPELESS for plane 0 (Depth) and DXGI_FORMAT_R8_TYPELESS for plane 1 (stencil).  See GetCopyableFootprints.Format = %s
D3D12_SUBRESOURCE_FOOTPRINT::RowPitch must be a multiple of %u (aka. D3D12_TEXTURE_DATA_PITCH_ALIGNMENT) and greater or equal to the pitch implied by the width. RowPitch is %u, and must be greater or equal to %u when D3D12_SUBRESOURCE_FOOTPRINT::Width is %u and D3D12_SUBRESOURCE_FOOTPRINT::Format is %s.
D3D12_SUBRESOURCE_FOOTPRINT::Width, D3D12_SUBRESOURCE_FOOTPRINT::Height, and D3D12_SUBRESOURCE_FOOTPRINT::Depth cannot be 0. The minimum value is 1. Width = %u, Height = %u, and Depth = %u.
D3D12_SUBRESOURCE_FOOTPRINT::Width, D3D12_SUBRESOURCE_FOOTPRINT::Height, and/ or D3D12_SUBRESOURCE_FOOTPRINT::Depth are too large for the implied dimensionality and FeatureLevel. Width = %u and must be <= %u, Height = %u and must be <= %u, Depth = %u and must be <= %u, Dimension = %s, and FeatureLevel = %s.
D3D12_TEXTURE_COPY_LOCATION::Subresource is too large for the associated resource. The value is %u, when the resource only has %u subresources.
D3D12_TEXTURE_COPY_LOCATION::Type can not be D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT and used with a resource that is a texture. The resource must be D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_TEXTURE_COPY_LOCATION::Type can not be D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX and used with a resource that is D3D12_RESOURCE_DIMENSION_BUFFER. D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX can only be used with textures.
D3D12_TEXTURE_COPY_LOCATION::Type is unrecognized. The value is %d.
D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE
D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE
D3D12_TEXTURE_LAYOUT_ROW_MAJOR
D3D12_TEXTURE_LAYOUT_UNKNOWN
D3D12_TILED_RESOURCES_TIER_1
D3D12_TILED_RESOURCES_TIER_2
D3D12_TILED_RESOURCES_TIER_3
D3D12_TILED_RESOURCES_TIER_4
D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.Enable is TRUE, but D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.pReferenceTexture2D is nullptr.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.pReferenceTexture2D
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Histograms[%d] a component enabled but that component is is not supported by driver.  See D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM for capability checks.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Histograms[%d].Offset of %I64u and histogram size of %I64u exceeds the size of the histogram output buffer %I64u.  See D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM for capability checks.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::OutputSubresource must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D is smaller than the output size requested in D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.  D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArgumentsOutputWidth: %d, D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArgumentsOutputHeight: %d, Resource Width: %I64u, Resource Height: %d
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D must not be a reserved resource.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D must not have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY.  If the decoder heap requires resources with D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY, you must use decode output conversion to produce two outputs.
D3D12_VIDEO_ENCODER_CODEC
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Adaptive 8x8 transform not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Asymetric motion partition is required to be set.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Asymetric motion partition not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - CABAC encoding not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Constrained intraprediction not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Constrained intra-prediction use is not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Direct mode spatial not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Direct mode temporal not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Disable deblocking across slice boundary mode not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Intra slice constrained mode not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - SAO Filter mode not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Transform skipping is not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments not supported - DisableDeblockingFilterConfig (value %d) not allowed by DisableDeblockingFilterSupportedModes 0x%x cap reporting.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments not supported - DisableDeblockingFilterConfig (value: %d) has to be within defined range.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264 structure arguments are not valid.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC structure arguments are not valid.
D3D12_VIDEO_ENCODER_CODEC_H264
D3D12_VIDEO_ENCODER_CODEC_HEVC
D3D12_VIDEO_ENCODER_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_CODEC,...) for the given input returned failure or not supported.
D3D12_VIDEO_ENCODER_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_INPUT_FORMAT,...) for the given input returned failure or not supported.
D3D12_VIDEO_ENCODER_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL,...) for the given input returned failure or profile not supported.
D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::InputFrameSubresource must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::pInputFrame must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::pInputFrame must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::pInputFrame must not be a reserved resource.
D3D12_VIDEO_ENCODER_FLAG_NONE
D3D12_VIDEO_ENCODER_FLAGS
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not correct Invalid heap flags: %d Invalid codec: %d Invalid profile: %d Invalid level: %d Invalid resolution count: %d Invalid resolution list: %d
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_CODEC,...) for the given input returned failure or not supported.
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL,...) for the given input returned failure or level not supported.
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL,...) for the given input returned failure or profile not supported.
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not supported - pResolutionList contains resolutions that do not satisfy the constraints specified in CheckFeatureSupport - D3D12_FEATURE_VIDEO_ENCODER_OUTPUT_RESOLUTION.
D3D12_VIDEO_ENCODER_HEAP_FLAG_NONE
D3D12_VIDEO_ENCODER_HEAP_FLAGS
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_FULL_PIXEL
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_HALF_PIXEL
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_MAXIMUM
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_QUARTER_PIXEL
D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_FIELD_BASED
D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_NONE
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::BlockSize(%u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_ESTIMATOR_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_ESTIMATOR_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_ESTIMATOR_DESC::InputFormat(%s) is not supported with Motion Estimation.  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::Precision(%u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_ESTIMATOR_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_ESTIMATOR_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::SizeRange is invalid. SizeRange - MaxWidth: %d MinWidth: %d MaxHeight: %d MinHeight: %d
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::SizeRange(%u, %u, %u, %u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_ESTIMATOR_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_ESTIMATOR_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::p%sTexture2D has MipLevels != 1 which is not supported with EstimateMotion.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::p%sTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::p%sTexture2D must not be a reserved resource.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::pInputTexture2D Format(%s) does not match the InputFormat(%s) of the ID3D12VideoMotionEstimator.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::pInputTexture2D has a Width(%u) and Height(%u) that is not within the SizeRange (%u, %u, %u, %u) of the ID3D12VideoMotionEstimator.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::pReferenceTexture2D Width(%u) and Height(%u) do not match D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::pInputTexture2D Width(%u) and Height(%u).
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::BlockSize(%u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::InputFormat(%s) is not supported with Motion Estimation.  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::Precision(%u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::SizeRange is invalid. SizeRange - MaxWidth: %d MinWidth: %d MaxHeight: %d MinHeight: %d
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::SizeRange(%u, %u, %u, %u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS::Transform.SourceRectangle must fit within the bounds of the source resource. D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D - width: %d, height: %d.  SourceRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS::Transform.SourceRectangle must fit within the bounds of the source resource. D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] - width: %d, height: %d.  SourceRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS::Transform.SourceRectangle must have top >= 0, bottom > top, left >= 0, and right > left. SourceRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Transform.DesintationRectangle specifies a width or height that exceeds the D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::DestinationSizeRange. DestinationRectangle - top: %d, left: %d, bottom: %d, right: %d DestinationSizeRange - MaxWidth: %d MinWidth: %d MaxHeight: %d MinHeight: %d
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Transform.DestinationRectangle must have top >= 0, bottom > top, left >= 0, and right > left. DestinationRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Transform.SourceRectangle specifies a width or height that exceeds the D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::SourceSizeRange. SourceRectangle - top: %d, left: %d, bottom: %d, right: %d SourceSizeRange - MaxWidth: %d MinWidth: %d MaxHeight: %d MinHeight: %d
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D has a Format %s that does not match the D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::Format %s of the video processor.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D has MipLevels != 1 which is not supported with ProcessFrame.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D must not be a reserved resource.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] exceeds the number of subresources for the associated resource.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] has a Format %s that does not match the D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::Format %s of the video processor.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] has MipLevels != 1 which is not supported with ProcessFrame.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM.   For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] must not be a reserved resource.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].Subresource exceeds the number of subresources for the associated resource.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D has a Format %s that does not match the D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC::Format %s of the video processor.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D has MipLevels != 1 which is not supported with ProcessFrame.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D must not be a reserved resource.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].Subresource exceeds the number of subresources for the associated resource.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::TargetRectangle must fit within the bounds of the destination resource. Destination Resource - width: %d, height: %d.  TargetRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::TargetRectangle must have top >= 0, bottom > top, left >= 0, and right > left. TargetRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIEW_INSTANCING_DESC can only be used in the pipeline state if the device supports shader model 6.1 or greater.
D3D12CommandListSupportFlags
D3D12CommandListType
D3D12CommandQueueFlags
d3d12core.dll
D3D12Core.dll
d3d12core.pdb
D3D12CoreAutoBreadcrumbsBuffer
D3D12CoreAutoBreadcrumbsHeap
D3D12CpuPageProperty
D3D12CreateDevice: MinimumFeatureLevel must be at least D3D_FEATURE_LEVEL_11_0 or D3D_FEATURE_LEVEL_*_CORE for a D3D12 device.
D3D12CreateDevice: pAdapter must support the IDXGIAdapter or IDXCoreAdapter interface.
D3D12CreateDevice: Unrecognized D3D_FEATURE_LEVEL (%#x) for MinimumFeatureLevel.
D3D12DDI_BUILD_VERSION_0010
D3D12DDI_BUILD_VERSION_0011
D3D12DDI_BUILD_VERSION_0012
D3D12DDI_BUILD_VERSION_0013
D3D12DDI_BUILD_VERSION_0014
D3D12DDI_BUILD_VERSION_0015
D3D12DDI_BUILD_VERSION_0020
D3D12DDI_BUILD_VERSION_0021
D3D12DDI_BUILD_VERSION_0022
D3D12DDI_BUILD_VERSION_0023
D3D12DDI_BUILD_VERSION_0024
D3D12DDI_BUILD_VERSION_0025
D3D12DDI_BUILD_VERSION_0026
D3D12DDI_BUILD_VERSION_0027
D3D12DDI_BUILD_VERSION_0028
D3D12DDI_BUILD_VERSION_0030
D3D12DDI_BUILD_VERSION_0031
D3D12DDI_BUILD_VERSION_0032
D3D12DDI_BUILD_VERSION_0033
D3D12DDI_BUILD_VERSION_0034
D3D12DDI_BUILD_VERSION_0040
D3D12DDI_BUILD_VERSION_0041
D3D12DDI_BUILD_VERSION_0042
D3D12DDI_BUILD_VERSION_0043
D3D12DDI_BUILD_VERSION_0050
D3D12DDI_BUILD_VERSION_0051
D3D12DDI_BUILD_VERSION_0052
D3D12DDI_BUILD_VERSION_0053
D3D12DDI_BUILD_VERSION_0054
D3D12DDI_BUILD_VERSION_0060
D3D12DDI_BUILD_VERSION_0061
D3D12DDI_BUILD_VERSION_0062
D3D12DDI_BUILD_VERSION_0063
D3D12DDI_BUILD_VERSION_0064
D3D12DDI_BUILD_VERSION_0065
D3D12DDI_BUILD_VERSION_0072
D3D12DDI_BUILD_VERSION_0073
D3D12DDI_BUILD_VERSION_0074
D3D12DDI_BUILD_VERSION_0075
D3D12DDI_BUILD_VERSION_0076
D3D12DDI_BUILD_VERSION_0080
D3D12DDI_BUILD_VERSION_0081
D3D12DDI_BUILD_VERSION_0082
D3D12DDI_BUILD_VERSION_0083
D3D12DDI_BUILD_VERSION_0084
D3D12DDI_BUILD_VERSION_LATEST_R0
D3D12DDI_FEATURE_0020_CORE
D3D12DDI_FEATURE_0020_PASS_EXPERIMENT
D3D12DDI_FEATURE_0020_UNKNOWN
D3D12DDI_FEATURE_0020_VIDEO
D3D12DDI_FEATURE_0021_SHADERCACHING
D3D12DDI_FEATURE_0030_CONTENT_PROTECTION_RESOURCES
D3D12DDI_FEATURE_0030_CONTENT_PROTECTION_STREAMING
D3D12DDI_FEATURE_0033_METACOMMAND
D3D12DDI_FEATURE_0043_RENDER_PASS
D3D12DDI_INTERFACE_VERSION_R0
D3D12DDI_INTERFACE_VERSION_R1
D3D12DDI_INTERFACE_VERSION_R2
D3D12DDI_INTERFACE_VERSION_R3
D3D12DDI_INTERFACE_VERSION_R4
D3D12DDI_INTERFACE_VERSION_R5
D3D12DDI_INTERFACE_VERSION_R6
D3D12DDI_INTERFACE_VERSION_R7
D3D12DDI_INTERFACE_VERSION_R8
D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_PROFILES reported an unsupported profile GUID.
D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_SUPPORT returned invalid configuration flags
D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_SUPPORT returned invalid tier
D3D12DescriptorHeapFlags
D3D12DescriptorHeapType
D3D12EnableExperiments
D3D12FeatureSupport
D3D12FrameCodedInterlaceType
D3D12GetDebugInterface: This method requires the D3D12 SDK Layers for Windows 10, but they are not present on the system.
D3D12GetInterface
D3D12HeapFlags
D3D12HeapType
D3D12MemoryPool
D3D12MotionEstimatorPrecision
D3D12MotionEstimatorSearchBlockSize
D3D12ProtectedResourceSessionFlags
D3D12QueryHeapType
D3D12RegisterLayers
D3D12ResourceDimension
D3D12ResourceFlags
D3D12ResourceHeapType
D3D12SDKLayers.dll
D3D12SDKVersion
D3D12ShaderCacheFlags
D3D12ShaderCacheMode
D3D12TextureLayout
D3D12TranslateCreateDevice
D3DBehaviors
D3DDDICB_RENDER::BroadcastContext array may not contain contexts that belong to a scheduling group.
D3DDDICB_RENDER::BroadcastContext array must contain contexts that are all associated with the same command queue.
D3DDDICB_SUBMITCOMMAND::BroadcastContext array may not contain contexts that belong to a scheduling group.
D3DDDICB_SUBMITCOMMAND::BroadcastContext array must contain contexts that are all associated with the same command queue.
D3DDDICB_SUBMITCOMMAND::BroadcastContextCount is too large.
D3DDDICB_SUBMITCOMMAND::NumPrimaries is too large. Only half the available array may be used by driver.
D3DDRED2
d3ddredDataPresent
D3DDriverVerifier
D3DDriverVerifier.dll
D3DExtendedFeature
D3DFeatureLevel
D3DSCache.dll
D3DSerializeRootSignature: unknown root parameter type (%u)
D3DSerializeRootSignature: unsupported root signature version (%u)
D3DSupplemental
D4FhKG
D8@Dt.
D8@Jt
D8@Lt
D8|$0t
D8d$ u
D8D$H
D8D$ht1E
D8f@tGH;
D8IOu
D8k\uvL
D8l$0u
D8qMt
D8s t53
D8s@t
D8t$(u
D8T$@t
D8t$@u
D8t$Vu
D8w0t
D8xOH
D9#uz
D9?tD
D9?vKA
D9[ u
D9\$,u
D9\$`t
D9\$dr
D9\$hA
D9\$p
D9\$X
D9^tr
D9`0u
D9|$(
D9|$`t
D9|$P
D9c |!
D9C(wFu
D9c,t
D9c|u
D9D$`u;
D9d$p
D9D$Xv
D9g8taL
D9k0v
D9l$(|
D9L$\v6O
D9l$`u6
D9L$|
D9L$Dw
D9L$Pu
D9n@u'D9
D9nTu#D9
D9oPA
D9s,t
D9t$\t
D9t$`u:
D9T$l
D9t$P
D9v$uzE
D9v`t
D9wXv<
DataSize
dcl_constantbuffer
dcl_function_body
dcl_function_table
dcl_globalFlags
dcl_gsinstances
dcl_hs_fork_phase_instance_count
dcl_hs_join_phase_instance_count
dcl_hs_max_tessfactor
dcl_indexableTemp
dcl_indexrange
dcl_input
dcl_input_control_point_count
dcl_input_ps
dcl_input_ps_sgv
dcl_input_ps_siv
dcl_input_sgv
dcl_input_siv
dcl_inputprimitive
dcl_interface
dcl_maxout
dcl_output
dcl_output_control_point_count
dcl_output_sgv
dcl_output_siv
dcl_outputtopology
dcl_resource
dcl_resource_raw
dcl_resource_structured
dcl_sampler
dcl_stream
dcl_temps
dcl_tessellator_domain
dcl_tessellator_output_primitive
dcl_tessellator_partitioning
dcl_tgsm_raw
dcl_tgsm_structured
dcl_thread_group
dcl_uav_raw
dcl_uav_structured
dcl_uav_typed
DCStart
Dd$pH
ddiDisableFlagSet
debug_break
DebugBreak
DebugObjectName
DecodeFrame
DecodeFrame1
DecodeFrame2
DecodeHeight
DecodeInfo
DecodePictureLists
DecodeProfile
Decoder heap creation args are not supported.  Use ID3D12VideoDevice::CheckFeatureSupport to query for D3D12_FEATURE_VIDEO_DECODE_SUPPORT to check for support.
Decoder heap creation args failed ID3D12VideoDevice::CheckFeatureSupport for D3D12_FEATURE_VIDEO_DECODE_SUPPORT. hr = 0x%x
DecodeWidth
default
DelayLoadFailureHook
DeleteCriticalSection
Depth
DepthFunc has an unrecognized value.
DepthOrArraySize
DepthWriteMask has an unrecognized value.
deque<T> too long
deriv_rtx
deriv_rtx_coarse
deriv_rtx_fine
deriv_rty
deriv_rty_coarse
deriv_rty_fine
Description must be provided.
Descriptor range (descriptor table slot [%u], root parameter [%u]) overlaps with another incompatible descriptor range.
Descriptor range flags cannot specify DESCRIPTORS_VOLATILE with the DATA_STATIC flag at the same time (descriptor range flags %x). DATA_STATIC_WHILE_SET_AT_EXECUTE is fine to combine with DESCRIPTORS_VOLATILE, since DESCRIPTORS_VOLATILE still requires descriptors don't change during execution. 
Descriptor range flags cannot specify more than one DATA_* flag at a time (descriptor range flags %x).
Descriptor range flags cannot specify more than one DESCRIPTOR_* flag at a time (descriptor range flags %x).
DescriptorHeap
DestBlend[ %d ] does not equal DestBlend[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
DestBlend[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND.
DestBlend[ %d ] is trying to use a dual source blending operation, value (0x%x), which is not valid for any other render target slot other than 0.
DestBlendAlpha[ %d ] does not equal DestBlendAlpha[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
DestBlendAlpha[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND.
DestBlendAlpha[ %d ] is trying to use a D3D11_BLEND value (0x%x) that manipulates color, which is invalid.
DestBlendAlpha[ %d ] is trying to use a dual source blending operation, value (0x%x), which is not valid for any other render target slot other than 0.
Destination resource must be a buffer.
Destination resource sample count : %u, and Source resource sample count : %u, but when mode is set to D3D12_RESOLVE_MODE_DECOMPRESS, sample count of destination resource must be equal to sample count of source resource. 
Destination resource sample count: %u, and Source resource sample count: %u. The destination resource sample count must be 1, and the source resource sample count must be >= 2.
DestroyAllocation
DestroyAllocation2
DestroyAllocation2 - StandardAllocation
DestroyDevice
DestroyHwQueue
DestroyPagingQueue
DestroyPagingQueueCB
DestroyProtectedSession
DestroySynchronizationObject
DestroyTrackedWorkload
Destruction
Developer mode must be enabled to use this API.
Device
Device DestroyContextCb called with queue context.
Device DestroyHwQueueCB called with command queue context/HwQueue.
Device does not have Video Command capabilities, see CheckFeatureSupport.
Device does not have Video decode capabilities, see CheckFeatureSupport.
Device does not have Video Encode capabilities, see CheckFeatureSupport.
Device does not have Video Process capabilities, see CheckFeatureSupport.
Device does not support Conservative Rasterization (pRasterizerDesc specifies D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON).
Device does not support the Depth Bounds Test (DepthBoundsTestEnable is set to TRUE). To check for support, check device caps via the CheckFeatureSupport() API
Device does not support view instancing. D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING is set but hardware tier is D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED.
Device does not support view instancing. View instance count (%u) is greater than 1, but hardware tier is D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED.
Device hung.
Device hung. See g_D3D12PageFaultState.
Device reset.
Device stopped.
DeviceExecutionState
deviceId
DeviceRemovedReason
Devices
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 do not support typed buffer views.  Only raw and structured buffer views are supported.
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 only support creating shader resource views on resources created from default heaps.
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 only support creating unordered access views on resources created from default heaps.
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 require structured buffer FirstElement and NumElements to be a multiple of 2 (0 is allowed) when StructureByteStride is 2, to keep the base address 4 byte aligned. FirstElement=%d and NumElements=%d specified
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 require structured buffer FirstElement and NumElements to be a multiple of 2 (0 is allowed) when StructureByteStride is 2, to keep the base address 4 byte aligned. FirstElement=%I64u and NumElements=%u specified
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 require structured buffer StructuredByteStride to be 2 or a multiple of 4 (%d specified)
DI%J^
Dimension
Direct
Direct3D 12 Core Runtime
DISABLE_BACKGROUND_WORK, DISABLE_PROFILING_BY_SYSTEM, and COMMIT_RESULTS_HIGH_PRIORITY require developer mode.
-disableHashCheck
DisableImplicitMGPU
discard
DiscardResource
Dispatch
DispatchMesh
DispatchRays
DllGetClassObject
dmovc
DoDredWatsonResult
DOMAIN
Domain Shader
downlevelSupport
DrawIndexedInstanced
DrawInstanced
DredAutoBreadcrumbs
DredAutoBreadcrumbsEnabled
DredBreadcrumbContext
DredBreadcrumbContextEnabled
DredPageFault
DredPageFaultEnabled
DredSystemEnabled
DredWatson
DredWatsonDumpEnabled
DredWatsonReport
Driver cannot have gaps in reported support for release shader models in D3d12DDICAPS_TYPE_0011_SHADER_MODELS caps query.
Driver claimed MSAA support when it shouldn't
Driver couldn't change frame latency
Driver did not correctly respond to D3D12DDICAPS_TYPE_0023_UMD_BASED_COMMAND_QUEUE_PRIORITY caps query.
Driver did not correctly respond to D3D12DDICAPS_TYPE_0050_HARDWARE_SCHEDULING_CAPS caps query.
Driver did not report any supported shader models in D3D12DDICAPS_TYPE_0011_SHADER_MODELS caps query
Driver did not respond to D3D12DDICAPS_TYPE_0011_SHADER_MODELS caps query with a list of supported shader models.
Driver did not respond to D3D12DDICAPS_TYPE_ARCHITECTURE_INFO caps query
Driver did not respond to D3D12DDICAPS_TYPE_D3D12_OPTIONS caps query
Driver did not respond to D3D12DDICAPS_TYPE_SHADER caps query
Driver did not set valid WaveLaneCountMin/Max or TotalLaneCount via D3D12DDICAPS_TYPE_SHADER caps query
Driver didn't call pfnSetCommandListDDITableCb or called it with invalid D3D12DDI_HRTTABLE at command list creation, defaulting to stubbed DDIs.
Driver didn't provide any HwQueues for a hardware scheduling command queue present.
Driver does not have OpenAdapter entrypoint
Driver doesn't respond to D3D12DDICAPS_MEMORY_ARCHITECTURE Caps.
Driver failed D3D12DDICAPS_TEXTURE_LAYOUT or D3D12DDICAPS_TEXTURE_LAYOUT_SETS Caps.
Driver failed D3D12DDICAPS_TYPE_0022_CPU_PAGE_TABLE_FALSE_POSITIVES Caps.
Driver failed D3D12DDICAPS_TYPE_0022_TEXTURE_LAYOUT Caps with NULL pInfo.
Driver failed D3D12DDICAPS_TYPE_TEXTURE_LAYOUT1 Caps with NULL pInfo.
Driver filled out an invalid value in D3D12DDI_D3D12_OPTIONS_DATA::ProgrammableSamplePositionsTier.
Driver filled out an invalid value in D3D12DDI_D3D12_OPTIONS_DATA::ResourceHeapTier.
Driver filled out an invalid value in D3D12DDI_D3D12_OPTIONS_DATA::ViewInstancingTier.
Driver is not allowed to create a global Hw queue for a context which is owned by a command queue or scheduling group.
Driver must set pfnMapHeap and pfnUnmapHeap to non-NULL.
Driver provided too many contexts for present.
Driver reported an invalid D3D12_VIDEO_ENCODER_VALIDATION_FLAGS.
Driver reported an invalid D3D12DDI_VIDEO_DECODE_TIER.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_0080_2.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_0082_0.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_0083_0.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_0080_2.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_LEVEL_SETTING.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_LEVEL_SETTING_0080_2.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_PROFILE_DESC.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_PROFILE_DESC_0080_2.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_SUPPORT_FLAGS.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_SUPPORT_FLAGS_0080.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_SUPPORT_FLAGS_0082_0.
Driver reported D3D12DDI_VIDEO_ENCODER_SUPPORT_FLAG_0080_GENERAL_SUPPORT_OK set and D3D12DDI_VIDEO_ENCODER_VALIDATION_FLAG_0080_RATE_CONTROL_CONFIGURATION_NOT_SUPPORTED off.
Driver reported invalid WriteBufferImmediate support flags.
Driver reported Support for a DecodeTier > D3D12DDI_VIDEO_DECODE_TIER_0020_1, but that support is not enabled.
Driver reported Support for a DecodeTier > D3D12DDI_VIDEO_DECODE_TIER_0020_2, but that support is not enabled.
Driver reported TIER_1 or greater Render Pass support despite not implementing DDI table.
Driver reported TIER_NOT_SUPPORTED despite implementing DDI table.
Driver reported VRS TIER_1 or greater, but did not provide a valid tile size.
Driver reported VRS TIER_2, but did not provide a valid nonzero tile size.
Driver responded with invalid bits to D3D12DDICAPS_TYPE_0022_CPU_PAGE_TABLE_FALSE_POSITIVES Caps.
Driver returned invalid pipeline caps
Driver returned non-zero D3D12DDI_RESOURCE_ALLOCATION_INFO_0022::AdditionalDataHeaderSize for a resource with a known layout.
Driver returned non-zero D3D12DDI_RESOURCE_ALLOCATION_INFO_0022::AdditionalDataSize for a resource with a known layout.
Driver returned unexpected D3D12DDI_RESOURCE_ALLOCATION_INFO_0022::Layout for a resource with a known layout.
Driver returned unexpected D3D12DDI_RESOURCE_ALLOCATION_INFO_0022::ResourceDataSize for a resource with a known layout.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_CAPS::Flags incorrect. D3D12DDI_ROW_MAJOR_LAYOUT_FLAG_DEPTH_PITCH_4_8_16_HEIGHT_MULTIPLE must be set along with D3D12DDI_ROW_MAJOR_LAYOUT_FLAG_FLEXIBLE_DEPTH_PITCH.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_SUB_CAPS::SubCaps::BaseOffsetAlignment either too large, 0, or to a non-pow2 value.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_SUB_CAPS::SubCaps::DepthPitchAlignment either too large, 0, or to a non-pow2 value.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_SUB_CAPS::SubCaps::PitchAlignment either too large, 0, or to a non-pow2 value.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_SUB_CAPS::SubCaps[ 0 ]::MaxElementSize to 0.
Driver set D3D12DDICAPS_MEMORY_ARCHITECTURE::CacheCoherent TRUE along with D3D12DDICAPS_MEMORY_ARCHITECTURE::UMA FALSE. CacheCoherent is only a property of UMA systems, which don'tbenefit from the usage of write-combine.
Driver set D3D12DDICAPS_MEMORY_ARCHITECTURE::IOCoherent FALSE on an x86 or amd64 system.PCIe support IOCoherence, and the hardware must use it. UMA systems must set TRUE, to avoid the runtimeflushing the CPU cache manually.
Driver set D3D12DDICAPS_TEXTURE_LAYOUT::DeviceDependentLayoutCount too large.
Driver set D3D12DDICAPS_TEXTURE_LAYOUT::DeviceDependentSwizzleCount too large.
Driver set D3D12DDICAPS_TEXTURE_LAYOUT::SupportsRowMajorTexture but not DXGK_VIDMMCAPS::CrossAdapterResourceTexture.
Driver set invalid sync interval override.
Driver set MaxGPUVirtualAddressBitsPerResource to 0.
Driver set pfnCalcPrivateHeapAndResourceSizes to NULL.
Driver set pfnCalcPrivateOpenedHeapAndResourceSizes to NULL.
Driver set pfnCheckExistingResourceAllocationInfo to NULL.
Driver set pfnCheckResourceAllocationInfo to NULL.
Driver set pfnCheckSubresourceInfo to NULL.
Driver set pfnCopyTiles to NULL.
Driver set pfnCreateHeapAndResource to NULL.
Driver set pfnDestroyHeapAndResource to NULL.
Driver set pfnOpenHeapAndResource to NULL.
Driver specified a non-identity node remapping with more than 1 API-visible node
Driver specified duplicate API index in node remapping
Driver specified incompatible cross-node sharing tier
Driver specified invalid API index in node remapping
Driver specified unrecognized cross-node sharing tier
Driver specified unrecognized Render Pass tier
Driver targeted HwQueue against context belonging to different queue.
Driver targeted HwQueue against scheduling group that this command queue does not belong to.
Driver update in progress.
Driver uses indexable swizzle patterns, but returned an out of range ColumnOffset.
DriverCustomMarkers
driverDDIVersion
Drivers that expose AtomicInt64OnTypedResource, AtomicInt64OnGroupShared, AtomicInt64OnDescriptorHeapResource, DerivativesInMeshAndAmplificationShaders or WaveMMATier must expose shader model 6.6.
Drivers that report BarycentricsSupported = TRUE must expose shader model 6.1.
Drivers that support D3D12DDI_VIEW_INSTANCING_TIER_1 or greater must expose shader model 6.1.
Drivers that support mesh shader 1.0 must expose shader model 6.5.
Drivers that support Native16BitOps must expose shader model 6.2.
Drivers that support raytracing must expose shader model 6.3.
Drivers that support raytracing tier 1.1 must expose shader model 6.5.
Drivers that support sampler feedback tier 1.0 must expose shader model 6.5.
Drivers that support variable shading rate tier 2+ must expose shader model 6.4.
driverType_in
Dual Source Blending (use of D3D12_BLEND_SRC1_COLOR, D3D12_BLEND_INV_SRC1_COLOR, D3D12_BLEND_SRC1_ALPHA or D3D12_BLEND_INV_SRC1_ALPHA in the Blend Desc) means only a single RenderTarget may be bound and must be a slot 0. The PSO description indicates that there will be a RenderTarget bound to slot %d
Dual-source color blending cannot be used when BlendEnable is set for a RenderTarget above 0.Specifically, to use Dual-source color blending, it must only be used on RenderTarget 0 with BlendEnable set only on RenderTarget 0.
DuplicateHandle
dWI@E
DXBC)
DXBC_
DXBCfD
DxcCreateInstance
dxcore.dll
DXCoreCreateAdapterFactory
DXGI_CENTER_MULTISAMPLE_QUALITY_PATTERN
DXGI_FORMAT_420_OPAQUE
DXGI_FORMAT_A8_UNORM
DXGI_FORMAT_A8P8
DXGI_FORMAT_AI44
DXGI_FORMAT_AYUV
DXGI_FORMAT_B10G10R10A2_UNORM
DXGI_FORMAT_B4G4R4A4_UNORM
DXGI_FORMAT_B4G4R4X4_UNORM
DXGI_FORMAT_B5G5R5A1_UNORM
DXGI_FORMAT_B5G5R5X1_UNORM
DXGI_FORMAT_B5G6R5_UNORM
DXGI_FORMAT_B8G8R8A8_TYPELESS
DXGI_FORMAT_B8G8R8A8_UNORM
DXGI_FORMAT_B8G8R8A8_UNORM_SRGB
DXGI_FORMAT_B8G8R8X8_TYPELESS
DXGI_FORMAT_B8G8R8X8_UNORM
DXGI_FORMAT_B8G8R8X8_UNORM_SRGB
DXGI_FORMAT_BC1_TYPELESS
DXGI_FORMAT_BC1_UNORM
DXGI_FORMAT_BC1_UNORM_SRGB
DXGI_FORMAT_BC2_TYPELESS
DXGI_FORMAT_BC2_UNORM
DXGI_FORMAT_BC2_UNORM_SRGB
DXGI_FORMAT_BC3_TYPELESS
DXGI_FORMAT_BC3_UNORM
DXGI_FORMAT_BC3_UNORM_SRGB
DXGI_FORMAT_BC4_SNORM
DXGI_FORMAT_BC4_TYPELESS
DXGI_FORMAT_BC4_UNORM
DXGI_FORMAT_BC5_SNORM
DXGI_FORMAT_BC5_TYPELESS
DXGI_FORMAT_BC5_UNORM
DXGI_FORMAT_BC6H_SF16
DXGI_FORMAT_BC6H_TYPELESS
DXGI_FORMAT_BC6H_UF16
DXGI_FORMAT_BC7_TYPELESS
DXGI_FORMAT_BC7_UNORM
DXGI_FORMAT_BC7_UNORM_SRGB
DXGI_FORMAT_D16_UNORM
DXGI_FORMAT_D16_UNORM_S8_UINT
DXGI_FORMAT_D24_UNORM_S8_UINT
DXGI_FORMAT_D32_FLOAT
DXGI_FORMAT_D32_FLOAT_S8X24_UINT
DXGI_FORMAT_G8R8_G8B8_UNORM
DXGI_FORMAT_IA44
DXGI_FORMAT_L16_UNORM
DXGI_FORMAT_L8_UNORM
DXGI_FORMAT_L8A8_UNORM
DXGI_FORMAT_NV11
DXGI_FORMAT_NV12
DXGI_FORMAT_P010
DXGI_FORMAT_P016
DXGI_FORMAT_P208
DXGI_FORMAT_P8
DXGI_FORMAT_R1_UNORM
DXGI_FORMAT_R10G10B10_6E4_A2_FLOAT
DXGI_FORMAT_R10G10B10_7E3_A2_FLOAT
DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM
DXGI_FORMAT_R10G10B10A2_TYPELESS
DXGI_FORMAT_R10G10B10A2_UINT
DXGI_FORMAT_R10G10B10A2_UNORM
DXGI_FORMAT_R10G10B10A2_UNORM_SRGB
DXGI_FORMAT_R10G10B10X2_SNORM
DXGI_FORMAT_R10G10B10X2_UINT
DXGI_FORMAT_R11G11B10_FLOAT
DXGI_FORMAT_R16_FLOAT
DXGI_FORMAT_R16_SINT
DXGI_FORMAT_R16_SNORM
DXGI_FORMAT_R16_TYPELESS
DXGI_FORMAT_R16_UINT
DXGI_FORMAT_R16_UNORM
DXGI_FORMAT_R16_UNORM_X8_TYPELESS
DXGI_FORMAT_R16G16_FLOAT
DXGI_FORMAT_R16G16_SINT
DXGI_FORMAT_R16G16_SNORM
DXGI_FORMAT_R16G16_TYPELESS
DXGI_FORMAT_R16G16_UINT
DXGI_FORMAT_R16G16_UNORM
DXGI_FORMAT_R16G16B16A16_FLOAT
DXGI_FORMAT_R16G16B16A16_SINT
DXGI_FORMAT_R16G16B16A16_SNORM
DXGI_FORMAT_R16G16B16A16_TYPELESS
DXGI_FORMAT_R16G16B16A16_UINT
DXGI_FORMAT_R16G16B16A16_UNORM
DXGI_FORMAT_R24_UNORM_X8_TYPELESS
DXGI_FORMAT_R24G8_TYPELESS
DXGI_FORMAT_R32_FLOAT
DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
DXGI_FORMAT_R32_SINT
DXGI_FORMAT_R32_TYPELESS
DXGI_FORMAT_R32_UINT
DXGI_FORMAT_R32G32_FLOAT
DXGI_FORMAT_R32G32_SINT
DXGI_FORMAT_R32G32_TYPELESS
DXGI_FORMAT_R32G32_UINT
DXGI_FORMAT_R32G32B32_FLOAT
DXGI_FORMAT_R32G32B32_SINT
DXGI_FORMAT_R32G32B32_TYPELESS
DXGI_FORMAT_R32G32B32_UINT
DXGI_FORMAT_R32G32B32A32_FLOAT
DXGI_FORMAT_R32G32B32A32_SINT
DXGI_FORMAT_R32G32B32A32_TYPELESS
DXGI_FORMAT_R32G32B32A32_UINT
DXGI_FORMAT_R32G8X24_TYPELESS
DXGI_FORMAT_R8_SINT
DXGI_FORMAT_R8_SNORM
DXGI_FORMAT_R8_TYPELESS
DXGI_FORMAT_R8_UINT
DXGI_FORMAT_R8_UNORM
DXGI_FORMAT_R8G8_B8G8_UNORM
DXGI_FORMAT_R8G8_SINT
DXGI_FORMAT_R8G8_SNORM
DXGI_FORMAT_R8G8_TYPELESS
DXGI_FORMAT_R8G8_UINT
DXGI_FORMAT_R8G8_UNORM
DXGI_FORMAT_R8G8B8A8_SINT
DXGI_FORMAT_R8G8B8A8_SNORM
DXGI_FORMAT_R8G8B8A8_TYPELESS
DXGI_FORMAT_R8G8B8A8_UINT
DXGI_FORMAT_R8G8B8A8_UNORM
DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
DXGI_FORMAT_R9G9B9E5_SHAREDEXP
DXGI_FORMAT_UNKNOWN
DXGI_FORMAT_V208
DXGI_FORMAT_V408
DXGI_FORMAT_X16_TYPELESS_G8_UINT
DXGI_FORMAT_X24_TYPELESS_G8_UINT
DXGI_FORMAT_X32_TYPELESS_G8X24_UINT
DXGI_FORMAT_Y210
DXGI_FORMAT_Y216
DXGI_FORMAT_Y410
DXGI_FORMAT_Y416
DXGI_FORMAT_YUY2
DXGI_STANDARD_MULTISAMPLE_QUALITY_PATTERN
DXGIDebug.dll
DXGIFormat
DXGIGetDebugInterface
DxgkSharedBundleObject
DxgkSharedProtectedSessionObject
DxgkSharedResource
DxgkSharedSyncObject
DXIL(
dxilconv.dll
DXILH
DXILP
DXILu
DXVA_PicParams_H264
DXVA_PicParams_H264_MVC
DXVA_PicParams_HEVC
DXVA_PicParams_MPEG4_PART2
DXVA_PicParams_VP8
DXVA_PicParams_VP9
DXVA_PictureParameters
E !D$4H
E A3F 
E t1I
E(L#u@M
E;A8r
E;J(r
E;J8r
E@9E0
E`L98
E0C1)0'
E8,6u
E8~OL
E8<0u
E8T$L
E8x@t9
E9J(v`I
E9V@u
EbpVsv
Eh#"!c
eHD8fQt(E3
EhL98
EHL98}+H
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
emit_stream
emit_then_cut
emit_then_cut_stream
EmitRaytracingAccelerationStructurePostbuildInfo
Enabled
EnableDriverVerifier
EncodeFrame
EncoderCodec
EncoderFlags
EncoderHeapFlags
EndAddress
EndEvent
endif
endloop
EndQuery
EndRenderPass
EndRenderPass called without corresponding BeginRenderPass.
EndSubmission
endswitch
EndTrackedWorkload
EnterCriticalSection
EpL98
EPL98|
Escape
EstimateMotion
EtwEventWriteTransfer
eval_centroid
eval_sample_index
eval_snapped
EvCH+
EventData
EventRegister
EventSetInformation
EventsMask
EventUnregister
EventWriteTransfer
Evict
EVNTh
Exception
ExecuteBundle
ExecuteCommandList
ExecuteExtensionCommand
ExecuteIndirect
ExecuteIndirect can only be called on a bundle when the count buffer is set to NULL, and the command signature contains exactly 1 parameter (which must be a Draw, DrawIndexed, Dispatch or DispatchRays).
ExecuteIndirect does not support Draw* operations on a compute command list.
ExecuteMetaCommand
Existing singleton device already removed.
Existing singleton device feature level too low
EXL98
ExtendedFeature
ExtendedFeatureVersion
extendedFeatureVersions
ext-ms-win-dxcore-l1-1-0.dll
ext-ms-win-dx-d3dkmt-dxcore-l1-1-0.dll
ext-ms-win-dx-d3dkmt-dxcore-l1-1-1
ext-ms-win-dx-d3dkmt-dxcore-l1-1-1.dll
ext-ms-win-ntuser-uicontext-ext-l1-1-0
ext-ms-win-ntuser-uicontext-ext-l1-1-0.dll
ext-ms-win-wer-reporting-l1-1-0
ext-ms-win-wer-reporting-l1-1-0.dll
ExtractBundleObject
eY$QE
Ey;'HV
eZ$2Y
F$H;G$u
F( ti
F(H#~@H
F,H;G,t
F@H+F0H
F@I+F0H
F0@u3D9
F0H+F H
f16tof32
f32tof16
F8, u
f9<Au
f9<ru
fA;z*
fA9,@u
fA9z*v%A
Failed GetCaps for D3D12DDICAPS_TYPE_0030_PROTECTED_RESOURCE_SESSION_SUPPORT.
Failed GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPE_COUNT reported zero types when driver previously reported D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED.
Failed GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPE_COUNT.
Failed GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPES.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_BITSTREAM_ENCRYPTION_SCHEMES.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_FORMATS.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_PROFILES.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0032_DECODE_BITSTREAM_ENCRYPTION_SCHEME_COUNT.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0032_DECODE_PROFILE_COUNT.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0032_DECODE_PROFILE_FORMAT_COUNT.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_FEATURE_AREA_SUPPORT.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_COUNT.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_DECODE_PROTECTED_RESOURCES.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_MOTION_ESTIMATOR_PROTECTED_RESOURCES.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_PROCESS_PROTECTED_RESOURCES.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0080_ENCODER_RESOURCE_REQUIREMENTS.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_DATA_0083_0.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_CODEC_DATA_0080.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_HEAP_SIZE_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_INPUT_FORMAT_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_INTRA_REFRESH_MODE_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_OUTPUT_RESOLUTION_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_OUTPUT_RESOLUTION_RATIOS_COUNT_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_PROFILE_LEVEL_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_RATE_CONTROL_MODE_DATA_0080.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_SUPPORT_DATA.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_SUPPORT_DATA_0082_0.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_SUPPORT_DATA_LATEST.
Failed to determine format support for format %d
Failed to find matching DDI versions
Failed to produce DRED Watson dump
FailFast
Failure when retrieving D3D12DDICAPS_TYPE_VIDEO_0020_PROCESS_MAX_INPUT_STREAMS.
FALSE
fcall
fD9 u
fD9$Zu
fD9,Gt
fD9>u$H
fD94Ou
Fdxgi.dll
Fe\cI
fE9$VuE;
fE9,Ft
fE9,Nt
fE94Pu
fE9t$
FeatureGUIDs
FeatureLevel
featureLevel_in
Fence
fF9|C
fF9<Cu
fF9<su
fF94zu
fffffff
fg:SM
fG9$Fu
FileDescription
FileVersion
FillMode has an unrecognized value.
FillMode must be D3D12_FILL_MODE_SOLID when ConservativeRaster is D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON: FillMode = D3D12_FILL_MODE_WIREFRAME, ConservativeRaster = D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON.
Filter unrecognized.
FirstAPISequenceNumber
FirstAPISequenceNumberHigh
firstbit_hi
firstbit_lo
firstbit_shi
FirstSubresource and/ or NumSubresources are invalid for the corresponding resource. The resource only has %u subresources, while FirstSubresource is %u and NumSubresources is %u.
FJImU:
FL 12.1+ driver incorrectly does not report support for Raster Order Views (ROVs).
FL 12+ driver incorrectly does not report support for typed UAV load additional formats.
FL11.1 driver doesn't support logic ops
FL12.1+ driver incorrectly did not report support for conservative rast tier 1+.
FL12.2+ driver incorrectly did not report at least 40 bits of GPU virtual address bits
FL12.2+ driver incorrectly did not report support for 64-bit integer shader ops
FL12.2+ driver incorrectly did not report support for conservative rasterization tier at least 3
FL12.2+ driver incorrectly did not report support for depth bounds testing
FL12.2+ driver incorrectly did not report support for direct, compute, and bundle WriteBufferImmediate support.
FL12.2+ driver incorrectly did not report support for mesh shader tier at least 1
FL12.2+ driver incorrectly did not report support for output merger logic ops
FL12.2+ driver incorrectly did not report support for raytracing tier at least 1.1
FL12.2+ driver incorrectly did not report support for resource binding tier at least 3
FL12.2+ driver incorrectly did not report support for root signature version at least 1.1
FL12.2+ driver incorrectly did not report support for sampler feedback tier at least 0.9
FL12.2+ driver incorrectly did not report support for shader model at least 6_5
FL12.2+ driver incorrectly did not report support for the CastingFullyTypedFormatSupported capability
FL12.2+ driver incorrectly did not report support for the CopyQueueTimestampQueriesSupported capability
FL12.2+ driver incorrectly did not report support for the VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation capability
FL12.2+ driver incorrectly did not report support for tiled resource tier at least 3
FL12.2+ driver incorrectly did not report support for variable rate shading tier at least 2
FL12.2+ driver incorrectly did not report support for wave ops
FL12+ driver incorrectly did not report support for resource binding tier 2+.
FL12+ driver incorrectly did not report support for tiled resources tier 2+.
Flags
For D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE, Shader4ComponentMapping must be D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING (%#x) (the field is actually unused).
For D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE, the address (%I64u) must be aligned to %d bytes.
For D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE, the format must be DXGI_FORMAT_UNKNOWN.
For now, driver must include shader model 5.1 support in the list of shader models returned via D3D12DDICAPS_TYPE_0011_SHADER_MODELS caps query.
For the resource format %s, when making a D3D view, the format name for the view can't be %s.  See documentation for the set of valid view format names for this resource format, determining which how the resource (or part of it) will appear to shader.
ForceComputeOnlyDevice
ForegroundThreadCount
Format
format
Format=
FormatMessageW
FPH+F@H
FrameRate
FreeLibrary
FreeVirtualAddress
FrontFace.StencilDepthFailOp has an unrecognized value.
FrontFace.StencilFailOp has an unrecognized value.
FrontFace.StencilFunc has an unrecognized value.
FrontFace.StencilPassOp has an unrecognized value.
G(M#g@M
G@H+G0H
G@H+G0I;
G@I+G0H
G=)=u
G0H+G H
G89F8u,H
G8R8_G8B8_UNORM
gather4
gather4_c
gather4_c_s
gather4_po
gather4_po_c
gather4_po_c_s
gather4_po_s
gather4_s
GdtRH
Ge]L*
GenuD
GEOMETRY
Geometry Shader
Get3DPipelineLevel
GetAllocationPriority
GetAvailableTrackedWorkloadIndex
GetCaps (D3D12DDICAPS_TYPE_GPUVA_CAPS)
GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPES must return at least D3D12DDI_PROTECTED_RESOURCES_SESSION_HARDWARE_PROTECTED when D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED is reported.
GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPES returned an unsupported GUID.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_FORMATS reported a format that doesn't support video.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM must report a BinCount >= 64.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM must report a CounterBitDepth of 16, 24, or 32.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM must report a Pow2 BinCount.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM returned invalid D3D12DDI_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAGS_0041.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR returned invalid D3D12DDI_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAGS_0053.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR returned invalid D3D12DDI_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAGS_0053.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR returned invalid supported size range.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR returned values indicating no support, but did not set all values to indicate no support.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR_SIZE returned zero for both MotionVectorHeapMemoryPoolL0Size and MotionVectorHeapMemoryPoolL1Size.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_CAPS returned an invalid failure code.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETER_COUNT must have ParameterPacking of 1, 2, 4, or 8. 
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETER_COUNT must not fail for a supported Command ID.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS must set None Flags for parameters whose type is not D3D12DDI_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_0063_RESOURCE.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS must set Read or Write Flags for D3D12DDI_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_0063_RESOURCE.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS reported a Resource parameter type for the CAPS_INPUT, CAPS_OUTPUT, or DEVICE_EXECUTE_OUTPUT stage.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS returned a failure for a parameter set it claimed to support.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS returned a nullptr for a parameter name.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS returned an invalid D3D12DDI_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS returned an invalid D3D12DDI_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_SIZE returned an invalid failure code.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_DECODE_PROTECTED_RESOURCES returned invalid support flags.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_MOTION_ESTIMATOR_PROTECTED_RESOURCES returned invalid support flags.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_PROCESS_PROTECTED_RESOURCES returned invalid support flags.
GetCopyableFootprints does not support buffers with width (%llu) larger than UINT_MAX.
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetFileSize
GetFileTime
GetFileVersionInfoExW
GetFileVersionInfoSizeExW
GetFileVersionInfoSizeW
GetFileVersionInfoW
GetLastError
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetMultisampleMethodList
GetNativeSystemInfo
GetProcAddress
GetProcessHeap
GetProcessMitigationPolicy
GetSystemDirectoryW
GetSystemInfo
GetSystemTimeAsFileTime
GetTickCount
GetTrackedWorkloadStatistics
GetWriteWatch
gfffffffI
gG4Sf
GHH9D$0
GPH9D$8
GpuDriverVersion
GpuManufacturer
Graphics pipeline state mixes shader model 6.0 or above with 5.1 or below.
Graphics pipeline state object uses input-assembler, but the root signature does not have the D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT flag set
Graphics pipeline state object uses stream-output, but the root signature does not have the D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT flag set
Graphics tools for Windows 10 need to be installed.
GraphicsPipelineState
gXL9g(t
H A8@
H AVH
H UATAUAVAWH
h UAVAWH
h VWATAVAWH
H WATAVH
H!\$ 
H!\$ L
H!\$0H
H!\$8I
H!_(H!_0H!_8H!_@M
H!|$ E3
H!|$xE2
H!A H!A(H!A0H!A8
H!D$@H
H!D$8D
H!L$ 
H!L$ L
H!L$0H
H!x !x(
H#]0H
H#^@H
H#^0H
H#}@H
H#~@H
H#A@H
H#C@H
H#C0H
H#E@H
H#E0H
H#F@H
H#F0H
H#K0H
H#S@H
H#V@H
H;\$(t
H;\$0
H;\$H
H;\$ht
H;\$Hu
H;\$pt
H;\$xt0H;
H;^Hv
H;_Hv
H;{ H
H;{ I
H;{ t3I
H;{ thH
H;{Xt}H
H;A u
H;B t
H;C I
H;C s
H;C t
H;C@t
H;Chu
H;CPt
H;D$(u
H;D$0t=M
H;D$0u
H;D$H
H;D$P
H;H t
H;KXtXL
H;L$(t
H;O t'L
H;O@H
H;S t
H;t$P
H;t$Ps%J
H;uHv
H;VPt
H;W H
H;w tzH
H;W@t
H;W0I
H;y soH
H;z@I
H;z0I
H_^[]
h_^][
H+S@H+C H
H+T$HH
H+T$xH
H+W H
H9:t1H
H9\$8
H9{(t
H9|$@t
H9|$h
H9|$Hv$H
H9|$X
H9~ t
H9>tsH
H95[h
H9A s
H9A u{A
H9A0t
H9B8u
H9D$ t.H;
H9D$@H
H9D$@t6H;
H9D$`wEH
H9D$8H
H9D$hu
H9E(u
H9H t
H9l$hu
H9l$pu
H9oHsKH
H9P t
H9pHt
H9pPt
H9T$`w.H
H9zPt
H9zPu
hA_A^_^[]
HA_A^_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
Hardware feature level not high enough
HasDredAutoBreadcrumbsOutput
HasDredPageFaultOutput
HasHeapDump
HcA$;B$
HcD$$H
HcL$ H
HeapAlloc
heapFlags
HeapFree
HeapReAlloc
HeapType
HeapUsage
Height
hFileMapping is NULL.
hFileMapping must be 4GiB or less. hFileMapping = 0x%p, allocation size = %Iu.
hFileMapping must be a committed memory region that is not uncached. hFileMapping = 0x%p, SEC_RESERVE = %u, SEC_NOCACHE = %u.
hFileMapping must have CPU write access. hFileMapping = 0x%p.
hHwQueue
HistoryBuffer
HistoryBufferCompletion
HistoryBufferSize
hKMAdapter
hKMAllocation
hKMDevice
hKMResource
hKMTrackedWorkload
HoXO9E
hresult
hs_control_point_phase
hs_decls
hs_fork_phase
hs_join_phase
Hull Shader
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are different lengths. The signatures for both Patch Constant Data and Control Points between Hull Shader and Domain Shader must match exactly. This is a stricter requirement than the linkage between other shader stages.
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' has different System Value defined for the input vs output stages.
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' has mismatched data types between the output stage and input stage.
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' in each signature have different component masks, when they must bet identical. This is a stricter requirement than the linkage between other shader stages.
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' in each signature have different min precision levels, when they must bet identical. 
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' is always read by the Domain Shader, but never written by the Hull Shader (even though the semantic is present in its output signature).
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' is defined for mismatched hardware registers between the output stage and input stage.
Hull Shader to Domain Shader linkage error: Signatures for %s entry [%i] have different names. The Hull Shader outputs '%s', while the Domain Shader inputs '%s'.
Hull Shader to Domain Shader linkage error: Signatures for %s entry [%i] have different semantic indices. The Hull Shader outputs '%s%d', while the Domain Shader inputs '%s%d'.
hUMAdapter
hUMResource
hUMSharedResource
hwFeatureLevel_out
HwQueueProgressFenceId
I#G@H
I#G@I
I#O@H
I#w@I
I;?uGH
I;wHv
I;y0H
I;y0I
I\$@H
I<9J<s
I5yNG!
I89J8r
I9] u
I9{0t
I9E(r
I9F0r
I9I`t
I9Iht
I9IXt
I9Khs
I9OXt
IASetIndexBuffer
IASetPrimitiveTopology
IASetVertexBuffers
IcV E
ID3D12Device::CreateRootSignature: The specified root signature contains at least one descriptor range which was declared both unbounded (NumDescriptors == UINT_MAX) and static (missing D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE or containing D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS). This combination is ignored and treated as DESCRIPTORS_VOLATILE. To enable static descriptor driver optimizations or debug validation, specify a bounded descriptor table size.
ID3D12Resource: 
ID3D12VideoDecodeCommandList::DecodeFrame encountered an invalid argument.
ID3D12VideoEncodeCommandList arguments are not correct - Codecs in Encoder and EncoderHeap must be the same.
ID3D12VideoEncodeCommandList arguments are not correct - NodeMasks in Encoder and EncoderHeap must be the same.
ID3D12VideoEncodeCommandList arguments are not correct - Profiles in Encoder and EncoderHeap must be the same.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - ...PictureControlCodecData.p<Codec>PicData cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - If SelectedLayoutMode is not D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_FULL_FRAME.then FrameSubregionsLayoutData.pSlicesPartition_<codec> must be set with the associated configuration
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid pInputArguments->PictureControlDesc.Flags.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid pInputArguments->SequenceControlDesc.CodecGopSequence.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid pInputArguments->SequenceControlDesc.Flags.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid pInputArguments->SequenceControlDesc.IntraRefreshConfig.Mode.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pEncoder cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pHeap cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pInputArguments cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pInputArguments->PictureControlDesc.ReferenceFrames.ppTexture2Ds MUST ALL have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pInputArguments->pInputFrame cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pInputArguments->pInputFrame must NOT have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments->Bitstream.pBuffer cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments->EncoderOutputMetadata.pBuffer cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments->ReconstructedPicture.pReconstructedPicture cannot be null.if D3D12_VIDEO_ENCODER_PICTURE_CONTROL_FLAG_USED_AS_REFERENCE_PICTURE is set
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments->ReconstructedPicture.pReconstructedPicture MUST have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct  Target resolution must be within the associated heap allowed resolution list.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_RESOURCE_REQUIREMENTS,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_SUPPORT,...) for the given input returned failure.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_SUPPORT,...) returned the following flags ValidationFlags: 0x%x SupportFlags: 0x%x
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Intra refresh duration specified (%d). exceeds the maximum supported number of intra refresh frames duration %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Intra refresh index specified (%d). exceeds the intra refresh frames duration specified %d. IR index range is [0..IntraRefreshDuration)
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_DELTA_QP was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_QP_RANGE was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_VBV_SIZES was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode was D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_FRAME_ANALYSIS requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control reconfiguration was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Resolution reconfiguration was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Subregion layout reconfiguration was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Subregions number inferred (%d) for frame subregions mode . D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_SQUARE_UNITS_PER_SUBREGION_ROW_UNALIGNED exceeds the maximum supported number of subregions %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Subregions number inferred (%d) for frame subregions mode . D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_UNIFORM_PARTITIONING_ROWS_PER_SUBREGION exceeds the maximum supported number of subregions %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Subregions number specified (%d) for frame subregions mode . D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_UNIFORM_PARTITIONING_SUBREGIONS_PER_FRAME exceeds the maximum supported number of subregions %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - The QP Map passed in passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_<Codec>.pRateControlQPMap must have a size of ceil(FramePixelWidth/QPMapRegionPixelsSize) * ceil(FramePixelHeight/QPMapRegionPixelsSize)) where the QPMapRegionPixelsSize is reported in the support queries or the current resolution being used.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not valid - Rate control modes that use a QP map, require a non-null QP Map . passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_<Codec>.pRateControlQPMap
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - DPB descriptors for the current picture have temporal layers indices higher than the current picture temporal layer index.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - DPB descriptors have indices set in ReconstructedPictureResourceIndex out of bounds respect to ReferenceFramesReconPictureDescriptorsCount (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - adaptive_ref_pic_marking_mode_flag is set but RefPicMarkingOperationsCommandsCount or pRefPicMarkingOperationsCommands are not set correctly.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - B frame not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.MaxL0ReferencesForB or D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.MaxL1ReferencesForB are reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - IDR or I Frames must not contain references information.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - Indices in L0 or L1 lists are out of bounds, exceeding the ReferenceFramesReconPictureDescriptorsCount size.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - Number of L0 elements (%d) for P frame exceeded respect to MaxL0ReferencesForB (%d) or Number of L1 elements (%d) for P frame exceeded respect to MaxL1ReferencesForB (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - Number of L0 elements (%d) for P frame exceeded respect to MaxL0ReferencesForP (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - Number of LTR in L0/L1 lists (%d) exceeds maximum supported number of LTRs (%d) for current frame
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - P frame not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.MaxL0ReferencesForP is reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - P or B frames are not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.capMaxDPBCapacity is reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - B frame not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_HEVC.MaxL0ReferencesForB or D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.MaxL1ReferencesForB are reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - IDR or I Frames must not contain L0/L1 references information.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - IDR or I Frames must not use frame references from the DPB (Check the IsRefUsedByCurrentPic flag setting in DPB descriptor).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Indices in L0 or L1 lists are out of bounds, exceeding the ReferenceFramesReconPictureDescriptorsCount size.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Long term references detected in picture control used for this frame but not enabled in associated encoder, please see D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_ENABLE_LONG_TERM_REFERENCES.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Number of L0 elements (%d) for P frame exceeded respect to MaxL0ReferencesForB (%d) or Number of L1 elements (%d) for P frame exceeded respect to MaxL1ReferencesForB (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Number of L0 elements (%d) for P frame exceeded respect to MaxL0ReferencesForP (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Number of LTR in L0/L1 lists (%d) exceeds maximum supported number of LTRs (%d) for current frame
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Number of unique elements in L0 + L1 lists (%d) has to be exactly the same as the number of DPB entries marked as IsRefUsedByCurrentPic (%d) for current frame.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - P frame not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_HEVC.MaxL0ReferencesForP is reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - P or B frames are not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_HEVC.capMaxDPBCapacity is reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - Number of distinct reference pictures indexed from L0 and L1 lists into ReferenceFramesReconPictureDescriptorsCount exceeds maximum MaxDPBCapacity reported Current DPB size: %d Reported maximum DPB size %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - Number of reference pictures addressable by L0 and L1 lists according to caps (MaxLXReferencesForX) exceeds maximum MaxDPBCapacity reported. Max L0 size for P: %d Max L0 size for B: %d Max L1 size: %d Max number of adressable unique frames in DPB between L0 and L1 lists: %d Reported maximum DPB size %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - ReferenceFrames.NumTexture2Ds does not match with ReferenceFramesReconPictureDescriptorsCount.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - ReferenceFramesReconPictureDescriptors has (%d) entries but the selected codec supports at most (%d) entries.
ID3D12VideoEncodeCommandList::EncodeFrame arguments warning - Buffer offset access alignment for Bitstream.pBuffer specified in Bitstream.FrameStartOffset is different than advised in encoder caps. Current buffer offset: %d Required alignment reported: %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments warning - Buffer offset alignment for EncoderOutputMetadata.pBuffer specified in OutputArguments.EncoderOutputMetadata.Offset is different than advised in encoder caps. Current buffer offset: %d Required alignment reported: %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments warning - Output buffer size for EncoderOutputMetadata.pBuffer is less than advised in encoder caps. Current buffer size: %d Maximum size reported %d
ID3D12VideoEncodeCommandList::EncodeFrame encountered an error.
ID3D12VideoEncodeCommandList::EncodeFrame Failure on call to CheckFeatureSupport(D3D12_FEATURE_VIDEO_ARCHITECTURE,...).
ID3D12VideoEncodeCommandList::EncodeFrame validation failure - Error produced while validating encoder heap resolution list - HRESULT: %x.
ID3D12VideoEncodeCommandList::EncodeFrame was passed invalid arguments.
ID3D12VideoEncodeCommandList::EstimateMotion encountered and invalid argument.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not correct - pInputArguments cannot be null.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not correct - pInputArguments->HWLayoutMetadata.pBuffer cannot be null.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not correct - pOutputArguments cannot be null.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not correct - pOutputArguments->ResolvedLayoutMetadata.pBuffer cannot be null.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_CODEC,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_INPUT_FORMAT,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL,...) for the given input returned failure or profile not supported.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_RESOURCE_REQUIREMENTS,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - EncodedPictureEffectiveResolution does not satisfy the constraints specified in CheckFeatureSupport - D3D12_FEATURE_VIDEO_ENCODER_OUTPUT_RESOLUTION.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments warning - Buffer offset alignment for HWLayoutMetadata.pBuffer specified in InputArguments.HWLayoutMetadata.Offset is different than advised in encoder caps. Current buffer offset: %d Required alignment reported: %d
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments warning - Buffer offset alignment for ResolvedLayoutMetadata.pBuffer specified in OutputArguments.ResolvedLayoutMetadata.Offset is different than advised in encoder caps. Current buffer offset: %d Required alignment reported: %d
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata encountered an error.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata Failure on call to CheckFeatureSupport(D3D12_FEATURE_VIDEO_ARCHITECTURE,...).
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata was passed invalid arguments.
ID3D12VideoEncodeCommandList::ResolveMotionVectorHeap encountered and invalid argument.
ID3D12VideoProcessCommandList::ProcessFrame encountered and invalid argument.
Identifier
Identifier is reserved.
If D3D12_HEAP_FLAG_ALLOW_DISPLAY is set then the heap type may not be D3D12_HEAP_TYPE_UPLOAD or D3D12_HEAP_TYPE_READBACK.
If D3D12_HEAP_FLAG_ALLOW_DISPLAY is set, and D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is not set, and the heap type is D3D12_HEAP_TYPE_CUSTOM, then CPUPageProperty must be D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE and MemoryPoolPreference must be D3D12_MEMORY_POOL_L0 on UMA, or L1 otherwise.  CPUPageProperty is set to %s.  MemoryPoolPreference is set to %s.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set and the heap type is D3D12_HEAP_TYPE_CUSTOM, then CPUPageProperty must be D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE and MemoryPoolPreference must be D3D12_MEMORY_POOL_L0.  CPUPageProperty is set to %s.  MemoryPoolPreference is set to %s.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set then D3D12_HEAP_FLAG_SHARED must be set also.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set then ResourceDesc.MipLevels must be 1.  ResourceDesc.MipLevels is %u
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set then the heap type may not be D3D12_HEAP_TYPE_UPLOAD or D3D12_HEAP_TYPE_READBACK.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set then the resource layout must be either D3D12_TEXTURE_LAYOUT_ROW_MAJOR or D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE.
If no count buffer is specified, the count buffer offset must be 0.
If stereo is not enabled, then D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[1] must have a nullptr for pTexture2d and have the Subresource set to 0.
If the source resource D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set, the destination resource D3D12_RESOURCE_DESC::Flags must also have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set, and vice versa.
If the source resource D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set, the destination resource D3D12_RESOURCE_DESC::Flags must also have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set, and vice versa.
If the source resource has a protected resource session, the destination resource must have a protected resource session.
IFCEH
IFCEI
ILDBH
ILDBI
Image
image
imm_atomic_alloc
imm_atomic_and
imm_atomic_cmp_exch
imm_atomic_consume
imm_atomic_exch
imm_atomic_iadd
imm_atomic_imax
imm_atomic_imin
imm_atomic_or
imm_atomic_umax
imm_atomic_umin
imm_atomic_xor
Immutable Heap: Placed Resource (many placed resources can be immutably joined with a fully created heap)
Immutable Resource: Placed texture on a reserved buffer which is page-mapped to one or more heaps, or nothing at all.
ImmutableBufferOffset
ImmutableHeapOffset
Implicit Heap: Committed Resource
Implicit Resource: An API Heap.
ImplicitMultiGPU
implicitPhysicalAdapterMask
Index
Index buffer cannot be defined more than once.
Index buffer changes are only allowed when the command signature contains a parameter of type D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED.
Index7Bits
InitD3DDriverVerifier2
InitializeCriticalSectionEx
InitializeExtensionCommand
InitializeMetaCommand
InitializeSListHead
Input
Input Assembler
InputFormat
InsertionAPISequenceNumber
InstanceThunks
InterlaceFormat
Internal runtime error validating %s stage in a PSOs used with view instancing.
InternalName
intersection
invalid bitset position
Invalid Buffer SRV Flags combination: (%#x)
Invalid Buffer.Flags. 
Invalid compatibility flags provided to ID3D12CompatibilityDevice::CreateSharedHeap.
Invalid compatibility flags provided to ID3D12CompatibilityDevice::CreateSharedResource.
Invalid Content Protection Resources options reported, using default
Invalid Content Protection Streaming options reported, using default
Invalid D3D12_PROTECTED_RESOURCE_SESSION_FLAGS specified
Invalid D3D12_VIDEO_DECODE_ARGUMENT_TYPE: %d
Invalid D3D12DDI_VIDEO_DECODE_CONFIGURATION_FLAG reported by driver.
Invalid D3D12DDI_VIDEO_DECODE_SUPPORT_FLAG reported by driver.
Invalid data size specified (%u). Expected %u for reflection property %u.
Invalid decoder dimensions specified.
Invalid DepthBiasClamp value: %f
Invalid flags reported in D3D12DDICAPS_TYPE_0030_PROTECTED_RESOURCE_SESSION_SUPPORT::Support.
Invalid flags specified.
Invalid ForcedSampleCount value: %d.  Valid value(s) on this device: 0%s.
Invalid format specified (%s) for sharing with D3D11. To check if a format is valid, query a D3D11 device for D3D11_FORMAT_SUPPORT2_SHAREABLE.
invalid hash bucket count
Invalid index buffer properties.
Invalid InputFieldType specified.  Enum value %d is not a valid D3D12_VIDEO_FIELD_TYPE.
Invalid InputSample ColorSpace specified.  Enum value %d is not a valid DXGI_COLOR_SPACE.
Invalid InputSample dimensions specified.  Width cannot be 0 or exceed %d.  Height cannot be 0 or exceed %d.  InputSample.Width = %d, InputSample.Height = %d
Invalid InputStereoFormat specified.  Enum value %d is not a valid D3D12_VIDEO_FRAME_STEREO_FORMAT.
Invalid InterlaceType specified.
Invalid measurements action provided.
Invalid mode provided.
Invalid mode specified. Must be either MEMORY or DISK.
Invalid operation type.
Invalid OutputFormat ColorSpace specified.  Enum value %d is not a valid DXGI_COLOR_SPACE.
Invalid OutputStereoFormat specified.  Enum value %d is not a valid D3D12_VIDEO_FRAME_STEREO_FORMAT.
Invalid primitive topology type.
Invalid query heap type.
Invalid queue flags specified.
Invalid queue priority specified.
Invalid queue type specified.
Invalid SlopeScaledDepthBias value: %f
invalid string position
Invalid subresource index.
invalid unordered_map<K, T> key
Invalid vertex buffer slot.
Invalid Video options reported, using default
InvalidateCache
ion called with an invalid SDKPaSetSDKConfigurat
IsApiSetImplemented
IsDebuggerPresent
IsDeveloperModeEnabled
ISG1H
Isn?Z9-
IsoLine
IsProcessorFeaturePresent
It is invalid to call SetProtectedResourceSession on a command list when the command list has outstanding BeginQuery.  Call EndQuery before SetProtectedResourceSession.
It is invalid to specify pOptimizedClearValue when D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY.
It is invalid to specify pOptimizedClearValue when D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY.
J<A9H<s
J>f;O
J2L2N
jFtg)]
JlD9JXv>H
JournalEntries
JournalEntry
K SUVWAVH
K SVWH
k VWAVH
K(9K 
k[JE%
K<9K4
K0H;H
K32GetModuleInformation
k9S<ufH9SPu`9S@u[9SDuVH9SXuPH9S`uJH
Kernel memory failure. Device reset.
KernelBase.dll
kernelbase.dll
kernelDeviceExecutionState
kKb4b=
KXH!8
KXH;K`
kz#+c
L!L$@
L#E@M
L#E0M
L#F@M
L#K@M
L#V@H
L#V@M
L#V0M
L#W0M
L$ A;
L$ E2
L$ E3
l$ E3
L$ E3
L$ fA
L$ H3
L$ SH
L$ SUVWH
L$ SVW
L$ SVWAVH
L$ SVWH
L$ SW
L$ UH
L$ UVWATAUAVAWH
L$ UVWAVAWH
L$ UVWH
L$ VWATAUAVAWH
l$ VWATAUAVH
l$ VWATAVAWH
L$ VWATAVAWH
l$ VWAUAVAWH
l$ VWAVH
l$(E3
l$(H;
L$(H3
L$(L+
L$@E3
l$@E3
L$@H;H
L$@H3
l$@I;
L$@I+
L$@L!
l$@M#
L$`D;
L$`D+
L$`D8
L$`D9
L$`E3
L$`H3
l$`L#
L$`L+
l$|A;
L$|D;
L$<E3
L$0D;
L$0E3
L$0fD
L$0H;
L$0H+
L$0H3
L$8A;
L$8E3
L$8H3
L$8t:H
L$dD;L$`
L$dE3
L$DH!L$XA
L$h@8
l$HA_A^A]A\_^
L$hE3
L$HE3
L$HH;
L$hH+
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hI;
l$hI+
l$HM#
L$lD;
L$LE3
L$P!|$p
L$pA;
L$PC;
l$pD;d$T
L$PD;s
L$pD8
L$PD8
L$PD99
L$pE3
L$pH;
l$PH;
L$PH;
l$PH;_
L$PH+
L$pH+
L$pH3
L$PH3
L$pH3
L$PH3
L$PIk
l$pL#
L$PLk
L$PM;
L$x=z
L$XA9|$p
L$XD;
L$XD;k`
L$XD+
L$XE3
L$xE3
L$XE3
l$xH;
L$xH;
L$XH+
L$xH+
L$XH3
L$xH3
L$XH3
L$XH9
L$XH9L$`taL
L$xI;
L$XI+
L$XL;
L$XL;S0t
L$XL+
L;|$Pt
L;A s
L;d$pt
L;d$xt
L;E u
L;I r_I
L;l$xt
L;L$Xt7A
L;q sZH
L;t$H
L;t$Ht%H
L;t$Ht=D
L;t$Xt)H
L;u I
L;V0t
L~s!w
L16_UNORM
L3D$8M
L3L$8M
L8_UNORM
L8A8_UNORM
L9@ s
L9@ t
L9@Ht
L9@Pt
L9`Ht
L9{(@
L9{(A
L9{8A
L9{Hu
L9A s
L9b t
L9gHt
L9H t
L9h t
L9j t
L9j8t
L9K8u
L9KPu
L9l$`t
L9O@t
L9P s
L9P`t
L9Q0t
L9t$pA
L9T$Xt
label
LastBreadcrumbValue
Layout
Lc[ D
ld_raw
ld_raw_s
ld_structured
ld_structured_s
ld_uav_typed
ld_uav_typed_s
ldms_s
LeaveCriticalSection
LegalCopyright
LEVL8
LifetimeTracker
list too long
LL&Ru-
lntdll.dll
LoadLibraryA
LoadLibraryExW
LoadLibraryW
LoadUMD
Local root signatures only support shader visibility flag D3D12_SHADER_VISIBILITY_ALL.  ShaderVisibility value: %u (root parameter [%u]).
Local root signatures only support shader visibility flag D3D12_SHADER_VISIBILITY_ALL.  ShaderVisibility value: %u (static sampler [%u]).
Local\SM0:%lu:%lu:%hs
LocalFree
Lock2
Log Always
LogHr
LogicOp[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_LOGIC_OP.
LogicOpEnable and BlendEnable cannot both be set to true.
LogicOpEnable and IndependentBlendEnable cannot both be set to true.
LogicOpEnable cannot be set true on the current device.
LogNt
LookupPrivilegeValueA
LoopIteration
M H1E
M#}0H
M#}0M
M#t$0M
M#u0H
M#u0M
M%<]\eh
M;}PI
M;Epv
M;K r
M@D8iL
M0K0I
M9,$I
M9H s,I
MachineGuid
MakeResident
MakeResident/ReclaimResources failed with E_PENDING, but WaitMask was set to 0.
Map and Unmap can not be called on a resource associated with a heap that has the CPU page properties of D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE. Heaps of the type D3D12_HEAP_TYPE_DEFAULT should be assumed to have these properties.
Map and Unmap can not be called on a resource created with the CreateReservedResource API. The CPU page mapping is not kept in-sync with the GPU tile mapping configuration.
map/set too long
MapGpuVirtualAddress
MAPS(
MapViewOfFile
Marker
Marker Log Type None
Marker Log Type Profile
MarkerAPI
MarkerDescription
MarkerLogType
Markers
MaxAnisotropy must be in the range [%d to %d].  %d specified.
MaxDecodePictureBufferCount
MaxGPUVirtualAddressBitsPerResource error
MaxHeightInBlocks
MaximumInMemoryCacheEntries
MaximumInMemoryCacheSizeBytes
MaximumValueFileSizeBytes
MaximumValueFileSizeBytes must be less than 1GiB (%u), %u specified. Use 0 to use the default value.
MaxLOD be in the range [-INF to +INF].  %f specified.
MaxWidthInBlocks
MDLNxx
memchr
memcmp
memcpy
memmove
MemoryPoolPreference
memset
Mesh Shader
Mesh shader stage validation metadata required for PSOs used with view instancing is missing or invalid.
Message
message
messageId
metaCommand
MetaCommand
Metadata
MHD8f`
Microsoft
Microsoft (R) HLSL Shader Compiler 10.0.10011.0
Microsoft (R) HLSL Shader Compiler 6.4.9840.0
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1&0$
Microsoft Corporation1.0,
Microsoft Corporation1-0+
Microsoft Corporation1200
Microsoft Time-Stamp PCA 2010
Microsoft Time-Stamp PCA 20100
Microsoft Time-Stamp Service
Microsoft Time-Stamp Service0
Microsoft Windows0
Microsoft.Windows.Graphics.D3D12
Microsoft.Windows.Graphics.D3D12Dred
Microsoft-Windows-Direct3D12
Microsoft-Windows-Direct3D12/Analytic
Microsoft-Windows-Direct3D12/Logging
Microsoft-Windows-Direct3D12/PerfTiming
MIN or MAX are invalid for BlendOp when Dual-Source blending.
MIN or MAX are invalid for BlendOpAlpha when Dual-Source blending.
MinHeightInBlocks
MINIMUM or MAXIMUM filters not supported by the device. To see if the device supports this call CheckFeatureSupport with D3D12_FEATURE_D3D12_OPTIONS and check for TiledResourcesTier support of Tier 2+.
MinLOD be in the range [-INF to +INF].  %f specified.
MinWidthInBlocks
MipLevels
MipLODBias must be in the range [%f to %f].  %f specified.
Mismatch between suspending and resuming Render Pass Depth Stencil desc.
Mismatch between suspending and resuming Render Pass flags.
Mismatch between suspending and resuming Render Pass Render Target desc at index %u.
Mismatched Control Point counts. Current Hull Shader defines output Control Point count per patch of %d, but the current Domain Shader expects Control Point count of %d.
Mismatched Tessellator Domain. Current Hull Shader declares %s domain, but Domain Shader declares %s domain.
Mismatched topology. The Rasterization Unit has Conservative Rasterization enabled (D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON is set), and primtive type at the Rasterizer is not compatibile (only triangles are compatible). The last stage before the Rasterizer (%s) sets the following primitive type: %s
mJ@4!
More than 32 nodes are exposed at the API
MostRecentApplication
Motion Estimator creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES indicates protected resources are not supported. hr = 0x%x
Motion Vector Heap creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES indicates protected resources are not supported. hr = 0x%x
MotionEstimationPrecision
MPeY-E
MS is not compatible with legacy Input Layout
MS specified with StreamOutput
MSAA quality for parent != child
MSAA quality reported to be 0
Msg:[%ws] 
msvcp_win.dll
MultiByteToWideChar
Must pass nonzero flags for both cache kinds and control.
N ;O u:3
n)-|q
N`E;~
N~yfHZAH
N0H;N
N0L0J
N9,X 
Names
neither VS, CS nor MS specified
NewCookieDurationInDays
NewCookieNumTries
NewDebugObjectName
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
No nodes are exposed at the API
No render target or depth-stencil formats are specified.  Sample count must be 0 or 1, sample quality must be 0.
No Root Signature found in the pipeline desc or in any bound Shader bytecode
No vertex shader or mesh shader specified.
No vertex shader specified.
Node mask mismatch between bundle and command list.
Node mask mismatch between command list and command queue.
Node mask mismatch between command signature and command list.
Node mask mismatch between compute root signature and command list.
Node mask mismatch between descriptor heap and command list.
Node mask mismatch between graphics root signature and command list.
Node mask mismatch between pipeline state and command list.
Node mask mismatch between protected resource session and command list.
Node mask mismatch between query heap and command list.
Node mask mismatch between state object and command list.
Node mask mismatch between tracked workload and command list.
NodeMask
Nonzero values for sampler feedback mip region were used, but the resource format does not support sampler feedback.
nS`;)
nSStI
Ntdll.dll
ntdll.dll
ntelA
NtQueryObject
NtQuerySection
NtQueryWnfStateData
NtUpdateWnfStateData
NULL pointer specified.
NumArgumentDescs
NumDescriptors
NumDescriptors cannot be 0 (descriptor table slot [%u], root parameter [%u]).
NumDescriptors=
NumExtendedFeatures
NumFeatures
NumKMTInfos
NumPackedMips
NumReferences
NumRefPicListEntries
NumRenderTargets varies between the suspending and resuming render passes.
NumTilesForPackedMips
NumTilesForResource
NumVirtualAddressInfos
O#T7d$X
o#Z+$
o\$PH
O0M0K
O9n v/H
Object provided does not have a non-NT shared handle.
Object provided is not shared.
Object provided was not a resource.
ObjectLifetime
oD$ f
OfferAllocations
Offset
OhrEnableResult
oL$0f
OldDebugObjectName
OMSetBlendFactor
OMSetDepthBounds
OMSetRenderTargets
OMSetStencilRef
On a device with Tier 1 Tiled Resources support, Tiled Resources cannot be created with both more than one array slice and any mipmap that has a dimension not a multiple of a tile in extent. For the Tiled Resource being created, Mip [%u] has (width=%u, height=%u) while the tile dimension for the given format is (width=%u, height=%u). 
On a device with Tier 2 & 3 Tiled Resources support, Tiled Resources cannot be created with both more than one array slice and any mipmap that has a dimension less than a tile in extent. For the Tiled Resource being created, Mip [%u] has (width=%u, height=%u) while the tile dimension for the given format is (width=%u, height=%u). Hardware support in this area was not able to be standardized in time to be included in D3D.
One of the COMMAND_INFO returned from D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS reported a non-Video D3D12DDI_COMMAND_QUEUE_FLAG.
One of the COMMAND_INFO returned from D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS reported CommandQueueFlags that do not match the registered CommandQueueFlags.
One of the COMMAND_INFO returned from D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS reported GUID_NULL.
One of the COMMAND_INFO returned from D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS reported more than one D3D12DDI_COMMAND_QUEUE_FLAG.
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\Staging.h
Only 8 swapchains can be written to by a single command list.
Only Committed Resources, Heaps, Fences, or Protected Sessions can have a shared handle. pObject points to none of these DeviceChild types.
OpenAdapter12
OpenAdapterFromLuid
OpenExistingHeap is only supported when all the pages in the heap have the same access protection. Protection for the page starting at 0x%p was %I32u, did not match the base page protection %I32u
OpenExistingHeap is only supported when all the pages in the heap have the same state. State for the page starting at 0x%p was %I32u, did not match the base page state %I32u
OpenExistingHeap is only supported when D3D12_FEATURE_DATA_EXISTING_HEAP::Supported is TRUE. 
OpenKeyedMutex
OpenNtHandleFromName
OpenProcessToken
OpenProtectedSessionFromNtHandle
OpenResource
OpenResourceNtHandle
OpenSemaphoreW
OpenSyncObject
OpenSyncObjectFromNtHandle2
OpenSyncObjectNtHandleFromName
OriginalFilename
OSfM^
OSG14
OSG1H
OSGN,
oT$@f
ot$0H
OutputDebugStringA
OutputDebugStringW
OutputSubresource
Overflow added Num32BitValuesToSet (%u) to DestOffsetIn32BitValues (%u)
Overflow for descriptor range (descriptor table slot [%u], root parameter [%u])
Overflow for shader register range: BaseShaderRegister=%u, NumDescriptor=%u; (descriptor table slot [%u], root parameter [%u]).
p AWH
p H+p
p T~C
P u6E
p UWAVH
p WATAUAVAWH
p"U^>
p"Y:'
p%sBox was empty, but probably was not intended. The resulting behavior is well-defined to result in no copy. The left, top, and front coordinates must be less then the corresponding right, bottom, and back coordinates to avoid specifying an empty box. left is %u, right is %u, top is %u, bottom is %u, front is %u, and back is %u.
p)P2=.
p:_0#
p:X\=
p:ZT_
p;Tt_
P@u0E
p\cfQ
p`H9p0t
P`u*E
p`W2d
p{\V(7-
P+^?[
p+V~D/X
p+Y:`
p08z0
p1\6y
p1X\|
pA\_]
PA^_^
pA^_^[]
PA^_^][
pA^A]A\_^[]
PA_A^_^]
pA_A^_^]
PA_A^_^]
PA_A^A\_^
pA_A^A\_^][
PA_A^A\_^][
pA_A^A\_^][
PA_A^A\_^][
pA_A^A]_^
PA_A^A]_^][
PA_A^A]A\_^[
pA_A^A]A\_^[
PA_A^A]A\_^[
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]H
pAddress is NULL.
pAddress must be equal to the base address of an allocated memory region. pAddress = 0x%p, base address containing pAddress = 0x%p.
pAddress must point to a committed memory region. pAddress = 0x%p, region address = 0x%p, region size = %Iu, MEM_RESERVE = %u, MEM_FREE = %u.
pAddress must point to a memory region that can be written without PAGE_NOCACHE. pAddress = 0x%p, region address = 0x%p, region size = %Iu, writeable = %u, PAGE_NOCACHE = %u.
pAddress must point to a memory region that is 4GiB or less. pAddress = 0x%p, allocation size = %Iu.
PartA_PrivTags
Pass experiment DDI table retrieval failed due to out of memory.
Pass experiment DDI table retrieval failed.
passExperiment
Patch Constant Data
pbT<)&
pC_r9
pCommandList
pCommandQueue
pcPZt
PD;d$0
pDesc is NULL!
pDXGKFence
pExtendedFeatures
pfnCreateDevice
PFND3D12DDI_CREATE_PROTECTED_SESSION_CB_0030 called more than once for hRTProtectedSession.
PFND3D12DDI_GET_SUPPORTED_EXTENDED_FEATURES_0020 returned an invalid D3D12DDI_FEATURE_0020.
PFND3D12DDI_VIDEO_GET_BITSTREAM_ENCRYPTION_SCHEME_COUNT_0020 must report support for at least D3D12_VIDEO_DECODE_BITSTREAM_ENCRYPTION_NONE.
PFND3D12DDI_VIDEO_GET_BITSTREAM_ENCRYPTION_SCHEME_COUNT_0020 reported an unrecognized bitstream encryption.
PFND3D12DDI_VIDEO_GET_BITSTREAM_ENCRYPTION_SCHEME_COUNT_0020 reported zero bitstream encryption schemes.  It must support at least D3D12_VIDEO_DECODE_BITSTREAM_ENCRYPTION_NONE.
PFND3D12DDI_VIDEO_GET_DECODE_FORMAT_COUNT_0020 must report at least one format for supported decode profile and encryption guid pairs when using D3D12_VIDEO_FRAME_CODED_INTERLACE_FORMAT_NONE .
PFND3D12DDI_VIDEO_GET_DECODE_PROFILE_COUNT_0020 returned no supported profiles.
pFutureSubresources
pHandle cannot be NULL.
pHeap
pHeap is NULL!
pHeapProperties is NULL!
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
PhysicalAdapterIndex
pID3D12CommandAllocator
pID3D12CommandList
pID3D12CommandPool
pID3D12CommandQueue
pID3D12CommandRecorder
pID3D12CommandSignature
pID3D12ConjoinedResource
pID3D12Decoder
pID3D12DescriptorHeap
pID3D12Device
pID3D12DeviceContext
pID3D12Fence
pID3D12GraphicsPipelineState
pID3D12Heap
pID3D12LifetimeTracker
pID3D12MetaCommand
pID3D12OutputTexture2D
pID3D12PipelineLibrary
pID3D12ProtectedResourceSession
pID3D12QueryHeap
pID3D12Resource
pID3D12RootSignature
pID3D12SchedulingGroup
pID3D12StateObject
pID3D12TrackedWorkload
pID3D12VideoDecoder
pID3D12VideoDecoderHeap
pID3D12VideoEncoder
pID3D12VideoEncoderHeap
pID3D12VideoExtensionCommand
pID3D12VideoMotionEstimator
pID3D12VideoMotionVectorHeap
pID3D12VideoProcessor
pImmutableBuffer
PinResources
pinResources
PipelineLibrary
pIX2m
PIXEL
Pixel Shader
Pixel Shader is using SV_InnerCoverage system value while the Rasterization Unit has Conservative Rasterization disabled (D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF is set). SV_InnerCoverage is only valid with Conservative Rasterization enabled.
Pixel Shader output '%s%d' has float type, while the corresponding RenderTarget slot [%d] has format (%s) with component(s) of signed or unsigned integer type.  This happens to be well defined: the raw bits output from the shader starting from the least significant bit will simply be dumped to the output storage without any data conversion. This warning is to check that the application developer really intended to rely on this behavior.
Pixel Shader output '%s%d' has signed integer type, while the corresponding RenderTarget slot [%d] has component(s) of some other type.  This happens to be well defined: the raw bits output from the shader starting from the least significant bit will simply be dumped to the output storage without any data conversion. This warning is to check that the application developer really intended to rely on this behavior.
Pixel Shader output '%s%d' has type that is NOT float, while the corresponding Output Merger RenderTarget slot [%d] has blending enabled.  This happens to be well defined: the raw bits output from the shader will simply be interpreted as float bits in the blender without any data conversion.  This warning is to check that the application developer really intended to rely on this behavior.
Pixel Shader output '%s%d' has type that is NOT unsigned int, while the corresponding Output Merger RenderTarget slot [%d] has logic op enabled.  This happens to be well defined: the raw bits output from the shader will simply be interpreted as UINT bits in the blender without any data conversion.  This warning is to check that the application developer really intended to rely on this behavior.
Pixel Shader output '%s%d' has unsigned integer type, while the corresponding RenderTarget slot [%d] has component(s) of some other type.  This happens to be well defined: the raw bits output from the shader starting from the least significant bit will simply be dumped to the output storage without any data conversion. This warning is to check that the application developer really intended to rely on this behavior.
Pixel Shader output '%s%d' is writing to %d components, while the corresponding RenderTarget slot [%d] has format (%s) with %d component(s). This results in undefined contents in the unwritten channels of the render target.
Pixel Shader with sample-frequency execution cannot be used with RenderTarget or DepthStencil that has a CENTER multisample pattern and more than one sample.
pIY:j/
pKMTInfos
Placed 
PlacedAlignment
PlacedSize
PlaneCount
pObject
pObject cannot be NULL.
pObject points to a committed resource or a heap that was not created with the D3D12_HEAP_FLAG_SHARED flag.
pObject points to a fence that was not created with the D3D12_FENCE_FLAG_SHARED flag.
pObject points to a resource that is not a committed resource. Only committed resources can have a shared handle.
Pointer %I64u is incorrectly aligned.  Device requires alignment be a multiple of %u.
pOptimizedClearValue must be NULL when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
pOptimizedClearValue must be NULL when D3D12_RESOURCE_DESC::Dimension is not D3D12_RESOURCE_DIMENSION_BUFFER and neither D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET nor D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL are set in D3D12_RESOURCE_DESC::Flags.
Post processing operations are not supported in D3D12 Video.
pPastSubresources
ppFutureFrames
ppHeaps
ppPastFrames
ppTexture2Ds
pQ_Z>
pQ-kk
pr]XV
pReadRange
Precision
Predication is not supported by this command list type.
Predication resource must be a buffer.
pReferenceTexture2D
Present
PresentCount
pResourceDesc is NULL!
Priority
PrivilegeCheck
ProcessFrames
ProcessFrames1
ProcessInfo
ProductName
ProductVersion
ProtectedResourceSession
prPv`
PRVAP
prZPP
pS^\w
PSG1H
pSrcBox was empty, but probably was not intended. The resulting behavior is well-defined to result in no copy. The left, top, and front coordinates must be less then the corresponding right, bottom, and back coordinates to avoid specifying an empty box. left is %u, right is %u, top is %u, bottom is %u, front is %u, and back is %u.
pSrcRect.left = %u and pSrcRect.right = %u, and left must be less than right
pSrcRect.top = %u and pSrcRect.bottom = %u, and top must be less than bottom.
pSubresources
PSV08
PSV0f
PSV0H
PSV0L
PSV0P
pThis
pUJ1P
pVirtualAddressInfos
pWrittenRange
pXH9p(t
py]rB
pYTt}
pZ]<w?
pZ_rG
q T~C
q!W2m
q"Tpq
q(\<~
q)Tp/
Q*\j,
q:_0#
q;Tt_
q[P4v
q[Tt=>
q\Q17
q`W2d
q{\V(7-
q{W<0
q+V~D/X
q0R^G'
q1\6y
q1X\|
q3ZVO
q9^r%
q9Y|U
QAI (CHECKDRIVERUPDATESTATUS)
QAI (UMDRIVERNAME)
qAQ:b
qAQZ`
qB]p9>5
qbT<)&
qc\^C'L
qC_r9
qcPZt
qCY6n
qH!.R
qHT6J/
qIX2m
qIY:j/
qj^:k
qK^|(
qkT^w
qKZ\d'
qND9r
qP[\=
qp]6N
qpZ<X>
qq\PU
qqX<*?
qrPv`
qS]Ry
qS^\w
Q-Si(
qsXvW
Query count must be greater than 0.
Query index is out of range.
Query type does not match query heap type.
QueryAdapterInfo
QueryAdapterInfo (KMTQAITYPE_ADAPTERTYPE)
QueryAdapterInfo (KMTQAITYPE_CROSSADAPTERRESOURCE_SUPPORT)
QueryAdapterInfo (KMTQAITYPE_DIRECTFLIP_SUPPORT)
QueryAdapterInfo (KMTQAITYPE_DRIVERVERSION)
QueryAdapterInfo (KMTQAITYPE_PHYSICALADAPTERCOUNT)
QueryAdapterInfo (KMTQAITYPE_PHYSICALADAPTERDEVICEIDS)
QueryAdapterInfo (KMTQAITYPE_QUERY_GPUMMU_CAPS)
QueryAdapterInfo (KMTQAITYPE_WDDM_2_0_CAPS)
QueryAdapterInfoCb
QueryAllocationResidency
QueryClockCalibration
QueryHeap
QueryPerformanceCounter
QueryPerformanceFrequency
QueryProtectedSessionStatus
QueryResourceInfo
QueryResourceInfoFromNtHandle
QuerySection on hFileMapping failed. hFileMapping = 0x%p.
QuirkIsEnabled
qX[XQ
qxRv 6
qxTvI
qXXVw'
qy]rB
qYTt}
qZ]<w?
QZ^&E
qZ^|;'
qZ_rG
R u7D
R!s4Z
r*;=P
R@u1D
R`u+D
r+w2L;
R1_UNORM
R10G10B10_6E4_A2_FLOAT
R10G10B10_7E3_A2_FLOAT
R10G10B10_XR_BIAS_A2_UNORM
R10G10B10A2_TYPELESS
R10G10B10A2_UINT
R10G10B10A2_UNORM
R10G10B10A2_UNORM_SRGB
R10G10B10X2_SNORM
R10G10B10X2_UINT
R11G11B10_FLOAT
R16_FLOAT
R16_SINT
R16_SNORM
R16_TYPELESS
R16_UINT
R16_UNORM
R16_UNORM_X8_TYPELESS
R16G16_FLOAT
R16G16_SINT
R16G16_SNORM
R16G16_TYPELESS
R16G16_UINT
R16G16_UNORM
R16G16B16A16_FLOAT
R16G16B16A16_SINT
R16G16B16A16_SNORM
R16G16B16A16_TYPELESS
R16G16B16A16_UINT
R16G16B16A16_UNORM
R24_UNORM_X8_TYPELESS
R24G8_TYPELESS
R32_FLOAT
R32_FLOAT_X8X24_TYPELESS
R32_SINT
R32_TYPELESS
R32_UINT
R32G32_FLOAT
R32G32_SINT
R32G32_TYPELESS
R32G32_UINT
R32G32B32_FLOAT
R32G32B32_SINT
R32G32B32_TYPELESS
R32G32B32_UINT
R32G32B32A32_FLOAT
R32G32B32A32_SINT
R32G32B32A32_TYPELESS
R32G32B32A32_UINT
R32G8X24_TYPELESS
R8_SINT
R8_SNORM
R8_TYPELESS
R8_UINT
R8_UNORM
R8G8_B8G8_UNORM
R8G8_SINT
R8G8_SNORM
R8G8_TYPELESS
R8G8_UINT
R8G8_UNORM
R8G8B8A8_SINT
R8G8B8A8_SNORM
R8G8B8A8_TYPELESS
R8G8B8A8_UINT
R8G8B8A8_UNORM
R8G8B8A8_UNORM_SRGB
R9G9B9E5_SHAREDEXP
RaiseFailFastException
Rasterization Unit is enabled (PixelShader is not NULL or Depth/Stencil test is enabled and RasterizedStream is not D3D12_SO_NO_RASTERIZED_STREAM) but Patch Control Points are output from the Geometry Shader.
Rasterization Unit is enabled (PixelShader is not NULL or Depth/Stencil test is enabled and RasterizedStream is not D3D12_SO_NO_RASTERIZED_STREAM) but position is not provided by the last shader before the Rasterization Unit.
Rasterization Unit is enabled (PixelShader is not NULL or Depth/Stencil test is enabled and RasterizedStream is not D3D12_SO_NO_RASTERIZED_STREAM) but the input topology type is patch.  You need either a Hull Shader and Domain Shader, or a Geometry Shader.
Rasterizer State MultisampleEnable cannot be set to TRUE when drawing lines to a RenderTarget or DepthStencil that has a CENTER multisample pattern and more than one sample.
raytracingPrototype
RD11<
RDATH
RDEFl
RDEFL
RDescs is too large. The value is %u, and it must be less than or equal to %u.
ReadFromSubresource
reasonHR
ReclaimAllocations2
Redmond1
Reference
Reference Decoder Heaps
ReferenceSubresource
ReferenceTexture2Ds
RefPicList
RegCloseKey
RegEnumKeyExA
RegGetValueW
RegNotifyChangeKeyValue
RegOpenKeyExA
RegOpenKeyExW
RegQueryValueExA
ReleaseKeyedMutex
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
RemoveCommandList
RemoveDevice
Removing Command List: %s
Removing device due to bad UMD error.
Removing device due to driver error.
Removing device due to driver-reported app error.
Removing device.
Render
Render Pass DDI table retrieval failed due to out of memory.
Render Pass DDI table retrieval failed.
RenderCbSequence
RenderOperationMarkers
renderPass
RenderTargetWriteMask[ %d ] can only have the least significant 4 bits set. Value provided is 0x%x.
ReportRetailValidationError error
RequireSDKLayers
Reserved 
Reserved fields in D3D12DDI_ALLOCATION_INFO_0022 were not zero.
Reserved flags given to AllocateCb
Reserved flags given to CreateContextCb
Reserved flags given to CreateContextCb or CreateContextVirtualCb
Reserved flags given to CreateHwQueueCB
Reserved flags given to CreateSynchronizationObject2Cb
Reserved flags given to EscapeCb
Reserved flags given to LockCb
Reserved flags given to RenderCb
Reserved flags given to SignalSynchronizationObject2Cb
Reserved flags given to SignalSynchronizationObjectCb
Reserved flags given to SubmitCommandToHwQueueCb
Reserved Resource: Page-mapped to one or more heaps, or nothing at all.
Reserved resources cannot be created on a device that does not support tiled resources. CheckFeatureLevel with D3D12_FEATURE_D3D12_OPTIONS indicates D3D12_FEATURE_DATA_D3D12_OPTIONS::TiledResourcesTier is %s.
ReserveGpuVirtualAddress
ResetEvent
ResetTrackedWorkloadStatistics
resinfo
ResolveDelayLoadedAPI
ResolveEncoderOutputMetadata
ResolveMotionEstimatorData
ResolveMotionVectorHeap
ResolveQueryData
ResolveSubresource
ResolveSubresourceRegion
Resource
Resource provided was not shared by D3D11, or with a D3D11 desc.
ResourceBarrier
Resources
Resources cannot be transitioned into state D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE.
Resources in state D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE cannot be transitioned to another state.
Resources in the D3D12_RESOURCE_STATE_RESOLVE_DEST state must have SampleCount = 1, unless programmable MSAA hardware tier 1 or greater is supported.
Resources in the D3D12_RESOURCE_STATE_RESOLVE_SOURCE state must have SampleCount > 1.
Resources with either DXGI_SAMPLE_DESC::Count greater than 1 or that use D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL can only copy the entire subresource at a time, where the subresource dimensions must match. DstX, DstY, and DstZ must be 0. The source subresource %u samples. The destination subresource has %u samples. DstX is %u, DstY is %u, and DstZ is %u.
Resources with either DXGI_SAMPLE_DESC::Count greater than 1 or that use D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL can only copy the entire subresource at a time, where the subresource dimensions must match. pSrcBox must be NULL, or specify the entire subresource. The source subresource %u samples. The destination subresource has %u samples. pSrcBox left is %u, top is %u, front is %u, and all must be 0; right is %u, bottom is %u, and back is %u. But, the source subresource has %u width, %u height, and %u depth.
Resources with either DXGI_SAMPLE_DESC::Count greater than 1 or that use D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL can only copy the entire subresource at a time, where the subresource dimensions must match. The source subresource has %u height, %u width, %u depth, and %u samples. The destination subresource has %u height, %u width, %u depth, and %u samples.
ResumeTrackedWorkload
Resuming Render Pass contains depth buffer, but suspending Render Pass does not.
RetrieveVerifierInterface
ReturnHr
ReturnNt
rJfD9?w
Root constant changes must change at least 1 value.
Root descriptor flags cannot specify more than one DATA_* flag at a time (root descriptor flags %x).
Root descriptors created at D3D_FEATURE_LEVEL_1_0_CORE must not use sampler descriptor ranges.
Root parameter [%u] descriptor table entry [%u] specifies RegisterSpace=%#x, which is invalid since RegisterSpace values in the range [%#x,%#x] are reserved for system use.
Root parameter [%u] specifies RegisterSpace=%#x, which is invalid since RegisterSpace values in the range [%#x,%#x] are reserved for system use.
Root parameter {slots, offset} must be increasing.
Root parameter index (%u) exceeds number of parameters (%u) in the root signature.
Root parameter slot (%u) is of the wrong parameter type.  Expected %s.
Root parameter slot (%u) was declared to hold (%u) constants.  The command signature expects a minimum size of (%u).
Root parameter slot (%u) was not declared to hold constants.
Root Signature declares %d CBVs total across all parameters%s. This number cannot exceed %d for a %s level device.
Root Signature declares %d Samplers total across all parameters%s. This number cannot exceed %d for a %s level device.
Root Signature declares %d SRVs total across all parameters%s. This number cannot exceed %d for a %s level device.
Root Signature declares %d UAVs total across all parameters%s. This number cannot exceed %d for a %s level device.
Root Signature flag D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE can only be set on devices that support raytracing.
Root signature of %s doesn't match the root signature of %s
Root Signature Parameter [%d], Descriptor Table Range [%d], for %s, specifies -1 for NumDescriptors, which means an unbounded array size.  This is not supported for %s on a %s level device.
Root Signature size exceeds maximum of %d 32-bit units (with system reserved space for tools enabled - not counting that, applications only have %d available).  Costs in units: Descriptor Tables cost %d each, Root CBVs cost %d each, Root SRVs cost %d each, Root UAVs cost %d each, and Root Constants cost 1 per 32-bit value.
Root Signature size exceeds maximum of %d 32-bit units.  Costs in units: Descriptor Tables cost %d each, Root CBVs cost %d each, Root SRVs cost %d each, Root UAVs cost %d each, and Root Constants cost 1 per 32-bit value.
Root signatures at D3D_FEATURE_LEVEL_1_0_CORE must not use D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS flag since bounds checking isn't supported.
RootSignature
round_ne
round_ni
round_pi
round_z
RSDSp
RSSetScissorRects
RSSetShadingRate
RSSetShadingRateImage
RSSetViewports
RtlCaptureContext
RtlCaptureStackBackTrace
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlInitUnicodeString
RtlIsCriticalSectionLockedByThread
RtlLookupFunctionEntry
RtlNotifyFeatureUsage
RtlNtStatusToDosErrorNoTeb
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlVirtualUnwind
RTS0H
RuntimeDroppedCall
RuntimeMarker
r'w2H
S H;S(t
s UWAVH
s WAVAWH
S(\5gSV
S(H;S0t
s/Wh!
s0t]E
s0tBE
S4&&%
s8@8w@t
sample
sample_b
sample_b_cl_s
sample_c
sample_c_cl_s
sample_c_lz
sample_c_lz_s
sample_cl_s
sample_d
sample_d_cl_s
sample_l
sample_l_s
SampleCount
sampleinfo
samplepos
SampleQuality
Sampler
SAMPLER
Sampler descriptor ranges can't specify DATA_* flags since there is no data pointed to by samplers (descriptor range flags %x).
Sampler descriptor ranges can't specify DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS, since there are no bounds to check (descriptor range flags %x).
Sampler feedback maps must be created with the ALLOW_UNORDERED_ACCESS flag.
SAMPLER_FEEDBACK_MIN_MIP_OPAQUE
SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE
Samplers
Samplers cannot be mixed with other resource types in a descriptor table (root parameter [%u]).
SchedulingGroup
schemaVersion
SeIncreaseBasePriorityPrivilege
SelectAdapter
SemaphoreHandle
SequenceNumber
SetAllocationPriority
SetComputeRoot32BitConstant
SetComputeRoot32BitConstants
SetComputeRootConstantBufferView
SetComputeRootDescriptorTable
SetComputeRootShaderResourceView
SetComputeRootSignature
SetComputeRootUnorderedAccessView
SetContextInProcessSchedulingPriority
SetContextSchedulingPriority
SetD3DDebugLayerStartupOptions
SetDescriptorHeaps
SetDisplayPrivateDriverFormat
SetEvent
SetGraphicsRoot32BitConstant
SetGraphicsRoot32BitConstants
SetGraphicsRootConstantBufferView
SetGraphicsRootDescriptorTable
SetGraphicsRootShaderResourceView
SetGraphicsRootSignature
SetGraphicsRootUnorderedAccessView
SetLastError
SetMarker
SetPipelineState
SetPipelineState1
SetPredication
SetProtectedResourceSession
SetQueuedLimit
SetSamplePositions
SetStablePowerState
SetThreadDescription
SetThreadpoolTimer
SetThreadpoolWait
SetThreadPriority
SetUnhandledExceptionFilter
SetViewInstanceMask
SFI0A
SFI0H
SFI0M
Shader CBV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in a root signature.
Shader CBV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in root signature
Shader has root bindings but root signature uses a DENY flag to disallow root binding access to the shader stage.
Shader register range of type %s %s overlaps with another shader register range %s.
shader resource view
Shader sampler descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in a root signature.
Shader sampler descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in root signature
Shader SRV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u ) is not fully bound in root signature
Shader SRV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in a root signature.
Shader SRV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in root signature
Shader UAV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in a root signature.
Shader UAV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in root signature
Shader uses resource descriptor heap indexing, but root signature is missing the D3D12_ROOT_SIGNATURE_FLAG_CBV_SRV_UAV_HEAP_DIRECTLY_INDEXED flag.
Shader uses sampler descriptor heap indexing, but root signature is missing the D3D12_ROOT_SIGNATURE_FLAG_SAMPLER_HEAP_DIRECTLY_INDEXED flag.
Shader4ComponentMapping is set to an invalid value.  To create a valid value use the D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING(Src0,Src1,Src2,Src3) macro with a value from the D3D12_SHADER_COMPONENT_MAPPING enum in each entry.  Or, for a default 1:1 component mapping, simply use D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING (%#x).
Shader4ComponentMapping must be D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING (%#x) for raw buffers.
Shader4ComponentMapping must be D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING (%#x) for structured buffers.
ShaderCache_AddValue
ShaderCache_Clear
ShaderCache_Create
ShaderCache_Delete
ShaderCache_Destroy
ShaderCache_FindValue
ShaderCache_Flush
ShaderCache_FreeValue
ShaderCache_GetDesc
ShaderCacheSession
shaderCaching
ShareObjects
SHDR<
SHDRH
SHEX 
SHEXH
SignalSynchronizationObject
SignalSynchronizationObject2
SignalSynchronizationObjectFromCpu
SignalSynchronizationObjectFromGpu
SignalSynchronizationObjectFromGpu2
Since the mesh shader specifies output topology of %s, if the PSO desc ALSO specifies a primitive topology (even though not necessary to do), it must be %s to match the mesh shader.  Since the topologies don't match, behavior is undefined.  Earlier runtimes didn't validate this, so this error isn't explicitly failing PSO create.  But this really should be considered an application error.
sincos
Size of %u exceeds maximum constant buffer view size of %u.
Size of %u is invalid.  Device requires SizeInBytes be a multiple of %u.
SizeInBytes
SM51Usage
SOFTWARE\Microsoft\Cryptography
Software\Microsoft\Direct3D\Direct3D12
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock
SOFTWARE\Policies\Microsoft\Windows\Appx
SOSetTargets
Source and Destination subresources cannot be the same when doing a copy operation. Copies with the same resource are allowed as long as the subresource indices are different Src and Dst subresources are both: %d
Source or destination subresource index is out of bounds.
sPH+sHH
sPL9s t
SrcBlend[ %d ] does not equal SrcBlend[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
SrcBlend[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND.
SrcBlend[ %d ] is trying to use a dual source blending operation, value (0x%x), which is not valid for any other render target slot other than 0.
SrcBlendAlpha[ %d ] does not equal SrcBlendAlpha[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
SrcBlendAlpha[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND.
SrcBlendAlpha[ %d ] is trying to use a D3D11_BLEND value (0x%x) that manipulates color, which is invalid.
SrcBlendAlpha[ %d ] is trying to use a dual source blending operation, value (0x%x), which is not valid for any other render target slot other than 0.
Start
StartAddress
StartElement/ElementCount exceeds range of query heap.
StateObject
Static sampler: A NULL pSamplerDesc was specified.
Static sampler: AddressU unrecognized.
Static sampler: AddressV unrecognized.
Static sampler: AddressW unrecognized.
Static sampler: ComparisonFunc unrecognized.
Static sampler: Filter unrecognized.
Static sampler: MaxAnisotropy must be in the range [%d to %d].  %d specified.
Static sampler: MINIMUM or MAXIMUM filters not supported by the device. To see if the device supports this call CheckFeatureSupport with D3D12_FEATURE_D3D12_OPTIONS and check for TiledResourcesTier support of Tier 2+.
Static sampler: MinLOD be in the range [-INF to +INF].  %f specified.
Static sampler: MipLODBias must be in the range [%f to %f].  %f specified.
STATt
store_raw
store_structured
store_uav_typed
string too long
StringFileInfo
strnlen
SubmitCommand
SubmitCommandCBSequence
SubmitCommandToHwQueue
SubmitPresentToHwQueue
SubmitSignalSyncObjectsToHwQueue
SubmitWaitForSyncObjectsToHwQueue
Subresource Indicies
Subresource is out of range. It is %u, and the resource only has %u subresources.
supportFlags
Suspending Render Pass contains depth buffer, but resuming Render Pass does not.
SuspendTrackedWorkload
SUVWATAUAVAWH
SUVWATAVAWH
SUVWAUAVAWH
SUVWAVH
SV_Barycentrics
SV_Coverage
SV_Depth
SV_InstanceID
SV_IsFrontFace
SV_Position
SV_PrimitiveID
SV_SampleIndex
SV_VertexID
SVAVH
SVWATAUAVAWH
SVWATAVAWH
SVWAVAWH
SVWAVH
swapc
SWATAUAVAWH
switch
t"@8=
t$ AWH
T$ E3
t$ E3
t$ H#
t$ I;
t$ UWATAVAWH
t$ UWATH
t$ UWAVH
t$ UWAWH
t$ W3
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$(D#
t$(D;
T$(E;
T$(E3
t$(E3
t$(H+
T$(H9t$@H
t$@;t$p
T$@;T$ps
t$@9t$p
T$@A8
T$@D:
T$@D9
t$@E3
T$@H;
T$@H;T$Ht!I
T$@H;T$Ht)I
T$@H+
t$@I;
t$@M#
T$\D;
T$\E3
T$`A;
t$`D#
T$`E3
T$`H;
t$`H;
T$`H;
T$`H+
T$0A;
T$0H;
T$0H+
T$0Hc
T$0L+
T$0L3
T$0M#
t$4E3
t$8+t$ D
T$8A:
t$8A;
t$8D9w|u1
t$8E3
T$8E9
T$8H;
T$8H+
t$D8JOt
t$D8S\u
T$dA;
T$dfD
t$hD8
T$HD8KHt(D9KLt
t$hD9
T$hE;
T$HE3
t$hH;
T$HH;
T$hH;
T$HH;
T$hH;T$pt
T$hH;T$pt!I
T$hH+
T$HH+
T$hH+
T$HL;
t$HM#
t$HM+
t$I;B
T$LD;
T$pA;
t$PE3
T$PE3
T$pE3
T$PE3
t$pH;
T$PH;
t$pH;
T$pH;
T$PH;T$Xt
T$pH+
T$PH+
T$pH+
t$pI;
T$PI+
T$PL;
T$pLcB
t$X%W
t$xE3
t$XE3
t$xE3
t$xH;u t
T$XH+
T$xH+
T$XH+
T$xH+
t$XI;
T$xI;
T$xI+
T$XI+
t$XL+
t%H;]
t%H;^
t%H;{
t%I;]
t%I;_
t%I;w
t(D8-
t(D8=y
t(H9p
t*@8*t
t,D8=n
t:fA9(t4H
t;D8kYu0H
t;H9zP
t\H9J(uVH
t|I;v tvI
t=L9rHt7
t>H;KXt8H
t1D!l$ L
t1L9n
t3L9f
t4E88t/H
t8f91t3L
tAD;S r9D;[$v5D;S r-H
taD8e
tcH;{Xt]H
TEMP 
TEMP$
TEMP(
TEMP,
TEMP|
TEMP<
TEMPd
TEMPh
TEMPH
TEMPl
TEMPL
TEMPP
TEMPp
TEMPt
TerminateProcess
Texture cube arrays cannot be created when GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less.
Texture420OpaqueUsage
textureLayout
TextureLayoutUsage
Textures cannot be used as unordered access resources when the feature level is less than D3D_FEATURE_LEVEL_11_0. D3D12_RESOURCE_DESC::Dimension is %s. D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS set. FeatureLevel is %s.
Textures created with certain Formats must align the resource dimensions properly. D3D12_RESOURCE_DESC::Format is %s. D3D12_RESOURCE_DESC::Width is %I64u, and must be a multiple of %u. D3D12_RESOURCE_DESC::Height is %u, and must be a multiple of %u.
Textures created with certain Formats must align the resource dimensions properly. D3D12_SUBRESOURCE_FOOTPRINT::Format is %s. D3D12_SUBRESOURCE_FOOTPRINT::Width is %u, and must be a multiple of %u. D3D12_SUBRESOURCE_FOOTPRINT::Height is %u, and must be a multiple of %u.
Textures with layout D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE and most resource flags cannot be created when the tiled resource capabilities do not support full orthogonality for %s. D3D12_FEATURE_DATA_D3D12_OPTIONS::TiledResourcesTier is %s. D3D12_FEATURE_DATA_D3D12_OPTIONS5::SRVOnlyTiledResourceTier3 is %s. The following flags are not supported, unless TiledResourcesTier is D3D12_TILED_RESOURCES_TIER_3 or greater: D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET = %u. D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL = %u. D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS = %u. 
Textures with layout D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE cannot be created when the D3D12_RESOURCE_DESC::Format does not support tiled resources. Format is %s. D3D12_FORMAT_SUPPORT2_TILED is not set for D3D12_FEATURE_FORMAT_SUPPORT.
Textures with layout D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE cannot be created when the tiled resource capabilities do not support D3D12_RESOURCE_DESC::Dimension of %s. D3D12_FEATURE_DATA_D3D12_OPTIONS::TiledResourcesTier is %s. D3D12_FEATURE_DATA_D3D12_OPTIONS5::SRVOnlyTiledResourceTier3 is %s.
TextureUINTViewUsage
tFD;d$Xt?L
tG9)u
Th[8U;>pv
Thales TSS ESN:D082-4BFD-EEBA1%0#
The argument resource cannot be a protected resource.
The base resource was created as a multisample resource.  You must specify D3D11_DSV_DIMENSION_TEXTURE2DMS instead of D3D11_DSV_DIMENSION_TEXTURE2D.
The base resource was created as a multisample resource.  You must specify D3D11_DSV_DIMENSION_TEXTURE2DMSARRAYinstead of D3D11_DSV_DIMENSION_TEXTURE2DARRAY.
The base resource was created as a multisample resource.  You must specify D3D12_RTV_DIMENSION_TEXTURE2DMS instead of D3D12_RTV_DIMENSION_TEXTURE2D.
The base resource was created as a multisample resource.  You must specify D3D12_RTV_DIMENSION_TEXTURE2DMSARRAYinstead of D3D12_RTV_DIMENSION_TEXTURE2DARRAY.
The base resource was created as a multisample resource. You must specify D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY or D3D12_SRV_DIMENSION_TEXTURE2DMS.
The bitstream size must be specified in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::Size and cannot be zero.
The BlockSize(%u) of the ID3D12VideoMotionEstimator does not match the BlockSize(%u) for the ID312VideoMotionVectorHeap.
The box extends past, at least, one the edges of the subresource. p%sBox right is %u, bottom is %u, and back is %u. But, %sSubresource %u only has %u width, %u height, and %u depth.
The commandlist cannot have a protected session active while using ResolveEncoderOutputMetadata.
The coordinates in p%sBox are not aligned properly for the resource format. When the format is %s, left & right must be a multiple of %u and top & bottom must be a multiple of %u. left is %u, right is %u, top is %u, and bottom is %u.
The coordinates in pSrcBox are not aligned properly for the format used with the source. When the format is %s, left & right must be a multiple of %u and top & bottom must be a multiple of %u. left is %u, right is %u, top is %u, and bottom is %u.
The count resource cannot be a protected resource.
The current decoder heap must have a D3D12_VIDEO_DECODE_CONFIGURATION that matches the decoder.
The D3D12_DSV_FLAG_READ_ONLY_DEPTH flag was set in the Flags field. This is not valid, because the format (%#x, %s) does not have a D component.
The D3D12_DSV_FLAG_READ_ONLY_STENCIL flag was set in the Flags field. This is not valid, because the format (%#x, %s) does not have a S component.
The D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE layout cannot be used on a device that does not support tiled resources. CheckFeatureLevel with D3D12_FEATURE_D3D12_OPTIONS indicates D3D12_FEATURE_DATA_D3D12_OPTIONS::TiledResourcesTier is %s.
The D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE layout cannot be used on a Texture1D resource (these can't be tiled). 
The D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::Offset + D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::Size exceeds the size of the buffer specified D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::pBuffer.
The D3D12_VIDEO_DECODE_FRAME_ARGUMENT::Size for D3D12_VIDEO_DECODE_ARGUMENT_TYPE_PICTURE_PARAMETERS is incorrect.  Actual: %d Expected: sizeof(%s)==%d.
The D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::OutputSubresource exceeds the number of subresources for D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D.
The D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM::FrameStartOffset exceeds the size of the buffer specified D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM::pBuffer.
The D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::InputFrameSubresource exceeds the number of subresources for D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::pInputFrame.
The D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS::EncoderOutputMetadata.Offset exceeds the size of the buffer specified D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS.EncoderOutputMetadata.pBuffer.
The D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS::HWLayoutMetadata.Offset exceeds the size of the buffer specified D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS.HWLayoutMetadata.pBuffer.
The D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS::ResolvedLayoutMetadata.Offset exceeds the size of the buffer specified D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS.ResolvedLayoutMetadata.pBuffer.
The data size of the structure passed in D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION.pH264Config. does not match the expected size of D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264 Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION.pHEVCConfig. does not match the expected size of D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA.pH264PicData. does not match the expected size of D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264 Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA.pHEVCPicData. does not match the expected size of D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA.pSlicesPartition_H264. does not match the expected size of D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_SLICES Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA.pSlicesPartition_HEVC. does not match the expected size of D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_SLICES Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_CBR. does not match the expected size of D3D12_VIDEO_ENCODER_RATE_CONTROL_CBR Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_CQP. does not match the expected size of D3D12_VIDEO_ENCODER_RATE_CONTROL_CQP Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_QVBR. does not match the expected size of D3D12_VIDEO_ENCODER_RATE_CONTROL_QVBR Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_VBR. does not match the expected size of D3D12_VIDEO_ENCODER_RATE_CONTROL_VBR Expected size: %d Received size: %d
The declared input primitive type in the current Geometry Shader does not match the current Tessellator output topology (defined by the Hull Shader).
The declared input primitive type in the current Geometry Shader does not match the input topology.
The decode output conversion specified by D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Conversion failed the support check with driver.  See ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT.
The decode output conversion specified by D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Conversion is not supported by driver.  See ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT.
The decode output conversion specified by D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Conversion is not supported by driver.  The D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.OutputWidth or the D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.OutputHeight is not supported by the OutputSizeRange reported in D3D12_VIDEO_SCALE_SUPPORT.  See ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT
The decoder heap must have a D3D12_VIDEO_DECODE_CONFIGURATION that matches the decoder, but the reference frame at index %d does not match.
The decoder heap requires has D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_HEIGHT_ALIGNMENT_MULTIPLE_32_REQUIRED, but %s does not have a height that is >= to the aligned decode height.
The decoder heap requires has D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_HEIGHT_ALIGNMENT_MULTIPLE_32_REQUIRED, but the reference frame at index %d does not have a height that is >= to the aligned decode height.
The decoder heap requires resources with D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY, but the reference frame at index %d does not have it.
The decoder heaps associated with a decode frame call must all be the same unless the decode profile is D3D12_VIDEO_DECODE_PROFILE_VP9 or D3D12_VIDEO_DECODE_PROFILE_VP9_10BIT_PROFILE2 and the decoder supports D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_ALLOW_RESOLUTION_CHANGE_ON_NON_KEY_FRAME.The heap associated with reference frame at index %d does not match the current decode heap.
The dependent resource is NULL at index %u.
The depth stencil unit or pixel shader expects a Depth Stencil View, but the PSO indicates that none will be bound. This is OK, as reads of an unbound Depth Stencil View are defined to return 0; and writes are discarded. It is also possible the developer knows the data will not be used anyway. This is only a problem if the developer actually intended to bind a Depth Stencil View here.
The destination coordinates are not aligned properly for the format used with the destination. When the format is %s, DstX must be a multiple of %u and DstY must be a multiple of %u. DstX is %u and DstY is %u.
The destination region extends past the end of the destination resource. When DstOffset is %I64u and NumBytes is %I64u, the operation requires the destination buffer to have %I64u bytes, but it only has %I64u.
The destination region extends past the end of the destination resource. With DstX = %u, pSrcRect's width = %u will exceed width of destination resource = %u.
The destination region extends past the end of the destination resource. With DstY = %u, pSrcRect's height = %u will exceed height of destination resource = %u.
The destination region extends past, at least, one of the edges of the destination subresource. When the destination format is %s, the source format is %s, DstX is %u, DstY is %u, DstZ is %u and the effective SrcBox width is %u, height is %u, and depth is %u, the operation requires the destination subresource to have %u width, %u height, and %u depth. But the destination subresource only has %u width, %u height, and %u depth.
The destination resource cannot be on a D3D12_HEAP_TYPE_UPLOAD heap.
The destination resource is not allowed to have the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL flag.
The destination resource is not allowed to have the D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY flag.
The destination resource is not allowed to have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY flag.
The destination resource multisampling properties must equal the source resource. The destination resource has %u samples and %u quality. The source resource has %u samples and %u quality. 
The destination resource must be D3D12_RESOURCE_DIMENSION_BUFFER. It is %s.
The Dimensions are too large for a Tiled Resource with multiple array slices on device with Tier 1 level of support. At this Tier, resources with multipls array slices cannot have individual array slices larger than 2^24 - 1 (%I64u) bytes in virtual address space. The requested surface dimensions padded to tile size require roughly %I64u bytes.
The dimensions of the source and destination resources do not match.
The Dimensions of the View are invalid due to at least one of the following conditions.  FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride %d, FirstElement (value = %I64u) must be between 0 and the maximum offset of the Buffer, %I64u, inclusively. With the current FirstElement, NumElements (value = %u) must be between 1 and %u, inclusively, in order that the View fit on the Buffer.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride %d, FirstElement (value = %Id) must be between 0 and the maximum offset of the Buffer, %Id, inclusively. With the current FirstElement, NumElements (value = %Id) must be between 1 and %Id, inclusively, in order that the View fit on the Buffer.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming this Format (%#x, %s), FirstElement (value = %I64u) must be between 0 and the maximum offset of the Buffer, %I64u, inclusively. With the current FirstElement, NumElements (value = %u) must be between 1 and %I64u, inclusively, in order that the View fit on the Buffer. In addition, the NumElements may not be larger than %d for feature level %s.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming this Format (%#x, %s), FirstElement (value = %I64u) must be between 0 and the maximum offset of the Buffer, %I64u, inclusively. With the current FirstElement, NumElements (value = %u) must be between 1 and %u, inclusively, in order that the View fit on the Buffer.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming this Format (%#x, %s), FirstElement (value = %Id) must be between 0 and the maximum offset of the Buffer, %Id, inclusively. With the current FirstElement, NumElements (value = %Id) must be between 1 and %Id, inclusively, in order that the View fit on the Buffer.
The Dimensions of the View are invalid due to at least one of the following conditions. FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The Dimensions of the View are invalid due to at least one of the following conditions. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. 
The Dimensions of the View are invalid due to at least one of the following conditions. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively.  FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The Dimensions of the View are invalid due to at least one of the following conditions. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The Dimensions of the View are invalid due to at least one of the following conditions. MipSlice (value = %u) must be between 0 and MipLevels-1 of the Texture Resource, %u, inclusively. FirstWSlice (value = %u) must be between 0 and the Depth size of the Mip Level, %u, inclusively. With the current FirstWSlice, WSize (value = %u) must be between 1 and %u, inclusively, or -1 to default to all slices from FirstWSlice, in order that the View fit on the Texture.
The Dimensions of the View are invalid due to at least one of the following conditions. MostDetailedMip (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. With the current MostDetailedMip, MipLevels (value = %d) must be between 1 and %d, inclusively, or -1 to default to all mips from MostDetailedMip, in order that the View fit on the Texture.
The Dimensions of the View are invalid due to at least one of the following conditions. MostDetailedMip (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. With the current MostDetailedMip, MipLevels (value = %d) must be between 1 and %d, inclusively, or -1 to default to all mips from MostDetailedMip, in order that the View fit on the Texture. First2DArrayFace (value = %d) must be between 0 and ArraySize-6 of the Texture Resource, %d, inclusively.
The Dimensions of the View are invalid due to at least one of the following conditions. MostDetailedMip (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. With the current MostDetailedMip, MipLevels (value = %d) must be between 1 and %d, inclusively, or -1 to default to all mips from MostDetailedMip, in order that the View fit on the Texture. FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The Dimensions of the View are invalid.  MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively.
The Dimensions of the View are invalid. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively.
The Dimensions of the View are invalid. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. FirstWSlice (value = %d) must be between 0 and the Depth size of the Mip Level, %d, inclusively. With the current FirstWSlice, WSize (value = %d) must be between 1 and %d, or -1 to default to all slices from MipSlice, inclusively, in order that the View fit on the Texture.
The Dimensions of the View are invalid. MostDetailedMip (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. With the current MostDetailedMip, MipLevels (value = %d) must be between 1 and %d, or -1 to default to all mips from MostDetailedMip, inclusively, in order that the View fit on the Texture.
The Format (%#x) is unrecognized.
The Format (%#x, %s) cannot be used when creating a typed View of a Buffer.
The format (%#x, %s) cannot be used with a DepthStencil view.
The format (%#x, %s) cannot be used with a RenderTarget view because this particular graphics implementation doesn't support this format. 
The format (%#x, %s) cannot be used with a RenderTarget view. 
The format (%#x, %s) cannot be used with a ShaderResource view.
The Format (%#x, %s) cannot be used with a Tiled Resource.
The format (%#x, %s) cannot be used with a Typed Unordered Access View.
The format (%#x, %s) cannot be used with a Typed Unordered Access View.  This is because the current graphics implementation does not even support this Format.  Therefore this format does not support Unordered Access Views. Use CheckFormatSupport to check Format support.
The Format (%#x, %s) cannot be used, when creating a View of a Buffer.
The Format (%#x, %s) cannot be used, when creating a View of a Texture1D.
The Format (%#x, %s) cannot be used, when creating a View of a Texture2D.
The Format (%#x, %s) cannot be used, when creating a View of a Texture3D.
The Format (%#x, %s) cannot be used, when creating a View of a TextureCube.
The Format (%#x, %s) is invalid when creating a typed View; it is a typeless format
The Format (%#x, %s) is invalid when creating a View; it is not a fully qualified format within the same family as the Format of the Resource (%#x, %s).
The Format (%#x, %s) is invalid when creating a View; the Resource was already created with a fully qualified Format, which is not castable (%#x, %s), unless the resource is a DXGI swap chain back buffer.
The Format (%#x, %s) is invalid when creating a View; the Resource was already created with a fully qualified Format, which is not castable (%#x, %s).
The Format (%#x, %s) is invalid when creating this View; using this format indicates to use the format of the Resource, however the Resource does not have a fully typed format: (%#x, %s).
The Format (%#x, %s) is invalid, when creating a View of a Structured Buffer; it must be DXGI_FORMAT_UNKNOWN.
The Format (%#x, %s) is invalid, when creating a View; because it is a typeless format
The Format (%#x, %s) is invalid, when creating a View; it is a typeless format
The Format (%#x, %s) is invalid, when creating a View; it is not a fully qualified Format castable from the Format of the Resource (%#x, %s).
The Format (%#x, %s) is invalid, when creating a View; the Resource was already created with a fully qualified Format, which is not castable (%#x, %s).
The input frame has a format of %s that does not match the encoder which has a format of %s.
The input frame is smaller than the requested PictureTargetResolution.  PictureTargetResolution.Width: %d, PictureTargetResolution.Height: %d, Resource Width: %I64u, Resource Height: %d
The input stream at index %d has a StereoFormat of D3D12_VIDEO_FRAME_STEREO_FORMAT_SEPARATE.When the StereoFormat is D3D12_VIDEO_FRAME_STEREO_FORMAT_SEPARATE, both D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS::InputStreamstereo views must either be null or non-null.
The InputFormat(%s) of the ID3D12VideoMotionEstimator does not match the InputFormat(%s) for the ID312VideoMotionVectorHeap.
The multisample quality value is not supported. Support for each sample count value and format must be verified. DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %u, D3D12_RESOURCE_DESC::Format is %s. D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS::NumQualityLevels is %u when calling CheckFeatureSupport with D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS%s.
The NodeMask of the ID3D12MotionEstimator is not supported by the NodeMask of this command list.
The NodeMask of the ID3D12MotionVectorHeap is not supported by the NodeMask of this command list.
The NodeMask of the ID3D12VideoEncoder is not supported by the NodeMask of this command list.
The NodeMask of the ID3D12VideoEncoderHeap is not supported by the NodeMask of this command list.
The NodeMask of the ID3D12VideoMotionEstimator is not supported by the NodeMask of this command list.
The only resource dimension supported by D3D_FEATURE_LEVEL_1_0_CORE devices is BUFFER.
The output size of the Amplification shader (%d) doesn't match the input payload size for the mesh shader (%d).
The output size of the mesh shader exceeds the limit when per-view attributes are expanded. The total size needed for all vertex and primitive attributes (%d)plus the total amplification shader payload size (%d), is currently (%d) but must not exceed 48,128
The output size of the mesh shader exceeds the limit when per-view attributes are expanded. The total size needed for all vertex attributes (%d) times the number of vertices aligned to 32 (%d) plus the total size needed for all primitive attributes (%d) times the number of primitives aligned to 32 (%d), is currently (%d) but must not exceed 32,768
The Pixel Shader expects a Render Target View bound to slot %d, but the PSO indicates that none will be bound. This is OK, as writes of an unbound Render Target View are discarded. It is also possible the developer knows the data will not be used anyway. This is only a problem if the developer actually intended to bind a Render Target View here.
The PixelWidth(%u) and PixelHeight(%u) could not be used with the SizeRange (%u, %u, %u, %u) of the pMotionVectorHeap.
The Plane Slice %d cannot be used when the resource format is %s and the view format is %s.  See documentation for the set of valid view format names for this resource format, determining which how the resource (or part of it) will appear to shader.
The PlaneSlice %d is invalid when the resource format is %s and the view format is %s.  Only Plane Slice 0 is valid when creating a view on a non-planar format.
The Precision(%u) of the ID3D12VideoMotionEstimator does not match the Precision(%u) for the ID312VideoMotionVectorHeap.
The protected resource session of an input argument did not match the protected resource state of the command list.
The reference frame at index %d has a format of %s that does not match the decoder heap which has a format of %s.
The reference frame at index %d has a format of %s that does not match the encoder which has a format of %s.
The reference frame at index %d is smaller than the current PictureTargetResolution.  PictureTargetResolution.Width: %d, PictureTargetResolution.Height: %d, Resource Width: %I64u, Resource Height: %d
The reference frame at index %d is smaller than the matching decoder heap.  Decoder Heap Width: %d, Decoder Heap Height: %d, Resource Width: %I64u, Resource Height: %d
The reference frame at index %d must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
The reference frame at index %d must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The reference frame at index %d must not be a reserved resource.
The region specified by D3D12_TEXTURE_COPY_LOCATION:PlacedFootprint extends past the end of the buffer it is placed on. The size required by PlacedFootprint is %I64u, as the fields of PlacedFootprint::Placement are as follows: RowPitch is %u, Height is %u, and Format is %s. PlacedFootprint::Offset is %I64u, which requires the buffer to have %I64u bytes; but the buffer only has %I64u bytes.
The render target format at slot %d is (%s).  this format does not support blending. The Pixel Shader output signature indicates this output could be written, and the Blend State indicates blending is enabled for this slot.
The render target format at slot %d is format (%s).  This format does not support logic ops. The Pixel Shader output signature indicates this output could be written, and the Blend State indicates logic op is enabled for this slot.
The resource doesn't fit onto the heap at the HeapOffset. The resource size is %I64u. The heap size is %I64u. The HeapOffset is %I64u.
The resource format (%s) and view format (%s) differ in float vs non-float component interpretation - this type of format casting is not supported.
The resource in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM must be a buffer.
The resource in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The resource in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM must not be a reserved resource.
The resource in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::Offset must be D3D12_VIDEO_DECODE_MIN_BITSTREAM_OFFSET_ALIGNMENT byte aligned.
The resource in D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM must be a buffer.
The resource in D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The resource in D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM must not be a reserved resource.
The resource in D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS.EncoderOutputMetadata.pBuffer must be a buffer.
The resource in D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS.EncoderOutputMetadata.pBuffer must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The resource in D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS.EncoderOutputMetadata.pBuffer must not be a reserved resource.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS.HWLayoutMetadata.pBuffer must be a buffer.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS.HWLayoutMetadata.pBuffer must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS.HWLayoutMetadata.pBuffer must not be a reserved resource.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS.ResolvedLayoutMetadata.pBuffer must be a buffer.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS.ResolvedLayoutMetadata.pBuffer must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS.ResolvedLayoutMetadata.pBuffer must not be a reserved resource.
The resource in OutputArguments.Histograms[%d].Offset must be D3D12_VIDEO_DECODE_MIN_HISTOGRAM_OFFSET_ALIGNMENT byte aligned.
The resource in OutputArguments.Histograms[%d].pBuffer must be a buffer.
The resource in OutputArguments.Histograms[%d].pBuffer must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The resource in OutputArguments.Histograms[%d].pBuffer must not be a reserved resource.
The source and destination resource formats are incompatible. The source format is %s and the destination format is %s. Some non-obvious formats are considered equivalent: BC[1|4] ~= R16G16B16A16|R32G32, BC[2|3|5|6|7] ~= R32G32B32A32, and R9G9B9E5_SHAREDEXP ~= R32.
The source box extends past, at least, one the edges of the source subresource. pSrcBox right is %u, bottom is %u, and back is %u. But, the source subresource only has %u width, %u height, and %u depth.
The source region extends past the end of the source resource. When SrcOffset is %I64u and NumBytes is %I64u, the operation requires the source buffer to have %I64u bytes, but it only has %I64u.
The source resource cannot be a protected resource.
The source resource cannot be on a D3D12_HEAP_TYPE_READBACK heap.
The source resource is not allowed to have the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL flag.
The source resource is not allowed to have the D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY flag.
The source resource is not allowed to have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY flag.
The source resource must be D3D12_RESOURCE_DIMENSION_BUFFER. It is %s.
The specified format %s does not support MSAA resolve. Only fully typed non integer and non stencil formats are allowed, except for formats DXGI_FORMAT_R24_UNORM_X8_TYPELESS and DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS which are allowed since these have R fully typed and are non integer.
The specified format %s does not support MSAA resolve. Only render target and depth stencil fully typed formats are allowed, except for formats DXGI_FORMAT_R24_UNORM_X8_TYPELESS, DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS, DXGI_FORMAT_X24_TYPELESS_G8_UINT and DXGI_FORMAT_X32_TYPELESS_G8X24_UINT, which are allowed since these have a fully typed component.
The specified format is not compatible with the destination resource. Format:%s, Destination Resource Format:%s
The specified format is not compatible with the source resource. Format:%s, Source Resource Format:%s
The specified format is unrecognized. The value is %u.
The specified node index is beyond the node count of the device. NodeIndex: %d, NodeCount: %d
The specified protection type is not supported by driver.
The specified query heap type is not supported for resolve on the given command list type.
The specified query type is not supported on the given command list type
The specified RasterizedStream (%u) is not output by the GS.  If there is a GS, then RasterizedStream must be one of the streams emmitted by the GS. Otherwise RasterizedStream must be 0 or D3D12_SO_NO_RASTERIZED_STREAM.
The specified sample count or quality is not supported with the render target format in slot %u
The specified sample count or quality is not supported with the specified depth-stencil format
The specified video extension command id is not supported.  See  D3D12_FEATURE_VIDEO_EXTENSION_COMMANDS.
The subresource for D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::%sSubresourceIndex must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
The subresource for D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d] must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
The subresource for D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
The subresource for D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d] must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
The subresource for reference frame at index %d exceeds the number of subresources for the associated resource.
The subresource for reference frame at index %d has MipLevels != 1 which is not supported with DecodeFrame.
The subresource for reference frame at index %d has MipLevels != 1 which is not supported with EncodeFrame.
The subresource for reference frame at index %d must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
The subresource range at index %u is invalid. For textures with D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE, both Range coordinates must commonly be aligned to tile size. However, Range.End may be set to UINT64_MAX in order to specify the last subresource tile.Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. GetResourceTiling failed when called on it. 
The subresource range at index %u is invalid. Range.Begin must be less than Range.End. Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. Range.Begin must be less than Range.End. Range.End must be either UINT64_MAX or between Range.Begin+1 and the end of the resource, %I64u. Subresource is %u, Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. Range.Begin must be less than Range.End. Range.End must be either UINT64_MAX or between Range.Begin+1 and the end of the subresource, %I64u. Subresource is %u, Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. Subresource must be 0 for buffers. Subresource is %u.
The subresource range at index %u is invalid. Subresource must be between 0 and the number of subresources, %u. Subresource is %u.
The subresource range at index %u is invalid. The Range must be from 0 to UINT64_MAX for subresources that are within the packed mips. Subresource is %u, which is mip level %u. The resource has %u mip levels which are not packed. Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. The Range must be from 0 to UINT64_MAX for textures with the following layouts: D3D12_TEXTURE_LAYOUT_ROW_MAJOR, D3D12_TEXTURE_LAYOUT_UNKNOWN. Layout is %s, Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. The Range must be from 0 to UINT64_MAX when Subresource is D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES. Subresource is %u, Range.Begin is %I64u, and Range.End is %I64u.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_CBR cannot be null.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_CQP cannot be null.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_QVBR cannot be null.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_VBR cannot be null.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.Flags must be a valid combination of D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAGS values.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.Mode must be a valid value of D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE.
The Vertex Shader expects application provided input data (which is to say data other than hardware auto-generated values such as VertexID or InstanceID). Therefore an Input Assembler object is expected, but none is bound.
The video format %s does not support RenderTargetViews. For this format, specifying D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET when the surface created actually only allows the surface to be used for video processor decode output.  For some other video formats (depending on device Feature Level as well), D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET does allow both video processor decode output and RenderTargetView output, but not in this case.
The view format (%#x, %s) is invalid. The view format and resource format (%#x, %s) must be from the same format family.
The ViewDimension in the View Desc incompatible with the type of the Resource.
The ViewDimension in the View Desc is incompatible with the type of the Resource or View.
The ViewDimension in the View Desc is incompatible with the type of the Resource.
The well-known multisample quality patterns are not supported. The device must support D3D_FEATURE_LEVEL_10_1 or greater, and multisampling for the particular format and sample count. Well-known multisample quality patterns can only be used with D3D12_RESOURCE_DESC::SampleDesc::Count equal to 1, 2, 4, 8, or 16. But, support for each sample count value and format must still be verified. DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %s, FeatureLevel is %s, D3D12_RESOURCE_DESC::Format is %s. D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS::NumQualityLevels is %u when calling CheckFeatureSupport with D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS%s.
There are %d bytes of groupshared allocated, and %d of those are multiplied across %d views, there are a total of %d bytes of groupshared allocated, which exceeds the limit of %d
There was an attempt to create a sampler feedback map was an invalid dimension. Sampler feedback maps must have dimension TEXTURE2D.
There was an attempt to create a sampler feedback map with non-UNKNOWN Layout. Sampler feedback maps must have UNKNOWN resource layout.
There was an attempt to create a sampler feedback map with SampleDesc.Count > 1. Sampler feedback maps must be single-sampled; that is, they have sample count 1.
There was an attempt to create a sampler feedback map with SampleDesc.Quality != 0. Sampler feedback maps must have SampleDesc.Quality == 0.
There was an attempt to create a sampler feedback UAV on a device with SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED.
There were unrecognized flags specified in the DepthStencilView Flags field. The flags value was %#x, while the valid flags are limited to %#x.
thH9s
This API requires a valid sampler feedback map format; the passed-in resource has format %s.
This operation is not supported on a compute only device.
This resource cannot be created on this heap, due to unsatisfied resource alignment requirements. The resource must be aligned to %I64u. The heap must also be aligned to a value greater to or equal than the resource. The heap is aligned to %I64u, and the resource offset in the heap is %I64u.
This root signature has %d static sampler(s), but static samplers are not supported in D3D_FEATURE_LEVEL_1_0_CORE.
ThreadId
ThreadIDCount
ThreadIDs
tiI9Q
Timestamp Readback Buffer
tK@8x
tKL9B
tKL9B(tEH
tlI9Q
tlL9B
tlL9G
TlP0X
tmM9i
tND9X
toL9G
Too many bits set in the specified node mask (0x%x).  No more than 1 bit may be set.
tpL9B
Tracked Workload Fence
TrackedWorkload
TrackWrittenResource
Translation
triangle
tsD8S\uhH
TTBLd
tuH;_
tx@8=2
U$@LG
u%A8p
u%D9L$\t
u%D9L$Lt
u%H!\$8H
u%I!C
u&!D$ L
u&f9p
u)A8p
u.H9]
u;E9b
u?D8x v9D8x
u[A91u/
u\I9y
u]D9c,uW3
u{H9A
u~fD;
u0!T$ L
U0S0Q
u4f9p
u-9uPt(
u'A9^
uaddc
UATAUAVAWH
UATAVH
UAVAWH
uEA91u
uFSfR
ugL;P
uk!D$ L
UMAdapterVersion
UMD reported application bug.
UMD reported device removed.
UMD reported error while device is removed.
UMDContexts
UMDeviceVersion
Unexpected parameter type.
UnhandledExceptionFilter
UNKNOWN
unknown
Unknown
Unknown exception
Unlock
Unlock2
Unmap
UnmapViewOfFile
Unnamed 
Unnamed ID3D12CommandQueue: Type=
Unnamed ID3D12DescriptorHeap: Type=
Unnamed ID3D12GraphicsCommandList: Type=
Unnamed ID3D12Heap: Size=
Unnamed ID3D12PipelineState: 
unordered access view
unordered_map/set too long
UnpinResources
Unrecognized
Unrecognized cache kinds.
Unrecognized control flags.
Unrecognized D3D12_CONSERVATIVE_RASTERIZATION_MODE specified in pRasterizerDesc: ConservativeRaster = %d.
Unrecognized reflection property specified (%u).
Unsupported bit-flag set (descriptor range flags %x).
Unsupported bit-flag set (root descriptor flags %x).
Unsupported bit-flag set (root signature flags %x).
Unsupported BitstreamEncryption value specified.
Unsupported Decode Profile Specified.  Use ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_PROFILES to retrieve a list of supported profiles.
Unsupported DecodeFormat Specified.  Use ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_FORMATS to discovert the list of supported profiles for a given D3D12_VIDEO_DECODE_CONFIGURATION.
Unsupported ParameterType value %u (root parameter %u)
Unsupported RangeType value %u (descriptor table slot [%u], root parameter [%u]).
Unsupported ShaderVisibility value %u (root parameter [%u]).
Unsupported ShaderVisibility value %u (static sampler [%u]).
Up to %d swapchains can be written to by a single ExecuteCommandLists call. 
UpdateAllocationProperty
UpdateTileMappings
UpdateTileMappings does not work with cross-adapter shared heaps. 
UpdateTrackedWorkload
UpdateVirtualAddress
Use D3D12_FEATURE_VIDEO_PROCESS_REFERENCE_INFO to check for support.
Use ID3D12VideoDevice::CheckFeatureSupport to query for D3D12_FEATURE_VIDEO_PROCESS_SUPPORT to check for support.
User/kernel-mode driver mismatch
Using the Redistributable D3D12 SDKLayers dll also requires that the latest SDKLayers for Windows 10 is installed.
usubb
USVWATAUAVAWH
USVWATAVAWH
USVWAVH
USVWH
UTCReplace_AppSessionGuid
UUUUUUU
UV<$>
UVAVH
UVWATAUAVAWH
UVWAVAWH
uw:AXtrI
UWATAVAWH
UWATH
UWAVH
uxH9SHu(9S4t#
uYH!A0!A@H!A8H!AHH!AP
V@I+V8H
v8E9&u
VarFileInfo
VAVAWH
vb'vb'v
vector too long
VEN_%04X
VerQueryValueW
Version
VERTEX
Vertex buffer changes are disallowed when the command signature contains a parameter of type D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH/DISPATCH_RAYS.
Vertex buffer slot %u is defined more than once.
Vertex Shader
VhH;Vpt
video
Video Decode
Video Decoder creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_DECODE_PROTECTED_RESOURCES indicates protected resources are not supported. hr = 0x%x
Video Decoder Heap creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_DECODE_PROTECTED_RESOURCES indicates protected resources are not supported. hr = 0x%x
Video Encode
Video Extension is not supported on this command list type.
Video GetCaps failed due to out of memory.
Video Process
Video processor creation args are not supported.  %s
Video Processor creation args D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC::DestinationSizeRange is invalid for input stream index %d.
Video Processor creation args D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC::SourceSizeRange is invalid for input stream %d.
Video Processor creation args failed .  %s  hr = 0x%x
Video Processor creation args failed.  %s  hr = 0x%x
Video processor creation args for input stream index %d indicate a DeinterlaceMode that is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_DEINTERLACE_FLAGS.
Video processor creation args for input stream index %d requested an output size range that is not supported by the driver. %s
Video processor creation args for input stream index %d requested an unsupported stero format.  %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_STEREO.
Video processor creation args for input stream index %d requested luma key, but this feature is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_LUMA_KEY.
Video processor creation args for input stream index %d requested orientation support and that is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_ROTATION and D3D12_VIDEO_PROCESS_FEATURE_FLAG_FLIP.
Video processor creation args for input stream index %d set EnableAlphaBlending, but this feature is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_BLENDING.
Video processor creation args for input stream index %d set EnableAutoProcessing to TRUE, but this feature is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAGS.
Video processor creation args for input stream index %d SourceAspectRatio != DestinationAspectRatio, but this feature is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_PIXEL_ASPECT_RATIO.
Video processor creation args requestion an AlphaFillMode that is not supported by driver.. %s  If the driver does not reportD3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_FILL, AlphaFillMode must be D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_OPAQUE.
Video Processor creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_PROCESS_PROTECTED_RESOURCES indicates protected resources are not supported.
Video Processor creation args specified a number of past frames or future frames that does not match driver requirements for these features.  %s  hr = 0x%x
Video processor creation args specified zero inputs in NumInputStreams.
Video Processor Creation arguments specified %d input streams, but the call to ID3D12VideoProcessCommandList::ProcessFrames only specified %d input streams
VideoDecoder
VideoDecoderHeap
VideoEncoder
VideoEncoderHeap
VideoExtensionCommand
VideoMotionEstimator
VideoMotionVectorHeap
VideoProcessor
View instance count (%u) is greater than the allowed maximum instance count (%u)
View instance flags (%u) set to unknown value.
Views of video formats cannot be created using a NULL Desc. Default Desc parameters cannot be used, as a View format must be supplied, not the same as the underlying video format.The View format is needed to indicate how the video surface (or part of it) will appear to shaders - see documentation.
VirtualAlloc
VirtualFree
VirtualProtect
VirtualQuery
VirtualQuery on pAddress failed. pAddress = 0x%p.
VisibleNodeMask
VMAP$
VMAP,
VMAP\
VMAP|
VMAP<
VMAP4
VMAPD
VMAPL
vpEK-
VS_VERSION_INFO
VWATAVAWH
VWAUAVAWH
VWAVH
VXH;V`
VXH;V`t
VXH;V`uVL
W?UjB
W\`.d
w<A9n
W0H+W(H
W8I;W@t
WaitForSingleObject
WaitForSingleObjectEx
WaitForSynchronizationObject
WaitForSynchronizationObject2
WaitForSynchronizationObjectFromCpu
WaitForSynchronizationObjectFromGpu
WaitForThreadpoolTimerCallbacks
WaitForThreadpoolWaitCallbacks
Washington1
WATAUAVAW
WATAUAVAWH
WATAVH
WATAWH
WAVAWH
WAVAWI
wb;F(r];N$wX;N,rSA;
wBA9F
wcsncmp
wcsnlen
wcsrchr
wcsstr
WerRegisterCustomMetadata
WerReportAddDump
WerReportCloseHandle
WerReportCreate
WerReportSetParameter
WerReportSubmit
WerSubmitResult
WerUnregisterCustomMetadata
WEVT_TEMPLATE
WEVT<
Wgeneric
When creating a committed resource, D3D12_HEAP_FLAGS must not have either D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES, D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES, nor D3D12_HEAP_FLAG_DENY_BUFFERS set. These flags will be set automatically to correspond with the committed resource type.
When creating a Counter Unordered Access View, the StructureByteStride on the view must be non-zero.
When creating a RAW Shader Resource View, the format must be DXGI_FORMAT_R32_TYPELESS.
When creating a RAW Shader Resource View, the offset of the first element from the start of the buffer must be a multiple of %d bytes.  Thus, FirstElement (%d) must be a multiple of %d since each element is 4 bytes.
When creating a RAW Shader Resource View, the offset of the first element from the start of the buffer must be a multiple of %u bytes.  Thus, FirstElement (%I64u) must be a multiple of %u since each element is 4 bytes.
When creating a RAW Unordered Access View, the format must be DXGI_FORMAT_R32_TYPELESS.
When creating a sampler feedback UAV, the targeted resource depth/array size needs to match the feedback resource depth/array size. Targeted resource DepthOrArraySize: %u, feedback resource DepthOrArraySize: %u.
When creating a sampler feedback UAV, the targeted resource height needs to match the feedback resource height. Targeted resource height: %u, feedback resource height: %u.
When creating a sampler feedback UAV, the targeted resource mip count needs to match the feedback resource mip count. Targeted resource MipLevels: %u, feedback resource MipLevels: %u.
When creating a sampler feedback UAV, the targeted resource width needs to match the feedback resource width. Targeted resource width: %u, feedback resource width: %u.
When D3D11 flags are passed to ID3D12CompatibilityDevice::CreateSharedResource, the keyed mutex property must match between the D3D11 flags and D3D12 compatibility flags.
When D3D11 flags are passed to ID3D12CompatibilityDevice::CreateSharedResource, the NT handle flag may not be set in the D3D11 flags if a non-NT handle is requested.
When D3D11 flags are passed to ID3D12CompatibilityDevice::CreateSharedResource, they must contain either D3D11_RESOURCE_MISC_SHARED or D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX.
When D3D12_FEATURE_VIDEO_ARCHITECTURE::IOCoherent is false, D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::p%sTexture2D must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM.  For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
When D3D12_FEATURE_VIDEO_ARCHITECTURE::IOCoherent is false, D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM.  For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
When D3D12_FEATURE_VIDEO_ARCHITECTURE::IOCoherent is false, D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM.  For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
When D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS is set in CreateCommittedResource, the resource flags must contain D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS. Otherwise, it suggests a waste of a constrained system resource.
When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set in CreateCommittedResource, the resource dimension must be D3D12_RESOURCE_DIMENSION_TEXTURE2D.
When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set in CreateCommittedResource, the resource format must be displayable (D3D12_FORMAT_SUPPORT1_DISPLAY).  To use other formats, use CreatePlacedResource instead.
When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set in CreateCommittedResource, the resource layout must be D3D12_TEXTURE_LAYOUT_ROW_MAJOR.
When D3D12_HEAP_FLAGS has D3D12_HEAP_FLAG_ALLOW_DISPLAY set, the following D3D12_RESOURCE_DESC members must be as follows: Dimension must be D3D12_RESOURCE_DIMENSION_TEXTURE2D, Alignment must be 0, DepthOrArraySize must be 1 or 2, MipLevels must be 1, SampleDesc.Count must be 1, SampleDesc.Quality must be 0, Layout must be D3D12_TEXTURE_LAYOUT_UNKNOWN (or ROW_MAJOR for cross-adapter heaps), and Flags must not have D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL or D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY or D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set.
When D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set, you must also set the following flags: 0x%x. Missing flags: 0x%x.
When D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set, you must also set the following flags: 0x%x. Missing flags: 0x%x.
When D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL is set in D3D12_RESOURCE_DESC::Flags, D3D12_CLEAR_VALUE::Format must be valid to be used as a depth stencil. FeatureLevel is %s. D3D12_CLEAR_VALUE::Format is %s.
When D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET is set in D3D12_RESOURCE_DESC::Flags, D3D12_CLEAR_VALUE::Format must be valid to be used as a render target. FeatureLevel is %s. D3D12_CLEAR_VALUE::Format is %s.
When D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Flags contains invalid bits.
When D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::EnableOrientation is FALSE, D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Transform.Orientation must specify D3D12_VIDEO_PROCESS_ORIENTATION_DEFAULT.
When decoding MinMip sampler feedback, the destination resource must have 1 mip level. Destination resource mip level count : %u.
When decoding sampler feedback, the destination resource needs to be a compatible format- e.g., R8_UINT or UNKNOWN. The passed-in format was %s.
When decoding sampler feedback, the destination subresource must have sample count 1, quality 0. Destination resource sample count : %u, quality %u.
When decoding sampler feedback, the source resource needs to be a sampler feedback format. The passed-in format was %s.
When encoding MinMip sampler feedback, the source resource must have 1 mip level. Source resource mip level count : %u.
When encoding MipRegionUsed sampler feedback, the source resource must have the same mip level count as the destination. The source resource mip level count is %u, and the destination mip level count is %u.
When encoding sampler feedback, the destination resource needs to be a sampler feedback format. The passed-in format was %s.
When encoding sampler feedback, the source resource needs to be a compatible format- e.g., R8_UINT or DXGI_FORMAT_UNKNOWN. The passed-in format was %s.
When encoding sampler feedback, the source subresource must have sample count 1, quality 0. Source resource sample count : %u, quality %u.
When ForcedSampleCount RasterizerState is > 0 (%d specified), a DepthStencilView cannot be bound. Rendering results are undefined across different hardware. 
When ForcedSampleCount RasterizerState is > 0 (%d specified), Depth and Stencil must be disabled in the DepthStencil state. Rendering results are undefined across different hardware. 
When ForcedSampleCount RasterizerState is > 0 (%d specified), the Pixel Shader cannot be configured to execute at sample-frequency. Rendering results are undefined across different hardware. 
When ForcedSampleCount RasterizerState is > 0 (%d specified), the Pixel Shader cannot output depth. Rendering results are undefined across different hardware. 
When ForcedSampleCount RasterizerState is > 1 (%d specified), any RenderTargetViews bound must have sample count 1 (%d specified) and quality level 0 or D3D11_STANDARD_MULTISAMPLE_PATTERN or D3D11_CENTER_MULTISAMPLE_PATTERN (%d specified). Rendering results are undefined across different hardware. 
When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, a ShaderResourceView cannot be created for a multisample resource when it is has the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL flag.
When ID3D12CompatibilityDevice::CreateSharedHeap is invoked, the heap flags must contain D3D12_HEAP_MISC_SHARED.
When ID3D12CompatibilityDevice::CreateSharedHeap is invoked, the heap flags must not contain D3D12_HEAP_MISC_SHARED_CROSS_ADAPTER.
When ID3D12CompatibilityDevice::CreateSharedResource is invoked with heap flags containing D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER, no compatibility shared flags may be used.
When ID3D12CompatibilityDevice::CreateSharedResource is invoked, the heap flags must contain D3D12_HEAP_MISC_SHARED.
When mode is set to D3D12_RESOLVE_MODE_DECOMPRESS, sample quality of destination resource must be match sample quality of source resource.
When MultisampleEnable is TRUE (controlling antialiased line algorithm, despite the misleading name), and the Feature Level is less than D3D_FEATURE_LEVEL_11_1, ForcedSampleCount cannot be 1
When no resource is specified, AlignedBufferOffset must be 0, and the operation must be D3D12_PREDICATION_OP_EQUAL_ZERO.
When pCounterResource is NULL, D3D12_BUFFER_UAV::CounterOffsetInBytes must be 0
When StructureByteStride is not 0, the UAV Flag D3D12_BUFFER_UAV_FLAG_RAW cannot be specified.
When the StructuredByteStride is nonzero, no SRV Flags are allowed.
When transcoding MipRegionUsed sampler feedback, the source resource must have the same mip level count as the destination. The source resource mip level count is %u, and the destination mip level count is %u.
When transcoding sampler feedback, the source and destination array sizes must match.
When using amplification shader, the mesh shader must be set as well.
When using tesselation, both the Hull Shader and Domain Shader must be set.  Otherwise, both must be NULL.
When using tessellation, the primitive topology type must be D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH
When ViewDimension is D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE, pResource must be NULL, since the resource location comes from a GPUVA in pDesc.
WhI;Wpt
WhI;Wpt<
Width
WilError_03
WilStaging_02
win:DC_Start
win:Info
win:LogAlways
win:Start
win:Stop
WriteBufferImmediate
WriteToSubresource
wT#@Z"?
wUdFo
wWH;K
x ATAUAVAW
x ATAUAVAWH
x ATAUAVH
x ATAUAVL
x ATAVAWH
x AUAVAWH
x AVAWH
x AVAWL
x AVH
x AVL
x AW3
x UATAUAVAWH
x UAVAWH
X UVWATAUAVAWH
x"T$x(T*x.T0x4P6x:P<x@TBxF
X0V0T
X16_TYPELESS_G8_UINT
X24_TYPELESS_G8_UINT
X32_TYPELESS_G8X24_UINT
XA_A^A]A\_^[]
XA_A^A]A\_^][
xAH9t$P
XD;d$0
xL;eo
Xn.L1
xSu$W
XX9|$(}"A
Xz) 7
Y$!Df.
ZaK{&
