 A^_^
 A^_^[]
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 A_A^A]
 A_A^A]A\_
 A_A^A]A\_^]
 H3E H3E
 Hcq0H
 LcIXL
 Microsoft Corporation. All rights reserved.
 Operating System
 tOH+
 tQH+
 Windows
!GetPackageId().empty()
!IsCallerLowIL(INVALID_USERCONTEXT_TOKEN)
!IsCallerLowIL(userContextToken)
!IsDisabledForAuditMode()
!m_packagePath.empty()
!m_shuttingDown
!m_threadHandle.IsValid()
!This program cannot be run in DOS mode.
!timedOut
#onecoreuap\shell\appreadiness\src\core\servicehandle.cpp
%08x%04x%04x%02x%02x%02x%02x%02x%02x%02x%02x
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%ls-%ld
%ls\%ls
%ls\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer
%s (OP:%ld)
%s!%s
%s\%s
(_^][
(A;OICI;KR;;;%ls)
(caller: %p) 
(D$ H
(D$ I
(t$ H
(t$@H
(t$`H
(t$PL
)L$`3
)t$ H
)t$@I
)t$`H
.?AV?$_Binder@U_Unforced@std@@P8BaseTask@Impl@AppReadiness@@EAAXXZPEAV345@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BitsJob@Tasks@AppReadiness@@EAAXJ@ZPEAV345@AEAJ@std@@
.?AV?$_Binder@U_Unforced@std@@P8Service@AppReadiness@@EAAKKKPEAX@ZPEAV34@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@AEBU?$_Ph@$02@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8Service@AppReadiness@@EAAXXZPEAV34@@std@@
.?AV?$_Binder@U_Unforced@std@@P8ServiceThread@AppReadiness@@EAAXXZPEAV34@@std@@
.?AV?$_Binder@U_Unforced@std@@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@@ZAEBQEAV3456@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@PEAUAppTileInfo@456@@ZAEBQEAV3456@AEBU?$_Ph@$00@2@PEAU8456@@std@@
.?AV?$_Binder@U_Unforced@std@@P8StoreMetadata@Store@Tasks@AppReadiness@@EAAXPEAUIXmlReader@@PEAUStoreProductInfo@456@@ZAEBQEAV3456@AEBU?$_Ph@$00@2@PEAU8456@@std@@
.?AV?$_Binder@U_Unforced@std@@P8StorePreviews@Tasks@AppReadiness@@EAAXAEBV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@ZAEBQEAV345@AEBV62@@std@@
.?AV?$_Binder@U_Unforced@std@@P8User@AppReadiness@@EAAXAEBVPackageList@Storage@4@AEBV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@W4PackageOperation@64@@ZPEAV34@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@AEBU?$_Ph@$02@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8User@AppReadiness@@EAAXXZPEAV34@@std@@
.?AV<lambda_014cab0cab04cd68e2be10418da5e0d4>@@
.?AV<lambda_059184e8f364dfe5c918358185397c68>@@
.?AV<lambda_06c6850fde8da887cd517357968c4ae9>@@
.?AV<lambda_0bcc98ca959988977d770fa3e03d2f54>@@
.?AV<lambda_0c07e0444efc832502d230ee7fa0e142>@@
.?AV<lambda_0c3c98a3ffdd97b039a27bc97b179d34>@@
.?AV<lambda_0d306acf83b7859f7d36ddbfcbb973fa>@@
.?AV<lambda_0d9817f6dbc8aeda67b627f18804a94a>@@
.?AV<lambda_1189efaae86922bef76cfe2d1a72244d>@@
.?AV<lambda_1294a3217eeaf3365e904623693af572>@@
.?AV<lambda_142f328f0f5263d46afa27a8d729e0ca>@@
.?AV<lambda_17ba42748e2727430c8699c6f60dcb65>@@
.?AV<lambda_25f2030bb0adc8d661dad49216f5968d>@@
.?AV<lambda_25f85fa8dc0afc9a4b936628c59fdf50>@@
.?AV<lambda_28a3fd2e6330a1e74e9d3fecc540a238>@@
.?AV<lambda_295b4f86e86c806a61df66ae415d5662>@@
.?AV<lambda_299a44f13592b9491158ee6e4a133dbe>@@
.?AV<lambda_2b0cfc0b17827540cdb24d982640d657>@@
.?AV<lambda_2d505178ee7a7751919ef4d31709b408>@@
.?AV<lambda_2f28e63ded93161ed928b58071dfc198>@@
.?AV<lambda_3048fe65334b5b5095ceea7a4f4baa7b>@@
.?AV<lambda_336e0e5d673baa22c75467757fe8e861>@@
.?AV<lambda_39272d6abadef53bcfb0351184d625eb>@@
.?AV<lambda_430695d27e8d89ce3074404eeb12fa25>@@
.?AV<lambda_43ab69f696f053ba9a3aceffa295d12f>@@
.?AV<lambda_4698ab28ec52e54293df26a96b734ce8>@@
.?AV<lambda_47e81c02f6ba06796b3dab29b6f471d8>@@
.?AV<lambda_4824698002a422f4a066b2df197de1b1>@@
.?AV<lambda_485ce827346b17e86bb5c3132b612a78>@@
.?AV<lambda_49610b74a9ac021e676cb4a5cfefd9d6>@@
.?AV<lambda_4afcc1ee4e57d5e8e41e2e1d5bbaa70d>@@
.?AV<lambda_4dd8fa2eb934f16df9436b20a6df34e1>@@
.?AV<lambda_51dfd689f2aac3564a10e903676f50c2>@@
.?AV<lambda_52c2090915f50c466d198c45fe1a8e5f>@@
.?AV<lambda_556349a63bf27002c1a50d52b1b34303>@@
.?AV<lambda_570bafad0f0b813017d9ad6aa27ecb59>@@
.?AV<lambda_57d9386513a4d94cfd51b06ca8a7d46d>@@
.?AV<lambda_5838afd94790d3cbffa5dda7aa9098b7>@@
.?AV<lambda_5a6acf04df402cae884b98469e23c399>@@
.?AV<lambda_5a85447ba431549e0a222db8c97833b2>@@
.?AV<lambda_5c6736842d991db650b42223f7e4816b>@@
.?AV<lambda_5e33cb52fd1397fc065cc5c2d0a4e387>@@
.?AV<lambda_600d56ae6c6a6d9c9167befac3d386f5>@@
.?AV<lambda_639c96d30cc89c5a11d708565c2b2b4d>@@
.?AV<lambda_6460ad8e0ff6617b13d99557fc3c1b09>@@
.?AV<lambda_64c9b63fd339abd85b939300b0f84b34>@@
.?AV<lambda_7107b8fccdf0da6a6aed3a674bf438cc>@@
.?AV<lambda_75b3b9543fadc4d37f26eac1cb7080f5>@@
.?AV<lambda_7e38c78a0344853bd720689f326fd9d4>@@
.?AV<lambda_7ea297f2d41404fc3c405bbe4ca0a690>@@
.?AV<lambda_812f9af6c08a4a5d99724105fcc2215b>@@
.?AV<lambda_8190e29206d2b8d41bfc4997fea79c2c>@@
.?AV<lambda_87d832129ad201ee801054809d7b13d2>@@
.?AV<lambda_8957fee8463b959276456525d5b4238f>@@
.?AV<lambda_8e8ad3231b95925db78b552beb19a479>@@
.?AV<lambda_9083cafc8ed8195a55ddf6ca893dab8d>@@
.?AV<lambda_9589251a970e78d1ddcd315190589694>@@
.?AV<lambda_978ea46a25a3ded64d79aada8b677b5e>@@
.?AV<lambda_a076bbc7f89add10f81254c9d33efc83>@@
.?AV<lambda_a76a33b87354129e813bd1871289a139>@@
.?AV<lambda_a8509fcfad1a45f408255ce6830d28bd>@@
.?AV<lambda_ad751e5a339a58fd1c7e0365f0e8c749>@@
.?AV<lambda_b548ad810831a212473338b82dc26717>@@
.?AV<lambda_b62627bf7d4402e1b915d8f4360132e2>@@
.?AV<lambda_b78a93812c60c50148ae01cda1300639>@@
.?AV<lambda_bdb2e0d9b12acf04bb46a3d3e040060a>@@
.?AV<lambda_bffdce50144f0d91cbe283fdca3fe76b>@@
.?AV<lambda_c019223e4f4944217c4495e37201f4a7>@@
.?AV<lambda_c07951d9657b8396b912d0f25a2bef47>@@
.?AV<lambda_c09e1c2ae8ab5fff9de3666bd6f25d24>@@
.?AV<lambda_c24907e189e215934619e99e76d21319>@@
.?AV<lambda_c2df7943fa7afda7df2566226fb59205>@@
.?AV<lambda_c39963d3d99fb065646a8b528bf17fdf>@@
.?AV<lambda_c4078ed07cfbfe877d20f4be618a5063>@@
.?AV<lambda_c7106bf98f2acb2799c70f843b0aecf3>@@
.?AV<lambda_c87d1e472f81650a7ba3b2c8ff6cb695>@@
.?AV<lambda_cac1a1b0ea33025184f417a4d0791b45>@@
.?AV<lambda_ce4e435538744e9c8f192739c7138d69>@@
.?AV<lambda_d06add2353a1f69e19e0eb708060d6a4>@@
.?AV<lambda_d0852fa25e1784d5f5d4812ba6c399cb>@@
.?AV<lambda_d69fb07189bf00421afeab77907f6e6f>@@
.?AV<lambda_dab92f77245a1eb8f79040f0ff5af966>@@
.?AV<lambda_db61294160912edced42e1148f4f6230>@@
.?AV<lambda_db6657c61ae4279eb1f7ae32b9300d60>@@
.?AV<lambda_dba911bfb1da375ffdf80e0c42431b85>@@
.?AV<lambda_dd39e6dcb5d04511bc1e6546473bb988>@@
.?AV<lambda_dd705a326c125b71213fed45a0eccb1e>@@
.?AV<lambda_e0e87239708387cad7849d8a521420fa>@@
.?AV<lambda_e47fd043e2dca7ef4575152d5d90605d>@@
.?AV<lambda_e4e349c3e454b0103814aa050c77b0fd>@@
.?AV<lambda_e5100d168024f915040f3b5be6f43e67>@@
.?AV<lambda_e714e6538ce61b4c1a38591bc1f4dacf>@@
.?AV<lambda_ebd7c05d2758b1f4bb534880860c32a8>@@
.?AV<lambda_efa7faa559d168b6ef9dbc0b5b87d868>@@
.?AV<lambda_f3640a60216394c1959949497949bde7>@@
.?AV<lambda_f4420c5b197d3e2848bd1b6479aed436>@@
.?AV<lambda_fb0a4561c778e17e580c47e7a5386748>@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVexception@std@@
.?AVHResultException@Windows@@
.?AVResultException@wil@@
.?AVtype_info@@
.00cfg
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$00
.data$00$brc
.data$dk00
.data$dk00$brc
.data$r$brc
.data$rs$brc
.data$zz
.data$zz$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gehcont
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.P6A_NPEAUIXmlReader@@PEBG@Z
.pdata
.rdata
.rdata$00
.rdata$brc
.rdata$r
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zz$brc
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$di
.text$lp00appreadiness.dll!50_coldboot
.text$mn
.text$mn$00
.text$np
.text$x
.text$yd
.text$zy
.text$zz
.tls$
.tls$ZZZ
.xdata
.xdata$x
;Q0s)
;t$@t
;t$`r
?_Xbad_function_call@std@@YAXXZ
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
@.data
@.didat
@.reloc
@8}0u
@8t$@u
@A^_]
@A^_^
@A_A^_
@A_A^_^[
@A_A^_^]
@A_A^A]A\_^[
@A_A^A]A\_^]
@GhostedSecondaryTileReplacementLogo.png
@SUVWATAVAWH
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SVWATAUAVAWH
@SVWH
@u;L9;u$E3
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAVAWH
@USVWATAVH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWH
[ UVWH
[%hs(%hs)]
[%hs]
\$ UH
\$ UVW
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ UVWH
\$ WH
\$(E3
\$8I;
\$PfD
\$xHi
\$xI;
]<(/h
]<Z?$
__C_specific_handler
__C_specific_handler_noexcept
__CxxFrameHandler3
__CxxFrameHandler4
__std_terminate
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_APPX_PREREGISTER, TaskPriority::PreShell)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_INBOX_GROUP, AppReadiness::TaskPriority::InboxGroup)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_OEM_FIRST_RUN, LogonOptimizationPermitted(LogonOptimizationFlags::DisableAppInstallsOnFirstLogon) ? TaskPriority::Low : TaskPriority::High)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_PREROAMING_GROUP, AppReadiness::TaskPriority::PreRoamingGroup)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_RESOLVE_STORE_CATEGORIES, TaskPriority::Low)
__super::RuntimeClassInitialize(user, APPREADINESS_TASK_USER_LOGON, AppReadiness::TaskPriority::UserLogonGroup)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_prefix, package->GetPackageFamilyName()), package)
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_UnregisterTaskIdPrefix, endOfLifePackageFullName == nullptr? packageFamilyName: endOfLifePackageFullName))
__super::RuntimeClassInitialize(user, BuildTaskIdWithPackageFamilyName(c_UnregisterTaskIdPrefix, packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, c_PreviewTaskName, TaskPriority::PreviewTile)
__super::RuntimeClassInitialize(user, InstallPackage::BuildId(packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, RemovePackage::BuildId(packageInfo->GetPackageFamilyName()), packageInfo)
__super::RuntimeClassInitialize(user, taskId, packageInfo, priority)
__super::RuntimeClassInitialize(user, taskName, TaskPriority::SystemTask)
_Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages\
_CoAllocStringArray(packages.data(), packages.size(), packageFamilyNames)
_CxxThrowException
_initterm
_initterm_e
_Lock_shared_ptr_spin_lock
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__ui64tow_s
_o_free
_o_malloc
_o_mbstowcs
_o_realloc
_o_wcstok_s
_o_wcstoul
_onecoreuap\shell\appreadiness\src\groups\userlogon.cpp
_Unlock_shared_ptr_spin_lock
`.rdata
`A^_^
`A^_^[]
`A__^[]
`A_A^_^[
`A_A^_^]
`A_A^A\_^[]
`A_A^A]A\_^]
`L;d$8
{ AVH
|$ AVH
|$ E3
|$ fD
|$ Lc
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$p9|$4
|$XE3
|onecoreuap\shell\appreadiness\src\tasks\pause.cpp
}0!}@I
~0H+~(H
~HD+x
<4!Uwl
<unknown>
040904B0
0A^_]
0A^_^
0A^_^[]
0A^_^][
0A_A^]
0A_A^_
0A_A^_^]
0A_A^A\_^
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0x%08lx
10.0.22000.1165
10.0.22000.1165 (WinBuild.160101.0800)
3333333
3H!;H
3H97u
58f01454-6895-42be-a245-ea2d809e1c2a
5onecoreuap\shell\appreadiness\src\groups\installpackage.cpp
6H9p0t'H
7f9t$ u
8\$0t
8_^][
8A_A^_^[]
9*v4H
9\$@t
9\$`vA
9\$Hu
9\$Hu:H
9|$@u1H
9}8v_
9+}EH
9D$XH
9D$XwX+D$X
9E0uRL
9O4t=
9O4t>
9Pefs
9s(v'H
9T$xH
9T$xwO3
9u8v_H
9W(s%A
A(A;@
A,9A(
A;~Lt
A;P@s
A^_^[]
A^_^][
A^A\_^[]
A^A\_^]
A^A]A\_^[]
A_A\]
A_A\_^[]
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]_]
A_A^A]_^
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A9_0t0H
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/i
absoluteUri->get_AbsoluteCanonicalUri(uriStr.GetAddressOf())
AcquireSRWLockExclusive
AcquireSRWLockShared
ActivatableApps
ActivatableClsid
activateApps
activatibleClassId
ActiveSetupDisabled
ActiveSetupTaskOverride
ActivityId
advapi32.dll
AllocateAndInitializeSid
AllocateAndInitializeSid(&sidAuth, 2, SECURITY_BUILTIN_DOMAIN_RID, DOMAIN_ALIAS_RID_ADMINS, 0, 0, 0, 0, 0, 0, &sidGroup)
Aonecoreuap\shell\appreadiness\src\core\api.cpp
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-biplmapi-l1-1-0.dll
api-ms-win-core-biptcltapi-l1-1-7.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-debug-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-2.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-4.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-heap-obsolete-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-shlwapi-obsolete-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-controller-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-shcore-registry-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shcore-sysinfo-l1-1-0.dll
ApiSetQueryApiSetPresence
appDataVolumeNameString.Set(appDataVolumeName.c_str(), static_cast<UINT>(appDataVolumeName.length()))
AppId
Applicable
ApplicationManagement
AppModelRoot
AppReadiness
AppReadiness-%04d%02d%02d-%02d%02d%02d.etl
AppReadiness.dll
AppReadiness.etl
AppReadiness.pdb
AppReadiness::Api::CreateTask
AppReadiness::Api::CreateTaskForUser::<lambda_0c07e0444efc832502d230ee7fa0e142>::operator ()
AppReadiness::Api::CreateUser
AppReadiness::Api::DoesCallerHaveAdminRights
AppReadiness::Api::EnterLogonPhaseForUser
AppReadiness::Api::EnterLogonPhaseForUser::<lambda_51dfd689f2aac3564a10e903676f50c2>::operator ()
AppReadiness::Api::ExecuteOperationsIfAppropriate::<lambda_0d306acf83b7859f7d36ddbfcbb973fa>::operator ()
AppReadiness::Api::GetTaskForUser::<lambda_1294a3217eeaf3365e904623693af572>::operator ()
AppReadiness::Api::HandlePackageChange::<lambda_ebd7c05d2758b1f4bb534880860c32a8>::operator ()
AppReadiness::Api::InstallForUser::<lambda_3048fe65334b5b5095ceea7a4f4baa7b>::operator ()
AppReadiness::Api::IsCallerLowIL
AppReadiness::Api::RemoveForUser::<lambda_39272d6abadef53bcfb0351184d625eb>::operator ()
AppReadiness::Api::ResolveStoreCategories::<lambda_5a6acf04df402cae884b98469e23c399>::operator ()
AppReadiness::AppReadinessModule::AppReadinessModule
AppReadiness::BrokerSession::NotifyOfInstalledPackages
AppReadiness::CreateUserTokenUsingWts
AppReadiness::ExpandEnvironmentStringsW
AppReadiness::GetPackageFamilyName
AppReadiness::GetRegistryIntWithDefault
AppReadiness::Groups::AddToPreviewTask
AppReadiness::Groups::FirstLogonGroup::GetFirstLogonAppPackageFamilyNames::<lambda_75b3b9543fadc4d37f26eac1cb7080f5>::operator ()
AppReadiness::Groups::FirstLogonGroup::OnComplete::<lambda_2f28e63ded93161ed928b58071dfc198>::operator ()
AppReadiness::Groups::InboxGroup::RuntimeClassInitialize
AppReadiness::Groups::InstallPackage::Create
AppReadiness::Groups::InstallPackage::CreateLocalFlow
AppReadiness::Groups::InstallPackage::CreateStoreFlow
AppReadiness::Groups::InstallPackage::OnStarted
AppReadiness::Groups::InstallPackage::RuntimeClassInitialize
AppReadiness::Groups::OemFirstRun::RuntimeClassInitialize
AppReadiness::Groups::PreRoamingGroup::RuntimeClassInitialize
AppReadiness::Groups::Previews::CreateTask
AppReadiness::Groups::Previews::OnStarted
AppReadiness::Groups::Previews::Previews
AppReadiness::Groups::RemovePackage::Create
AppReadiness::Groups::RemovePackage::OnStarted
AppReadiness::Groups::RemovePackage::RuntimeClassInitialize
AppReadiness::Groups::UserLogon::OnStarted
AppReadiness::Groups::UserLogon::RuntimeClassInitialize
AppReadiness::ImmersivePolicy::GetAllDefaultApps
AppReadiness::ImmersivePolicy::ImmersivePolicy
AppReadiness::Impl::BaseTask::Cancel::<lambda_1189efaae86922bef76cfe2d1a72244d>::operator ()
AppReadiness::Impl::BaseTask::RuntimeClassInitialize
AppReadiness::Impl::BaseTaskGroup::Add
AppReadiness::Impl::BaseTaskGroup::ExecuteTask
AppReadiness::Impl::BaseTaskGroup::OnComplete
AppReadiness::Impl::BaseTaskGroup::OnProgress
AppReadiness::Impl::BaseTaskGroup::Remove
AppReadiness::Impl::BaseTaskGroup::RuntimeClassInitialize
AppReadiness::Impl::SearchForCallback
AppReadiness::LogUserLoadedPackages::<lambda_0d9817f6dbc8aeda67b627f18804a94a>::operator ()
AppReadiness::PackageInfo::GetMainPackageId
AppReadiness::PackageInfo::GetManifestPath
AppReadiness::PackageInfo::GetPackageFullName
AppReadiness::PackageInfo::GetPackageManager
AppReadiness::PackageInfo::GetPackagePath
AppReadiness::PackageInfo::HasLockScreenApp
AppReadiness::PackageInfo::IsBundle
AppReadiness::PackageInfo::IsFramework
AppReadiness::PackageInfo::IsPackageFamilyInstalledFor
AppReadiness::PackageInfo::IsPackageInstalledFor
AppReadiness::PackageInfo::MarkStatus
AppReadiness::PackageInfo::MarkStatusForEndOfLifePackage
AppReadiness::PackageInfo::NeedsPreviewTile::<lambda_978ea46a25a3ded64d79aada8b677b5e>::operator ()
AppReadiness::PackageInfo::SetPreInstalled
AppReadiness::PackageInfo::SetUseLocalFlow
AppReadiness::PackageInfo::SupportsMultipleUsers
AppReadiness::PackagesToBeInstalledIterator::PackagesToBeInstalledIterator
AppReadiness::Service::CheckAndStopIfIdle
AppReadiness::Service::CreateUser
AppReadiness::Service::GetSessionUserToken
AppReadiness::Service::GetSystemUser
AppReadiness::Service::GetTokenSid
AppReadiness::Service::IsSessionShared
AppReadiness::Service::OnServiceStart::<lambda_25f85fa8dc0afc9a4b936628c59fdf50>::operator ()
AppReadiness::Service::OnUserLogon
AppReadiness::Service::SetGlobalComOptions
AppReadiness::Service::Start
AppReadiness::ServiceHandle::RegisterControlHandler
AppReadiness::ServiceThread::GetHandle
AppReadiness::ServiceThread::ServiceThread
AppReadiness::ServiceThread::Start
AppReadiness::Storage::PackageList::CreateSecurityDescriptor
AppReadiness::Storage::PackageList::InitRegistry
AppReadiness::Storage::PackageList::InitRegistry::<lambda_e656ba67a3651286fa9634e6a3976f16>::operator ()
AppReadiness::Storage::PackageList::MarkAllUsersAs
AppReadiness::Storage::PackageList::OpenUserMachineRoot
AppReadiness::Storage::PackageList::OpenUserQueueRoot
AppReadiness::Storage::PackageList::SetUserStateDWORD
AppReadiness::Storage::PackageMetadata::Clear
AppReadiness::Storage::PackageMetadata::CreateMetadataKey
AppReadiness::Storage::PackageMetadata::Set
AppReadiness::Storage::PBRPackageList::GetUserRoot
AppReadiness::Storage::WriteRegistryValue
AppReadiness::System::IsFreeNetworkAvailable
AppReadiness::System::IsNetworkConnected
AppReadiness::Tasks::ActivateApps::ComputeNumberOfSecondsActivated
AppReadiness::Tasks::ActivateApps::OnExecute
AppReadiness::Tasks::ActivateApps::OnExecute::<lambda_b78a93812c60c50148ae01cda1300639>::operator ()
AppReadiness::Tasks::ActivateApps::OnExecute::<lambda_f3640a60216394c1959949497949bde7>::operator ()
AppReadiness::Tasks::ActivateApps::OnStarted
AppReadiness::Tasks::ApplicablePackages::ApplicablePackages
AppReadiness::Tasks::AppxPreRegister::RuntimeClassInitialize
AppReadiness::Tasks::AppxPreviews::Invoke::<lambda_e5100d168024f915040f3b5be6f43e67>::operator ()
AppReadiness::Tasks::AppxPreviews::OnExecute
AppReadiness::Tasks::AppxPreviews::OnExecute::<lambda_49610b74a9ac021e676cb4a5cfefd9d6>::operator ()
AppReadiness::Tasks::AppxPreviews::RuntimeClassInitialize
AppReadiness::Tasks::BitsJob::CreateTemporaryFileName
AppReadiness::Tasks::BitsJob::CreateTemporaryFileName::<lambda_dd39e6dcb5d04511bc1e6546473bb988>::operator ()
AppReadiness::Tasks::BitsJob::GetUriFileExtension
AppReadiness::Tasks::BitsJob::JobError::<lambda_7ea297f2d41404fc3c405bbe4ca0a690>::operator ()
AppReadiness::Tasks::BitsJob::JobTransferred::<lambda_c39963d3d99fb065646a8b528bf17fdf>::operator ()
AppReadiness::Tasks::BitsJob::StartJob
AppReadiness::Tasks::BitsJob::StartJob::<lambda_5a85447ba431549e0a222db8c97833b2>::operator ()
AppReadiness::Tasks::CreateBundleReader
AppReadiness::Tasks::CreateGuidString
AppReadiness::Tasks::DetermineApplicableResourcePackages
AppReadiness::Tasks::FindPlaceHoldersIn
AppReadiness::Tasks::GetAppxPackageRoot
AppReadiness::Tasks::GetMainPackagesForBundle
AppReadiness::Tasks::GetPackagePath
AppReadiness::Tasks::GetPackageResourcePri
AppReadiness::Tasks::Impl::PreviewTileTask::RuntimeClassInitialize
AppReadiness::Tasks::LocalPreviews::GetPackageResourceFiles
AppReadiness::Tasks::LocalPreviews::OnExecute::<lambda_43ab69f696f053ba9a3aceffa295d12f>::()::<lambda_d0852fa25e1784d5f5d4812ba6c399cb>::operator ()
AppReadiness::Tasks::operator -
AppReadiness::Tasks::PackageChanges::OnExecute
AppReadiness::Tasks::PackageChanges::PackageChanges
AppReadiness::Tasks::Pause::OnExecute
AppReadiness::Tasks::Pause::RuntimeClassInitialize
AppReadiness::Tasks::RegisterPackage::Invoke::<lambda_639c96d30cc89c5a11d708565c2b2b4d>::operator ()
AppReadiness::Tasks::RegisterPackage::OnExecute
AppReadiness::Tasks::RegisterPackage::OnStarted
AppReadiness::Tasks::RemoveBackup::RuntimeClassInitialize
AppReadiness::Tasks::RemovePreviews::GetInstallState::<lambda_dab92f77245a1eb8f79040f0ff5af966>::operator ()
AppReadiness::Tasks::RemovePreviews::OnExecute::<lambda_57d9386513a4d94cfd51b06ca8a7d46d>::operator ()
AppReadiness::Tasks::ResolveStoreCategories::OnExecute::<lambda_47e81c02f6ba06796b3dab29b6f471d8>::operator ()
AppReadiness::Tasks::ResolveStoreCategories::RuntimeClassInitialize
AppReadiness::Tasks::Store::ConvertToULong
AppReadiness::Tasks::Store::ParseXmlIntoStruct
AppReadiness::Tasks::Store::ReadArray
AppReadiness::Tasks::Store::ReadElementString
AppReadiness::Tasks::Store::Skip
AppReadiness::Tasks::Store::StoreMetadata::Create
AppReadiness::Tasks::Store::StoreMetadata::Create::<lambda_299a44f13592b9491158ee6e4a133dbe>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::Create::<lambda_bffdce50144f0d91cbe283fdca3fe76b>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::CreateAbsoluteUrl
AppReadiness::Tasks::Store::StoreMetadata::CreatePropertyStore
AppReadiness::Tasks::Store::StoreMetadata::InitPlaceholderPath
AppReadiness::Tasks::Store::StoreMetadata::InitPlaceholderPath::<lambda_c03725ad071df1d119203d2c88f85573>::operator ()
AppReadiness::Tasks::Store::StoreMetadata::Parse
AppReadiness::Tasks::StoreInstall::OnStarted
AppReadiness::Tasks::StoreInstall::OnStarted::<lambda_8190e29206d2b8d41bfc4997fea79c2c>::operator ()
AppReadiness::Tasks::StoreInstall::ReacquirePackage::<lambda_db6657c61ae4279eb1f7ae32b9300d60>::operator ()
AppReadiness::Tasks::StorePreviews::CreateTileForPackage
AppReadiness::Tasks::StorePreviews::GetSecondPassImages::<lambda_570bafad0f0b813017d9ad6aa27ecb59>::operator ()
AppReadiness::Tasks::UnregisterPackage::FindPackageIdToRemove
AppReadiness::Tasks::UnregisterPackage::Invoke::<lambda_4afcc1ee4e57d5e8e41e2e1d5bbaa70d>::operator ()
AppReadiness::Tasks::UnregisterPackage::OnExecute
AppReadiness::Tasks::UnregisterPackage::OnExecute::<lambda_dba911bfb1da375ffdf80e0c42431b85>::operator ()
AppReadiness::Tasks::UnregisterPackage::RuntimeClassInitialize
AppReadiness::User::CloseFirewallPolicyStore
AppReadiness::User::CreateAppxPrepareTask
AppReadiness::User::CreateTask
AppReadiness::User::ExecuteUnderContext
AppReadiness::User::GetDefaultAccountSid
AppReadiness::User::GetWellKnownSid
AppReadiness::User::IsMemberOfDefaultSystemManagedGroup
AppReadiness::User::IsVDI
AppReadiness::User::MarkPackageError
AppReadiness::User::OnComplete
AppReadiness::User::OpenFirewallPolicyStore
AppReadiness::User::ProcessTasks
AppReadiness::User::RuntimeClassInitialize
AppReadiness::User::SuspendActivity
AppReadiness::WinStore::StoreCallbackImpl::Register
AppReadiness_Api_CreateTask
AppReadiness_Api_DisableInAuditMode
AppReadiness_Api_EnterLogonPhase
AppReadiness_Api_GetTask
AppReadiness_Api_HandlePackageChange
AppReadiness_Api_Install
AppReadiness_Api_ProcessTasks
AppReadiness_Api_Remove
AppReadiness_Api_ResolveStoreCategories
AppReadiness_BrokerSession
AppReadiness_Error
AppReadiness_ExecuteTask
AppReadiness_MaintenanceTask_Run
AppReadiness_PackageChange
AppReadiness_PerfTrack
AppReadiness_PreRegister_Package
AppReadiness_ScorePackage
AppReadiness_Service
AppReadiness_Service_Lifetime
AppReadiness_Service_Thread
AppReadiness_Timeline
AppReadiness_TriggerTask_Run
AppReadiness_User_ProcessTasks
AppReadiness_User_Shutdown
AppReadinessDirectory
AppReadinessException
AppReadiness-Service
apps->GetAt(appIndex, IID_PPV_ARGS(&app))
apps->GetCount(&numApps)
appTile->QueryInterface(appTilePriv.GetAddressOf())
appTilePriv->GetPropertyStore(&propstore)
AppXAllUserStore.dll
AppxAllUserStore::IsInboxPackage(m_packageId.c_str(), &isInbox)
AppxAllUserStore::IsInboxPackage(packageFullName, &isInbox)
AppxAllUserStore::MarkStatusOfMainPackageForUser(user->GetUserSid().c_str(), user->IsSpecialProfile(), &mainPackage, resultCode)
AppxAllUserStore::TryGetEndOfLifePackageFullName( GetUser()->GetUserSid().c_str(), packageFamilyName, removePackageFullName, ARRAYSIZE(removePackageFullName), &found)
AppxApplicabilityEngine.dll
AppxDeploymentClient.dll
AppXDeploymentClient.dll
AppxManifest.xml
AppxMetadata\AppxBundleManifest.xml
AppxPreviews
are now disconnected.
ARS-GetMetadata(%ls)-%04d-%02d-%02d-%02d-%02d-%02d.txt
ART:AppxPreRegistration
ART:InboxGroup
ART:OemFirstRun
ART:OnDemandSyncGroup
ART:PreRoamingGroup
ART:ResolveStoreCategories
ART:UserFirstLogon
ART:UserLogon
asyncInfo->get_ErrorCode(&operationResult)
AsyncRunOnce
AsyncUpdatePCSettings
ATAVAWH
AttemptAfter
AuditBoot
B L+J@L
BackupData
BackupSize
bad array new length
BaseTask::RuntimeClassInitialize(user, taskId, priority)
BiChangeApplicationStateForPackageName
BiChangeSessionState
BiPtAssociateApplicationExtensionClass
BiPtQuerySystemStateBroadcastChannels
BiPtQuerySystemStateBroadcastChannels(&channels)
bitsManager->CreateJob(text.Get(), BG_JOB_TYPE_DOWNLOAD, &jobId, &job)
BrokerSession
BX9A4t
C H!C(H
C\$pI
c5(k;
c9\$@t
C9fD97u-
callback->QueryInterface(callbackUnknown.GetAddressOf())
callContext
CallContext:[%hs] 
Cancel
Cancel()
Cannot find a main or optional package with the user although a package in the same family is registere by the user. Either the package is removed before OnDemandSync is finished (race condition) or State Repository contains bad data (eg, PackageUser table has bundle for a user but not main or optional packages for the user). User SID: %ws, registered package full name: %ws
cArgs >= 1
CD$8L
CEnumerableObjectCollection::CreateInstance(IID_PPV_ARGS(&apps))
CHAN8
CheckRemoteDebuggerPresent
CheckTokenMembership
CheckTokenMembership(userToken.Get(), static_cast<PSID>(sidBuffer), &isMember)
CL$@I
CL$`E3
ClientGetAllPackagesToBeInstalledForUser(nullptr, false, &packages, &packageCount)
ClientGetAllPackagesToBeInstalledForUser(userSid.c_str(), specialProfile, &m_packagesToBeInstalled, &m_numPackagesToBeInstalled)
CloseHandle
CloseState
CloseThreadpoolTimer
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateGuid(&guid)
CoCreateInstance
CoCreateInstance(__uuidof(::PackageInformation), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInformation))
CoCreateInstance(__uuidof(AppxBundleFactory), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&factory))
CoCreateInstance(__uuidof(BackgroundCopyManager), nullptr, CLSCTX_LOCAL_SERVER, IID_PPV_ARGS(&bitsManager))
CoCreateInstance(__uuidof(PackageInformation), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInfo))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&packageInstallStateStore))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&stateStore))
CoCreateInstance(__uuidof(PackageInstallStateStore), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(stateStore.GetAddressOf()))
CoCreateInstance(__uuidof(PackageInstallStateStoreEnum), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(stateStoreEnum.GetAddressOf()))
CoCreateInstance(CLSID_GlobalOptions, nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(globalOptions.GetAddressOf()))
CoDisconnectContext
CoFreeUnusedLibraries
CoGetApartmentType
CoGetCallContext
CoGetMalloc
CoGetSharedServiceId(&m_serviceId)
CoImpersonateClient
CoInitializeSecurity
CoInitializeSecurity(reinterpret_cast<PSECURITY_DESCRIPTOR>(const_cast<GUID*>(&appIdAppReadiness)), -1, nullptr, nullptr, RPC_C_AUTHN_LEVEL_PKT, RPC_C_IMP_LEVEL_IDENTIFY, nullptr, EOAC_NO_CUSTOM_MARSHAL | EOAC_DYNAMIC_CLOAKING | EOAC_DISABLE_AAA | EOAC_APPID, nullptr)
combase.dll
ComDisconnectableObjectManager::Initialize()
ComDisconnectableObjectManager::MakeAndInitializeDisconnectableObject<AppReadiness::Impl::ExternalTaskWrapper>(task, taskToWrap.Get())
ComDisconnectableObjectManager::MakeAndInitializeDisconnectableObject<ExternalStoreCallback>(progressWrapper.GetAddressOf(), this)
CompanyName
CompareFileTime
CompareStringOrdinal
Completed
completed
completedOperation->QueryInterface(asyncInfo.GetAddressOf())
connection->GetNetworkConnectivityLevel(&level)
connectionCost->get_NetworkCostType(&cost)
ConvertSidToStringSid(reinterpret_cast<SID*>(sid), &rawSidStr)
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptor(userKeyAcl.c_str(), SDDL_REVISION_1, &rawPtr, nullptr)
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertStringSidToSidW
CoRegisterClassObject
CoRegisterServerShutdownDelay(m_outstandingObjects.Get(), c_MaxWaitForObjects)
CoResumeClassObjects
CoRevertToSelf
CoRevokeClassObject
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
CoWaitForMultipleHandles
CreateDirectory(tempPath, nullptr)
CreateDirectoryW
CreateEventExW
CreateEventW
CreateFileW
CreateMutexExW
CreatePreviewTileOnly
CreateSemaphoreExW
CreateSemaphoreW
CreateStreamOnHGlobal
CreateThread
CreateThreadpoolTimer
CreateTimerQueueTimer
CreateWellKnownSid
CreateWellKnownSid(sidType, domainSid, reinterpret_cast<SID*>(sid), &sidLen)
CreateWellKnownSid(WinBuiltinDefaultSystemManagedGroupSid, nullptr, sidBuffer, &sidSize)
CreateXmlReader
CreateXmlReader(IID_PPV_ARGS(&reader), nullptr)
CreateXmlReaderInputWithEncodingName
CreateXmlReaderInputWithEncodingName(reinterpret_cast<ISequentialStream*>(this), nullptr, L"utf-16", true, nullptr, &readerInput)
CreateXmlWriter
CreateXmlWriterOutputWithEncodingName
CT$@H
currentContextId
currentContextMessage
currentContextName
CxhOnlyUse
Cy A;
Cy(A;
D$ 0u
D$ E3
D$ H;
D$ H9G
D$ Hi
D$(E3
D$(H;
D$(H+
D$(L+
D$,D8-
D$@E3
D$@f9
D$@H;
D$@t2
D$`E3
D$`fD98t
D$`H;
D$`H+
D$`I;
D$`L;C
D$0D9r
D$0E3
D$0fD9 t
D$0H;
D$0H+
D$0L;
D$8E3
D$8H0
D$D!D$D3
D$H!D$@
D$hE3
D$HE3
D$HH;
d$pA!4$I
D$pE3
D$PE3
D$pE3
D$PH;
d$PI;
D$PL;
D$xA;
D$xE3
D$xH;D$pu
D$XL;F`t
D:P(A;OICI;KA;;;BA)(A;OICI;KA;;;S-1-5-80-2020831507-1298702824-3288167190-116113825-4190209)
D;A(D
D;d$D
D;l$p
D;v(r
D;y D
D;y(D
D8{3t
D8d$0t4D
D8d$1A
D8d$2t
D8d$A
D8l$@
D8l$@u
D9d$(|
D9d$p
D9k(uPH
D9l$(|
D9mgt
D9MwA
D9t$(|
D9t$hu
D9t$P
D9-Wc
DebugBreak
DecodePointer
DelayLoadFailureHook
DeleteAllPackagesFromPackageArray
DeleteCriticalSection
DeleteFileW
DeleteTimerQueueTimer
deploymentOperation->put_Completed(this)
deploymentOperation->put_Progress(this)
DidAppSurviveOSUpgradeForUser
DisableAppInstallsOnFirstLogon
DisableInAuditMode
DisableResolveStoreCategories
DisableThreadLibraryCalls
DisableUpgradeCleanup
DoesCallerHaveAdminRights()
donecoreuap\shell\appreadiness\src\tasks\storemetadata.cpp
DumpGetMetadataXml
DuplicateHandle
DuplicateHandle(GetCurrentProcess(), m_threadHandle.Get(), GetCurrentProcess(), threadHandle, 0, false, DUPLICATE_SAME_ACCESS)
DuplicateTokenEx
DuplicateTokenEx(temp.Get(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, nullptr, SecurityImpersonation, TokenImpersonation, result.GetAddressOf())
DuplicateTokenEx(temp.Get(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, nullptr, SecurityImpersonation, TokenImpersonation, token.GetAddressOf())
Duration
DWordToInt(value, &intValue)
E_ABORT
E_OUTOFMEMORY
E_UNEXPECTED
E0H9E(
EarlyAppResolverStart
EHI;EPt
Elapsed
ElapsedTime
EnableKdSpew
EnableLogging
EnableTraceEx2
EncodePointer
EnterCriticalSection
en-US
Error
EventData
EventRegister
EventSetInformation
EventUnregister
EventWrite
EventWriteTransfer
Exception
ExitCode
ExpandEnvironmentStringsW
Expression
ExternalObjects
ext-ms-win-containers-policymanagercli-l1-1-0
ext-ms-win-containers-policymanagercli-l1-1-1
ext-ms-win-devmgmt-policy-l1-1-0.dll
ext-ms-win-firewallapi-webproxy-l1-1-0.dll
ext-ms-win-kernel32-package-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-winsta-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-1
ext-ms-win-shell32-shellfolders-l1-1-0.dll
f;D$x
f;t$ tEH
F`H9D$`ugH
f9,Au
f9,Ou
f9,Xu
f9<Au
f9<Bu
f9<Ju
f94Au
fA;+t6f
fA9,Cu
fA9|m
fA9<@u
fA9<Au
fA9<Cu
fA9<Iu
fA9<Pu
fA9<Qu
fA9<Su
fA94@u
fA94Bu
fA94Qu
factory->CreateBundleManifestReader(stream.Get(), reader.GetAddressOf())
failed to get user SID
failed.
FailFast
failureCount
failureId
failureType
FallbackError
false
fB9,@u
fB94@u
fB94Bu
fB94Cu
fC9,Qu
fC9<Qu
fC9<Su
fC94Au
fD9 t
fD9!H
fD9#t
fD9$pu
fD9$Xu
fD9(t~L
fD9)H
fD9,xu
fD9,zu
fD9|]
fD9<Bu
fD9<Gu
fD9<Ku
fD9<Zu
fD94^u
fD94xu
fD9z*vg
fF9$@u
fF94@u
fF94Bu
fffffff
fG9<Fu
FileDescription
fileName
FileVersion
FindClose
FindFirstFileW
FindMissingTilesFailed
FindNextFileW
FindPackagesByPackageFamily
FindResourceExW
FirstLogon_NumConcurrentFirstRunApps
FirstLogon_NumConcurrentTasks
FirstLogonDelay
FirstRunLaunchTimeout
flags == APPREADINESS_TASK_DEFAULT
Fonecore\internal\sdk\inc\wil\opensource/wil/result_macros.h
FormatMessageW
FreeApplicablePackages
FreeLibrary
FreeSid
Function
function
FWClosePolicyStore
FWOpenPolicyStore
G@0onecoreuap\shell\appreadiness\src\groups\inboxgroup.cpp
GenerateAppUserModelId(packageFamilyName.c_str(), tile.PRAID.c_str(), &appId)
GenuD
GetAllDefaultApps
GetAllUpdatedPackages
GetApplicability(m_packageId.c_str(), user->GetUserSid().c_str(), &appState)
GetApplicablePackagesForUser
GetApplicablePackagesForUser(reader, sid, &this->count, &this->packages)
GetCallingUserToken(TOKEN_QUERY, callingUser.GetAddressOf())
GetComputerNameW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
getDefaultApps != nullptr
getDefaultApps(apps.Get())
GetEffectivePackageStatusForUser
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandleEx
GetFileSize
GetFullPathNameW
GetHGlobalFromStream
GetLastError
GetLastError()
GetLocalTime
GetModuleFileNameA
GetModuleHandleExA
GetModuleHandleExW
GetModuleHandleW
GetPackageOverrideSetupPhase
GetPackageSetupPhase
GetPersistedRegistryLocationW
GetProcAddress
GetProcessHeap
GetProcessId
GetProfileType
GetRegionExcludedPreinstalledPackages
GetSidSubAuthority
GetStateFolder
GetSystemDirectoryW
GetSystemTime
GetSystemTimeAsFileTime
GetTempPath2W
GetTokenInformation
GetTokenInformation(GetToken().Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &userSessionIdLen)
GetTokenInformation(userToken.Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &len)
GetTokenInformation(userToken.Get(), TokenSessionId, &userSessionId, sizeof(userSessionId), &userSessionIdLen)
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetUser()->ExecuteUnderContext([&]() { auto packageManagerInternal = std::move(PackageInfo::GetPackageManager<IPackageManagerInternal>()); ThrowIfFailed(packageManagerInternal->RemovePackageWithExtendedOptionsAsync( to_winstring(m_packageFullName).Get(), m_repair ? DeploymentOptionsInternal_RepairAppRegistrationOption : DeploymentOptionsInternal_None, CheckFlags(TaskFlags::OnDemandSyncTask) ? DeploymentOptionsInternal2_FailOnRedirectToDefaultAccount : DeploymentOptionsInternal2_None, CheckFlags(TaskFlags::LogonBlocking) ? Windows::Management::Deployment::Internal::DeploymentOperationPriority_InteractiveHigh : Windows::Management::Deployment::Internal::DeploymentOperationPriority_Default, deploymentOperation.GetAddressOf())); })
GetUser()->ExecuteUnderContext([&]() { ThrowIfFailed(packageManager->GeneratePreviewTiles(deploymentOperation.GetAddressOf())); })
GetVersionExW
GetWindowsDirectoryW
gfffffffI
GlobalLock
globalOptions->Set(COMGLB_EXCEPTION_HANDLING, COMGLB_EXCEPTION_DONOT_HANDLE_ANY)
globalOptions->Set(COMGLB_RO_SETTINGS, COMGLB_ENABLE_AGILE_OOP_PROXIES)
globalOptions->Set(COMGLB_UNMARSHALING_POLICY, COMGLB_UNMARSHALING_POLICY_STRONG)
GlobalSize
GlobalUnlock
Group
GroupId
GSN,[
GX9G4tl
H AVH
H SUVWH
h UAVAWH
h VWAVH
H!\$@H
H!]@!]0A
H!_@H
H!|$0D
H!|$0H!}
H!|$8H!}
H!}(H
H!}@L
H!t$XA
H;;uhL
H;A0s
H;S(v
H;t$8u
H@M9i
h_^[]
H+L$(H
H9\$0t
H9\$8t
H9~0t&H
H99t$H
H9D$P
H9E uTI
H9EHA
H9wHsAH
hA_A^_^[]
HA_A^A]A\_^[]
HA_A^A]A\_^][
HangReportingEnabled
HasUpd
HcL$ HcD$$H
HeapAlloc
HeapFree
HKEY_CLASSESS_ROOT
HKEY_CURRENT_USER
honecore\internal\sdk\inc\wil\opensource\wil\filesystem.h
HRESULT
hresult
HRESULT
hresult
HRESULT
HRESULT_FROM_NT(RtlGetSessionProperties(sessionId, &sessionProperties))
HrInstallClipLicense
hrPackageState
hrSetPhase != HRESULT_FROM_WIN32(ERROR_TIMEOUT)
I+W(H
I9>u?E
icTonecoreuap\shell\appreadiness\src\groups\preroaminggroup.cpp
IdlePulse
ImageBaseUrl
ImpersonateLoggedOnUser
ImpersonateLoggedOnUser(m_userToken.Get())
Inbox_NumConcurrentTasks
InboxApps
Inconsistent state data size in wnf_query
InferUserContext(userContextToken, callingUser.GetAddressOf())
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeSListHead
InitializeSRWLock
InitOnceBeginInitialize
InitOnceComplete
InitOnceExecuteOnce
InitOnceExecuteOnce(&initOnce, [](PINIT_ONCE , void* , void** ) -> BOOL { MICROSOFT_TELEMETRY_ASSERT(!s_registryGate.IsValid()); s_registryGate = std::move(Microsoft::WRL::Wrappers::Semaphore(CreateSemaphore(nullptr, 1, 1, nullptr))); ThrowIfFalse(s_registryGate.IsValid(), ResultFromKnownLastError()) if (!s_registryRoot.empty()) { ThrowIfWin32ResultFailed(RegOpenKeyEx(HKEY_CURRENT_USER, s_registryRoot.c_str(), 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())); } else { ThrowIfWin32ResultFailed(RegOpenKeyEx(HKEY_LOCAL_MACHINE, c_AppReadinessRegRoot, 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())); } return true; }, nullptr, nullptr)
InitOnceExecuteOnce(&initOnce, [](PINIT_ONCE , void* , void** ) -> BOOL { wchar_t buffer[MAX_PATH]; ThrowIfFailed(ResultFromWin32Count(GetSystemDirectory(buffer, _countof(buffer)), _countof(buffer))); ThrowIfFailed(PathCchAppend(buffer, _countof(buffer), L"@GhostedSecondaryTileReplacementLogo.png")); s_placeholderImagePath.assign(buffer); return true; }, nullptr, nullptr)
install:
Installed
InternalName
invalid vector subscript
is not
IsAuditMode
IsDebuggerPresent
IsFreeNetworkAvailable
IsIdle
IsInboxPackage
IsLocal()
IsNetworkConnected
IsProcessorFeaturePresent
IsSameObject
IsValidSid
item.As(&itemUnknown)
iter.first.As(&taskInf)
iterable->First(iterator.GetAddressOf())
iterator->get_Current(item.GetAddressOf())
iterator->get_HasCurrent(&current)
iterator->get_HasCurrent(&hasCurrent)
iterator->GetCurrent(&package)
iterator->GetHasCurrent(&hasCurrent)
iterator->MoveNext(&current)
iterator->MoveNext(&hasCurrent)
iuilp.dll
Iv}2ja
job->AddFile(iter.first.c_str(), iter.second.c_str())
job->Complete()
job->Resume()
job->SetNotifyFlags(BG_NOTIFY_JOB_TRANSFERRED | BG_NOTIFY_JOB_ERROR)
job->SetNotifyInterface(static_cast<IBackgroundCopyCallback*>(this))
job->SetPriority(hiPriority ? BG_JOB_PRIORITY_FOREGROUND : BG_JOB_PRIORITY_NORMAL)
jobError->GetError(&errorContext, &errorCode)
K0H;K8t
kernel32.dll
kernelbase.dll
keyName.InitializeFormat(L"Software\\Microsoft\\Windows\\CurrentVersion\\Appx\\AppxAllUserStore\\PBR\\%ls", userSid.c_str())
KEYWX
L$ E3
L$ I;
L$ SH
L$ SUVWH
L$ SVWH
L$ SWH
L$ UH
L$ UVWATAUAVAWH
l$ VWATAVAWH
L$ VWAVH
l$ VWAVH
L$ WH
L$(E3
L$(H3
L$@D;
L$@H3
L$@I+
L$`9L$Pu
L$`D;
l$`E3
L$`H;
L$`H3
l$0D;l$4
L$0E3
L$0H;
L$0H3
L$0L;
L$8E3
L$8H3
l$dE3
L$DE3
L$hE3
L$HH;
L$hH+
L$HH3
L$hH3
L$HH3
L$pE3
L$PH;
L$PH+
L$pH+
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$XE3
L$XH+
L$XH3
L$xH3
L$XH3
L;A0sh
L;d$8t|E
L;mwH
L9``t
L9{Hu
L9qPt
L9t$8t1H
LaunchAppAfterLogOn
LaunchCflScenario
LaunchUserOOBE
LeaveCriticalSection
LegalCopyright
len != 0
lineNumber
LoadLibraryExW
LoadResource
LOCAL
Local\SM0:%lu:%lu:%hs
LocalAlloc
LocalFree
localPreview
localTask
localTask.As(&taskToWrap)
LockResource
LockScreenApps
LogHr
LogNt
LogonCount
LogonDelay
LookupAccountSidW
LsaLookupClose
LsaLookupFreeMemory
LsaLookupGetDomainInfo
LsaLookupGetDomainInfo(lsa.get(), AccountDomainInformation, (PVOID *)&domainInfo)
LsaLookupOpenLocalPolicy
LsaLookupOpenLocalPolicy(&lsaAttributes, LOOKUP_VIEW_LOCAL_INFORMATION, &lsa)
lstd::exception: %hs
LUnC5
LvLO$;
lxcsL
M H1E
m_package->get_InstalledLocation(storageFolder.GetAddressOf())
m_package->get_IsFramework(&isFramework)
m_runningTasksEvent.IsValid()
m_taskGate.IsValid()
m_threadHandle.IsValid()
m_uriFactory->CreateUri(packageUriString.Get(), packageUri.GetAddressOf())
m_uriFactory->CreateUri(uriStr.Get(), &uriObject)
m_uriFactory->CreateWithRelativeUri(baseStr.Get(), relStr.Get(), &uri)
M9~0u
M9~Pt
MachineOobeUpdates
MakeAndInitialize<AppReadiness::Groups::InstallPackage>(&task, user, package)
MakeAndInitialize<Groups::FirstLogonGroup>(&task, this)
MakeAndInitialize<Groups::InboxGroup>(&task, this)
MakeAndInitialize<Groups::OemFirstRun>(&task, this)
MakeAndInitialize<Groups::OnDemandSyncGroup>(&task, this)
MakeAndInitialize<Groups::PreRoamingGroup>(&task, this)
MakeAndInitialize<Groups::UserLogon>(&task, this)
MakeAndInitialize<RemovePackage>(&task, user, packageInfo)
MakeAndInitialize<StoreMetadata>(&metadata)
MakeAndInitialize<Tasks::ActivateApps>(&task, GetUser(), acid.Get(), packageInfo)
MakeAndInitialize<Tasks::AppxPreRegister>(&task, this)
MakeAndInitialize<Tasks::AppxPreviews>(&appxPreviewTileRegistration, GetUser())
MakeAndInitialize<Tasks::LocalPreviews>(&localTask, GetUser())
MakeAndInitialize<Tasks::Pause>(&pause, GetUser(), seconds)
MakeAndInitialize<Tasks::RegisterPackage>(&registerTask, GetUser(), packageInfo)
MakeAndInitialize<Tasks::RemoveBackup>(&removeBackup, GetUser(), packageInfo)
MakeAndInitialize<Tasks::RemovePreviews>(&removePreviewTiles, GetUser(), packageInfo->GetPackageFamilyName())
MakeAndInitialize<Tasks::ResolveStoreCategories>(&localTask, user.Get(), cPackageFamilyNames, packageFamilyNames)
MakeAndInitialize<Tasks::StoreInstall>(&installTask, GetUser(), packageInfo)
MakeAndInitialize<Tasks::StorePreviews>(&previewTask, GetUser())
MakeAndInitialize<Tasks::StorePreviews>(&storeTask, GetUser())
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageFamilyName, removePackageFullName, true)
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageInfo)
MakeAndInitialize<Tasks::UnregisterPackage>(&unregisterPackage, GetUser(), packageInfo, true)
MakeAndInitialize<User>(&systemUser, systemSid, INVALID_USERCONTEXT_TOKEN, processToken)
MakeAndInitialize<User>(user.GetAddressOf(), userSid, userContextToken, userToken)
MakeAndInitialize<WindowsStoreUserApps>(&windowsStore)
ManifestCacheOptions
map/set too long
MarkStatusOfMainPackageForUser
MaxNonProgressIdlePulseCount
memcmp
memcpy
memmove
memset
message
Metadata
Microsoft
Microsoft Corporation
Microsoft.Windows.AppReadiness
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.ARS.Tiles
MicrosoftTelemetryAssertTriggeredUM
Microsoft-Windows-AppReadiness
Microsoft-Windows-AppReadiness/Admin
Microsoft-Windows-AppReadiness/Debug
Microsoft-Windows-AppReadiness/Operational
MigrationRepairAttempted
minATL$__a
minATL$__f
minATL$__m
minATL$__z
MissingTilesDetected
MissingTilesRepaired
module
MoveFileW
ms:CriticalData
ms:Measures
ms:ReservedKeyword44
ms:Telemetry
Msg:[%ws] 
msvcp_win.dll
NetUserGetInfo
NewLogonMode
NotPostShellPhase
NotPreInstalled
NoWaitOnRoamingPayloads
NqX@W
ntdll.dll
ntelA
NtQuerySystemInformation
NtQuerySystemTime
NtQuerySystemTime(&currentTime)
NtQueryWnfStateData
NtQueryWnfStateData(&stateName, 0, nullptr, &changeStamp, buffer, &bufferLen)
NtUpdateWnfStateData
NumPackages
o\$PH
object->QueryInterface(objectUnknown.GetAddressOf())
oD$ f
OEMLicense.dll
oL$0f
onecore\base\appmodel\common\stateseparation.cpp
onecore\base\appmodel\common\widestring.cpp
onecore\internal\sdk\inc\wil\opensource/wil/com.h
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\win32_helpers.h
onecore\internal\sdk\inc\wil\opensource\wil\winrt.h
onecore\internal\sdk\inc\wil\Resource.h
onecore\internal\sdk\inc\wil\Staging.h
onecore\shell\lib\calleridentity\calleridentity.cpp
onecoreuap\Shell\AppReadiness\Src\AppReadinessPch.h
onecoreuap\shell\appreadiness\src\core\basetask.cpp
onecoreuap\shell\appreadiness\src\core\basetaskgroup.cpp
onecoreuap\shell\appreadiness\src\core\brokersession.cpp
onecoreuap\shell\appreadiness\src\core\ImmersivePolicy.h
onecoreuap\Shell\AppReadiness\Src\Core\Module.h
onecoreuap\shell\appreadiness\src\core\packageinfo.cpp
onecoreuap\shell\appreadiness\src\core\packagelist.cpp
onecoreuap\shell\appreadiness\src\core\packagemetadata.cpp
onecoreuap\shell\appreadiness\src\core\pbrpackagelist.cpp
onecoreuap\shell\appreadiness\src\core\service.cpp
onecoreuap\shell\appreadiness\src\core\servicethread.cpp
onecoreuap\shell\appreadiness\src\core\StdUtils.h
onecoreuap\shell\appreadiness\src\core\storecallback.cpp
onecoreuap\shell\appreadiness\src\core\system.cpp
onecoreuap\shell\appreadiness\src\core\System.h
onecoreuap\shell\appreadiness\src\core\user.cpp
onecoreuap\shell\appreadiness\src\core\User.h
onecoreuap\shell\appreadiness\src\groups\firstlogongroup.cpp
onecoreuap\shell\appreadiness\src\groups\oemfirstrun.cpp
onecoreuap\shell\appreadiness\src\groups\previews.cpp
onecoreuap\shell\appreadiness\src\groups\removepackage.cpp
onecoreuap\shell\appreadiness\src\groups\tilestoremigrationrecovery.cpp
onecoreuap\shell\appreadiness\src\tasks\activateapps.cpp
onecoreuap\shell\appreadiness\src\tasks\appxpreregister.cpp
onecoreuap\shell\appreadiness\src\tasks\appxpreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\bitsjob.cpp
onecoreuap\shell\appreadiness\src\tasks\localpreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\packagechanges.cpp
onecoreuap\shell\appreadiness\src\tasks\previewtiletask.cpp
onecoreuap\shell\appreadiness\src\tasks\registerpackage.cpp
onecoreuap\shell\appreadiness\src\tasks\removebackup.cpp
onecoreuap\shell\appreadiness\src\tasks\removepreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\resolvestorecategories.cpp
onecoreuap\shell\appreadiness\src\tasks\storeinstall.cpp
onecoreuap\shell\appreadiness\src\tasks\storepreviews.cpp
onecoreuap\shell\appreadiness\src\tasks\unregisterpackage.cpp
OnStart
OPCOx
OpenProcessToken
OpenProcessToken(GetCurrentProcess(), TOKEN_IMPERSONATE|TOKEN_QUERY|TOKEN_DUPLICATE, processToken.GetAddressOf())
OpenSemaphoreW
OpenStateExplicitForUserSidString
OpenThreadToken
Operation
operationResult
OpposingOperation
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
OSMinVersion
oT$@f
OutputDebugStringW
p AWH
p S8=
p UWAVH
p WATAUAVAWH
p WAVAWH
p"X\O
p)\|)6h
P:\AppData
P:\WindowsApps
p:_0#
p;VZf
p;Y^A
p[Y0s
p`Uza?
p0\Z-
p1UTe.
p3_~4
p9Qzd&
PA\_]
pa\P@?
pA^_]
PA^_]
PA^_^
PA^_^[]
pA_A^_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Package
package->get_Id(&packageId)
package->get_Id(packageId.GetAddressOf())
package->GetPackageId(&packageId)
packageChanges-%ld
PackageFamilyName
packageFamilyName
PackageFamilyName
PackageFamilyNameFoundInPolicy
PackageFamilyNameFromFullName
PackageId
packageId->get_FullName(packageFullName.GetAddressOf())
packageId->get_FullName(str.GetAddressOf())
packageId->GetPackageFullName(&fullname)
PackageIdFromFullName
PackageIdFromFullName(m_packageId.c_str(), PACKAGE_INFORMATION_BASIC, &packageIdLen, reinterpret_cast<BYTE*>(packageId.get()))
PackageInfo
packageInfo->GetApplicationTileInfoAt(i, IID_PPV_ARGS(&appTile))
packageInfo->GetApplicationTileInfoCount(&numTiles)
packageInformation->Commit(false)
packageInformation->LoadFromDisk(m_packageFamilyName.c_str(), STCT_UNINSTALL)
PackageInstallPause
packageIter->First(&iterator)
packageManager.As(&packageManager2)
packageManager.As(&packageManager3)
packageManager->CopyTo(riid, object)
packageManager->FindPackagesByUserSecurityId(userSid.Get(), &iterable)
packageManager->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSid.Get(), packageFamilyName.Get(), PackageTypes_Main, &packageIter)
packageManager->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSidString.Get(), packageFamilyNameString.Get(), PackageTypes_Main, &packageIter)
packageManager->GeneratePreviewTiles(deploymentOperation.GetAddressOf())
packageManager->RegisterPackageWithAppDataVolumeForUserAsync( packageUri.Get(), nullptr, static_cast<DeploymentOptionsInternal>(deploymentOptions), nullptr, GetUser()->GetUserContext(), &deploymentOperation)
packageManager->RegisterPackageWithAppDataVolumeForUserAsync( packageUri.Get(), nullptr, static_cast<DeploymentOptionsInternal>(deploymentOptions), volume.Get(), GetUser()->GetUserContext(), &deploymentOperation)
packageManager2->FindPackagesByUserSecurityIdPackageFamilyNameWithPackageTypes(userSidString.Get(), packageFamilyNameString.Get(), PackageTypes_Main, &packageIter)
packageManager3->AddPackageVolumeAsync(HStringReference(PREINSTALLED_WINDOWSAPPS).Get(), packageVolumeOperation.GetAddressOf())
packageManager3->FindPackageVolumeByName(appDataVolumeNameString.Get(), &volume)
packageManagerInternal->CopyTo(riid, object)
packageManagerInternal->RemovePackageWithExtendedOptionsAsync( to_winstring(m_packageFullName).Get(), m_repair ? DeploymentOptionsInternal_RepairAppRegistrationOption : DeploymentOptionsInternal_None, CheckFlags(TaskFlags::OnDemandSyncTask) ? DeploymentOptionsInternal2_FailOnRedirectToDefaultAccount : DeploymentOptionsInternal2_None, CheckFlags(TaskFlags::LogonBlocking) ? Windows::Management::Deployment::Internal::DeploymentOperationPriority_InteractiveHigh : Windows::Management::Deployment::Internal::DeploymentOperationPriority_Default, deploymentOperation.GetAddressOf())
PackageOperationType
PackageRemovePause
PackageRoot
PackageSourceType
packageUriString.Set(manifestPath.c_str(), static_cast<UINT>(manifestPath.length()))
PartA_PrivTags
PathAllocCombine
PathCchAddExtension
PathCchAddExtension(buffer, _countof(buffer), extension.c_str())
PathCchAppend
PathCchAppend(buffer, _countof(buffer), L"@GhostedSecondaryTileReplacementLogo.png")
PathCchCombine
PathCchCombine(buffer, _countof(buffer), m_tempDir.c_str(), guidBuf)
PathCchCombine(path, _countof(path), appxRootPath, fullname.Get())
PathCchCombine(path, _countof(path), packageInfo->GetPackagePath().c_str(), c_ResourcesPri)
PathCchCombine(path, _countof(path), rootPath.c_str(), c_ResourcesPri)
PathCchCombine(tempPath, _countof(tempPath), path.Get(), guidBuf)
PathCchRemoveFileSpec
PathCchRemoveFileSpec(buffer.get(), m_packagePath.length() + 1)
pause-
pIW0'
pJX>K
PolicyManager_GetPolicyString
policyName
pQU|8
pQZ0}
pR\\F.
PreferStub
PreinstalledVolumeServicing.dll
PreinstalledVolumeServicing_ApplySuccess
PreinstalledVolumeServicing_ResetCleanup
PreRoaming_NumConcurrentTasks
PreviewTiles
PreviewTileSourceType
PreviousLogonMode
Priority
ProcessId
ProcessTasks
ProductName
ProductVersion
PROPSYS.dll
PropVariantClear
PropVariantToStringAlloc
PropVariantToUInt32
PRVAT
PSCreateMemoryPropertyStore
PSCreateMemoryPropertyStore(IID_PPV_ARGS(&propertyStore))
psPPG
pSRX$7
q)\|)6h
q:_0#
q;Y^A
q0\Z-
q0R^G'
q1UTe.
q3\pN
qa\P@?
qB^Xh
qC\r4
QISearch
qIW0'
qIXTR'
qKPV!
qR\\F.
qsPPG
QueryPerformanceCounter
QueryUserToken
QueryUserToken(sessionId, temp.GetAddressOf())
QueryUserToken(userSessionId, temp.GetAddressOf())
Queue
R$fE;J*sl
RaiseException
RaiseFailFastException
RDSH/VDI
RDSRecoverRequests
reader->GetLocalName(&elementName, nullptr)
reader->GetLocalName(&localName, nullptr)
reader->GetNodeType(&nodeType)
reader->GetPackageInfoItems(&iterator)
reader->GetValue(&value, &valueLen)
reader->MoveToElement()
reader->SetInput(readerInput.Get())
ReadFile
reaquireResult
Reason
ReferencesLeaked
RegCloseKey
RegCreateKeyEx(m_queueRootKey.Get(), packageFamilyName.c_str(), 0, nullptr, 0, KEY_CREATE_SUB_KEY, nullptr, packageKey.GetAddressOf(), nullptr)
RegCreateKeyEx(packageKey.Get(), c_MetadataStoreKeyName, 0, nullptr, REG_OPTION_VOLATILE, access, nullptr, key.GetAddressOf(), nullptr)
RegCreateKeyEx(s_machineRootKey.Get(), user->GetUserSid().c_str(), 0, nullptr, 0, accessRights, &securityAttr, key.GetAddressOf(), nullptr)
RegCreateKeyEx(userRootKey.Get(), c_UserQueueKeyName, 0, nullptr, 0, accessRights, nullptr, key.GetAddressOf(), nullptr)
RegCreateKeyExW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegFlushKey
RegGetValue failed with unexpected error
RegGetValueW
registerPackage
RegisterPackageAsync
RegisterServiceCtrlHandlerExW
RegisterTraceGuidsW
RegisterWaitForSingleObject
RegisterWaitForSingleObject(&waitHandle, m_usersToProcessEvent.Get(), &StaticProcessUserTaskCallback, this, INFINITE, WT_EXECUTEDEFAULT)
RegOpenKeyEx(HKEY_CURRENT_USER, s_registryRoot.c_str(), 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())
RegOpenKeyEx(HKEY_LOCAL_MACHINE, c_AppReadinessRegRoot, 0, KEY_ALL_ACCESS, s_machineRootKey.GetAddressOf())
RegOpenKeyExW
RegOpenUserClassesRoot
RegQueryInfoKeyW
RegQueryValueExW
RegSetKeyValueW
RegSetValueExW
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
remove:
removeBackup
RemoveDirectoryW
removePackage
RemovePackageAsync
removePreviewTiles
RepairDueToAppDataVolumeOnNonSystemVolume
RepairMissingTilesFailed
ResetEvent
ResolveDelayLoadedAPI
resources.pri
Result
result
Result
ResultFromKnownLastError()
ResultFromWin32Bool(DuplicateTokenEx(userToken.Get(), TOKEN_IMPERSONATE|TOKEN_DUPLICATE|TOKEN_QUERY, nullptr, SecurityImpersonation, TokenImpersonation, m_userToken.GetAddressOf()))
ResultFromWin32Count(::ExpandEnvironmentStrings(sourceString, buffer.get(), len), len)
ResultFromWin32Count(GetSystemDirectory(buffer, _countof(buffer)), _countof(buffer))
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE | SYNCHRONIZE), m_outstandingObjects.GetAddressOf())
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE|SYNCHRONIZE), m_shutdownEvent.GetAddressOf())
ResultFromWin32Handle(CreateEventEx(nullptr, nullptr, CREATE_EVENT_MANUAL_RESET, EVENT_MODIFY_STATE|SYNCHRONIZE), m_startupEvent.GetAddressOf())
ResultFromWin32Handle(CreateThread(nullptr, 0, &ServiceThread::StaticThreadProc, this, 0, &threadId), m_threadHandle.GetAddressOf())
ResultFromWin32Handle(LoadLibraryEx(L"iuilp.dll", nullptr, LOAD_LIBRARY_SEARCH_SYSTEM32), reinterpret_cast<HANDLE*>(m_policyHandle.GetAddressOf()))
ResultFromWin32HandleMaybenull(CreateEventEx(nullptr, nullptr, 0, EVENT_MODIFY_STATE | SYNCHRONIZE), m_usersToProcessEvent.GetAddressOf())
ResultFromWin32HandleMaybenull(CreateEventEx(nullptr, nullptr, 0, SYNCHRONIZE | EVENT_MODIFY_STATE), m_completeEvent.GetAddressOf())
ResultFromWin32HandleMaybenull(CreateSemaphoreEx(nullptr, semaphoreCount, semaphoreCount, nullptr, 0, SYNCHRONIZE | SEMAPHORE_MODIFY_STATE), m_taskGate.GetAddressOf())
ResultFromWin32HandleMaybenull(LoadLibraryEx(L"AppxDeploymentClient.dll", nullptr, LOAD_LIBRARY_SEARCH_SYSTEM32), reinterpret_cast<HANDLE*>(module.GetAddressOf()))
ResumeAt
ReturnHr
ReturnNt
RevertToSelf
rJfD97w
RoActivateInstance
RoGetActivationFactory
RoGetAgileReference
RoGetMatchingRestrictedErrorInfo
RoInitialize
RoOriginateError
RoOriginateErrorW
RoRegisterActivationFactories
RoRevokeActivationFactories
RoTransformError
RoUninitialize
RPCRT4.dll
RSDSc5(k;
RtlAcquireSRWLockExclusive
RtlAcquireSRWLockShared
RtlCaptureContext
RtlCompareUnicodeString
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlGetPersistedStateLocation
RtlGetSessionProperties
RtlInitializeGenericTableAvl
RtlInitUnicodeString
RtlInsertElementGenericTableAvl
RtlIsMultiUsersInSessionSku
RtlIsStateSeparationEnabled
RtlLookupElementGenericTableAvl
RtlLookupFunctionEntry
RtlNotifyFeatureUsage
RtlNtStatusToDosError
RtlNtStatusToDosErrorNoTeb
RtlRegisterFeatureConfigurationChangeNotification
RtlReleaseSRWLockExclusive
RtlReleaseSRWLockShared
RtlReportExceptionEx
RtlSubscribeWnfStateChangeNotification
RtlSubscribeWnfStateChangeNotification(&subscription, stateName, changeStamp, &ActivateApps::WnfCallback, this, nullptr, 0, 0)
RtlUnregisterFeatureConfigurationChangeNotification
RtlUnsubscribeWnfNotificationWaitForCompletion
RtlVirtualUnwind
s WAVAWH
s$fD;{*spH
s.Set(str.c_str(), static_cast<UINT>(str.length()))
s_registryGate.IsValid()
S-1-5-18
s5H+F
samcli.dll
Score
Scoring
SebCreateOEMPreInstallEvent
SebCreateOEMPreInstallEvent(&eventId, m_packageId.c_str())
SebSignalOEMPreInstallEvent
SebSignalOEMPreInstallEvent(eventId, m_packageId.c_str())
Service
ServiceMain
ServiceStatusType
SetEvent
SetFileAttributesW
SetLastError
SetPreinstalledRegionPolicyChecked
SetRestrictedErrorInfo
SetServiceStatus
SetThreadpoolTimer
SetUnhandledExceptionFilter
SharedAppLogonDelay
SharedAppsDelayedInstallEnabled
SHCreateStreamOnFile(packageInfo->GetManifestPath().c_str(), STGM_READ | STGM_SHARE_DENY_NONE, &stream)
SHCreateStreamOnFileW
SHDeleteValueW
SHGetKnownFolderPath
SHGetKnownFolderPath(FOLDERID_LocalAppDataLow, KF_FLAG_CREATE, user->GetToken().Get(), &path)
SHGetUserSid(callingUser.Get(), &userSid)
SHGetUserSid(token.Get(), &sid)
SHQueryToken(GetUser()->GetToken().Get(), TokenUser, false, &userToken)
SHQueryToken(user->GetToken().Get(), TokenUser, false, &userTokenPtr)
SHRegGetStringValueNative(HKEY_LOCAL_MACHINE, L"Software\\Microsoft\\Windows\\CurrentVersion\\Appx", L"PackageRoot", path, static_cast<DWORD>(pathLen))
SHRegIncrementDWORD(PackageList::OpenUserMachineRoot(user, KEY_QUERY_VALUE | KEY_SET_VALUE).Get(), nullptr, L"LogonCount", 1, &logonCount)
SHRegSetDWORD(key.Get(), nullptr, MetadataTypeToValueName(type), value)
SHRegSetDWORD(root, subKey, valueName, static_cast<DWORD>(value))
SHRegSetDWORD(s_machineRootKey.Get(), key.c_str(), c_UserStateValueName, static_cast<DWORD>(state))
SHRegSetDWORD(userKey.Get(), nullptr, valueName, value)
ShutdownDelayMsec
SizeTToUInt(packages.size(), &packageCount)
Sleep
SleepConditionVariableCS
Software\Microsoft\AllUserInstallAgent
SOFTWARE\Microsoft\Windows NT\CurrentVersion\CandidateAccountManager
Software\Microsoft\Windows NT\CurrentVersion\TileDataModel\Migration\TileStore
Software\Microsoft\Windows\CurrentVersion\AppModel
Software\Microsoft\Windows\CurrentVersion\AppReadiness
Software\Microsoft\Windows\CurrentVersion\Appx
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\PBR\%ls
SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\CFL\ExperienceManagerData
Software\Microsoft\Windows\CurrentVersion\Explorer
SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE
Source
spPackage->get_EffectiveSupportedUsers(&supportedUsers)
StagingInProgress
StartPosition
StartTraceW
StateAllowsModification()
stateStore.As(&stateStoreInf)
stateStore->Begin(IT_PREVIEWTILE, packageFamilyName.c_str(), rawPropertyStores.get(), static_cast<UINT32>(propertyStores.size()))
stateStore->CreatePreviewTilesForPackage(resources->packageFamilyName.c_str(), resources->packagePath.c_str(), static_cast<UINT>(resources->resources.size()), resources->resourcePaths.get())
stateStoreEnum->Load()
stateStoreInf->UpdateTemporaryLogos(packageFamilyName.c_str(), rawPropertyStores.get(), static_cast<UINT32>(propertyStores.size()))
Status
StopTraceW
storageFolder.As(&storageItem)
storageItem->get_Path(str.GetAddressOf())
STORE
storeHelper.Set(PKEY_AppUserModel_HostEnvironment, wil::PropVariantArg(static_cast<unsigned long>(APPUSERMODEL_HOSTENVIRONMENT_IMMERSIVE)))
storeHelper.Set(PKEY_AppUserModel_ID, wil::PropVariantArg(appId.Get()))
storeHelper.Set(PKEY_AppUserModel_PackageFamilyName, wil::PropVariantArg(packageFamilyName.c_str()))
storeHelper.Set(PKEY_Launcher_WinStoreCategoryId, wil::PropVariantArg(static_cast<unsigned long>(tile.Category)))
storeHelper.Set(PKEY_Tile_Flags, wil::PropVariantArg(static_cast<unsigned long>(tile.ShowDisplayName ? TF_SHOW_NAME_ON_ALL_LOGOS : TF_DEFAULT)))
storeHelper.Set(PKEY_Tile_SmallLogoPath, wil::PropVariantArg(logoPath.c_str()))
storeHelper.Set(property.key, wil::PropVariantArg(value->c_str()))
storeInstall
storePreviews
string too long
StringCchCopy(buffer.get(), m_packagePath.length() + 1, m_packagePath.c_str())
StringCchPrintf(buffer, bufferLen, L"%08x%04x%04x%02x%02x%02x%02x%02x%02x%02x%02x", guid.Data1, guid.Data2, guid.Data3, guid.Data4[0], guid.Data4[1], guid.Data4[2], guid.Data4[3], guid.Data4[4], guid.Data4[5], guid.Data4[6], guid.Data4[7])
StringCchPrintf(subKeyName, _countof(subKeyName), L"%s\\%s", packageFamilyName.c_str(), c_MetadataStoreKeyName)
StringCchPrintf(taskId, _countof(taskId), L"%ls-%ld", taskPrefix, InterlockedIncrement(&s_uniqueId))
StringCchPrintf(taskName, _countof(taskName), L"packageChanges-%ld", InterlockedIncrement(&s_uniqueId))
StringCchPrintf(userKeyReadAcl, _countof(userKeyReadAcl), c_UserKeyReadAccess, user->GetUserSid().c_str())
StringCchPrintfEx(iter, spaceLeft, &iter, &spaceLeft, STRSAFE_IGNORE_NULLS, L"%s (OP:%ld)", packageFamilyName.c_str(), static_cast<DWORD>(operation))
StringFileInfo
StringFromGUID2
StringFromGUID2(guid, buffer, _countof(buffer))
StubPreference
SUVWATAUAVAWH
SUVWAVH
SVWATAUAVAWH
SVWAVAWH
System\Setup\Status
System\Setup\Status\AuditBootVolatile
SystemEventsBrokerClient.dll
SystemTimeToFileTime
t"@8=p
t$ AWH
T$ E3
t$ E3
T$ H;
t$ UH
t$ UWATAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$$fD
T$(I;
T$@H;
T$@I+
T$`H;
t$`H+
t$`H95
T$0E3
T$0H;
T$0L+
t$8H;
t$8I+
T$PH;
T$PL;
T$XE3
t$XI;
t$xL;
t(D8%
t(D85i
t(D8-q
t,D8=
t@L;P
t[fA9)tUH
t~@8=
t5fA9(t/I
tAfD92t;M
task.As(&taskInf)
task->QueryInterface(completedTask.GetAddressOf())
task->QueryInterface(previewTask.GetAddressOf())
TaskCanceled
TaskCount
TaskId
taskInf->GetPercentComplete(&percent)
taskInf->QueryInterface(task.GetAddressOf())
taskInf->SetCallback(callback)
TaskPriorityType
Tasks
TASKx
TEMP 
TEMP$
TEMP`
TEMP|
TEMP<
TEMPd
TEMPl
TEMPL
TEMPl
TEMPP
TEMPT
TEMPt
TEMPx
TerminateProcess
testObject.As(&testObjectUnknown)
text.Initialize(HINST_THISCOMPONENT, c_PreviewTileDownloadString)
threadId
threadpool->CreatePeriodicTimer(this, c_HeartbeatTimer, &timer)
threadpool->CreatePeriodicTimer(this, c_ProgressTimerSpan, &timer)
threadpool->CreatePeriodicTimer(this, c_PulseTimeSpan, &timer)
threadpool->CreateTimer(this, timeSpan, &timer)
threadpool->RunAsync(Microsoft::WRL::Callback<IWorkItemHandler>(wistd::move(asyncAction)).Get(), action.GetAddressOf())
threadpool->RunWithPriorityAsync(this, WorkItemPriority_High, &cancel)
timed out
timed out.
Timeline
Timeout
Timeout/BiChangeFailed
Timeout/Forced
Timeout/Lockscreen
tKM9y
tmE3T
to_vector
to_winstring
tpE9w0t9A
tpH;^@tjH
tqL9u
TraceMessage
Translation
Triggers
TryGetEndOfLifePackageFullName
TTBL,O
tV8\$XuPA
tx@8=
tx8\$XurH
tyI+_(H
u#D9+t
u%I!C
u=D8%
UATAUAVAWH
UAVAWH
ubH;F
u'H;K
ULongLongAdd(currentTime.QuadPart, c_ErrorRetryDelay, &retryAfter.QuadPart)
ULongLongSub(left.QuadPart, right.QuadPart, &result)
ULongLongSub(now.QuadPart, start.QuadPart, &seconds)
ULongLongToInt(seconds, &result)
UMgrEnumerateSessionUsers
UMgrEnumerateSessionUsers(&usersCount, &sessionUsers)
UMgrFreeSessionUsers
UMgrQuerySessionUserToken
UMgrQuerySessionUserToken(sessionId, temp.GetAddressOf())
UMgrQueryUserContext
UMgrQueryUserContext(userToken.Get(), &userContextToken)
UMgrQueryUserToken
UMgrQueryUserToken(sessionUserContext.ContextToken, userToken.GetAddressOf())
UMgrQueryUserToken(userContextToken, temp.GetAddressOf())
UMgrQueryUserToken(userContextToken, userToken.GetAddressOf())
UnhandledExceptionFilter
Unknown exception
UnregisterTraceGuids
UnregisterWaitEx
Update
UpgradeOrPBRAttempts
upH9A
uri.As(&absoluteUri)
uriObject->get_Extension(ext.GetAddressOf())
user->ExecuteUnderContext([&job, &text, &bitsManager]() { GUID jobId; ThrowIfFailed(bitsManager->CreateJob(text.Get(), BG_JOB_TYPE_DOWNLOAD, &jobId, &job)); })
user->ExecuteUnderContext([&tempPath]() { ThrowIfFailedWin32Bool(CreateDirectory(tempPath, nullptr)); })
USERENV.dll
UserId
UserLoggedOn
UserLogon_NumConcurrentTasks
UserLogonModeChanged
Username
UserOperationSucceeded
UserPhaseType
UserReachedSteadyState
UserSId
UserState
USVWATAUAVAWH
USVWATAVAWH
USVWATAWH
USVWAVAWH
USVWAVH
USVWH
utf-16
UuidCreate
UVWATAUAVAWH
UVWATAVH
UVWAVAWH
UWATAVAWH
UWATH
UWAUAVAWH
UWAVH
V`H;Vht
V`I+VXH
VarFileInfo
vector too long
VerifyVersionInfoW
VerSetConditionMask
VMAP$
VMAP,
VMAP|
VMAP4
VMAPL
VS_VERSION_INFO
VWATAVAWH
VWAUAVAWH
VWAVH
w$r/H
w$r+I;
W`H+WXH
WaitForDeploymentOperation(m_onDemandRegisterOperation.Get())
WaitForMultipleObjects
WaitForPackageVolumeOperation(packageVolumeOperation.Get(), nullptr, &packageVolume)
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WakeAllConditionVariable
was already canceled or complete
was canceled
WATAUAVAWH
WAVAWH
wbad allocation
WC_E_ROOTELEMENT
wcsncmp
wcsrchr
WEVT_TEMPLATE
WEVTh
wil::wait_for_completion_or_timeout_nothrow(action.Get(), c_FirewallTimeout, &timedOut)
WilError_03
wilResult
WilStaging_02
win:Error
win:Info
win:Informational
win:ResponseTime
win:Start
win:Stop
win:Warning
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, Object>
Windows.Foundation.Collections.IMap`2<UInt32, Object>
Windows.Foundation.Collections.IMapView`2<UInt32, Object>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Uri
Windows.Internal.StateRepository.Application
Windows.Internal.StateRepository.Package
Windows.Internal.StateRepository.PackageLocation
Windows.Internal.StateRepository.PrimaryTile
Windows.Internal.StateRepository.User
Windows.Internal.Tiles.MigrationHelper
Windows.Management.Deployment.Internal.PackageManagerInternal
Windows.Management.Deployment.PackageManager
Windows.Networking.Connectivity.NetworkInformation
Windows.System.Threading.ThreadPool
Windows.System.Threading.ThreadPoolTimer
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &packageManager)
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &packageManagerInternalPtr)
Windows::Foundation::ActivateInstance( HStringReference(RuntimeClass_Windows_Management_Deployment_PackageManager).Get(), &packageManagerPtr)
Windows::Foundation::ActivateInstance(HStringReference(RuntimeClass_Windows_Management_Deployment_PackageManager).Get(), &packageManager)
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), m_uriFactory.ReleaseAndGetAddressOf())
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_Networking_Connectivity_NetworkInformation).Get(), &m_networkInfo)
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_System_Threading_ThreadPool).Get(), threadpool.GetAddressOf())
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_System_Threading_ThreadPoolTimer).Get(), threadpool.GetAddressOf())
Windows::Foundation::GetActivationFactory(Microsoft::WRL::Wrappers::HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &m_uriFactory)
Windows::Foundation::Initialize(WINRT_INIT_MULTITHREADED)
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsDuplicateString
WindowsGetStringRawBuffer
WindowsIsStringEmpty
windowsStore->GetMetadata(packages, 1, GMR_APPSYNC, true, &xml)
windowsStore->GetMetadata(packages.get(), static_cast<UINT>(packageFamilyNames.size()), GMR_APPSYNC, true, &xml)
windowsStore->RegisterForProgress(progressWrapper.Get(), __uuidof(ExternalStoreCallback), type, &cookie)
WindowsStringHasEmbeddedNull
WinStationFreePropertyValue
WinStationGetConnectionProperty
wRH9Q
WriteFile
WTSEnumerateSessions(WTS_CURRENT_SERVER_HANDLE, 0, 1, &sessionPtr, &numSessions)
WTSEnumerateSessionsW
WTSFreeMemory
WTSQueryUserToken
WTSQueryUserToken(sessionId, temp.GetAddressOf())
x ATAVAWH
x AUAVAWH
x AVH
x UATAUAVAWH
x UATAWH
x UAVAWH
X UVWAVAWH
x!f9t$@u
x_^[]
x_^][
x3D;t$@t
xA^A\_^[]
XA_A^A]A\_^][
xB9t$@t<E3
xf9\$@t`L
xI;o(r
XmlLite.dll
xw;|$XsqH
xXH!|$0E3
Y(HcQ
ZeroScore
zonecoreuap\shell\appreadiness\src\groups\ondemandsyncgroup.cpp
