        MAC: %s
      nonce: %s
     '%s' == '%s' => %u
     Header: %s
    <annotation name="
    blocked - remote messages not allowed
    blocked - remote reply message not allowed
    broadcast src = %s   dest = %s   global bcast = %d   dest epType = %d   ruleTable.OkToSend() => %d   add = %d
    checking default own rules
    checking default receive rules
    checking default send rules
    checking group=%u own rules
    checking group=%u receive rules
    checking group=%u send rules
    checking mandatory own rules
    checking mandatory receive rules
    checking mandatory send rules
    checking user=%u own rules
    checking user=%u receive rules
    checking user=%u send rules
    compatibility override: add = %d
    dest %s added: %u
    policy rejected
    sessioncast id = %u   src = %s   dest = %s   add = %d
    unicast dest->GetUniqueName() => %s   destination = %s   add = %d
  [%d] %s
  </property>
  <action>Modify</action>
  <action>Observe</action>
  <action>Provide</action>
  <algorithm>
  <annotation name="
  <annotation name="org.alljoyn.Bus.DocString
  <annotation name="org.alljoyn.Bus.DocString.
  <annotation name="org.alljoyn.Bus.Secure" value="true"/>
  <curve>
  <description>
  <format>
  <groupId>
  <id>
  <interfaceName>
  <name>
  <objPath>
  <property name="
  <publickey>
  <recommendedSecurityLevel>
  <specificationVersion>
  <type>ALL</type>
  <type>ANY_TRUSTED</type>
  <type>FROM_CERTIFICATE_AUTHORITY</type>
  <type>method call</type>
  <type>property</type>
  <type>signal</type>
  <type>WITH_MEMBERSHIP</type>
  <type>WITH_PUBLIC_KEY</type>
  <version>
  0x%p
  Destination = 
 !"#$%&'()*+,-./0123
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 ""* b
 ("F$l(h,^
 (:0<.>.@
 (encrypted)
 : 8*< 8f>9
 @8=D-
 4"($.&((.*.,&..0
 A\_[
 A^_^
 A^_^][
 A^A\_
 A^A]_^]
 A^A]A\_^
 A_A\_
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 A_A^A\_^[]
 A_A^A]
 A_A^A]A\_
 A_A^A]A\_^[
 A_A^A]A\_^]
 access="read"
 access="readwrite"
 access="write"
 fD9}
 H3E H3E
 IpNameServiceImpl::RefreshCache(): Entry not found in PeerInfoMap
 MDNSResourceRecord::Deserialize() Error occurred while deserializing domain name or insufficient buffer
 Microsoft Corporation. All rights reserved.
 name="
 not 
 not-after 
 Operating System
 TCPTransport::UntrustedClientExit() m_numUntrustedClients=%d m_maxRemoteClientsTcp=%d
 TCPTransport::UntrustedClientStart() m_numUntrustedClients=%d m_maxRemoteClientsTcp=%d
 type="
 Windows
!|$ H
!|$@M
!D$ D
!D$0L
!fA9H
!L$ D
!l$0M
!t$(H
!t$0L
!This program cannot be run in DOS mode.
" *"a
" direction="
" globalbroadcast="
" sessioncast="
" sessionless="
" type="
" unicast="
" value="
"""""""
"$&L(V*
"&$$&&("*
", not allowed.
"<$^(r*4(
"0$2"4t2
"d$d&b(L*F,
"f$@&
"http://www.allseen.org/alljoyn/introspect-1.1.dtd">
$ "@$
$(&((6*.,&*Y
$.&*$
$^&V(`
$0&n$
$H9sHtxH
$Jb*$
$r#A9
$t%E3
$v(^*=
%2d%2d%2d%2d%2d%2dZ
%4d%2d%2d%2d%2d%2dZ
%d: %s, %s seq %u, som %u, fcnt %d ttl %x
%s (%d bytes) failed to load status 0x%x
%s (%s) disappeared during JoinSession
%s (authMask=%u, remoteAuthMask=%u)
%s already added to this object
%s AuthorizePermissionMgmt check failed
%s Claiming is not supported with this suite (%#x)
%s does not match any current method calls: %s
%s Failed setting private key (KeyBlob size: %d)
%s Failed setting public key (KeyBlob size: %d)
%s Failed to import public key
%s failed to unmarshal message arguments 0x%x
%s failed to unmarshal message header 0x%x
%s got invalid recommended security level %d
%s got status 0x%x
%s is automatically added if needed and cannot be added manually
%s is implicit on all objects and cannot be added manually
%s No permission management object
%s Status 0x%X in module %s, file %s, line %u, message: '%s'
%s thread %s
%s(%s)
%s.AddMatch returned ERROR_MESSAGE (error=%s)
%s.AdvertiseName returned ERROR_MESSAGE (error=%s)
%s.BindSessionPort returned ERROR_MESSAGE (error=%s)
%s.CancelAdvertiseName returned ERROR_MESSAGE (error=%s)
%s.CancelFindAdvertisedName returned ERROR_MESSAGE (error=%s)
%s.CancelFindAdvertisement returned ERROR_MESSAGE (error=%s)
%s.FindAdvertisedName returned ERROR_MESSAGE (error=%s)
%s.FindAdvertisement returned ERROR_MESSAGE (error=%s)
%s.JoinSession returned ERROR_MESSAGE (error=%s)
%s.LeaveSession returned ERROR_MESSAGE (error=%s)
%s.NameHasOwner returned ERROR_MESSAGE (error=%s)
%s.Ping returned ERROR_MESSAGE (error=%s)
%s.ReleaseName returned ERROR_MESSAGE (error=%s)
%s.RemoveMatch returned ERROR_MESSAGE (error=%s)
%s.RemoveMatch returned org.freedesktop.DBus.Error.MatchRuleNotFound
%s.RemoveSessionMember returned ERROR_MESSAGE (error=%s)
%s.RequestName returned ERROR_MESSAGE (error=%s)
%s.SetLinkTimeout returned ERROR_MESSAGE (error=%s)
%s.UnbindSessionPort returned ERROR_MESSAGE (error=%s)
%s: "ALL" type peer is present with other peers in one ACL.
%s: %s
%s: A member with the same name already exists in this interface.
%s: A member with the same name already exists: %s.
%s: ACL contains no peers.
%s: ACL peer already exists: %s
%s: ACL peer public key missing.
%s: ACL peer public key not in valid PEM format: %s.
%s: ACL peer public key should not be set for this peer type(%x).
%s: Action mask %hhx not allowed for this member. Valid actions are: %hhx
%s: Adding a single rule for object path: %s.
%s: Adding an "annotation" element with name="%s" and value="%s".
%s: Adding rule members.
%s: Adding rules for each interface.
%s: After adjustment: timeoutMilliseconds=%u, retries=%u, intervalMilliseconds=%u
%s: An interface with the same name already exists in this object.
%s: An interface with the same name already exists: %s.
%s: An object with the same path already exists.
%s: Authorizing peer (public key: %s) against %u ACLs
%s: Building rules.
%s: Building XML "%s" element.
%s: Building XML "interface" element.
%s: Building XML "node" element.
%s: Checking if peer is qualified for ACL:
%s: Checking if request matches against %u rules.
%s: Checking match against rule:
%s: Checking peer's issuer chain (size: %u).
%s: Checking peer's memberships (certificates size: %u).
%s: Claim returned %s
%s: Configuration XML and custom configuration file should not be defined at the same time. %s
%s: Conversion successful.
%s: Conversion successful: %s
%s: Converting a Manifest object into a signed manifest XML: %s
%s: Converting an array of %u Manifest objects into signed manifest XMLs.
%s: Converting an array of %u signed manifest XMLs into Manifest objects
%s: Converting rule objects into XML.
%s: Converting rule objects into XmlElement.
%s: Converting signed manifest XML into a Manifest object: %s
%s: Converting XML rules to rule objects:
%s: Could not MethodReply
%s: Could not MethodReply with error status %X
%s: Could not RetrieveManifestsFromMsgArg
%s: Could not StoreManifests
%s: Could not StoreSentManifest
%s: Discarding %s
%s: Discarding %s: %s
%s: Error when parsing provided configuration file. %s
%s: Error when parsing provided configuration XML. %s
%s: Error while calling StartManagement %s.
%s: Failed to import public key
%s: Failed to MethodReply
%s: Failed to retrieve XmlElement from rules XML:
%s: got work item.
%s: Interface must have at least one member.
%s: Invalid ACL peer children count. Expected: %u. Was: %u.
%s: Invalid ACL peer type: %s.
%s: Invalid action for this member: '%s'.
%s: Invalid base64 value: %s.
%s: Invalid interface name: %s.
%s: Invalid member name: %s.
%s: Invalid member type '%s'.
%s: Invalid object path: %s.
%s: Invalid OID value. Expected: %s. Was: %s.
%s: Invalid security policy serial number value. Expected a decimal based number. Was: %s
%s: Invalid security policy version. Expected: %u. Was: %u.
%s: Invalid serial %s
%s: Invalid serial discarding %s
%s: Invalid signed manifest version. Expected: %u. Was: %u.
%s: Match found, rule allows access. Continuing search for explicit deny.
%s: Match found, rule denies access. Stopping search.
%s: Maximum number of idle probe (%d) attempts reached
%s: Member cannot have the 'Deny' action along with other ones.
%s: Member must have at least one annotation.
%s: Membership certificate found:
%s: No configuration to apply!
%s: Node contains more than one (%u) annotation.
%s: Node must have at least one 'interface' element.
%s: passed early exit checks. Destination is %s, peer GUID is %s
%s: Peer did not qualify for ACL numer %u.
%s: Peer qualified for ACL number %u.
%s: peerName = %s, success = %u
%s: Peer's security group GUID is in invalid GUID format: %s.
%s: Performing converter cleanup.
%s: Performing converter init.
%s: Performing s_memberTypeMap init.
%s: Performing validator cleanup.
%s: Performing validator init.
%s: Performing validator's subclass init.
%s: Policy contains no ACLs.
%s: Policy or signed manifest rules' interfaces should not contain any annotations.
%s: Policy or signed manifest rules' nodes should not contain any annotations.
%s: Received %s
%s: Requested timeout too low, applying minimum of %u ms
%s: Resulting probe interval too low, applying minimum of %u ms
%s: Sent DBus ping (%s)
%s: Sent ProbeAck (%s)
%s: Sent ProbeReq (%s)
%s: Setting interface name: %s.
%s: Setting member's mask to %hhx.
%s: Setting member's name to "%s".
%s: Setting member's type to "%s".
%s: Setting rule's security level to "%s".
%s: Setting the manifest rules.
%s: Setting the manifest signature.
%s: Setting the manifest thumbprint.
%s: Setting the manifest XML rules.
%s: Setting the manifest XML signature.
%s: Setting the manifest XML thumbprint.
%s: Setting the manifest XML version.
%s: StartManagement not ran before reset. Skipping EndManagement. Status: %s.
%s: The "%s" element's "name" attribute value(%s) did not match the expected pattern or exceeded %u characters.
%s: The "%s" element's attribute value(%s) not unique.
%s: The same annotation already exists in this XML element.
%s: There must be at least one member object.
%s: There must be at least one 'node' element.
%s: There must be at least one rule object.
%s: TTL expired discarding %s
%s: Unexpected "%s" element's "name" attribute value. Expected: %s. Was: %s.
%s: Unexpected security level value(%s).
%s: unexpected state in ExitCallback: %s
%s: unexpected state in ReadCallback: %s
%s: unexpected state in WriteCallback: %s
%s: Unexpected XML element name. Expected: %s. Was: %s.
%s: Validating %u rule objects.
%s: Validating against peer's issuer public key: %s
%s: Validating rules XML: %s
%s: Validating security policy object: %s
%s: Validating security policy peer object: %s
%s: Validating security policy XML peer: %s
%s: Validating security policy XML: %s
%s: Validating signed manifest XML:
%s: XML element "%s" has got an invalid number of children. Expected: %u. Was: %u.
%s: XML element "%s" should have at least one child.
%s:addr=::,port=%u
%s:addr=0.0.0.0,port=%u
%UUUU+
%y%m%d%H%M%SZ
%Y%m%d%H%M%SZ
& 0$4R6V8
&"(*&
&&((*6,(.60.2.4&6.8p6
&((Z&U
&`(`*N,F.
&6(&,J.
&amp;
&apos;
&l((*
&quot;
&Z(,&Z
( (".$(&((d&A
( *".$
( ."($
( :"0$.&&(.*(.
("&h*"&
((*`.@0
((.)(o)b)
((oo)b)
()$^.*+?[]|\-{},:=!
(**n(
(\$PA
(\*|([a-zA-Z_][a-zA-Z0-9_]*)(\*)?)
(\*|/(\*)?|(/[a-zA-Z0-9_]+)+(/?\*)?)
(\*|[a-zA-Z_][a-zA-Z0-9_]*((\.[a-zA-Z_][a-zA-Z0-9_]*)*(\.?\*)|(\.[a-zA-Z_][a-zA-Z0-9_]*)+))
(`*z.F0h4.6Z8H:
(0$T$
(a(ya(yyayayay)ay)a(ssa(syy)))
(A_A^A]A\_^][
(ayay(yyayay))
(ayay)
(bus-to-bus) 
(c(.))
(c(i)l(o)(.)(.)(.)(.).)
(c(o.))
(D$ f
(D$ I
(D$ L
(D$@f
(D$@H
(D$`A
(D$`f
(D$`fH
(D$`H
(D$0f
(D$0I
(D$pf
(D$Pf
(D$pf
(D$Pf
(H;t$h
(ixc(o))
(ixc(o).)
(ixc)
(j0l.n.p
(L$0H
(L$P3
(L$pA
(null)
(oas)
(oo)b
(ox).
(ozx).
(qua(a(ya(yyayayay)ay)a(ssa(syy))))
(R(o)b)
(sa*)
(sas)
(ssa(syy))
(ssya(syy))
(syy)
(T$@3
(t$@H
(t$^ 
(t$`I
(t$pI
(t$PL
(t(v0x(z.|(~.
(ua(ssa(syy))says)
(ua(ssa(syy))saysay)
(Undefined name)
(V&F$ *",X0(2"4*6
(vyv)
(ya(yyayayay)ay)
(yay)
(yyayay)
(yyayay)ayay(yyayay)aya(yay)a(ua(ssa(syy))saysay)
(yyayay)q
(yyayayay)
)D$ A
)D$ L
)D$@L
)D$`A
)D$`H
)D$`L3
)D$0H
)D$PI
)L$0D
)L$0H
)L$pA
)l$PH
)L$PI
)Mp9E
)t$pfD
*",:.@,.0d,d4
****** ERROR
**********IpNameServiceImpl::SendProtocolMessage()
*`(N$ &
, isMultipoint=
, nameTransfer=
, proximity=
, transports=%X
,(&.$
,(.60.2 6m
,(0|4Q
,addr=
,addr=%s,port=%d
,dev=
,family=
,family=ipv4
,guid=
,implements='
',interface='
',interface='org.alljoyn.About',member='Announce'
,path='
,port=
. &".&
. ."&&
."0*2.4&8
.(0(264.6&:
..\aboutdata.cc
..\aboutdatalistener.cc
..\abouticon.cc
..\abouticonobj.cc
..\abouticonproxy.cc
..\aboutlistener.cc
..\aboutobj.cc
..\aboutobjectdescription.cc
..\aboutproxy.cc
..\alljoyncrypto.cc
..\alljoynobj.cc
..\alljoynpeerobj.cc
..\alljoynstd.cc
..\applicationstatelistener.cc
..\ardpprotocol.cc
..\asn1.cc
..\authlistener.cc
..\authmechlogon.cc
..\authmechsrp.cc
..\autopingerinternal.cc
..\bus.cc
..\busattachment.cc
..\busattachmentc.cc
..\buscontroller.cc
..\busendpoint.cc
..\buslistener.cc
..\busobject.cc
..\busobjectc.cc
..\certificateecc.cc
..\clientrouter.cc
..\clienttransport.cc
..\clienttransportwindows.cc
..\cngcache.cc
..\condition.cc
..\conversationhash.cc
..\credentialaccessor.cc
..\cryptoaes.cc
..\cryptoecc.cc
..\cryptohash.cc
..\daemonrouter.cc
..\daemonslaptransport.cc
..\daemontransport.cc
..\dbusobj.cc
..\dbusstd.cc
..\defaultecdheauthlistener.cc
..\deferredcallback.cc
..\endpointauth.cc
..\event.cc
..\filestream.cc
..\ifconfig.cc
..\interfacedescription.cc
..\iodispatch.cc
..\ipaddress.cc
..\ipnameserviceimpl.cc
..\ipnsprotocol.cc
..\keyexchanger.cc
..\keyinfohelper.cc
..\keystore.cc
..\keystorelistener.cc
..\keystorelistenerfactory.cc
..\localtransport.cc
..\message.cc
..\message_gen.cc
..\message_parse.cc
..\msgarg.cc
..\msgargc.cc
..\namedpipeclienttransport.cc
..\namedpipedaemontransport.cc
..\namedpipestream.cc
..\nametable.cc
..\observer.cc
..\observermanager.cc
..\osutil.cc
..\passwordmanager.cc
..\peerstate.cc
..\permissionconfigurationlistener.cc
..\permissionconfigurator.cc
..\permissionmanager.cc
..\permissionmgmtobj.cc
..\permissionpolicy.cc
..\policydb.cc
..\proxybusobject.cc
..\remoteendpoint.cc
..\rule.cc
..\ruletable.cc
..\saslengine.cc
..\securityapplicationobj.cc
..\securityapplicationproxy.cc
..\sessionlessobj.cc
..\sessionlistener.cc
..\sessionopts.cc
..\sessionportlistener.cc
..\signaltable.cc
..\slappacket.cc
..\slapstream.cc
..\socket.cc
..\socketstream.cc
..\stream.cc
..\streampump.cc
..\string.cc
..\tcptransport.cc
..\thread.cc
..\timer.cc
..\transport.cc
..\transportlist.cc
..\uartstream.cc
..\udptransport.cc
..\version.cc
..\virtualendpoint.cc
..\xmlelement.cc
..\xmlhelper.cc
..\xmlmanifestconverter.cc
..\xmlmanifesttemplateconverter.cc
..\xmlmanifesttemplatevalidator.cc
..\xmlmanifestvalidator.cc
..\xmlpoliciesconverter.cc
..\xmlpoliciesvalidator.cc
..\xmlrulesconverter.cc
..\xmlrulesvalidator.cc
..\xmlvalidator.cc
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVbad_cast@std@@
.?AVexception@std@@
.?AVtype_info@@
._alljoyn._tcp.local.
._alljoyn._udp.local.
._tcp.
._udp.
.`,N( *
.00cfg
.8\$At
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.data
.data$brc
.data$r$brc
.data$rs$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gehcont
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.local.
.pdata
.rdata
.rdata$brc
.rdata$r
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.sl.*'
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.u H;+tlH
.xdata
.xdata$x
/.alljoyn_secure_keystore/
/About
/About/DeviceIcon
/org/alljoyn/Bus
/org/alljoyn/Bus/Peer
/org/alljoyn/Bus/Security
/org/alljoyn/Debug
/org/alljoyn/sl
/org/freedesktop/DBus
::fff
:\u5L
:_ujA
:l6\<F6q
;\$Hr
;D$Dr
;w sEL
;y }\H
?:uZH
??0_Locinfo@std@@QEAA@PEBD@Z
??0_Lockit@std@@QEAA@H@Z
??0facet@locale@std@@IEAA@_K@Z
??1_Locinfo@std@@QEAA@XZ
??1_Lockit@std@@QEAA@XZ
??1facet@locale@std@@MEAA@XZ
??Bid@locale@std@@QEAA_KXZ
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?_Getcoll@_Locinfo@std@@QEBA?AU_Collvec@@XZ
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?_Incref@facet@locale@std@@UEAAXXZ
?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z
?_Xbad_alloc@std@@YAXXZ
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
?_Xregex_error@std@@YAXW4error_type@regex_constants@1@@Z
?456789:;<=>
?D8'u
?H;{P
?H;{Pt
?H;}(t^H
?H;~(tRH
?I;~H
?I;~P
?I;<$
?id@?$collate@D@std@@2V0locale@2@A
?id@?$ctype@D@std@@2V0locale@2@A
?J;<(
?L)t$
?L3d$HH
?tolower@?$ctype@D@std@@QEBADD@Z
?tolower@?$ctype@D@std@@QEBAPEBDPEADPEBD@Z
@ 0"^ `
@",$2&&(.*
@(@8p,t
@(@8x,t
@(D8`,t
@(D8h,t
@(L9(
@.data
@.didat
@.reloc
@:pv!
@^\)$
@2Bd@b
@6Hs$
@8{@u
@8{2t!H
@8|$ 
@8|$ t-E
@8|$(uUL
@8|$@
@8|$@tvL
@8|$P
@8~0t
@8iLt
@8l$ t
@8l$!t
@8n8v0H
@8nHv0H
@8p1t
@8p8v
@8q0tBH
@8r,t
@8t$@
@8t$e
@8t$H
@8t$Ht
@8t$Ht8H
@8t$Iu8H
@8t$P
@8t$Pt3I
@8t$PtmH
@8t$Pu+H
@8t$Qt
@8t$Rt
@8t$Tt)L
@8t$W
@8w8v
@8x,t
@8x8t.H
@8x8u
@8x8u~H
@8x8v
@8y,t
@8y0t
@8yPtfH
@8z,t
@A\_^][
@A^_]
@A^_^
@A^A\_
@A^A\_^]
@A^A]_
@A^A]_^]
@A^A]A\
@A^A]A\_^
@A__]
@A__^
@A_A\_
@A_A]_
@A_A]A\
@A_A^]
@A_A^_
@A_A^_^]
@A_A^_H
@A_A^A\
@A_A^A\_^
@A_A^A\_^][
@A_A^A]
@A_A^A]_^
@A_A^A]_^][
@A_A^A]A\_^[
@A_A^A]A\_^]
@Lcr H
@SLcZ
@SUVWATAUAVAWH
@SUVWATAUAVH
@SUVWATAVAWH
@SUVWATAVH
@SUVWAUAVAWH
@SUVWAVAWH
@SUVWAVH
@SUVWH
@SVWATAUAVAWH
@SVWAVH
@SVWH
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAUAWH
@USVWATAVAWH
@USVWATAVH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWH
@UVWATAUAVAWH
[%s - %x] %s thread %x [%s - %x]
[ERROR]
[P].D
[TRACE]
[vO?`
\ d"@$
\$ @8t$ t%
\$ E3
\$ H;
\$ H;\$(
\$ H;\$(tAH
\$ H;X
\$ H+
\$ UH
\$ UVWATAUAVAWH
\$ UVWATAVH
\$ UVWAUAVH
\$ UVWAVAWH
\$ UVWH
\$ UWAUAVAWH
\$ VWAVH
\$ WH
\$(!\$ L
\$(E3
\$(H#
\$@@8y
\$@8\$A
\$@A9^
\$@E3
\$@f;_Z
\$@H;
\$@H;\$@
\$@H;\$Ht:H
\$@H;_
\$@I;
\$@I;]
\$@M;
\$@t#I
\$`D;t$Hr
\$`D8k
\$`E2
\$`H;
\$`I;
\$|E3
\$0@8k
\$0E3
\$0H;
\$0H;\$8t
\$0H;\$8tAH
\$0H;s r
\$0L+
\$0M;
\$8H!
\$8H;
\$DA;
\$DD9f`
\$H8C8v
\$HA9_Pu
\$hD8c
\$hE3
\$HE3
\$hH;
\$HH;
\$hH;
\$HH;\$Pt
\$HI;
\$HI;]P
\$HL;
\$HM;
\$PD8{8v
\$PD8c
\$PH;
\$pH;
\$pH;]
\$pI;
\$PI;
\$pI;
\$PI;
\$PL;
\$RD8T$Q
\$tA;
\$x@8{
\$xA;
\$XE3
\$XH;
\$xH;
\$XH;^
\$XH9\$Ht
\$XI;
\$xI;
\,^&\:`
\.(0.2r6h:
\\.\pipe\MSAJPipe
\\.\pipe\ProtectedPrefix\LocalService\MSAJPipe
\zx6I
] D8k
](D8c
], y=[
]:6&\
]@D8c
]M9oh
]pD8c
]XD8c
^ f"( 
^ H9n
^"6$*
^(H+^ H
^|/. 
^0H+^(H
^1kW3
^Fblf9
^L8\$I
_(H9_
_(I;_0u;E
__C_specific_handler
__current_exception
__current_exception_context
__CxxFrameHandler3
__CxxFrameHandler4
__std_terminate
_`H;_ht
_0H;_8
_alljoyn._tcp.local.
_alljoyn._udp.local.
_CxxThrowException
_initterm
_initterm_e
_Message::EncryptMessage permission authorization returns status 0x%x
_Message::Loadbytes(): InterpretHeader() failed
_Message::UnmarshalArgs decrypt message %s from sender %s
_Message::UnmarshalArgs decrypt permission authorization returns status 0x%x
_NamedPipeDaemonEndpoint()
_NamedPipeDaemonEndpoint::Join: work = 0x%p
_o___acrt_iob_func
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vfprintf
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vsscanf
_o__beginthreadex
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__endthreadex
_o__errno
_o__execute_onexit_table
_o__ftime64
_o__gmtime64_s
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__mktime64
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__strdup
_o__stricmp
_o_abort
_o_atoi
_o_ceilf
_o_fflush
_o_free
_o_isdigit
_o_malloc
_o_mbstowcs
_o_realloc
_o_srand
_o_strerror
_o_strftime
_o_terminate
_o_tolower
_PeerState::IsValidSerial: 0 is invalid
_PeerState::IsValidSerial: Invalid serial %x %x %llx
_PeerState::IsValidSerial: Repeated serial %x %x %llx
_RemoteEndpoint::DecrementRef(%s) refs=%d
_RemoteEndpoint::Exit(%s)
_RemoteEndpoint::Exited(%s)
_RemoteEndpoint::IncrementRef(%s) refs=%d
_RemoteEndpoint::Join(%s) called
_RemoteEndpoint::RegisterSessionId (%s,%u)
_RemoteEndpoint::SetIdleTimeouts(%u, %u, %u) for %s
_RemoteEndpoint::SetLinkTimeout(%u, %u, %u) for %s
_RemoteEndpoint::Start(%s) isBusToBus=%s,allowRemote=%s
_RemoteEndpoint::Start(%s,idleTimeout=%u,probeTimeout=%u,numProbes=%u,sendTimeout=%u)
_RemoteEndpoint::Stop(%s,stopAfterTxEmpty=%d) called
_RemoteEndpoint::UnregisterSessionId (%s,%u)
_Strcoll
_Strxfrm
_UDPEndpoint::_UDPEndpoint(transport=%p, bus=%p, incoming=%d., connectSpec="%s")
_UDPEndpoint::~_UDPEndpoint()
_UDPEndpoint::~_UDPEndpoint(): m_pushCount==%d.
_UDPEndpoint::~_UDPEndpoint(): m_refCount==%d.
_UDPEndpoint::CreateStream(handle=%p, conn=%p)
_UDPEndpoint::DestroyStream()
_UDPEndpoint::DisconnectCb(): Disconnect(): m_stream=%p
_UDPEndpoint::DisconnectCb(): endpoint with conn ID == %d. not found on on m_endpointList
_UDPEndpoint::DisconnectCb(): found endpoint with conn ID == %d. on m_endpointList
_UDPEndpoint::DisconnectCb(): m_stream->Disconnect() on endpoint with conn ID == %d.
_UDPEndpoint::DisconnectCb(): sudden=="%s"
_UDPEndpoint::DisconnectCb(handle=%p, conn=%p, connId=%d.)
_UDPEndpoint::Exit()
_UDPEndpoint::Exit(): Going to EP_DONE state
_UDPEndpoint::GetConn(): => %p
_UDPEndpoint::GetExited(): -> %s
_UDPEndpoint::GetExitScheduled(): -> %s
_UDPEndpoint::GetHandle() => %p
_UDPEndpoint::GetLocalIp(ipAddrStr=%0)
_UDPEndpoint::GetRemoteIp(ipAddrStr=%p): => "%s"
_UDPEndpoint::GetStallTime(): => %I64u.%03d.
_UDPEndpoint::GetStartTime(): => %I64u.%03d.
_UDPEndpoint::GetStopTime(): => %I64u.%03d.
_UDPEndpoint::GetStream() => %p
_UDPEndpoint::IsEpActiveStarted() <= "%s"
_UDPEndpoint::IsEpDone() <= "%s"
_UDPEndpoint::IsEpInitialized() <= "%s"
_UDPEndpoint::IsEpJoined() <= "%s"
_UDPEndpoint::IsEpPassiveStarted() <= "%s"
_UDPEndpoint::IsEpStarted() <= "%s"
_UDPEndpoint::IsEpStopping() <= "%s"
_UDPEndpoint::IsEpWaitEnabled() <= "%s"
_UDPEndpoint::IsEpWaiting() <= "%s"
_UDPEndpoint::Join()
_UDPEndpoint::Join(): Already Join()ed
_UDPEndpoint::Join(): Going to EP_JOINED
_UDPEndpoint::Join(): Join() from IsEpStopping() or IsEpWaiting()
_UDPEndpoint::Join(): Join() from IsEpWaiting()
_UDPEndpoint::Join(): Local stream->Disconnect()
_UDPEndpoint::Join(): Never Start()ed
_UDPEndpoint::Join(): Not disconnected
_UDPEndpoint::Join(): TIMWAIT expired with threads pending
_UDPEndpoint::Join(): Unique name == %s
_UDPEndpoint::Join(): Waiting for threads to exit
_UDPEndpoint::PushMessage(): DeliverNonBlocking()
_UDPEndpoint::PushMessage(): DeliverNonBlocking() returns "%s"
_UDPEndpoint::PushMessage(): Endpoint is gone
_UDPEndpoint::PushMessage(): found endpoint with conn ID == %d. on m_endpointList
_UDPEndpoint::PushMessage(msg=%p)
_UDPEndpoint::RecvCb(): ARDP_RecvReady()
_UDPEndpoint::RecvCb(): Calculating message length
_UDPEndpoint::RecvCb(): Cannot load bytes
_UDPEndpoint::RecvCb(): Can't Unmarhsal() Message.  Probably duplicate signal delivery
_UDPEndpoint::RecvCb(): Copying fragment of %d. bytes
_UDPEndpoint::RecvCb(): Endpoint is gone
_UDPEndpoint::RecvCb(): found endpoint with conn ID == %d. on m_endpointList
_UDPEndpoint::RecvCb(): Found fragment of %d. bytes
_UDPEndpoint::RecvCb(): Found Message of %d. bytes
_UDPEndpoint::RecvCb(): LoadBytes()
_UDPEndpoint::RecvCb(): Message of %d. bytes reassembled
_UDPEndpoint::RecvCb(): Not accepting inbound messages
_UDPEndpoint::RecvCb(): PushMessage failed
_UDPEndpoint::RecvCb(): PushMessage()
_UDPEndpoint::RecvCb(): Reassembling fragements
_UDPEndpoint::RecvCb(): Unexpected rcv->fcnt==%d.
_UDPEndpoint::RecvCb(): Unexpected tmp->datalen==%d.
_UDPEndpoint::RecvCb(): Unmarshal()
_UDPEndpoint::RecvCb(handle=%p, conn=%p, connId=%d., rcv=%p, status=%s)
_UDPEndpoint::SendCb(handle=%p, conn=%p, buf=%p, len=%d.)
_UDPEndpoint::SetActive()
_UDPEndpoint::SetConn(conn=%p)
_UDPEndpoint::SetConnId(id=%d.)
_UDPEndpoint::SetEpActiveStarted()
_UDPEndpoint::SetEpDisconnectStatus(): Map "%s" to "ER_OK"
_UDPEndpoint::SetEpDisconnectStatus(): Map "%s" to "ER_SOCK_OTHER_END_CLOSED"
_UDPEndpoint::SetEpDisconnectStatus(): Map "%s" to "ER_TIMEOUT"
_UDPEndpoint::SetEpDisconnectStatus(): Previously set status.  Ignoring new
_UDPEndpoint::SetEpDisconnectStatus(status=%s)
_UDPEndpoint::SetEpDone()
_UDPEndpoint::SetEpJoined()
_UDPEndpoint::SetEpPassiveStarted()
_UDPEndpoint::SetEpStarted()
_UDPEndpoint::SetEpStopping()
_UDPEndpoint::SetEpWaitEnable(wait="%s")
_UDPEndpoint::SetEpWaiting()
_UDPEndpoint::SetExitScheduled()
_UDPEndpoint::SetHandle(handle=%p)
_UDPEndpoint::SetIpAddr(ipAddr="%s")
_UDPEndpoint::SetIpPort(ipPort=%d.)
_UDPEndpoint::SetLinkTimeout() ARDP disconnected
_UDPEndpoint::SetLinkTimeout(linkTimeout=%d.)
_UDPEndpoint::SetPassive()
_UDPEndpoint::SetStallTime()
_UDPEndpoint::SetStartTime()
_UDPEndpoint::SetStopTime()
_UDPEndpoint::SetWaitStartTime()
_UDPEndpoint::Start()
_UDPEndpoint::Start(): endpoint switching to ENDPOINT_TYPE_BUS2BUS
_UDPEndpoint::Start(): isBusToBus = %s, allowRemote = %s)
_UDPEndpoint::Start(): RegisterEndpoint()
_UDPEndpoint::Start(): Threads present during Start()
_UDPEndpoint::Stop()
_UDPEndpoint::Stop(): Already stopping, waiting, joined or done
_UDPEndpoint::Stop(): Never Start()ed
_UDPEndpoint::Stop(): Stopping while IsEpStarted()
_UDPEndpoint::Stop(): Unique name == %s, connId == %d.
_VirtualEndpoint::AddBusToBusEndpoint(this=%s, b2b=%s)
_VirtualEndpoint::AddSessionRef(this=%s [%x], id=%u, b2b=%s)
_VirtualEndpoint::PushMessage(this=%s [%x], SessionId=%u)
_VirtualEndpoint::RemoveBusToBusEndpoint(this=%s, b2b=%s)
_VirtualEndpoint::RemoveSessionRef(this=%s [%x], id=%u)
_VirtualEndpoint::RemoveSessionRef: vep=%s failed to find session = %u
_XE7M
` AUAVAWH
` UAUAVH
` UAVAWH
`.rdata
`6#'$
`6ps$
`6Zr$
`8_Ht
`A^_^[]
`A^_^][
`A__^
`A_A^_^]
`A_A^A\_^[]
`A_A^A\_^][
`A_A^A]A\_[]
`A_A^A]A\_^[
`A_A^A]A\_^]
`umD8
{ ATAVAWH
{ AUAVAWH
{ AVH
{ L97
{(H;{0t
{(o.)}.
{|]u H
{|-u`H
{Ht!L
{xcuc
{XL+{(I
{xuu%
{xxu)
|$ ATH
|$ AVH
|$ E3
|$ H;_
|$ H+
|$ L9d$(
|$ M;
|$ UATAUAVAWH
|$ UATAWH
|$ UAVAWH
|$ UH
|$(@8{
|$(E3
|$(fD
|$(H;X
|$@E3
|$@H;
|$@H;\$ 
|$@H;|$HA
|$@H9t$`t
|$@Hi
|$@M3
|$` t
|$`D8t$@u,H
|$`fA
|$`fD
|$`H;
|$`H;|$ht
|$`H;|$ht'H
|$`H+
|$`Ii
|$`t&H
|$`u"H
|$0D8o
|$0D8s
|$8@t
|$8A_A^A]
|$8fD
|$8H;
|$8M;
|$D;|$@H
|$DfD
|$duZA
|$h@8
|$h8G8u
|$HE3
|$hE3
|$hf9Yp
|$hfD
|$HH!D$`
|$HH+
|$hH9
|$hH9Y
|$hI;}
|$HL;
|$HL9|$P
|$HM;
|$p t
|$P t
|$p tpH
|$PE3
|$pE3
|$PE3
|$PfD
|$pfD
|$pH;
|$PH;
|$pH;\$`
|$PI;
|$PL;
|$pL+
|$PM;
|$pM9
|$Pu7H
|$XfD
|$xH;
|$xH;]
|$XH;|$X@
|$xH;>tE
|$xI;
|$xL;
|&0(D,(.)
|7u0@8~
~ \"($r @(v,x.
~_NamedPipeDaemonEndpoint: m_threadPoolWork = 0x%p
~8H;\$Pt]H
~L9B0u'L9BXu!H
~LLN(P.R.TpR
~NamedPipeDaemonTransport
~XL9~H
+@8t$Ru
+D9|$Tt
+L$@D
+Ot9Gt
<!DOCTYPE node PUBLIC "-//allseen//DTD ALLJOYN Object Introspection 1.1//EN"
<$E8<$
<(>`B@D
<*t?<?t;8
</acl>
</algorithm>
</arg>
</curve>
</description>
</format>
</groupId>
</id>
</interface>
</interfaceName>
</member>
</name>
</NISP256KeyInfo>
</node>
</objPath>
</permissionPolicy>
</publickey>
</recommendedSecurityLevel>
</rule>
</specificationVersion>
</version>
<?t-@:4
<3wuH
<acl>
<anonymous>
<default>
<interface name="
<invalid IP address>
<member>
<NISP256KeyInfo>
<node name="
<node>
<none>
<Peer>
<permissionPolicy>
<rule>
<-u!D8
<unknown>: 0x%04x
<user>
=====================
>H;>@
0.,022&4.6
0.0.0.0
002H4
0123456789ABCDEF
0123456789abcdef
0-3 hr
040904B0
062&4.2
0A^_^
0A_A^_
0A_A^_^[
0A_A^_^]
0A_A^A\
0A_A^A\_^
0A_A^A\_^[]
0A_A^A\_^][
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0H;]@r
0H;|$@r
0H;t$@r
0H;uXr
0I;?r
0L;|$H
0L;|$P
0L;l$xr
0L;t$H
0L;t$P
0L;uH
1.2.840.10045.2.1
1.2.840.10045.3.1.7
1.2.840.10045.4.3.2
1.3.6.1.4.1.44924.1.1
1.3.6.1.4.1.44924.1.2
1.3.6.1.4.1.44924.1.3
1.3.6.1.4.1.44924.1.4
1.3.6.1.4.1.44924.1.5
10.0.22000.653
10.0.22000.653 (WinBuild.160101.0800)
12-15 hr
127.0.0.1
15-18 hr
18-21 hr
19409269762da560d7812cb8a542f024
2 &".$
2 4@6(8
2"0n4"0
2.16.840.1.101.3.4.2.1
2.5.29.17
2.5.29.19
2.5.29.35
2.5.29.37
2.5.4.11
2.5.4.3
20"2"402
21-24 hr
224.0.0.113
224.0.0.251
244(6.8(:.<.>&@.B
28(:8<t@pD
2962ADEAE004074C8C0D598C5387FEB3
29ebe36c0ac308c8eb808cfdf1f36953
3333333
3-6 hr
3HiL$ 
3HiL$ h
3HkL$(8I
4$H+u
4$I+<$H
4>rd4
42B0C7F35695A3220A46B3938771E965
4D8B9E901D7BE0024A331609BBAA4B02
4EDDBBCE46E0542C24BEC5BF9717C971
4Z>V4
5FFFB6E33C19F27A8A5535D45382B9E8
6"8(:68
6(0..
6`,b.d.f
668&<R>M
6-9 hr
6b8|:
8(:(<.>
8.:*8
8:tBL9
8:uMH
8:uNH
8:uPH
8:usH
8:uvI
8\$@t!E
8\$@t#H
8_^][
8_8vIH
8`:(<r8n@lD|F
8~:,<X@,B
80tEH
8A^_^[
8A_A^A]A\_^][
8D$LuzH
8D$pt
8H;~`r
8L$_u
8L$HtfH
8L$Iu8H
8L$PumH
8L$QH
8L$Qt
8L$Rt
8L;?tjI
8T$PudH
8Y8t`H
8Y8v1H
9\$Pu
9_(tEH
9|$Ht
90u#I
90u5I
9-12 hr
9D$(u(H
9D$0u
9D$Pu
9p0uuD
9T$Dv>
9t$hv$H
9x0tEH
A fA9
A H9x
A(9A(tEI
A(9B(u`I
A(A9@(}
a(ay)
a(ayay(yyayay))
A(I9@
a(oas)
a(sas)
a(ssya(syy))
a(ua(ssa(syy))saysay)
a(yay)
a(yay)a(ua(ssa(syy))saysay)
a(yv)
A;X }\H
A]A\]
A^_^[]
A^_^][
A^A\]
A^A\_
A^A\_^[]
A^A\_^]
A^A]]
A^A]_^]
A^A]A\
A^A]A\_]
A^A]A\_^
A^A]A\_^[]
A__^[]
A_A\]
A_A\_
A_A]]
A_A]_
A_A]_^]
A_A]A\_^[]
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]_^][
A_A^A]A\
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A`H;AXr
a{ss}
a{sv}
A0A9@
A0H+A(H
A8,>u
A8]Lt
A8|$8
A8<4u
A8H;A0u
A8H+A0H
A8M8t
A8t6E3
A8V,tSA
A8v8v
A8vJt
A9^(u
A9|$(
A9V(u,@
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
About::%s
AboutClient::%s
AboutData Missing %s field
AboutData::AboutData(MsgArg): failed to parse MsgArg.
AboutDataListner %s field error
AboutIconObj RegisterBusOBject %s
AboutIconObj::%s
AboutIcontClient::%s
AboutObj RegisterBusOBject %s
AboutObj::Announce set version failed %s
AboutObj::Announce set version set sessionport failed %s
AboutProxy::%s
AboutProxy::GetAboutData error %s
AboutProxy::GetObjectDescription error %s
AboutService::%s
AboutService::%s : Call to GetMsgArg failed with %s
Accept(): Unsupported protocol version 0x%x
Accept(handle=%p, conn=%p, buf=%p, len=%d)
Accept(sockfd = %d) newSockfd = %d
Accept(sockfd = %d, remoteAddr = <>, remotePort = <>)
AcceptedConnection
AcceptSession
AcceptSessionJoiner(port=%d,joiner=%s,...)
access
access point
AccessRights %1x%1x%1x%1x
AcquireSRWLockExclusive
AcquireSRWLockShared
Add %s{%d} to table for %s
Add About interface %s
Add AboutIcon interface %s
Add to peer info map: %s
AddChild %s to object with path = "%s"
Adding new entry %d  %d
AddLogonEntry for user %s %s
AddMatch
AddMatch failed
AddMethods failed
AddMethods for %s failed
addr=
addr=%s,port=%d
AddRcvBuffer(handle=%p, conn=%p, seg=%p, buf=%p, len=%d, ordered=%s
AddRcvBuffer: attempt to overwrite buffer that has not been released( in use %u seg->seq %u)
AddRcvBuffer: duplicate segment %u, acknowledge
AddRcvBuffer: seg->SEQ = %u, first=%u
AddRcvMsk: bin = %d, offset=%d, mask = 0x%f
AddRcvMsk: delta = %d
AddRule for endpoint %s
AddRule(epName=%s,rule=%s)
AddSessionRoute(%u, %s, NULL, %s, %s) failed
AddSessionRoute(%u, %s, NULL, %s, tEp) failed
AdjustRtt: mean = %u, var =%u, rtt = %u, now = %u, tStart= %u, error = %d
AdjustRtt: New mean = %u, var =%u
adminGroupAuthority key info ID length is zero
adminGroupAuthority keyInfo is empty
AdvanceRcvQueue(): Detected expired fragment %u (start %u, fcnt %u)
AdvanceRcvQueue(): RecvCb(conn=0x%p, buf=%p, seq=%u, fcnt (@ %p)=%d)
AdvanceRcvQueue: rcv.CUR = %u, rcv.LCS = %u
AdvanceRcvQueue: segment %u (%p)
AdvanceReleaseQueue: Schedule ACK timer to inform about new values of rcv.CUR %u and rcv.LCS %u
advertise.
advertise.*
AdvertiseName
AdvertiseName(name=%s)
AGREE_UNIX_FD
ajn::_Manifest::_Manifest
ajn::_Manifest::~_Manifest
ajn::_Manifest::ComputeThumbprintAndDigest
ajn::_Manifest::ComputeThumbprintAndSign
ajn::_Manifest::DeserializeArray
ajn::_Manifest::GetDigest
ajn::_Manifest::GetECCSignature
ajn::_Manifest::GetMsgArg
ajn::_Manifest::GetRules
ajn::_Manifest::GetSignature
ajn::_Manifest::GetSignatureAlgorithmOid
ajn::_Manifest::GetThumbprint
ajn::_Manifest::GetThumbprintAlgorithmOid
ajn::_Manifest::GetVersion
ajn::_Manifest::HasSignature
ajn::_Manifest::Serialize
ajn::_Manifest::SerializeArray
ajn::_Manifest::SetECCSignature
ajn::_Manifest::SetFromMsgArg
ajn::_Manifest::SetRules
ajn::AboutDataListenerCallbackC::AboutDataListenerCallbackC
ajn::AboutDataListenerCallbackC::GetAboutData
ajn::AboutDataListenerCallbackC::GetAnnouncedAboutData
ajn::AboutIconObj::AboutIconObj
ajn::AboutIconObj::Get
ajn::AboutIconObj::GetContent
ajn::AboutIconObj::GetUrl
ajn::AboutIconProxy::AboutIconProxy
ajn::AboutIconProxy::GetIcon
ajn::AboutIconProxy::GetVersion
ajn::AboutListenerCallbackC::AboutListenerCallbackC
ajn::AboutListenerCallbackC::Announced
ajn::AboutObj::Announce
ajn::AboutObj::Get
ajn::AboutObj::GetAboutData
ajn::AboutObj::GetObjectDescription
ajn::AboutProxy::AboutProxy
ajn::AboutProxy::GetAboutData
ajn::AboutProxy::GetObjectDescription
ajn::AboutProxy::GetVersion
ajn::AllJoynPeerObj::HandleSendManifests
ajn::ApplicationStateListenerCallbackC::ApplicationStateListenerCallbackC
ajn::ApplicationStateListenerCallbackC::State
ajn::ARDP_AdjustProbeTimeoutSettings
ajn::AuthListenerAsyncCallbackC::AuthenticationComplete
ajn::AuthListenerAsyncCallbackC::AuthListenerAsyncCallbackC
ajn::AuthListenerAsyncCallbackC::RequestCredentialsAsync
ajn::AuthListenerAsyncCallbackC::SecurityViolation
ajn::AuthListenerAsyncCallbackC::VerifyCredentialsAsync
ajn::AuthListenerCallbackC::AuthenticationComplete
ajn::AuthListenerCallbackC::AuthListenerCallbackC
ajn::AuthListenerCallbackC::RequestCredentials
ajn::AuthListenerCallbackC::SecurityViolation
ajn::AuthListenerCallbackC::VerifyCredentials
ajn::BuildSignedManifest
ajn::BusAttachmentC::RegisterSignalHandlerC
ajn::BusAttachmentC::RegisterSignalHandlerWithRuleC
ajn::BusAttachmentC::SignalHandlerC::SignalHandlerRemap
ajn::BusAttachmentC::UnregisterAllHandlersC
ajn::BusAttachmentC::UnregisterSignalHandlerC
ajn::BusAttachmentC::UnregisterSignalHandlerWithRuleC
ajn::BusListenerCallbackC::BusDisconnected
ajn::BusListenerCallbackC::BusListenerCallbackC
ajn::BusListenerCallbackC::BusStopping
ajn::BusListenerCallbackC::FoundAdvertisedName
ajn::BusListenerCallbackC::ListenerRegistered
ajn::BusListenerCallbackC::ListenerUnregistered
ajn::BusListenerCallbackC::LostAdvertisedName
ajn::BusListenerCallbackC::NameOwnerChanged
ajn::BusListenerCallbackC::PropertyChanged
ajn::BusObjectC::AddInterfaceC
ajn::BusObjectC::AddMethodHandlerC
ajn::BusObjectC::AddMethodHandlersC
ajn::BusObjectC::BusObjectC
ajn::BusObjectC::EmitPropChangedC
ajn::BusObjectC::Get
ajn::BusObjectC::MethodHandlerRemap
ajn::BusObjectC::MethodReplyC
ajn::BusObjectC::ObjectRegistered
ajn::BusObjectC::ObjectUnregistered
ajn::BusObjectC::Set
ajn::BusObjectC::SignalC
ajn::ConfigDB::LoadConfig
ajn::CredentialAccessor::GetDSAPrivateKey
ajn::CredentialAccessor::GetDSAPublicKey
ajn::DefaultECDHEAuthListener::AuthenticationComplete
ajn::DefaultECDHEAuthListener::RequestCredentials
ajn::DefaultPolicyMarshaller::UnmarshalManifestTemplate
ajn::EndpointAuth::WaitHello
ajn::IsAuthorizedByPeerManifest
ajn::IsPeerAuthorized
ajn::IsPeerQualifiedForAcl
ajn::IsPolicyAclMatched
ajn::IsRuleMatched
ajn::KeyExchanger::ReplyWithVerifier
ajn::KeyExchanger::ValidateRemoteVerifierVariant
ajn::KeyExchangerECDHE::ExecKeyExchange
ajn::KeyExchangerECDHE::RespondToKeyExchange
ajn::KeyExchangerECDHE::StoreMasterSecret
ajn::KeyExchangerECDHE_ECDSA::KeyAuthentication
ajn::KeyExchangerECDHE_ECDSA::ReplyWithVerifier
ajn::KeyExchangerECDHE_ECDSA::RequestCredentialsCB
ajn::KeyExchangerECDHE_ECDSA::StoreMasterSecret
ajn::KeyExchangerECDHE_ECDSA::ValidateRemoteVerifierVariant
ajn::KeyExchangerECDHE_NULL::KeyAuthentication
ajn::KeyExchangerECDHE_NULL::RequestCredentialsCB
ajn::KeyExchangerECDHE_PSK::KeyAuthentication
ajn::KeyExchangerECDHE_PSK::ReplyWithVerifier
ajn::KeyExchangerECDHE_PSK::RequestCredentialsCB
ajn::KeyExchangerECDHE_PSK::ValidateRemoteVerifierVariant
ajn::KeyExchangerECDHE_SPEKE::GenerateECDHEKeyPair
ajn::KeyStoreListenerCallbackC::AcquireExclusiveLock
ajn::KeyStoreListenerCallbackC::KeyStoreListenerCallbackC
ajn::KeyStoreListenerCallbackC::LoadRequest
ajn::KeyStoreListenerCallbackC::ReleaseExclusiveLock
ajn::KeyStoreListenerCallbackC::StoreRequest
ajn::MsgArgC::MsgArgUtilsSetVC
ajn::MsgArgC::VBuildArgsC
ajn::MsgArgC::VParseArgsC
ajn::ObserverManager::DoWork
ajn::ObserverManager::EnablePendingListeners
ajn::ObserverManager::HandleActivePeerAnnouncement
ajn::ObserverManager::HandleNewPeerAnnouncement
ajn::ObserverManager::HandlePendingPeerAnnouncement
ajn::ObserverManager::JoinSessionCB
ajn::ObserverManager::LeaveSessionCB
ajn::ObserverManager::ProcessAnnouncement
ajn::ObserverManager::ProcessDestinationLost
ajn::ObserverManager::ProcessEnablePendingListeners
ajn::ObserverManager::ProcessRegisterObserver
ajn::ObserverManager::ProcessSessionEstablished
ajn::ObserverManager::ProcessSessionEstablishmentFailed
ajn::ObserverManager::ProcessSessionLost
ajn::ObserverManager::ProcessUnregisterObserver
ajn::ObserverManager::RegisterObserver
ajn::ObserverManager::ScheduleWork
ajn::ObserverManager::UnregisterObserver
ajn::PermissionConfigurationListenerCallbackC::EndManagement
ajn::PermissionConfigurationListenerCallbackC::FactoryReset
ajn::PermissionConfigurationListenerCallbackC::PermissionConfigurationListenerCallbackC
ajn::PermissionConfigurationListenerCallbackC::PolicyChanged
ajn::PermissionConfigurationListenerCallbackC::StartManagement
ajn::PermissionManager::AuthorizeMessage
ajn::PermissionManager::AuthorizePermissionMgmt
ajn::PermissionMgmtObj::Claim
ajn::PermissionMgmtObj::ClaimInternal
ajn::PermissionMgmtObj::GetIdentity
ajn::PermissionMgmtObj::InstallManifests
ajn::PermissionMgmtObj::PerformReset
ajn::PermissionMgmtObj::RemoveMembership
ajn::PermissionMgmtObj::RemoveMembershipInternal
ajn::PermissionMgmtObj::ResetPolicy
ajn::PermissionMgmtObj::SendManifests
ajn::PermissionMgmtObj::StoreManifests
ajn::PermissionMgmtObj::UpdateIdentity
ajn::PermissionPolicy::Rule::FromMsgArg
ajn::ProxyBusObject::Internal::AddPropertiesChangedRule
ajn::SecurityApplicationObj::Claim
ajn::SecurityApplicationObj::EndManagement
ajn::SecurityApplicationObj::Get
ajn::SecurityApplicationObj::InstallManifests
ajn::SecurityApplicationObj::InstallMembership
ajn::SecurityApplicationObj::RemoveMembership
ajn::SecurityApplicationObj::Reset
ajn::SecurityApplicationObj::ResetPolicy
ajn::SecurityApplicationObj::StartManagement
ajn::SecurityApplicationObj::State
ajn::SecurityApplicationObj::UpdateIdentity
ajn::SecurityApplicationObj::UpdatePolicy
ajn::SecurityApplicationProxy::Claim
ajn::SecurityApplicationProxy::ComputeManifestDigest
ajn::SecurityApplicationProxy::DestroyManifestDigest
ajn::SecurityApplicationProxy::EndManagement
ajn::SecurityApplicationProxy::GetApplicationState
ajn::SecurityApplicationProxy::GetClaimCapabilities
ajn::SecurityApplicationProxy::GetClaimCapabilityAdditionalInfo
ajn::SecurityApplicationProxy::GetDefaultPolicy
ajn::SecurityApplicationProxy::GetEccPublicKey
ajn::SecurityApplicationProxy::GetManifestTemplate
ajn::SecurityApplicationProxy::GetPolicy
ajn::SecurityApplicationProxy::InstallMembership
ajn::SecurityApplicationProxy::MsgArgToCertificateIds
ajn::SecurityApplicationProxy::Reset
ajn::SecurityApplicationProxy::ResetPolicy
ajn::SecurityApplicationProxy::SecurityApplicationProxy
ajn::SecurityApplicationProxy::SignManifest
ajn::SecurityApplicationProxy::StartManagement
ajn::SecurityApplicationProxy::UpdateIdentity
ajn::SecurityApplicationProxy::UpdatePolicy
ajn::SessionListenerCallbackC::SessionListenerCallbackC
ajn::SessionListenerCallbackC::SessionLost
ajn::SessionListenerCallbackC::SessionMemberAdded
ajn::SessionListenerCallbackC::SessionMemberRemoved
ajn::SessionPortListenerCallbackC::AcceptSessionJoiner
ajn::SessionPortListenerCallbackC::SessionJoined
ajn::SessionPortListenerCallbackC::SessionPortListenerCallbackC
ajn::SetKeyInfo
ajn::XmlManifestConverter::BuildRules
ajn::XmlManifestConverter::BuildSignature
ajn::XmlManifestConverter::BuildThumbprint
ajn::XmlManifestConverter::BuildVersion
ajn::XmlManifestConverter::ManifestsToXmlArray
ajn::XmlManifestConverter::ManifestToXml
ajn::XmlManifestConverter::SetRules
ajn::XmlManifestConverter::SetSignature
ajn::XmlManifestConverter::SetThumbprint
ajn::XmlManifestConverter::XmlArrayToManifests
ajn::XmlManifestConverter::XmlToManifest
ajn::XmlManifestTemplateConverter::Init
ajn::XmlManifestTemplateConverter::Shutdown
ajn::XmlManifestTemplateValidator::Init
ajn::XmlManifestTemplateValidator::Shutdown
ajn::XmlManifestTemplateValidator::ValidateNodeAnnotations
ajn::XmlManifestTemplateValidator::ValidateSecurityLevelAnnotationValue
ajn::XmlManifestValidator::Validate
ajn::XmlManifestValidator::ValidateBase64Value
ajn::XmlManifestValidator::ValidateManifestVersionContent
ajn::XmlManifestValidator::ValidateOidContent
ajn::XmlPoliciesConverter::Init
ajn::XmlPoliciesConverter::Shutdown
ajn::XmlPoliciesValidator::AllValidator::ValidateAllTypeAbsentOrOnlyPeer
ajn::XmlPoliciesValidator::Init
ajn::XmlPoliciesValidator::PeerValidator::GetValidPeerType
ajn::XmlPoliciesValidator::PeerValidator::Validate
ajn::XmlPoliciesValidator::PeerValidator::ValidateAllTypeAbsentOrOnlyPeer
ajn::XmlPoliciesValidator::PeerValidator::ValidateChildrenCount
ajn::XmlPoliciesValidator::PeerValidator::ValidatePeerUnique
ajn::XmlPoliciesValidator::PeerWithoutPublicKey::ValidateTypeSpecific
ajn::XmlPoliciesValidator::PeerWithPublicKeyValidator::ValidatePublicKey
ajn::XmlPoliciesValidator::Shutdown
ajn::XmlPoliciesValidator::Validate
ajn::XmlPoliciesValidator::ValidateAclsCount
ajn::XmlPoliciesValidator::ValidatePeersCount
ajn::XmlPoliciesValidator::ValidatePolicyVersion
ajn::XmlPoliciesValidator::ValidatePolicyVersionContent
ajn::XmlPoliciesValidator::ValidateSerialNumberContent
ajn::XmlPoliciesValidator::WithMembershipValidator::ValidateSgId
ajn::XmlRulesConverter::AddChildAnnotation
ajn::XmlRulesConverter::AddMembers
ajn::XmlRulesConverter::AddRule
ajn::XmlRulesConverter::AddRules
ajn::XmlRulesConverter::BuildRules
ajn::XmlRulesConverter::BuildXmlInterface
ajn::XmlRulesConverter::BuildXmlMember
ajn::XmlRulesConverter::BuildXmlNode
ajn::XmlRulesConverter::Init
ajn::XmlRulesConverter::RulesToXml
ajn::XmlRulesConverter::SetInterfaceName
ajn::XmlRulesConverter::SetMemberMask
ajn::XmlRulesConverter::SetMemberName
ajn::XmlRulesConverter::SetMemberType
ajn::XmlRulesConverter::Shutdown
ajn::XmlRulesConverter::UpdateRuleSecurityLevel
ajn::XmlRulesConverter::XmlToRules
ajn::XmlRulesValidator::Init
ajn::XmlRulesValidator::MemberTypeMapInit
ajn::XmlRulesValidator::MemberValidator::GetValidMemberType
ajn::XmlRulesValidator::MemberValidator::ValidateActionMask
ajn::XmlRulesValidator::MemberValidator::ValidateAnnotationAllowedForMember
ajn::XmlRulesValidator::MemberValidator::ValidateAnnotationUnique
ajn::XmlRulesValidator::MemberValidator::ValidateDenyAnnotation
ajn::XmlRulesValidator::MemberValidator::ValidateMemberAnnotations
ajn::XmlRulesValidator::MemberValidator::ValidateMemberName
ajn::XmlRulesValidator::MemberValidator::ValidateMemberNameUnique
ajn::XmlRulesValidator::MethodsValidator::Init
ajn::XmlRulesValidator::PropertiesValidator::Init
ajn::XmlRulesValidator::Shutdown
ajn::XmlRulesValidator::SignalsValidator::Init
ajn::XmlRulesValidator::Validate
ajn::XmlRulesValidator::ValidateInterfaceAnnotations
ajn::XmlRulesValidator::ValidateInterfaceNameUnique
ajn::XmlRulesValidator::ValidateInterfaces
ajn::XmlRulesValidator::ValidateMembers
ajn::XmlRulesValidator::ValidateNodeAnnotations
ajn::XmlRulesValidator::ValidateNodeNameUnique
ajn::XmlRulesValidator::ValidateRule
ajn::XmlRulesValidator::ValidateRules
ajn::XmlValidator::ValidateAttributeValueUnique
ajn::XmlValidator::ValidateChildrenCountEqual
ajn::XmlValidator::ValidateChildrenCountPositive
ajn::XmlValidator::ValidateElementName
ajn::XmlValidator::ValidateNameAttributeValue
AJSoftwareVersion
aki:     
AlarmTriggered
AlarmTriggered for 80 time for Name : %s GUID : %s Next alarm in %d
AlarmTriggered for 90 time for Name : %s GUID : %s Next alarm in %ld
AlarmTriggered sending query "*" Name : %s GUID : %s nme.transport %x
Alias '%s' not in busNameIDMap
alias:     
aliasUID, disposition
AliasUnixUser
ALL_NAMES
ALLJOYN
AllJoyn API Library
AllJoyn Daemon GUID = %s (%s)
AllJoyn Library v16.10.00 (Built Tue Nov 15 06:26:45 UTC 2016 by pawelwi)
ALLJOYN_ABOUT
alljoyn_aboutdata_create
alljoyn_aboutdata_create_empty
alljoyn_aboutdata_create_full
alljoyn_aboutdata_createfrommsgarg
alljoyn_aboutdata_createfromxml
alljoyn_aboutdata_destroy
alljoyn_aboutdata_getaboutdata
alljoyn_aboutdata_getajsoftwareversion
alljoyn_aboutdata_getannouncedaboutdata
alljoyn_aboutdata_getappid
alljoyn_aboutdata_getappname
alljoyn_aboutdata_getdateofmanufacture
alljoyn_aboutdata_getdefaultlanguage
alljoyn_aboutdata_getdescription
alljoyn_aboutdata_getdeviceid
alljoyn_aboutdata_getdevicename
alljoyn_aboutdata_getfield
alljoyn_aboutdata_getfields
alljoyn_aboutdata_getfieldsignature
alljoyn_aboutdata_gethardwareversion
alljoyn_aboutdata_getmanufacturer
alljoyn_aboutdata_getmodelnumber
alljoyn_aboutdata_getsoftwareversion
alljoyn_aboutdata_getsupportedlanguages
alljoyn_aboutdata_getsupporturl
alljoyn_aboutdata_isfieldannounced
alljoyn_aboutdata_isfieldlocalized
alljoyn_aboutdata_isfieldrequired
alljoyn_aboutdata_isvalid
alljoyn_aboutdata_setappid
alljoyn_aboutdata_setappid_fromstring
alljoyn_aboutdata_setappname
alljoyn_aboutdata_setdateofmanufacture
alljoyn_aboutdata_setdefaultlanguage
alljoyn_aboutdata_setdescription
alljoyn_aboutdata_setdeviceid
alljoyn_aboutdata_setdevicename
alljoyn_aboutdata_setfield
alljoyn_aboutdata_sethardwareversion
alljoyn_aboutdata_setmanufacturer
alljoyn_aboutdata_setmodelnumber
alljoyn_aboutdata_setsoftwareversion
alljoyn_aboutdata_setsupportedlanguage
alljoyn_aboutdata_setsupporturl
alljoyn_aboutdatalistener_create
alljoyn_aboutdatalistener_destroy
alljoyn_abouticon_clear
alljoyn_abouticon_create
alljoyn_abouticon_destroy
alljoyn_abouticon_getcontent
alljoyn_abouticon_geturl
alljoyn_abouticon_setcontent
alljoyn_abouticon_setcontent_frommsgarg
alljoyn_abouticon_seturl
alljoyn_abouticonobj_create
alljoyn_abouticonobj_destroy
alljoyn_abouticonproxy_create
alljoyn_abouticonproxy_destroy
alljoyn_abouticonproxy_geticon
alljoyn_abouticonproxy_getversion
alljoyn_aboutlistener_create
alljoyn_aboutlistener_destroy
alljoyn_aboutobj_announce
alljoyn_aboutobj_announce_using_datalistener
alljoyn_aboutobj_create
alljoyn_aboutobj_destroy
alljoyn_aboutobj_unannounce
alljoyn_aboutobjectdescription_clear
alljoyn_aboutobjectdescription_create
alljoyn_aboutobjectdescription_create_full
alljoyn_aboutobjectdescription_createfrommsgarg
alljoyn_aboutobjectdescription_destroy
alljoyn_aboutobjectdescription_getinterfacepaths
alljoyn_aboutobjectdescription_getinterfaces
alljoyn_aboutobjectdescription_getmsgarg
alljoyn_aboutobjectdescription_getpaths
alljoyn_aboutobjectdescription_hasinterface
alljoyn_aboutobjectdescription_hasinterfaceatpath
alljoyn_aboutobjectdescription_haspath
alljoyn_aboutproxy_create
alljoyn_aboutproxy_destroy
alljoyn_aboutproxy_getaboutdata
alljoyn_aboutproxy_getobjectdescription
alljoyn_aboutproxy_getversion
alljoyn_applicationstatelistener_create
alljoyn_applicationstatelistener_destroy
ALLJOYN_AUTH
alljoyn_authlistener_create
alljoyn_authlistener_destroy
alljoyn_authlistener_requestcredentialsresponse
alljoyn_authlistener_setsharedsecret
alljoyn_authlistener_verifycredentialsresponse
alljoyn_authlistenerasync_create
alljoyn_authlistenerasync_destroy
alljoyn_autopinger_adddestination
alljoyn_autopinger_addpinggroup
alljoyn_autopinger_create
alljoyn_autopinger_destroy
alljoyn_autopinger_pause
alljoyn_autopinger_removedestination
alljoyn_autopinger_removepinggroup
alljoyn_autopinger_resume
alljoyn_autopinger_setpinginterval
alljoyn_busattachment_addlogonentry
alljoyn_busattachment_addmatch
alljoyn_busattachment_advertisename
alljoyn_busattachment_bindsessionport
alljoyn_busattachment_canceladvertisename
alljoyn_busattachment_cancelfindadvertisedname
alljoyn_busattachment_cancelfindadvertisednamebytransport
alljoyn_busattachment_cancelwhoimplements_interface
alljoyn_busattachment_cancelwhoimplements_interfaces
alljoyn_busattachment_clearkeys
alljoyn_busattachment_clearkeystore
alljoyn_busattachment_connect
alljoyn_busattachment_create
alljoyn_busattachment_create_concurrency
alljoyn_busattachment_createinterface
alljoyn_busattachment_createinterface_secure
alljoyn_busattachment_createinterfacesfromxml
alljoyn_busattachment_deletedefaultkeystore
alljoyn_busattachment_deleteinterface
alljoyn_busattachment_destroy
alljoyn_busattachment_disconnect
alljoyn_busattachment_enableconcurrentcallbacks
alljoyn_busattachment_enablepeersecurity
alljoyn_busattachment_enablepeersecuritywithpermissionconfigurationlistener
alljoyn_busattachment_findadvertisedname
alljoyn_busattachment_findadvertisednamebytransport
alljoyn_busattachment_getalljoyndebugobj
alljoyn_busattachment_getalljoynproxyobj
alljoyn_busattachment_getconcurrency
alljoyn_busattachment_getconnectspec
alljoyn_busattachment_getdbusproxyobj
alljoyn_busattachment_getglobalguidstring
alljoyn_busattachment_getinterface
alljoyn_busattachment_getinterfaces
alljoyn_busattachment_getkeyexpiration
alljoyn_busattachment_getpeerguid
alljoyn_busattachment_getpermissionconfigurator
alljoyn_busattachment_gettimestamp
alljoyn_busattachment_getuniquename
alljoyn_busattachment_isconnected
alljoyn_busattachment_ispeersecurityenabled
alljoyn_busattachment_isstarted
alljoyn_busattachment_isstopping
alljoyn_busattachment_join
alljoyn_busattachment_joinsession
alljoyn_busattachment_joinsessionasync
alljoyn_busattachment_leavesession
alljoyn_busattachment_namehasowner
alljoyn_busattachment_ping
alljoyn_busattachment_registeraboutlistener
alljoyn_busattachment_registerapplicationstatelistener
alljoyn_busattachment_registerbuslistener
alljoyn_busattachment_registerbusobject
alljoyn_busattachment_registerbusobject_secure
alljoyn_busattachment_registerkeystorelistener
alljoyn_busattachment_registersignalhandler
alljoyn_busattachment_registersignalhandlerwithrule
alljoyn_busattachment_releasename
alljoyn_busattachment_reloadkeystore
alljoyn_busattachment_removematch
alljoyn_busattachment_removesessionmember
alljoyn_busattachment_requestname
alljoyn_busattachment_secureconnection
alljoyn_busattachment_secureconnectionasync
alljoyn_busattachment_setdaemondebug
alljoyn_busattachment_setkeyexpiration
alljoyn_busattachment_setlinktimeout
alljoyn_busattachment_setlinktimeoutasync
alljoyn_busattachment_setsessionlistener
alljoyn_busattachment_start
alljoyn_busattachment_stop
alljoyn_busattachment_unbindsessionport
alljoyn_busattachment_unregisteraboutlistener
alljoyn_busattachment_unregisterallaboutlisteners
alljoyn_busattachment_unregisterallhandlers
alljoyn_busattachment_unregisterapplicationstatelistener
alljoyn_busattachment_unregisterbuslistener
alljoyn_busattachment_unregisterbusobject
alljoyn_busattachment_unregistersignalhandler
alljoyn_busattachment_unregistersignalhandlerwithrule
alljoyn_busattachment_whoimplements_interface
alljoyn_busattachment_whoimplements_interfaces
alljoyn_buslistener_create
alljoyn_buslistener_destroy
alljoyn_busobject_addinterface
alljoyn_busobject_addinterface_announced
alljoyn_busobject_addmethodhandler
alljoyn_busobject_addmethodhandlers
alljoyn_busobject_cancelsessionlessmessage
alljoyn_busobject_cancelsessionlessmessage_serial
alljoyn_busobject_create
alljoyn_busobject_destroy
alljoyn_busobject_emitpropertieschanged
alljoyn_busobject_emitpropertychanged
alljoyn_busobject_getannouncedinterfacenames
alljoyn_busobject_getbusattachment
alljoyn_busobject_getname
alljoyn_busobject_getpath
alljoyn_busobject_issecure
alljoyn_busobject_methodreply_args
alljoyn_busobject_methodreply_err
alljoyn_busobject_methodreply_status
alljoyn_busobject_setannounceflag
alljoyn_busobject_signal
ALLJOYN_C
alljoyn_credentials_clear
alljoyn_credentials_create
alljoyn_credentials_destroy
alljoyn_credentials_getcertchain
alljoyn_credentials_getexpiration
alljoyn_credentials_getlogonentry
alljoyn_credentials_getpassword
alljoyn_credentials_getprivateKey
alljoyn_credentials_getusername
alljoyn_credentials_isset
alljoyn_credentials_setcertchain
alljoyn_credentials_setexpiration
alljoyn_credentials_setlogonentry
alljoyn_credentials_setpassword
alljoyn_credentials_setprivatekey
alljoyn_credentials_setusername
ALLJOYN_DAEMON
ALLJOYN_ECDHE*
ALLJOYN_ECDHE_ECDSA
ALLJOYN_ECDHE_NULL
ALLJOYN_ECDHE_PSK
ALLJOYN_ECDHE_SPEKE
alljoyn_getbuildinfo
alljoyn_getnumericversion
alljoyn_getversion
alljoyn_init
alljoyn_interfacedescription_activate
alljoyn_interfacedescription_addannotation
alljoyn_interfacedescription_addargannotation
alljoyn_interfacedescription_addmember
alljoyn_interfacedescription_addmemberannotation
alljoyn_interfacedescription_addmethod
alljoyn_interfacedescription_addproperty
alljoyn_interfacedescription_addpropertyannotation
alljoyn_interfacedescription_addsignal
alljoyn_interfacedescription_eql
alljoyn_interfacedescription_getannotation
alljoyn_interfacedescription_getannotationatindex
alljoyn_interfacedescription_getannotationscount
alljoyn_interfacedescription_getargdescriptionforlanguage
alljoyn_interfacedescription_getdescriptionforlanguage
alljoyn_interfacedescription_getdescriptionlanguages
alljoyn_interfacedescription_getdescriptionlanguages2
alljoyn_interfacedescription_getdescriptiontranslationcallback
alljoyn_interfacedescription_getmember
alljoyn_interfacedescription_getmemberannotation
alljoyn_interfacedescription_getmemberargannotation
alljoyn_interfacedescription_getmemberdescriptionforlanguage
alljoyn_interfacedescription_getmembers
alljoyn_interfacedescription_getmethod
alljoyn_interfacedescription_getname
alljoyn_interfacedescription_getproperties
alljoyn_interfacedescription_getproperty
alljoyn_interfacedescription_getpropertyannotation
alljoyn_interfacedescription_getpropertydescriptionforlanguage
alljoyn_interfacedescription_getsecuritypolicy
alljoyn_interfacedescription_getsignal
alljoyn_interfacedescription_hasdescription
alljoyn_interfacedescription_hasmember
alljoyn_interfacedescription_hasproperties
alljoyn_interfacedescription_hasproperty
alljoyn_interfacedescription_introspect
alljoyn_interfacedescription_issecure
alljoyn_interfacedescription_member_eql
alljoyn_interfacedescription_member_getannotation
alljoyn_interfacedescription_member_getannotationatindex
alljoyn_interfacedescription_member_getannotationscount
alljoyn_interfacedescription_member_getargannotation
alljoyn_interfacedescription_member_getargannotationatindex
alljoyn_interfacedescription_member_getargannotationscount
alljoyn_interfacedescription_property_eql
alljoyn_interfacedescription_property_getannotation
alljoyn_interfacedescription_property_getannotationatindex
alljoyn_interfacedescription_property_getannotationscount
alljoyn_interfacedescription_setargdescription
alljoyn_interfacedescription_setargdescriptionforlanguage
alljoyn_interfacedescription_setdescription
alljoyn_interfacedescription_setdescriptionforlanguage
alljoyn_interfacedescription_setdescriptionlanguage
alljoyn_interfacedescription_setdescriptiontranslationcallback
alljoyn_interfacedescription_setmemberdescription
alljoyn_interfacedescription_setmemberdescriptionforlanguage
alljoyn_interfacedescription_setpropertydescription
alljoyn_interfacedescription_setpropertydescriptionforlanguage
alljoyn_keystorelistener_create
alljoyn_keystorelistener_destroy
alljoyn_keystorelistener_getkeys
alljoyn_keystorelistener_putkeys
alljoyn_keystorelistener_with_synchronization_create
alljoyn_message_create
alljoyn_message_description
alljoyn_message_destroy
alljoyn_message_eql
alljoyn_message_getarg
alljoyn_message_getargs
alljoyn_message_getauthmechanism
alljoyn_message_getcallserial
alljoyn_message_getcompressiontoken
alljoyn_message_getdestination
alljoyn_message_geterrorname
alljoyn_message_getflags
alljoyn_message_getinterface
alljoyn_message_getmembername
alljoyn_message_getobjectpath
alljoyn_message_getreceiveendpointname
alljoyn_message_getreplyserial
alljoyn_message_getsender
alljoyn_message_getsessionid
alljoyn_message_getsignature
alljoyn_message_gettimestamp
alljoyn_message_gettype
alljoyn_message_isbroadcastsignal
alljoyn_message_isencrypted
alljoyn_message_isexpired
alljoyn_message_isglobalbroadcast
alljoyn_message_issessionless
alljoyn_message_isunreliable
alljoyn_message_parseargs
alljoyn_message_setendianess
alljoyn_message_tostring
alljoyn_msgarg_array_create
alljoyn_msgarg_array_element
alljoyn_msgarg_array_get
alljoyn_msgarg_array_set
alljoyn_msgarg_array_set_offset
alljoyn_msgarg_array_signature
alljoyn_msgarg_array_tostring
alljoyn_msgarg_clear
alljoyn_msgarg_clone
alljoyn_msgarg_copy
alljoyn_msgarg_create
alljoyn_msgarg_create_and_set
alljoyn_msgarg_destroy
alljoyn_msgarg_equal
alljoyn_msgarg_get
alljoyn_msgarg_get_array_element
alljoyn_msgarg_get_array_elementsignature
alljoyn_msgarg_get_array_numberofelements
alljoyn_msgarg_get_bool
alljoyn_msgarg_get_bool_array
alljoyn_msgarg_get_double
alljoyn_msgarg_get_double_array
alljoyn_msgarg_get_int16
alljoyn_msgarg_get_int16_array
alljoyn_msgarg_get_int32
alljoyn_msgarg_get_int32_array
alljoyn_msgarg_get_int64
alljoyn_msgarg_get_int64_array
alljoyn_msgarg_get_objectpath
alljoyn_msgarg_get_signature
alljoyn_msgarg_get_string
alljoyn_msgarg_get_uint16
alljoyn_msgarg_get_uint16_array
alljoyn_msgarg_get_uint32
alljoyn_msgarg_get_uint32_array
alljoyn_msgarg_get_uint64
alljoyn_msgarg_get_uint64_array
alljoyn_msgarg_get_uint8
alljoyn_msgarg_get_uint8_array
alljoyn_msgarg_get_variant
alljoyn_msgarg_get_variant_array
alljoyn_msgarg_getdictelement
alljoyn_msgarg_getkey
alljoyn_msgarg_getmember
alljoyn_msgarg_getnummembers
alljoyn_msgarg_gettype
alljoyn_msgarg_getvalue
alljoyn_msgarg_hassignature
alljoyn_msgarg_set
alljoyn_msgarg_set_and_stabilize
alljoyn_msgarg_set_bool
alljoyn_msgarg_set_bool_array
alljoyn_msgarg_set_double
alljoyn_msgarg_set_double_array
alljoyn_msgarg_set_int16
alljoyn_msgarg_set_int16_array
alljoyn_msgarg_set_int32
alljoyn_msgarg_set_int32_array
alljoyn_msgarg_set_int64
alljoyn_msgarg_set_int64_array
alljoyn_msgarg_set_objectpath
alljoyn_msgarg_set_objectpath_array
alljoyn_msgarg_set_signature
alljoyn_msgarg_set_signature_array
alljoyn_msgarg_set_string
alljoyn_msgarg_set_string_array
alljoyn_msgarg_set_uint16
alljoyn_msgarg_set_uint16_array
alljoyn_msgarg_set_uint32
alljoyn_msgarg_set_uint32_array
alljoyn_msgarg_set_uint64
alljoyn_msgarg_set_uint64_array
alljoyn_msgarg_set_uint8
alljoyn_msgarg_set_uint8_array
alljoyn_msgarg_setdictentry
alljoyn_msgarg_setstruct
alljoyn_msgarg_signature
alljoyn_msgarg_stabilize
alljoyn_msgarg_tostring
ALLJOYN_OBJ
alljoyn_observer_create
alljoyn_observer_destroy
alljoyn_observer_get
alljoyn_observer_getfirst
alljoyn_observer_getnext
alljoyn_observer_registerlistener
alljoyn_observer_unregisteralllisteners
alljoyn_observer_unregisterlistener
alljoyn_observerlistener_create
alljoyn_observerlistener_destroy
alljoyn_passwordmanager_setcredentials
ALLJOYN_PBO
ALLJOYN_PEERSTATE
alljoyn_permissionconfigurationlistener_create
alljoyn_permissionconfigurationlistener_destroy
alljoyn_permissionconfigurator_certificatechain_destroy
alljoyn_permissionconfigurator_certificateid_cleanup
alljoyn_permissionconfigurator_certificateidarray_cleanup
alljoyn_permissionconfigurator_claim
alljoyn_permissionconfigurator_endmanagement
alljoyn_permissionconfigurator_getapplicationstate
alljoyn_permissionconfigurator_getclaimcapabilities
alljoyn_permissionconfigurator_getclaimcapabilitiesadditionalinfo
alljoyn_permissionconfigurator_getdefaultclaimcapabilities
alljoyn_permissionconfigurator_getdefaultpolicy
alljoyn_permissionconfigurator_getidentity
alljoyn_permissionconfigurator_getidentitycertificateid
alljoyn_permissionconfigurator_getmanifests
alljoyn_permissionconfigurator_getmanifesttemplate
alljoyn_permissionconfigurator_getmembershipsummaries
alljoyn_permissionconfigurator_getpolicy
alljoyn_permissionconfigurator_getpublickey
alljoyn_permissionconfigurator_installmanifests
alljoyn_permissionconfigurator_installmembership
alljoyn_permissionconfigurator_manifestarray_cleanup
alljoyn_permissionconfigurator_manifesttemplate_destroy
alljoyn_permissionconfigurator_policy_destroy
alljoyn_permissionconfigurator_publickey_destroy
alljoyn_permissionconfigurator_removemembership
alljoyn_permissionconfigurator_reset
alljoyn_permissionconfigurator_resetpolicy
alljoyn_permissionconfigurator_setapplicationstate
alljoyn_permissionconfigurator_setclaimcapabilities
alljoyn_permissionconfigurator_setclaimcapabilitiesadditionalinfo
alljoyn_permissionconfigurator_setmanifestfromxml
alljoyn_permissionconfigurator_setmanifesttemplatefromxml
alljoyn_permissionconfigurator_startmanagement
alljoyn_permissionconfigurator_updateidentity
alljoyn_permissionconfigurator_updatepolicy
ALLJOYN_PING_REPLY_SUCCESS
ALLJOYN_PING_REPLY_UNKNOWN_NAME
ALLJOYN_PING_REPLY_UNREACHABLE
alljoyn_pinglistener_create
alljoyn_pinglistener_destroy
alljoyn_proxybusobject_addchild
alljoyn_proxybusobject_addinterface
alljoyn_proxybusobject_addinterface_by_name
alljoyn_proxybusobject_copy
alljoyn_proxybusobject_create
alljoyn_proxybusobject_create_secure
alljoyn_proxybusobject_destroy
alljoyn_proxybusobject_enablepropertycaching
alljoyn_proxybusobject_getallproperties
alljoyn_proxybusobject_getallpropertiesasync
alljoyn_proxybusobject_getchild
alljoyn_proxybusobject_getchildren
alljoyn_proxybusobject_getinterface
alljoyn_proxybusobject_getinterfaces
alljoyn_proxybusobject_getpath
alljoyn_proxybusobject_getproperty
alljoyn_proxybusobject_getpropertyasync
alljoyn_proxybusobject_getservicename
alljoyn_proxybusobject_getsessionid
alljoyn_proxybusobject_getuniquename
alljoyn_proxybusobject_implementsinterface
alljoyn_proxybusobject_introspectremoteobject
alljoyn_proxybusobject_introspectremoteobjectasync
alljoyn_proxybusobject_issecure
alljoyn_proxybusobject_isvalid
alljoyn_proxybusobject_methodcall
alljoyn_proxybusobject_methodcall_member
alljoyn_proxybusobject_methodcall_member_noreply
alljoyn_proxybusobject_methodcall_noreply
alljoyn_proxybusobject_methodcallasync
alljoyn_proxybusobject_methodcallasync_member
alljoyn_proxybusobject_parsexml
alljoyn_proxybusobject_ref_create
alljoyn_proxybusobject_ref_decref
alljoyn_proxybusobject_ref_get
alljoyn_proxybusobject_ref_incref
alljoyn_proxybusobject_registerpropertieschangedlistener
alljoyn_proxybusobject_removechild
alljoyn_proxybusobject_secureconnection
alljoyn_proxybusobject_secureconnectionasync
alljoyn_proxybusobject_setproperty
alljoyn_proxybusobject_setpropertyasync
alljoyn_proxybusobject_unregisterpropertieschangedlistener
alljoyn_routerinit
alljoyn_routerinitwithconfig
alljoyn_routershutdown
ALLJOYN_SECURITY
alljoyn_securityapplicationproxy_claim
alljoyn_securityapplicationproxy_computemanifestdigest
alljoyn_securityapplicationproxy_create
alljoyn_securityapplicationproxy_destroy
alljoyn_securityapplicationproxy_digest_destroy
alljoyn_securityapplicationproxy_eccpublickey_destroy
alljoyn_securityapplicationproxy_endmanagement
alljoyn_securityapplicationproxy_getapplicationstate
alljoyn_securityapplicationproxy_getclaimcapabilities
alljoyn_securityapplicationproxy_getclaimcapabilitiesadditionalinfo
alljoyn_securityapplicationproxy_getdefaultpolicy
alljoyn_securityapplicationproxy_geteccpublickey
alljoyn_securityapplicationproxy_getmanifesttemplate
alljoyn_securityapplicationproxy_getpermissionmanagementsessionport
alljoyn_securityapplicationproxy_getpolicy
alljoyn_securityapplicationproxy_installmembership
alljoyn_securityapplicationproxy_manifest_destroy
alljoyn_securityapplicationproxy_manifesttemplate_destroy
alljoyn_securityapplicationproxy_policy_destroy
alljoyn_securityapplicationproxy_reset
alljoyn_securityapplicationproxy_resetpolicy
alljoyn_securityapplicationproxy_setmanifestsignature
alljoyn_securityapplicationproxy_signmanifest
alljoyn_securityapplicationproxy_startmanagement
alljoyn_securityapplicationproxy_updateidentity
alljoyn_securityapplicationproxy_updatepolicy
alljoyn_sessionlistener_create
alljoyn_sessionlistener_destroy
alljoyn_sessionopts_cmp
alljoyn_sessionopts_create
alljoyn_sessionopts_destroy
alljoyn_sessionopts_get_multipoint
alljoyn_sessionopts_get_proximity
alljoyn_sessionopts_get_traffic
alljoyn_sessionopts_get_transports
alljoyn_sessionopts_iscompatible
alljoyn_sessionopts_set_multipoint
alljoyn_sessionopts_set_proximity
alljoyn_sessionopts_set_traffic
alljoyn_sessionopts_set_transports
alljoyn_sessionportlistener_create
alljoyn_sessionportlistener_destroy
alljoyn_shutdown
ALLJOYN_SRP_KEYX
ALLJOYN_SRP_LOGON
alljoyn_unity_deferred_callbacks_process
alljoyn_unity_set_deferred_callback_mainthread_only
AllJoynAcceptBusConnection
AllJoynCloseBusHandle
AllJoynConnectToBus
AllJoynCreateBus
AllJoynEnumEvents
AllJoynEventSelect
AllJoynObj::AddAdvNameAlias(%s, 0x%x, %s)
AllJoynObj::AddBusToBusEndpoint(%s)
AllJoynObj::AddSessionRef(): AddSessionRef failed(id=%u, vep=%s, b2bEp="%s")
AllJoynObj::AddSessionRef(): AddSessionRef routing node(id=%u, RN=%s, b2bEp="%s")
AllJoynObj::AddSessionRef(vep=%s, id=%u, b2bEp=%s)
AllJoynObj::AddSessionRoute(%u, %s, %s, %s, %s)
AllJoynObj::AddVirtualEndpoint(name=%s, b2b=%s)
AllJoynObj::Advertise(%s) returned %d (status=%s)
AllJoynObj::AdvertiseName(%s, %x)
AllJoynObj::AliasUnixUser(%d) returned %d
AllJoynObj::BindSession(%s, %d, %s)
AllJoynObj::BindSessionPort(%s, %d) returned %d (status=%s)
AllJoynObj::BindSessionPort(<bad args>) from %s
AllJoynObj::CancelAdvertiseName(%s, 0x%x)
AllJoynObj::CancelFindAdvertisement(%s) returned %d (status=%s)
AllJoynObj::CancelSessionlessMessage() failed to send reply message
AllJoynObj::CleanAdvAliasMap(%s, 0x%x): size=%d
AllJoynObj::DetachSessionSignalHandler(src=%s, id=%u)
AllJoynObj::ExchangeNames(endpoint = %s) NT %d
AllJoynObj::ExchangeNamesSignalHandler(msg sender = "%s")
AllJoynObj::FindAdvertisedName(%s) returned %d (status=%s)
AllJoynObj::FindAdvertiseNameProc(%s)
AllJoynObj::FoundNames(busAddr = "%s", guid = "%s", names = %s, ttl = %d)
AllJoynObj::GetHostInfo(%u)
AllJoynObj::GetNames(endpoint = %s joinerName %s endpoint->GetFeatures().nameTransfer %d type %d sessionId %u endpoint->GetRemoteGUID() %s)
AllJoynObj::GetSessionFd(%u)
AllJoynObj::GetSessionInfo cannot parse args
AllJoynObj::GetSessionInfo(%s, %u, <%x, %x, %x>)
alljoynObj::Init failed
alljoynObj::Join failed
AllJoynObj::LeaveSession(%u)
AllJoynObj::NameChangedSignalHandler: alias = "%s"   oldOwner = "%s"   newOwner = "%s"  sent from "%s"
AllJoynObj::NamesHandler processing %d unique names
AllJoynObj::OnAppResume() failed to send reply message
AllJoynObj::OnAppResume() sender endpoint is invalid
AllJoynObj::OnAppSuspend() failed to send reply message
AllJoynObj::OnAppSuspend() sender endpoint is invalid
AllJoynObj::Ping(%s) returned %d
AllJoynObj::Ping(%s) returned %d (status=%s)
AllJoynObj::Ping()
AllJoynObj::PingReplyMethodHandler()
AllJoynObj::PingReplyMethodHandlerUsingCode()
AllJoynObj::ProcCancelAdvertise(%s, %s, %x)
AllJoynObj::ProcCancelFindAdvertisement(sender = %s, matching = %s, transports = %d)
AllJoynObj::RemoveBusToBusEndpoint(%s)
AllJoynObj::RemoveSessionMember(%u, %s)
AllJoynObj::RemoveSessionRef(vepName=%s, id=%u)
AllJoynObj::RemoveSessionRefs(%s, %s)
AllJoynObj::RemoveSessionRefs(%s, %u, %u)
AllJoynObj::RunAttach(%d) returned (%d,%u) (status=%s)
AllJoynObj::RunAttach(): Adding srcStr="%s" to session map entry
AllJoynObj::RunAttach(): AddSessionRoute() for id=%d.
AllJoynObj::RunAttach(): Allocate new session id: %d
AllJoynObj::RunAttach(): Already joined
AllJoynObj::RunAttach(): Bad args
AllJoynObj::RunAttach(): Cleanup
AllJoynObj::RunAttach(): destStr="%s" routes indirectly
AllJoynObj::RunAttach(): destStr="%s" served directly.
AllJoynObj::RunAttach(): Direct raw session handling
AllJoynObj::RunAttach(): Direct raw session handling.  ShutdownEndpoint()
AllJoynObj::RunAttach(): Endpoint for destStr="%s" exists but is invalid.  Sleeping.
AllJoynObj::RunAttach(): Forward AttachSession to  busAddr="%s" at nextControllerName="%s" tempOpts.nt %d
AllJoynObj::RunAttach(): Found destUniqueName="%s" in session map.
AllJoynObj::RunAttach(): Found session map entry
AllJoynObj::RunAttach(): Good request.  Starting.
AllJoynObj::RunAttach(): Incompatible options
AllJoynObj::RunAttach(): indirect raw session handling
AllJoynObj::RunAttach(): indirect raw session handling. Create message pump.
AllJoynObj::RunAttach(): Joinee accepted.  Adding joiner
AllJoynObj::RunAttach(): Joiner to Joiner multipoint attach message
AllJoynObj::RunAttach(): Multiple joins to non-multipoint session detected
AllJoynObj::RunAttach(): optsIn=%s methodType=%s
AllJoynObj::RunAttach(): protoVer=%d.
AllJoynObj::RunAttach(): Reply to request
AllJoynObj::RunAttach(): Secondary (multipoint) attach.  Increment reference
AllJoynObj::RunAttach(): SendAcceptSession()
AllJoynObj::RunAttach(): SendAttachSession() success
AllJoynObj::RunAttach(): SendMPSessionChanged(id=%d, source="%s, true, dest)
AllJoynObj::RunAttach(): SendSessionJoined(port=%d., id=%d, source="%s", endpoint="%s")
AllJoynObj::RunAttach(): Session is multipoint
AllJoynObj::RunAttach(): srcB2BEp IsValid(), srcEp IsValid()
AllJoynObj::RunAttach(): traffic != TRAFFIC_MESSAGES
AllJoynObj::RunAttach(): Unable to find a session map entry
AllJoynObj::RunAttach(): Valid session map entry
AllJoynObj::RunAttach(): Valid session map entry for sessionPort=%d
AllJoynObj::SendFoundAdvertisedName(%s, %s, 0x%x, %s)
AllJoynObj::SendLostAdvertisdName(%s, 0x%x)
AllJoynObj::SetLinkTimeout(%u, %d) (status=%s, disp=%d, lto=%d)
alljoynObj::Stop failed
AllJoynObj::UnbindSession(%d)
AllJoynObj::UnbindSessionPort(%s, %d) returned %d (status=%s)
AllJoynPeerObj::AlarmTriggered
AllJoynPeerObj::AlarmTriggered - exiting
AllJoynReceiveFromBus
AllJoynReceiveFromBus failed. The other end closed the pipe.
AllJoynReceiveFromBus(busHandle = %p, buf = <>, reqBytes = %lu, readBytes = %lu)
AllJoyn-Router-Service
AllJoynSendToBus
AllJoynSendToBus failed. The other end closed the pipe (0x%08X).
AllJoynSendToBus(busHandle = %p, *buf = <>, numBytes = %lu, numSent = %lu)
Allocating buffers win %d pkt %d
Allocating group key
allow
alnum
alpha
Already claimed
always ac powered
always stationary
An error occured while exporting signature.
An error occured while importing signature.
annotation
Announce
ANONYMOUS
ANY_TRUSTED
ApH;Axt
ApH+AhH
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-comm-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-fibers-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-namedpipe-l1-1-0.dll
api-ms-win-core-namedpipe-l1-2-1.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-net-isolation-l1-1-0.dll
api-ms-win-security-accesshlpr-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
Appending string from nullptr will cause a crash in future versions!
AppId
ApplicationState
Applying defaults.
AppName
ARDP_Accept(handle=%p, conn=%p, segmax=%d, segbmax=%d, buf=%p (%s), len=%d)
ARDP_AdjustProbeTimeoutSettings(timeoutMilliseconds=%u, retries=%u)
ARDP_AllocHandle()
ARDP_Connect(handle=%p, sock=%d, ipAddr="%s", ipPort=%d, segmax=%d, segbmax=%d, pConn=%p, buf=%p, len=%d, context=%p)
ARDP_Disconnect(handle=%p, conn=%p)
ARDP_FreeHandle(handle=0%p)
ARDP_GetConnContext(handle=%p, conn=%p)
ARDP_GetConnId(handle=%p), context = %p
ARDP_GetConnId(handle=%p, conn=%p)
ARDP_GetHandleContext(handle=%p)
ARDP_GetHandleContext(handle=%p), context = %p
ARDP_GetIpPortFromConn(handle=%p), context = %p
ARDP_GetLocalIpAddrFromConn(handle=%p), context = %p
ARDP_GetLocalIpAddrPortFromConn(handle=%p), context = %p
ARDP_GetLocalIpAddrPortFromConn(handle=%p, conn=%p)
ARDP_GetRemoteIpAddrPortFromConn(handle=%p), context = %p
ARDP_GetRemoteIpAddrPortFromConn(handle=%p, conn=%p)
ARDP_HookRecvFrom(handle=%p, RecvFrom=%p)
ARDP_HookSendTo(handle=%p, SendTo=%p)
ARDP_HookSendToSG(handle=%p, RecvCb=%p)
ARDP_IsConnValid(handle=%p, conn=%p)
ARDP_PROTOCOL
ARDP_RecvReady(handle=%p, conn=%p, rcv=%p)
ARDP_ReleaseConnection(handle=%p), context = %p
ARDP_ReleaseConnection(handle=%p, conn=%p)
ARDP_Run conn state %s
ARDP_Run(): Call back in %u ms
ARDP_Run(): Socket read failed (nbytes = %d)
ARDP_Run(handle=%p, sock=%d, socketRead=%d, socketWrite=%d, ms=%p, sockAccepts: %s)
ARDP_Send(handle=%p, conn=%p, buf=%p, len=%d., ttl=%d.)
ARDP_SetAcceptCb(handle=%p, AcceptCb=%p)
ARDP_SetConnectCb(handle=%p, ConnectCb=%p)
ARDP_SetDisconnectCb(handle=%p, DisconnectCb=%p)
ARDP_SetHandleContext(handle=%p, context=%p)
ARDP_SetRecvCb(handle=%p, RecvCb=%p)
ARDP_SetSendCb(handle=%p, SendCb=%p)
ARDP_SetSendWindowCb(handle=%p, SendWindowCb=%p)
ARDP_StartPassive(handle=%p)
ARDP_UpdateProbeTimeout(handle=%p, conn=%p, timeout=%u)
ArdpMachine(): CLOSED: Probe or ACK on a closed connection
ArdpMachine(): CLOSED: RST on a closed connection
ArdpMachine(): CLOSED: Unexpected segment on a closed connection
ArdpMachine(): conn->state = CLOSE_WAIT
ArdpMachine(): conn->state = CLOSED
ArdpMachine(): conn->state = LISTEN
ArdpMachine(): conn->state = OPEN
ArdpMachine(): conn->state = SYN_RCVD
ArdpMachine(): conn->state = SYN_SENT
ArdpMachine(): LISTEN: Foreign host ACKing a Listening connection
ArdpMachine(): LISTEN: RST on a LISTENing connection
ArdpMachine(): LISTEN: SYN received.  Accepting
ArdpMachine(): LISTEN: SYN received. AcceptCb() returned "false"
ArdpMachine(): LISTEN: SYN received: the other side can receive max %d bytes
ArdpMachine(): OPEN: duplicate data segment %u, conn->rcv.CUR + 1 = %u, conn->rcv.LCS + 1 = %u
ArdpMachine(): OPEN: EACK is set
ArdpMachine(): OPEN: FlushExpiredRcvMessages: seq = %u, expected %u got %u
ArdpMachine(): OPEN: Got %d bytes of Data with SEQ %u, rcv.CUR = %u (%s)).
ArdpMachine(): OPEN: Got ACK %u LCS %u Window %u
ArdpMachine(): OPEN: Got duplicate SYN-ACK, acknowledge
ArdpMachine(): OPEN: got NUL, send LCS %u
ArdpMachine(): OPEN: got RST, disconnect
ArdpMachine(): OPEN: Got unexpected SYN, disconnect
ArdpMachine(): OPEN: snd.UNA %u
ArdpMachine(): OPEN: unacceptable sequence %u, conn->rcv.CUR + 1 = %u, conn->rcv.LCS + 1 = %u, MAX = %d
ArdpMachine(): OPEN: update snd.UNA %u
ArdpMachine(): SYN_RCVD: Got ACK with correct acknowledge.  state -> OPEN
ArdpMachine(): SYN_RCVD: Got ACK with incorrect acknowledge %u. RST
ArdpMachine(): SYN_RCVD: Got datagram with no ACK
ArdpMachine(): SYN_RCVD: Got EACK. Send RST
ArdpMachine(): SYN_RCVD: Got RST during passive open
ArdpMachine(): SYN_RCVD: Got SYN, state -> CLOSED
ArdpMachine(): SYN_RCVD: unacceptable sequence %u
ArdpMachine(): SYN_RCVD->OPEN: ConnectCb(handle=%p, conn=%p
ArdpMachine(): SYN_SENT: ACK does not ASK ISS
ArdpMachine(): SYN_SENT: connection refused. state -> CLOSED
ArdpMachine(): SYN_SENT: Detected unsupported protocol version 0x%x
ArdpMachine(): SYN_SENT: SYN | ACK received
ArdpMachine(): SYN_SENT: Unsupported protocol version 0x%x
ArdpMachine(): SYN_SENT->OPEN: ConnectCb(handle=%p, conn=%p
ArdpMachine():accumulated %d segments, send urgent ACK
ArdpMachine():schedule ackTimer @ %u
ArdpMachine(handle=%p, conn=%p, seg=%p, buf=%p, len=%d)
ArdpStream::~ArdpStream()
ArdpStream::~ArdpStream(): delete events
ArdpStream::AddCurrentThread()
ArdpStream::ArdpStream()
ArdpStream::Disconnect(): ARDP_Disconnect()
ArdpStream::Disconnect(): Cannot send ARDP_Disconnect()
ArdpStream::Disconnect(): ConnId == %d.
ArdpStream::Disconnect(): sudden==%d., m_disc==%d., m_discSent==%d., status=="%s"
ArdpStream::Disconnect(sudden==%d., status=="%s")
ArdpStream::Disconnected(): -> %s
ArdpStream::EarlyExit()
ArdpStream::GetDiscSent(): -> %s
ArdpStream::GetDiscStatus(): -> "%s"
ArdpStream::GetSendsOutstanding() -> %d.
ArdpStream::PullBytes(buf=%p, reqBytes=%d., actualBytes=%d., timeout=%d.)
ArdpStream::PushBytes(): Backpressure loop
ArdpStream::PushBytes(): Backpressure. Condition::Wait().
ArdpStream::PushBytes(): Condition::Wait() returned unexpected error
ArdpStream::PushBytes(): Copy in
ArdpStream::PushBytes(): Hard failure
ArdpStream::PushBytes(): Start time is %I64u.%03d.
ArdpStream::PushBytes(): Stream disconnected
ArdpStream::PushBytes(): Timed out
ArdpStream::PushBytes(): tRemaining is %d.
ArdpStream::PushBytes(): UDP Transport not running or stopping
ArdpStream::PushBytes(buf=%p, numBytes=%d., numSent=%p)
ArdpStream::RemoveCurrentThread()
ArdpStream::SendCb(): Condition::Signal()
ArdpStream::SendCb(handle=%p, conn=%p, buf=%p, len=%d.)
ArdpStream::SetConn(conn=%p)
ArdpStream::SetConnId(connId=%d.)
ArdpStream::SetEndpoint(endpoint=%p)
ArdpStream::SetHandle(handle=%p)
ArdpStream::SetTransport(transport=%p)
ArdpStream::ThreadSetEmpty()
ArdpStream::ThreadSetEmpty(): -> %s
ArdpStream::WakeThreadSet()
Array element[%d] does not have expected signature "%s"
Array element[%d] does not have expected type
Array length %ld at pos:%ld is too big
Array too big
Assigning string from nullptr will cause a crash in future versions!
Asynch GetAllProperties call returned %s
Asynch GetProperty call returned %s
Asynch SetProperty call returned %s
At least one of the mandatory interfaces is not declared in the bus attachment.
ATAUAVH
ATAVAWH
Attach: Failed to start JoinSessionThread
AttachSession
AttachSession failed (reply=%d)
AttachSession to %s failed
AttachSessionWithNames
Attempt to connect to non-accepting sock %d
Attempt to get a property from a secure %s
Attempt to get properties from a secure %s
Attempt to manually reset an I/O event
Attempt to manually set an I/O event
Attempt to register the same observer twice
Attempt to send a global broadcast signal when %s is not global broadcast
Attempt to send a sessioncast signal when %s is not sessioncast
Attempt to send a sessionless signal when %s is not sessionless
Attempt to send a unicast signal when %s is not unicast
Attempt to set a property on a secure %s
Attempt to unregister listener from said listener would cause deadlock
Attempt to unregister MessageReceiver from said MessageReceiver's message handler -- MessageReceiver not unregistered!
AUTH_FAILED
AUTH_KEY_EXCHANGER
AUTH_SUCCESS
auth_timeout
AuthAdvance yield to peer %s
AuthChallenge
AuthenticatePeerUsingKeyExchange
AuthenticatePeerUsingKeyExchange does not record master secret for peer %s
AuthenticatePeerUsingKeyExchange records master secret for peer %s
AuthMechLogon::Challenge
AuthMechLogon::Response
AuthMechSRP::Challenge
AuthMechSRP::Response
AuthMechSRP::Response has wrong format
authorized is %u, computedRemoteVerifier: %s
AuthStart
AuthStart: already stopped
AuthStop: m_authState = %u, m_threadPoolWork = 0x%p
AuthStop: SetEvent
AUTOPINGER
autopinger
AutoPingerInternal constructed
AutoPingerInternal destructed
AutoPingerInternal paused
AutoPingerInternal resumed
AutoPingerInternal: adding destination: '%s' to group: %s
AutoPingerInternal: adding new group: '%s' with ping time: %u
AutoPingerInternal: cannot add destination: '%s' to non-existing group: %s
AutoPingerInternal: cannot remove destination: '%s' from non-existing group: %s
AutoPingerInternal: cannot update ping time for non-existing group: '%s'
AutoPingerInternal: destination: '%s' already present in group: %s; increasing refcount
AutoPingerInternal: ignoring callback - ping already gone
AutoPingerInternal: ignoring callback - pinger not running
AutoPingerInternal: remove destination: '%s' from group: %s
AutoPingerInternal: removing group: '%s'
AutoPingerInternal: start pinging destination in group: '%s'
AutoPingerInternal: UpdatePingStateOfDestination: '%s' from group: %s
AutoPingerInternal: updating existing group: '%s' with new ping time: %u
AutoPingerInternal: updating group: '%s' with ping time: %u
availability has invalid value %u
availableTcpConnections(%u) is not <= maximumTcpConnections(%u)
availableTcpRemoteClients(%u) is not <= maximumTcpRemoteClients(%u)
availableUdpConnections(%u) is not <= maximumUdpConnections(%u)
availableUdpRemoteClients(%u) is not <= maximumUdpRemoteClients(%u)
AxH;Bx
AXH+A(H
AXH+APH
B(9A(
B(9A(|
B(9A(}
B(9A(tEI
B(9A(u:I
B(9B(}
B`F\>)
B|$pH
B0H9A0t?H
B2B endpoint %s disappeared during JoinSession
B2B endpoint %s disappeared during RemoveSessionRefs
b2bEp %s disappeared during NamesHandler
b2bEp %s disappeared during NamesSignalHandler
B8<:u
B8<0uiI
bad allocation
bad array new length
Bad bus name "%s"
bad cast
Bad error name "%s"
Bad interface name "%s"
Bad member name "%s"
Bad object path "%s"
Bad update: %s SND %u ACK %u
battery powered and chargeable
Battery powered and chargeable
battery powered and not chargeable
BCrypt Secret handle is not net set
bcrypt.dll
BCryptCloseAlgorithmProvider
BCryptCloseAlgorithmProvider failed NTSTATUS=0x%x
BCryptCreateHash
BCryptDecrypt
BCryptDeriveKey
BCryptDestroyHash
BCryptDestroyKey
BCryptDestroySecret
BCryptDuplicateHash
BCryptEncrypt
BCryptExportKey
BCryptFinalizeKeyPair
BCryptFinishHash
BCryptGenerateKeyPair
BCryptGenRandom
BCryptGetProperty
BCryptHashData
BCryptImportKey
BCryptImportKeyPair
BCryptOpenAlgorithmProvider
BCryptSecretAgreement
BCryptSetProperty
BCryptSignHash
BCryptVerifySignature
BD$@H
BD$`H
BD$HH
BD$PH
BD$pH
BEGIN
-----BEGIN CERTIFICATE-----
-----BEGIN EC PRIVATE KEY-----
-----BEGIN PUBLIC KEY-----
Bind(sockfd = %d, localAddr = %s, localPort = %hu, scopeId = %u)
Binding to %s %d failed: %s
BindSessionPort
blank
BlD(F(H6J.L&P
bodyLen in %d
bodyLen out %d
BuildAclsFromArg [%d] got status 0x%x
BuildMembersFromArg [%d] got invalid member type %d
BuildMembersFromArg [%d] got status 0x%x
BuildProviderFromArg #6 [%d] got status 0x%x
bus::Join failed
bus::Stop failed
BusAttachment
BusAttachment client constructor (%p)
BusAttachment daemon constructor
BusAttachment Destructor (%p)
BusAttachment::Connect cannot connect while bus is stopping
BusAttachment::Connect failed
BusAttachment::Disconnect cannot disconnect while bus is stopping
BusAttachment::Disconnect failed
BusAttachment::Join
BusAttachment::Ping(name = %s , timeout = %d)
BusAttachment::Start bus was stopped while starting
BusAttachment::Start failed to start
BusAttachment::Start()
BusAttachment::Start(): Start called while stopping
BusAttachment::Start(): Start called, but currently started.
BusAttachment::StartListen failed
BusAttachment::WaitStopInternal
busconfig
BusHello
BusHello expected 2 args with signature "su"
BusHello was sent by self
BusHello was sent to self
BusObject destructor for object with path = "%s"
BusObject::EmitPropChanged(ifcName = "%s", propName = "%s", val = <>, id = %u)
BXDTFND
Bytes pushed is different than dataOut.cbData
BZF(H(J.L.NRRhV5
C D8g
C H+C
C H90
C L;c(r<u
C$9C w1H
c((.))
C(@8x,t
C(+D$XDi
C(H98tEH
C(H9D$xu
C(I9p
C(L9h
C(M9h
C\$`L
C\$0H
C\$8H
C\$PH
C\$pH
C\$xH
C`fA+
C`H;CXr
C|$0H
C|$pH
C0H;W
C8<,u
c8D8h
C8fD9
ca:        
CallbackMayRunLong
Calling AcceptSession(%d, %u, %s, <%x, %x, %x> to %s
Calling AddMatch("%s")
Calling GetSessionInfo(%s, %u, <%x, %x, %x>) on %s
Calling ProcCancelFindAdvertisement from HandleCancelFindAdvertisedment [%s]
Calling ProcCancelFindAdvertisement from NameOwnerChanged [%s]
Calling RemoveMatch("%s")
CANCEL
Cancel persist timer: handle=%p, conn=%p, id=%u (%d)
CancelAdvertiseName
CancelAdvertiseName(name=%s)
CancelAdvertiseName: bad arg types
CancelEackedSegments(): handle=%p, conn=%p, bitMask=%p, ack=%u (snd.Una %u)
CancelEackedSegments(): set retries to zero for timer %p (seq %u)
CancelFindAdvertisedName
CancelFindAdvertisedNameByTransport
CancelFindAdvertisement(%s)
CancelFindAdvertisementByTransport
CancelFindAdvertisementByTransport failed for name %s :
CancelIoEx
Cancelling the IO returned %u
CancelMibChangeNotify2
CancelSessionlessMessage
CancelWaitableTimer
Cannot add an interface to an object that is already registered
Cannot add method handler for unknown interface
Cannot add method handler to an object that is already registered
Cannot create %s interface
Cannot find b2b endpoint %s
Cannot find bus-to-bus endpoint %s
Cannot find joiner endpoint %s
Cannot find object path %s
Cannot find virtual endpoint %s
Cannot locate srcB2BEp(%s)
Cannot locate srcEp(%s)
Cannot send FoundAdvertisedName to %s for name=%s
Cannot stop an external thread
Cannot use LeaveSession() on self-join session: ambiguous
CCM mode decryption failed NTSTATUS=%x
CCM mode encryption failed NTSTATUS=%x
CD$`H
CD$`I
CD$8H
CD$8I
CD$hA
CD$hE
CD$HH
CD$HL
CD$P3
CD$PE
CD$pH
CD$PH
CD$pH
Cd$PH;|$`s#L
CD$PL
CD$xH
CD$XH
CD$XI
Certificate basic extension CA is false
Certificate chain issuer DN verification failed
Certificate chain structure is invalid
Certificate data must be in DER or PEM format
Certificate not X.509v3
Certificate signature must be SHA-256
Certificate:
certificateAuthority keyInfo ID length is zero
certificateAuthority keyInfo is empty
certificateAuthority,authorityKeyIdentifier,adminSecurityGroupId,adminSecurityGroupAuthority,adminGroupAuthorityKeyIdentifier,identityCertificateChain,manifests
certificateChain
certificateChain,manifests
certificateId
ChainingMode
ChainingModeCCM
Challenge %d
challenge,response
Challenge: %s
Challenger
Challenger read %s
Challenger retrying auth mechanism %s
Challenger sending %s
Challenger trying new auth mechanism %s
Change in size of key was unexpected after Export; expected %u, got %Iu
CHD8p tgH
Check if OK for endpoint %s to own %s{%d}
Check if OK for endpoint %s to receive %s (%s{%s} --> %s{%s})
Check if OK for endpoint %s to send %s to destination %s (%s{%s} --> %s{%s})
CheckConnTimers (conn %p): Fire ACK timer %p at %u (now=%u)
CheckConnTimers: Fire connection( %p ) timer %p at %u (now=%u)
CheckConnTimers: Fire persist timer: handle=%p, conn=%p, id=%u (%d)
CheckConnTimers: Fire probe( %p ) timer %p at %u (now=%u)
Checking endpoint: %s (%s connected)
Checking object %s:%s
CheckTimers: conn %p, fire retransmit timer %p at %u (now=%u)
CHf9F(
CHfA9F(
CHtkH
cHtsH
CL$(H
CL$(L
CL$@H
CL$`H
CL$8L
CL$HH
CL$hH
CL$HH
CL$hH
CL$HL
CL$hL
CL$HM
CL$pE
CL$PH
CL$pL
CL$XH
CL$xL
Claim
ClaimCapabilities
ClaimCapabilityAdditionalInfo
Client authentication failed %s
client finish
client finished
ClientRouter::~ClientRouter()
ClientRouter::PushMessage failed: %s
ClientRouter::RegisterEndpoint
ClientRouter::UnregisterEndpoint
ClientTransport(): socket Connect() failed %s
ClientTransport(): socket Create() failed
ClientTransport::Connect(): %s
ClientTransport::Connect(): Failed to send initial NUL byte
ClientTransport::Connect(): Invalid TCP connect spec "%s"
ClientTransport::Connect(): Start ClientEndpoint failed
ClientTransport::Disconnect(): %s
ClientTransport::Disconnect(): Invalid connect spec "%s"
ClientTransport::EndpointExit()
Close (sockfd = %d)
Close: (sockfd = %d) %s
CLOSE_WAIT
CLOSED
Closed
CloseHandle
CloseThreadpoolCleanupGroup
CloseThreadpoolCleanupGroupMembers
CloseThreadpoolWork
Closing
cntrl
CompanyName
ComputeId %s
CONDITION
Condition::TimedWait(): Cannot wait on Windows condition variable (%d)
Configuration failed - device is not configuring link correctly %d %d
conn %p, Consumed message %u is not first in rcv queue (%u)
Connect(sockfd = %d, remoteAddr = %s, remotePort = %hu)
Connecting to %s %d: %s
Connection id: "%s", remoteGUID: "%s"
Connection id: %s
ConnectNamedPipe
ConnectTimerHandler: handle=%p conn=%p
ConnectTimerHandler: retries left %d
Considering manifest rule with object path %s, interface name %s
Considering peer manifest rule with object path %s, interface name %s
const
Constructing string from nullptr will cause a crash in future versions!
content
context
Control
CONVERSATION_HASH
CONVERT_UTF
ConvertSidToStringSidW
ConvertUTF wstring -> string: %d
Correct packet seq = %d, expected %d
CoTaskMemFree
Could not allocate default policy object
Could not compute certificate thumbprint
Could not compute manifest digest
Could not ComputeThumbprintAndDigest
Could not convert manifest XML to rules
Could not convert signed manifest to XML
Could not DeleteKey
Could not deserialize array of manifests
Could not export public part of generated key, ntStatus=%X
Could not find certificate to delete
Could not GenerateAuthorityKeyId
Could not get arguments from MsgArg
Could not get blob length for exporting public, ntStatus=%X
Could not get certificate from MsgArg
Could not get conversation digest
Could not get digest from hash object
Could not get ECC signature from manifest
Could not get metadata for peer guid %s
Could not get MsgArg for manifest
Could not GetArrayMsgArg
Could not GetDSAPublicKey
Could not GetIdentity
Could not GetKey
Could not hash byte array
Could not hash serialized bytes
Could not hash size: %Iu
Could not import manifest from MsgArg
Could not import public key, ntStatus=%X
Could not initialize hash object
Could not load identity certificate
Could not load manifest from MsgArg
Could not LoadCertificate
Could not LocateMembershipEntry
Could not marshal message
Could not MethodReply with status %s
Could not parse rules from rules MsgArg array
Could not ParsePropertiesMessageHeaders
Could not populate Message object with serialized form
Could not resolve "%s". Defaulting to INADDR_ANY
Could not retrieve already-installed manifests
Could not RetrieveCertsFromMsgArg
Could not RetrieveIdentityCertChain
Could not serialize manifest to hash
Could not set array MsgArg
Could not set manifest rules
Could not set manifest signature
Could not set subject thumbprint
Could not SetFromMsgArg
Could not sign manifest digest
Could not StoreIdentityCertChain
Could not StoreManifests
Could not Unmarshal
Could not UnmarshalArgs
Could not verify cert with issuer's public key
Couldnt kill link gracefully
CPI;E
CpL9Gpt
CreateDirectory() %s failed with (%d)
CreateDirectoryA
CreateEvent failed.
CreateEvent() returned %u
CreateEventW
CreateFile() returned %u
CreateFile(GENERIC_READ) %s failed (%d)
CreateFile(GENERIC_WRITE) %s failed (%d)
CreateFileA
CreateFileW
CreateMulticastSocket(): bind(::) failed
CreateMulticastSocket(): bind(0.0.0.0) failed
CreateMulticastSocket(): JoinMulticastGroup failed
CreateMulticastSocket(): SetMulticastHops() failed
CreateMulticastSocket(): SetMulticastInterface() failed
CreateMulticastSocket(): SetReusePort() failed
CreateMulticastSocket: enable broadcast failed
CreateMulticastSocket: enable recv ancillary data failed for sockFd %d
CreateMulticastSocket: enable recv IPv6 only failed for sockFd %d
CreateMulticastSocket: qcc::Socket(%d) failed: %d - %s
CreateNamedPipeW
CreateThreadpoolCleanupGroup
CreateThreadpoolCleanupGroup failed
CreateThreadpoolCleanupGroup failed with error %u.
CreateThreadpoolWork
CreateThreadpoolWork failed with OS error %u
CreateUnicastSocket(): bind failed
CreateUnicastSocket(): enable recv ancillary data failed for sockFd %d
CreateUnicastSocket(): enable recv IPv6 only failed for sockFd %d
CreateUnicastSocket(): SetReusePort() failed
CreateWaitableTimerW
Creating empty PBO internal: %p
Creating PBO internal: %p   path=%s   serviceName=%s   uniqueName=%s
Creating thread
Creating TLS key: %d
creator,port,opts,busAddrs
CREDENTIAL_ACCESSOR
CRYPT32.dll
CRYPTO
Crypto_ECC::~Crypto_ECC
Crypto_ECC::Crypto_ECC
Crypto_ECC::DSASignDigest
Crypto_ECC::DSAVerify
Crypto_ECC::DSAVerifyDigest
Crypto_ECC::GenerateDHKeyPair
Crypto_ECC::GenerateDSAKeyPair
Crypto_ECC::GenerateSharedSecret
Crypto_ECC::GetDHPrivateKey
Crypto_ECC::GetDHPublicKey
Crypto_ECC::GetDSAPrivateKey
Crypto_ECC::GetDSAPublicKey
Crypto_ECC::SetDHPrivateKey
Crypto_ECC::SetDHPublicKey
Crypto_ECC::SetDSAPrivateKey
Crypto_ECC::SetDSAPublicKey
Crypto_ECC_GenerateKeyPair
Crypto_ECC_GetPrivateKey
Crypto_ECC_GetPublicKey
Crypto_ECC_SetPrivateKey
Crypto_ECC_SetPublicKey
Crypto_ECC_SetPublicKey failed and aborting.
CryptProtectData
CryptProtectData writing keystore failed error=(%#x) status=(%#x)
CryptUnprotectData
CryptUnprotectData reading keystore failed error=(%#x) status=(%#x)
Ct$(H
CT$(H
CT$(I
CT$(L
CT$@H
Ct$@H;t$Ps#L
CT$@L
CT$`H
CT$`I
CT$`L
CT$`M
CT$03
CT$0H
CT$8H
CT$8L
Ct$hE
CT$HH
CT$hH
CT$HH
CT$hH
CT$HH
CT$hH
CT$HH
Ct$HH
CT$HH
CT$hI
CT$HI
CT$hI
CT$HL
CT$hL
CT$P3
CT$PA
CT$PD
CT$pH
CT$PH
Ct$pH
CT$PH
CT$pH
CT$pL
CT$PL
CT$pL
CT$PM
CT$xH
CT$XI
CT$xL
CT$XL
Current authSet %s
Cx<bu
CXH9C`
D!t$ L
D$  '
D$  3
D$  A
D$  D
D$  E
D$  H
D$  L
D$  M
D$ ! 
D$ #-
D$ #$
D$ #&
D$ &)
D$ &.
D$ ) 
D$ )*
D$ *#
D$ ,'
D$ , 
D$ .*
D$ /-
D$ /%
D$ /+
D$ ;#
D$ ? 
D$ @+
D$ [,
D$ \+
D$ ^(
D$ ^*
D$ _&
D$ `'
D$ {$
D$ {.
D$ {+
D$ |*
D$ }.
D$ ~'
D$ ~$
D$ ~%
D$ ~&
D$ <,
D$ =-
D$ ="
D$ =%
D$ =*
D$ >(
D$ 0A
D$ 0u
D$ 1!
D$ 1)
D$ 3$
D$ 3%
D$ 4-
D$ 6$
D$ 8'
D$ 8!
D$ 9$
D$ 9,
D$ a$
D$ A$
D$ B&
D$ B*
D$ C-
D$ c$
D$ D'
D$ D"
D$ E!
D$ E)
D$ e,
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
D$ f&
D$ G 
D$ G!
D$ g#
D$ h,
D$ H;
D$ H;E(t
D$ i'
D$ I!
D$ I;
D$ I;F(t
D$ I+
D$ Ii
D$ Ik
D$ j&
D$ J*
D$ k+
D$ L!
D$ l%
D$ L)d$(H
D$ L*
D$ L;u
D$ M$
D$ N'
D$ O 
D$ o 
D$ p!
D$ P(
D$ P+
D$ q-
D$ q*
D$ s!
D$ T'
D$ t&
D$ u;
D$ v!
D$ w 
D$ X,
D$ Y&
D$ Z*
D$$D;
D$(D8g
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
d$(E3
D$(H;
D$(H3
D$(L9A
D$(Mk
D$@!8!x
D$@:D$A
D$@:D$B
D$@="
D$@=2
D$@9C8t
D$@9D$xu
D$@A8
D$@D8p
d$@D9sH
D$@E3
d$@E3
D$@E3
d$@E3
D$@E3
D$@f+
D$@fA
d$@fD
D$@H!t$@I
D$@H!t$XH
D$@H)
D$@H;
D$@H;C
D$@H+
d$@H9F
D$@I;F
D$@I+
D$@L!u
D$@L+
D$@M+
D$`@8t$d
D$`A;
D$`E+
D$`E3
D$`H;
D$`H;D$ht
D$`H;H
D$`H+
D$`H9D$pD
D$`I;
D$`I;F(t;H
D$`I+
D$`L;
D$`L+
D$`L9t0h
d$|f9|$h
D$0 '
D$0! 
D$0!t$(H
D$0#-
D$0#!
D$0#$
D$0#&
D$0&)
D$0&.
D$0)-
D$0) 
D$0)*
D$0*#
D$0,'
D$0, 
D$0.*
D$0/-
D$0/%
D$0/+
D$0;#
D$0? 
D$0@+
D$0[,
D$0\+
D$0^(
D$0^*
D$0_&
D$0`'
D$0{$
D$0{.
D$0{+
D$0|*
D$0}.
D$0~'
D$0~$
D$0~%
D$0~&
D$0<,
D$0=-
D$0="
D$0=%
D$0=*
D$0>(
D$00.
D$00u
D$01!
D$01)
D$03$
D$03%
D$04-
D$06$
D$08'
D$08!
D$09$
D$09,
D$09H
D$09H }
D$09H s
D$09H0s
D$09P }
D$09P s
D$09x }
D$09X }
D$0A$
D$0a$
D$0A$
D$0B&
D$0B*
D$0C-
D$0c$
D$0D'
D$0D"
D$0E!
D$0E)
D$0e,
D$0E3
d$0E3
D$0E3
d$0E3
D$0f&
D$0f9H s
D$0fH
D$0G 
D$0G!
D$0g#
D$0h,
D$0H;
D$0H;D$8t
D$0H9H s
D$0H9H(}
D$0H9H(s
D$0H9x s
D$0Hk
D$0i'
D$0I!
D$0j&
D$0J*
D$0k+
D$0L!
D$0l%
D$0L*
D$0L+
D$0Li
D$0Lk
D$0M$
D$0M+
D$0M3
D$0Mi
D$0N'
D$0O 
D$0o 
D$0O 
D$0o 
D$0p!
D$0P(
D$0P+
D$0q-
D$0q*
D$0s!
D$0T'
D$0t&
D$0v!
D$0w 
D$0X,
D$0Y&
D$0Z*
D$8 f
D$8 fD
D$8E3
d$8fD
D$8fD
D$8H;
D$8H;C
D$8H+
D$8H+D$(H
D$8H9CXt<H
D$8Hi
D$8Lk
D$AHi
d$bLi
D$D!|$D
d$D@2
D$DD9f`
D$H2L
D$hD8`8t
D$HD8h,t
D$HD8p
D$hD8p8t
D$HE3
D$hE3
D$HE3
D$hE3
D$HE3
D$Hf9
D$hf9X
d$hfD
D$HfD
D$hfD9hp
D$hfE
D$hH#
D$HH;
D$hH;
D$HH;
D$hH;
D$HH;
D$hH;D$pt
D$HH;W
D$hH+
D$HH+
D$hH+D$`H
D$hH9
D$hH9D$`
D$hH9D$`t.H
D$hH9D$`t9H
D$hH9D$`u+@
D$HI)E
D$HI;
D$HI;U
D$hI3
D$HL+
D$HM;
D$LE3
D$p@8x
D$P+D$@
D$P=(
D$p0E
D$pA;
D$PD;
D$PD+
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$pE3
d$PE3
D$pE3
D$pf9A
D$pf9H
D$PfH
D$PH;
D$pH;
D$PH;
D$pH;
D$PH;
D$pH;
D$PH;
D$pH;
D$PH;
D$PH;D$Xt
D$PH+D$HH
D$PH9|$hL
D$pH98tOH
D$PH9D$H
D$PHi
D$PI;
D$PI;]
D$pI+
D$pI+D$hH
D$pL;
D$PL;
D$pL;
D$PL;
D$PL+
d$pL9e
D$PL9p s
D$PL9t$hL
D$PLi
d$TE3
D$x8P
D$XD;
D$XD88u
d$XE;
D$xE3
d$XE3
D$XE3
D$xE3
D$XE3
d$xE3
D$XE3
D$XfA
d$XfD
D$XfD9`0t
D$XH;
D$xH;
D$XH;
D$xH;
D$XH;
D$XH;D$`t
D$xH;G
D$XH9t$pL
D$XI;
d$XI;
D$XI3
D$xI3
D$XL;
d$xL;
D$XL;
D$xL;
D$XL+
D$XL9x
D:F(H4J"L(N.P&R.T
D;{ }
D;|$@
D;A H
D;B0s
D;c s
D;C0y
D;j r
D;s s
D\$HH
D'\fD
D+{ D;{
D+C4A
d1b60ce37ba71ea4b870d73b6cd676f5
D8$(u
D8$:u
D8`)t,H
D8`8v
D8|$!u
D8|$@
D8|$@t}
D8|$@u
D8|$A
D8|$AtsH
D8|$AuBH
D8|$BuBH
D8|$D
D8|$Tu
D8|$Uu
D8}!u6H
D8'}9H
D8~8t
D8<0u
D8<8u
D83t6
D83tq
D88u'H
D8a,t
D8a2t!H
D8a8v
D8b0u
D8c8v
D8cAu
D8d$@
D8d$@u
D8d$`A
D8d$`t
D8d$Bt
D8d$Ct
D8d$pt
D8gLt
D8hJH
D8i,t
D8i@t
D8i8t:Mi
D8i8v
D8l$ t
D8m7t&H
D8n8v
D8oJt,L
D8p8v
D8Q,t
D8R,t
D8s)tfD
D8s@u
D8s@u|L
D8sAL
D8t$@
D8t$_t
D8t$A
D8t$At]
D8t$Bt
D8T$P
D8t$T
D8uwt$H
D8uXt+E
D8v8v
D8vLA
D8y8v
D9@ s
D9@0s
D9` s
D9{(u
D9|$@
D9|$H
D9|$Hv9A
D9|$L
D946354436F2F3C79EAF0636D947E8AC
D9A }
D9A s
D9c t
D9d$`M
D9d$T
D9h s
D9h0tEH
D9I H
D9k(u
D9kHuxH
D9l$H
D9l$p
D9p s
D9P s
D9s t
D9s u
D9t$@
D9t$h
D9t$L
D9u u
D9wxA
D9x s
DAEMON_SLAP
DAEMON_TRANSPORT
DaemonDaemonTransport::Stop(): Failed to Stop() server thread
DaemonRouter::PushMessage(): Routing %s"%s" (%d) from "%s"
DaemonRouter::RegisterEndpoint(%s, %d)
DaemonRouter::UnregisterEndpoint: %s
DaemonSLAPEndpoint::Authenticate()
DaemonSLAPEndpoint::Authenticate() Failed to authenticate endpoint
DaemonSLAPEndpoint::AuthJoin()
DaemonSLAPEndpoint::AuthStop()
DaemonSLAPEndpoint::AuthThread::Run()
DaemonSLAPEndpoint::AuthThread::Run() calling pullbytes
DaemonSLAPEndpoint::AuthThread::Run(): Returning
DaemonSLAPEndpoint::Join()
DaemonSLAPEndpoint::Stop()
DaemonSLAPTransport: Using m_minHbeatIdleTimeout=%u, m_maxHbeatIdleTimeout=%u, m_numHbeatProbes=%u, m_defaultHbeatProbeTimeout=%u m_maxHbeatProbeTimeout=%u
DaemonSLAPTransport::Authenticated()
DaemonSLAPTransport::Authenticated(): Failed to start DaemonSLAPEndpoint
DaemonSLAPTransport::EndpointExit()
DaemonSLAPTransport::EndpointExit()setting stopping
DaemonSLAPTransport::Join(): Failed to Join() main thread
DaemonSLAPTransport::Run()
DaemonSLAPTransport::Run() is exiting. status = %s
DaemonSLAPTransport::Run(): Accepting connection 
DaemonSLAPTransport::Run(): Adding checkevent for %s to list of events
DaemonSLAPTransport::Run(): Authenticating endpoint for %s
DaemonSLAPTransport::Run(): Creating endpoint for %s
DaemonSLAPTransport::Run(): Failed to open for %s
DaemonSLAPTransport::Run(): Reenabling %s in the listenEvents
DaemonSLAPTransport::Run(): Reenabling back %s in the listenEvents
DaemonSLAPTransport::Run(): Scavenging failed authenticator
DaemonSLAPTransport::Stop(): Failed to Stop() main thread
DaemonTransport
DaemonTransport: Using m_minHbeatIdleTimeout=%u, m_maxHbeatIdleTimeout=%u, m_numHbeatProbes=%u, m_defaultHbeatProbeTimeout=%u m_maxHbeatProbeTimeout=%u
DaemonTransport::EndpointExit()
DaemonTransport::EndpointExit() endpoint missing from endpointList
DaemonTransport::Join(): Failed to Join() server thread
DaemonTransport::StartListen(): Invalid SLAP listen spec "%s"
Data integrity error - discarding packet %X %X, %X %X
databits
DateOfManufacture
DbgPrintEx
DBusObj::GetConnectionUnixProcessID failed
DBusObj::GetConnectionUnixUser failed
DBusObj::GetNameOwner failed
DBusObj::Init failed
DBusObj::ListActivatableNames failed
DBusObj::ListNames failed
DBusObj::ListQueuedOwners failed
DBusObj::NameHasOwner failed
DD$ H
DEBUG
DebugBreak
DebugOptions
Decrypt key: %s
Decrypting message from %s
default
DefaultECDHEAuthListener::RequestCredentials called for ECDHE_PSK, but no PSK value is set, authentication will fail.
DefaultECDHEAuthListener::RequestCredentials called for ECDHE_SPEKE more than 10 times, authentication will fail.
DefaultECDHEAuthListener::RequestCredentials called for ECDHE_SPEKE, but no password value is set, authentication will fail.
DefaultKeyStoreListener::AcquireWriteLock failed, status=(%#x)
DefaultLanguage
DefaultPolicy
DelayLoadFailureHook
DelConnRecord(): Delete while not CLOSED or CLOSE-WAIT conn %p state %s
DelConnRecord(handle=%p conn=%p forced=%s state=%s)
DeleteCriticalSection
DeleteFile(%s) failed
DeleteFile(%s) failed (%#x)
DeleteFile(%s) returned ERROR_FILE_NOT_FOUND, converting to ER_EOF
DeleteFileA
DeList(node=%p)
Deliver %s
Deliver message %s to %s
Deliver: No key - requesting authentication %s
delivered
deque<T> too long
DeregisterEvent %s for fd %d
DeregisterEvent %s for pipe %p
Description
description
DesktopApplication
destEp
destination
destination does not exist.
Destination lost for '%s'
destination='
Destroying PBO internal (%p) for %s on %s (%s)
DetachSession
DeviceId
DeviceName
Did not find address
Digest is:
digest:    
digit
direction
directly
DisableThreadLibraryCalls
Discarding encrypted broadcast signal
Discarding link packet %d
Disconnect(handle=%p, conn=%p, reason=%s)
Disconnect(handle=%p, conn=%p, reason=%s) Already disconnect%s
Disconnect: Call DisconnectCb() on conn %p, state %s reason %s 
Disconnect: failed to send RST to the remote
DisconnectTimerHandler: DisconnectCb(handle=%p conn=%p reason = %s)
DisconnectTimerHandler: handle=%p conn=%p
DisconnectTimerHandler: handle=%p conn=%p reason=%s
DisconnectTimerHandler: waiting for receive Q to drain handle=%p, con=%p
DispatchRequest %s
disposition
DJF@HVJPL@N@P8R@T
DllProcessAttached
DllProcessDetached
DOCTYPE
DoKeyAuthentication records master secret for peer %s
DoKeyAuthentication yield to peer %s
DoRegisterBusObject %s
DoSendSyn(): destination = 0
DoSendSyn(): hSyn.seq=%u  data=%p (%s), len=%u
DoSendSyn(handle=%p, conn=%p, buf=%p, len = %d)
DT$PH
dt_default_idle_timeout
dt_default_probe_timeout
dt_max_idle_timeout
dt_max_probe_timeout
dt_min_idle_timeout
DupHandle failed - invalid file handle returned
duplicate
DuplicateHandle
DuplicateHandle return error=(%#x))
E H;E(t
E(@8p
E(D8h
E(f9CH
E(f9CHr
E(fB9\!X
E;H I
E8|$ 
E8|$Jt
E8}AH
E8<$u
E8<$u?H
E8<$uvH
E847u
E8D8`
E8D80
E8D8h
E8gJt
E8glu
E8l$@
E8opt
E8uJu
E8x8v
E9`ht
E9H s
E9o@v
E9opv
E9w ~:H
ECCPRIVATEBLOB
ECCPUBLICBLOB
EccPublicKey
ECCSecret::~ECCSecret
ECCSecret::DerivePreMasterSecret
ECCSecret::ECCSecret
ECCSecret::SetSecretState
ECDH_P256
ECDSA_P256
ECS1ECK1
ECS2ECK2ER_OK
ED$DA
ED$tA
Eh@8x
EHD8p
EhD8p
EhH+E`H
EhH9E
EhH9E`
emitsChanged = %s
empty
Empty certificate chain
EnableAdvertisment failed for transport %s - mask=0x%x
EnablePeerSecurity: Ignoring isShared parameter. KeyStore always works in shared mode.
Encrypt key: %s
EncryptMessage: %s
-----END CERTIFICATE-----
-----END EC PRIVATE KEY-----
-----END PUBLIC KEY-----
EndManagement
endpoint does not accept off device messages.
Endpoint redirected: %s
Endpoint redirecting name %s to %d
Endpoint remote %sname %s
Endpoint Rx failed (%s): %s
Endpoint Rx timed out (%s)
Endpoint Tx failed (%s)
Endpoint Tx timed out (%s)
ENDPOINT_AUTH
EndpointAuth::Establish(): Accepting
EndpointAuth::Establish(): Advance()
EndpointAuth::Establish(): authMechanisms="%s"
EndpointAuth::Establish(): Got "%s" from stream
EndpointAuth::Establish(): Hello()
EndpointAuth::Establish(): Not accepting
EndpointAuth::Establish(): Responding with "%s" to stream
EndpointAuth::Establish(): WaitHello()
EndpointAuth::Establish(authMechanism="%s", authUsed="%s", redirection="%s", listener=0x%p)
EndpointAuth::Hello(redirection="%s")
EndpointAuth::SASLCallout(sasl=0x%p, extCmd="%s")
EndpointAuth::WaitHello(authUsed="%s")
Enforce peer's manifest: Authorized: %d
EnList(after=%p, node=%p)
EnterCriticalSection
Entry found in Peer Info Map. Setting unicast destination
Environ::Find detected environment change for key %s
Environ::Preload unable to read Environment Strings
environment
EP remote %sname %s
EP_ACTIVE_STARTED
EP_PASSIVE_STARTED
EpH9x(}
EpI+EhH
EqualSid
ER_ABOUT_ABOUTDATA_MISSING_REQUIRED_FIELD
ER_ABOUT_DEFAULT_LANGUAGE_NOT_SPECIFIED
ER_ABOUT_FIELD_ALREADY_SPECIFIED
ER_ABOUT_INVALID_ABOUTDATA_FIELD_APPID_SIZE
ER_ABOUT_INVALID_ABOUTDATA_FIELD_APPID_SIZE - AboutData AppId should be a 128-bit (16-byte) UUID
ER_ABOUT_INVALID_ABOUTDATA_FIELD_VALUE
ER_ABOUT_INVALID_ABOUTDATA_LISTENER
ER_ABOUT_SESSIONPORT_NOT_BOUND
ER_ALERTED_THREAD
ER_ALLJOYN_ACCESS_PERMISSION_ERROR
ER_ALLJOYN_ACCESS_PERMISSION_WARNING
ER_ALLJOYN_ADVERTISENAME_REPLY_ALREADY_ADVERTISING
ER_ALLJOYN_ADVERTISENAME_REPLY_FAILED
ER_ALLJOYN_ADVERTISENAME_REPLY_TRANSPORT_NOT_AVAILABLE
ER_ALLJOYN_BINDSESSIONPORT_REPLY_ALREADY_EXISTS
ER_ALLJOYN_BINDSESSIONPORT_REPLY_FAILED
ER_ALLJOYN_BINDSESSIONPORT_REPLY_INVALID_OPTS
ER_ALLJOYN_CANCELADVERTISENAME_REPLY_FAILED
ER_ALLJOYN_CANCELFINDADVERTISEDNAME_REPLY_FAILED
ER_ALLJOYN_FINDADVERTISEDNAME_REPLY_ALREADY_DISCOVERING
ER_ALLJOYN_FINDADVERTISEDNAME_REPLY_FAILED
ER_ALLJOYN_FINDADVERTISEDNAME_REPLY_TRANSPORT_NOT_AVAILABLE
ER_ALLJOYN_JOINSESSION_REPLY_ALREADY_JOINED
ER_ALLJOYN_JOINSESSION_REPLY_BAD_SESSION_OPTS
ER_ALLJOYN_JOINSESSION_REPLY_CONNECT_FAILED
ER_ALLJOYN_JOINSESSION_REPLY_FAILED
ER_ALLJOYN_JOINSESSION_REPLY_NO_SESSION
ER_ALLJOYN_JOINSESSION_REPLY_REJECTED
ER_ALLJOYN_JOINSESSION_REPLY_UNREACHABLE
ER_ALLJOYN_LEAVESESSION_REPLY_FAILED
ER_ALLJOYN_LEAVESESSION_REPLY_NO_SESSION
ER_ALLJOYN_ONAPPRESUME_REPLY_FAILED
ER_ALLJOYN_ONAPPRESUME_REPLY_UNSUPPORTED
ER_ALLJOYN_ONAPPSUSPEND_REPLY_FAILED
ER_ALLJOYN_ONAPPSUSPEND_REPLY_UNSUPPORTED
ER_ALLJOYN_PING_FAILED
ER_ALLJOYN_PING_REPLY_FAILED
ER_ALLJOYN_PING_REPLY_IN_PROGRESS
ER_ALLJOYN_PING_REPLY_INCOMPATIBLE_REMOTE_ROUTING_NODE
ER_ALLJOYN_PING_REPLY_TIMEOUT
ER_ALLJOYN_PING_REPLY_UNKNOWN_NAME
ER_ALLJOYN_PING_REPLY_UNREACHABLE
ER_ALLJOYN_REMOVESESSIONMEMBER_INCOMPATIBLE_REMOTE_DAEMON
ER_ALLJOYN_REMOVESESSIONMEMBER_NOT_BINDER
ER_ALLJOYN_REMOVESESSIONMEMBER_NOT_FOUND
ER_ALLJOYN_REMOVESESSIONMEMBER_NOT_MULTIPOINT
ER_ALLJOYN_REMOVESESSIONMEMBER_REPLY_FAILED
ER_ALLJOYN_REMOVESESSIONMEMBER_REPLY_NO_SESSION
ER_ALLJOYN_SETLINKTIMEOUT_REPLY_FAILED
ER_ALLJOYN_SETLINKTIMEOUT_REPLY_NO_DEST_SUPPORT
ER_ALLJOYN_SETLINKTIMEOUT_REPLY_NOT_SUPPORTED
ER_ALLJOYN_UNBINDSESSIONPORT_REPLY_BAD_PORT
ER_ALLJOYN_UNBINDSESSIONPORT_REPLY_FAILED
ER_APPLICATION_STATE_LISTENER_ALREADY_EXISTS
ER_APPLICATION_STATE_LISTENER_NO_SUCH_LISTENER
ER_ARDP_BACKPRESSURE
ER_ARDP_DISCONNECTING
ER_ARDP_INVALID_CONNECTION
ER_ARDP_INVALID_RESPONSE
ER_ARDP_INVALID_STATE
ER_ARDP_PERSIST_TIMEOUT
ER_ARDP_PROBE_TIMEOUT
ER_ARDP_REMOTE_CONNECTION_RESET
ER_ARDP_TTL_EXPIRED
ER_ARDP_VERSION_NOT_SUPPORTED
ER_ARDP_WRITE_BLOCKED
ER_AUTH_FAIL
ER_AUTH_USER_REJECT
ER_BAD_ARG_1
ER_BAD_ARG_2
ER_BAD_ARG_3
ER_BAD_ARG_4
ER_BAD_ARG_5
ER_BAD_ARG_6
ER_BAD_ARG_7
ER_BAD_ARG_8
ER_BAD_ARG_COUNT
ER_BAD_HOSTNAME
ER_BAD_STRING_ENCODING
ER_BAD_TRANSPORT_MASK
ER_BUFFER_TOO_SMALL
ER_BUS_ALREADY_CONNECTED
ER_BUS_ALREADY_LISTENING
ER_BUS_ANNOTATION_ALREADY_EXISTS
ER_BUS_AUTHENTICATION_PENDING
ER_BUS_BAD_BODY_LEN
ER_BUS_BAD_BUS_NAME
ER_BUS_BAD_CHILD_PATH
ER_BUS_BAD_ERROR_NAME
ER_BUS_BAD_HDR_FLAGS
ER_BUS_BAD_HEADER_FIELD
ER_BUS_BAD_HEADER_LEN
ER_BUS_BAD_INTERFACE_NAME
ER_BUS_BAD_LENGTH
ER_BUS_BAD_MEMBER_NAME
ER_BUS_BAD_OBJ_PATH
ER_BUS_BAD_SEND_PARAMETER
ER_BUS_BAD_SENDER_ID
ER_BUS_BAD_SESSION_OPTS
ER_BUS_BAD_SIGNATURE
ER_BUS_BAD_TRANSPORT_ARGS
ER_BUS_BAD_VALUE
ER_BUS_BAD_VALUE_TYPE
ER_BUS_BAD_XML
ER_BUS_BLOCKING_CALL_NOT_ALLOWED
ER_BUS_BUS_ALREADY_STARTED
ER_BUS_BUS_NOT_STARTED
ER_BUS_CANNOT_ADD_HANDLER
ER_BUS_CANNOT_ADD_INTERFACE
ER_BUS_CANNOT_EXPAND_MESSAGE
ER_BUS_CONNECT_FAILED
ER_BUS_CONNECTION_REJECTED
ER_BUS_CORRUPT_KEYSTORE
ER_BUS_DESCRIPTION_ALREADY_EXISTS
ER_BUS_DESTINATION_NOT_AUTHENTICATED
ER_BUS_ELEMENT_NOT_FOUND
ER_BUS_EMPTY_MESSAGE
ER_BUS_ENDPOINT_CLOSING
ER_BUS_ENDPOINT_REDIRECTED
ER_BUS_ERROR_NAME_MISSING
ER_BUS_ERROR_RESPONSE
ER_BUS_ERRORS
ER_BUS_ESTABLISH_FAILED
ER_BUS_HANDLES_MISMATCH
ER_BUS_HANDLES_NOT_ENABLED
ER_BUS_HDR_EXPANSION_INVALID
ER_BUS_IFACE_ALREADY_EXISTS
ER_BUS_INCOMPATIBLE_DAEMON
ER_BUS_INTERFACE_ACTIVATED
ER_BUS_INTERFACE_MISMATCH
ER_BUS_INTERFACE_MISSING
ER_BUS_INTERFACE_NO_SUCH_MEMBER
ER_BUS_INVALID_AUTH_MECHANISM
ER_BUS_INVALID_HEADER_CHECKSUM
ER_BUS_INVALID_HEADER_SERIAL
ER_BUS_KEY_EXPIRED
ER_BUS_KEY_STORE_NOT_LOADED
ER_BUS_KEY_UNAVAILABLE
ER_BUS_KEYBLOB_OP_INVALID
ER_BUS_KEYSTORE_NOT_LOADED
ER_BUS_KEYSTORE_VERSION_MISMATCH
ER_BUS_LISTENER_ALREADY_SET
ER_BUS_MATCH_RULE_NOT_FOUND
ER_BUS_MEMBER_ALREADY_EXISTS
ER_BUS_MEMBER_MISSING
ER_BUS_MEMBER_NO_SUCH_SIGNATURE
ER_BUS_MESSAGE_DECRYPTION_FAILED
ER_BUS_MESSAGE_NOT_ENCRYPTED
ER_BUS_METHOD_CALL_ABORTED
ER_BUS_MISSING_COMPRESSION_TOKEN
ER_BUS_NAME_TOO_LONG
ER_BUS_NO_AUTHENTICATION_MECHANISM
ER_BUS_NO_CALL_FOR_REPLY
ER_BUS_NO_ENDPOINT
ER_BUS_NO_LISTENER
ER_BUS_NO_PEER_GUID
ER_BUS_NO_ROUTE
ER_BUS_NO_SESSION
ER_BUS_NO_SUCH_ANNOTATION
ER_BUS_NO_SUCH_HANDLE
ER_BUS_NO_SUCH_INTERFACE
ER_BUS_NO_SUCH_MESSAGE
ER_BUS_NO_SUCH_OBJECT
ER_BUS_NO_SUCH_PROPERTY
ER_BUS_NO_SUCH_SERVICE
ER_BUS_NO_TRANSPORTS
ER_BUS_NOT_A_COMPLETE_TYPE
ER_BUS_NOT_A_DICTIONARY
ER_BUS_NOT_ALLOWED
ER_BUS_NOT_AUTHENTICATING
ER_BUS_NOT_AUTHORIZED
ER_BUS_NOT_COMPRESSED
ER_BUS_NOT_CONNECTED
ER_BUS_NOT_NUL_TERMINATED
ER_BUS_NOT_OWNER
ER_BUS_OBJ_ALREADY_EXISTS
ER_BUS_OBJ_NOT_FOUND
ER_BUS_OBJECT_NO_SUCH_INTERFACE
ER_BUS_OBJECT_NO_SUCH_MEMBER
ER_BUS_OBJECT_NOT_REGISTERED
ER_BUS_PATH_MISSING
ER_BUS_PEER_AUTH_VERSION_MISMATCH
ER_BUS_PING_GROUP_NOT_FOUND
ER_BUS_POLICY_VIOLATION
ER_BUS_PROPERTY_ACCESS_DENIED
ER_BUS_PROPERTY_ALREADY_EXISTS
ER_BUS_PROPERTY_VALUE_NOT_SET
ER_BUS_READ_ERROR
ER_BUS_REMOVED_BY_BINDER
ER_BUS_REMOVED_BY_BINDER_SELF
ER_BUS_REPLY_IS_ERROR_MESSAGE
ER_BUS_REPLY_SERIAL_MISSING
ER_BUS_SECURITY_FATAL
ER_BUS_SECURITY_NOT_ENABLED
ER_BUS_SELF_CONNECT
ER_BUS_SET_PROPERTY_REJECTED
ER_BUS_SET_WRONG_SIGNATURE
ER_BUS_SIGNATURE_MISMATCH
ER_BUS_STOPPING
ER_BUS_TIME_TO_LIVE_EXPIRED
ER_BUS_TRANSPORT_ACCESS_DENIED
ER_BUS_TRANSPORT_NOT_AVAILABLE
ER_BUS_TRANSPORT_NOT_STARTED
ER_BUS_TRUNCATED
ER_BUS_UNEXPECTED_DISPOSITION
ER_BUS_UNEXPECTED_SIGNATURE
ER_BUS_UNKNOWN_INTERFACE
ER_BUS_UNKNOWN_PATH
ER_BUS_UNKNOWN_SERIAL
ER_BUS_UNMATCHED_REPLY_SERIAL
ER_BUS_WAIT_FAILED
ER_BUS_WRITE_ERROR
ER_BUS_WRITE_QUEUE_FULL
ER_CERTIFICATE_NOT_FOUND
ER_COMMON_ERRORS
ER_CONN_REFUSED
ER_CONNECTION_LIMIT_EXCEEDED
ER_CORRUPT_KEYBLOB
ER_CRYPTO_ERROR
ER_CRYPTO_HASH_UNINITIALIZED
ER_CRYPTO_ILLEGAL_PARAMETERS
ER_CRYPTO_INSUFFICIENT_SECURITY
ER_CRYPTO_KEY_UNAVAILABLE
ER_CRYPTO_KEY_UNUSABLE
ER_CRYPTO_TRUNCATED
ER_DBUS_RELEASE_NAME_REPLY_NON_EXISTENT
ER_DBUS_RELEASE_NAME_REPLY_NOT_OWNER
ER_DBUS_RELEASE_NAME_REPLY_RELEASED
ER_DBUS_REQUEST_NAME_REPLY_ALREADY_OWNER
ER_DBUS_REQUEST_NAME_REPLY_EXISTS
ER_DBUS_REQUEST_NAME_REPLY_IN_QUEUE
ER_DBUS_REQUEST_NAME_REPLY_PRIMARY_OWNER
ER_DBUS_START_REPLY_ALREADY_RUNNING
ER_DEAD_THREAD
ER_DEADLOCK
ER_DEBUG_
ER_DEBUG_ALL
ER_DEBUG_EPOCH
ER_DEBUG_THREADNAME
ER_DIGEST_MISMATCH
ER_DUPLICATE_CERTIFICATE
ER_DUPLICATE_KEY
ER_EMPTY_KEY_BLOB
ER_END_OF_DATA
ER_EOF
ER_EXTERNAL_THREAD
ER_FAIL
ER_FEATURE_NOT_AVAILABLE
ER_INIT_FAILED
ER_INVALID_ADDRESS
ER_INVALID_APPLICATION_STATE
ER_INVALID_CERT_CHAIN
ER_INVALID_CERTIFICATE
ER_INVALID_CERTIFICATE_USAGE
ER_INVALID_CONFIG
ER_INVALID_DATA
ER_INVALID_GUID
ER_INVALID_HTTP_METHOD_USED_FOR_RENDEZVOUS_SERVER_INTERFACE_MESSAGE
ER_INVALID_KEY_ENCODING
ER_INVALID_ON_DEMAND_CONNECTION_MESSAGE_RESPONSE
ER_INVALID_PERSISTENT_CONNECTION_MESSAGE_RESPONSE
ER_INVALID_RENDEZVOUS_SERVER_INTERFACE_MESSAGE
ER_INVALID_SIGNAL_EMISSION_TYPE
ER_INVALID_STREAM
ER_IODISPATCH_STOPPING
ER_KEY_STORE_ALREADY_INITIALIZED
ER_KEY_STORE_ID_NOT_YET_SET
ER_LANGUAGE_NOT_SUPPORTED
ER_MANAGEMENT_ALREADY_STARTED
ER_MANAGEMENT_NOT_STARTED
ER_MANIFEST_NOT_FOUND
ER_MANIFEST_REJECTED
ER_MISSING_DIGEST_IN_CERTIFICATE
ER_NO_COMMON_TRUST
ER_NO_SUCH_ALARM
ER_NO_SUCH_DEVICE
ER_NO_TRUST_ANCHOR
ER_NONE
ER_NOT_CONN
ER_NOT_CONNECTED_TO_RENDEZVOUS_SERVER
ER_NOT_IMPLEMENTED
ER_OPEN_FAILED
ER_OS_ERROR
ER_OUT_OF_MEMORY
ER_P2P
ER_P2P_BUSY
ER_P2P_DISABLED
ER_P2P_FORBIDDEN
ER_P2P_NO_GO
ER_P2P_NO_STA
ER_P2P_NOT_CONNECTED
ER_P2P_TIMEOUT
ER_PACKET_BAD_CRC
ER_PACKET_BAD_FORMAT
ER_PACKET_BAD_PARAMETER
ER_PACKET_BUS_NO_SUCH_CHANNEL
ER_PACKET_CHANNEL_FAIL
ER_PACKET_CONNECT_TIMEOUT
ER_PACKET_TOO_LARGE
ER_PARSE_ERROR
ER_PERMISSION_DENIED
ER_POLICY_NOT_NEWER
ER_PROXIMITY_CONNECTION_ESTABLISH_FAIL
ER_PROXIMITY_NO_PEERS_FOUND
ER_READ_ERROR
ER_RENDEZVOUS_SERVER_DEACTIVATED_USER
ER_RENDEZVOUS_SERVER_ERR401_UNAUTHORIZED_REQUEST
ER_RENDEZVOUS_SERVER_ERR500_INTERNAL_ERROR
ER_RENDEZVOUS_SERVER_ERR503_STATUS_UNAVAILABLE
ER_RENDEZVOUS_SERVER_ROOT_CERTIFICATE_UNINITIALIZED
ER_RENDEZVOUS_SERVER_UNKNOWN_USER
ER_RENDEZVOUS_SERVER_UNRECOVERABLE_ERROR
ER_SLAP_CRC_ERROR
ER_SLAP_ERROR
ER_SLAP_HDR_CHECKSUM_ERROR
ER_SLAP_INVALID_PACKET_LEN
ER_SLAP_INVALID_PACKET_TYPE
ER_SLAP_LEN_MISMATCH
ER_SLAP_OTHER_END_CLOSED
ER_SLAP_PACKET_TYPE_MISMATCH
ER_SOCK_CLOSING
ER_SOCK_OTHER_END_CLOSED
ER_SOCKET_BIND_ERROR
ER_SSL_CONNECT
ER_SSL_ERRORS
ER_SSL_INIT
ER_SSL_VERIFY
ER_STOPPING_THREAD
ER_TCP_MAX_UNTRUSTED
ER_THREAD_NO_WAIT
ER_THREAD_RUNNING
ER_THREAD_STOPPING
ER_THREADPOOL_EXHAUSTED
ER_THREADPOOL_STOPPING
ER_TIMEOUT
ER_TIMER_EXITING
ER_TIMER_FALLBEHIND
ER_TIMER_FULL
ER_TIMER_NOT_ALLOWED
ER_UDP_BACKPRESSURE
ER_UDP_BUSHELLO
ER_UDP_DEMUX_NO_ENDPOINT
ER_UDP_DISCONNECT
ER_UDP_EARLY_EXIT
ER_UDP_ENDPOINT_NOT_STARTED
ER_UDP_ENDPOINT_REMOVED
ER_UDP_ENDPOINT_STALLED
ER_UDP_INVALID
ER_UDP_LOCAL_DISCONNECT
ER_UDP_LOCAL_DISCONNECT_FAIL
ER_UDP_MESSAGE
ER_UDP_MSG_TOO_LONG
ER_UDP_NO_LISTENER
ER_UDP_NO_NETWORK
ER_UDP_NOT_DISCONNECTED
ER_UDP_NOT_IMPLEMENTED
ER_UDP_STOPPING
ER_UDP_UNEXPECTED_FLOW
ER_UDP_UNEXPECTED_LENGTH
ER_UDP_UNSUPPORTED
ER_UNABLE_TO_CONNECT_TO_RENDEZVOUS_SERVER
ER_UNABLE_TO_SEND_MESSAGE_TO_RENDEZVOUS_SERVER
ER_UNKNOWN_CERTIFICATE
ER_UTF_CONVERSION_FAILED
ER_WARNING
ER_WOULDBLOCK
ER_WRITE_ERROR
ER_XML_ACL_ALL_TYPE_PEER_WITH_OTHERS
ER_XML_ACL_PEER_NOT_UNIQUE
ER_XML_ACL_PEER_PUBLIC_KEY_SET
ER_XML_ACL_PEERS_MISSING
ER_XML_ACLS_MISSING
ER_XML_ANNOTATION_NOT_UNIQUE
ER_XML_CONVERTER_ERROR
ER_XML_INTERFACE_MEMBERS_MISSING
ER_XML_INTERFACE_NAME_NOT_UNIQUE
ER_XML_INVALID_ACL_PEER_CHILDREN_COUNT
ER_XML_INVALID_ACL_PEER_PUBLIC_KEY
ER_XML_INVALID_ACL_PEER_TYPE
ER_XML_INVALID_ANNOTATIONS_COUNT
ER_XML_INVALID_ATTRIBUTE_VALUE
ER_XML_INVALID_BASE64
ER_XML_INVALID_ELEMENT_CHILDREN_COUNT
ER_XML_INVALID_ELEMENT_NAME
ER_XML_INVALID_INTERFACE_NAME
ER_XML_INVALID_MANIFEST_VERSION
ER_XML_INVALID_MEMBER_ACTION
ER_XML_INVALID_MEMBER_NAME
ER_XML_INVALID_MEMBER_TYPE
ER_XML_INVALID_OBJECT_PATH
ER_XML_INVALID_OID
ER_XML_INVALID_POLICY_SERIAL_NUMBER
ER_XML_INVALID_POLICY_VERSION
ER_XML_INVALID_RULES_COUNT
ER_XML_INVALID_SECURITY_LEVEL_ANNOTATION_VALUE
ER_XML_MALFORMED
ER_XML_MEMBER_DENY_ACTION_WITH_OTHER
ER_XML_MEMBER_NAME_NOT_UNIQUE
ER_XML_OBJECT_PATH_NOT_UNIQUE
Erase from peer info map: guid=%s
err.unknown
ERROR
error
Error alerting timer thread %s
Error clearing initializing entry in sessionMap
Error computing remote verifier
Error decoding certificate
Error decoding certificate data from PEM. Only support tag -----BEGIN CERTIFICATE-----, tag -----END CERTIFICATE-----, and data
Error decoding certificate extensions
Error decoding certificate issuer
Error decoding certificate signature
Error decoding certificate subject
Error decoding certificate subject public key
Error decoding certificate validity period
Error decoding CN field of the distinguished name
Error decoding distinguished name
Error decoding OU field of the distinguished name
Error decoding private key from PEM. Only support tag -----BEGIN EC PRIVATE KEY-----, tag -----END EC PRIVATE KEY-----, and key
Error decoding private key from PEM. Only support tag -----BEGIN PUBLIC KEY-----, tag -----END PUBLIC KEY-----, and key
Error encoding private key in PEM format
Error generating master secret
Error generating verifier
Error occured while importing signature.
Error occurred while deserializing header
Error parsing peer's certificate chain
Error processing "%s": <%s> block is empty.
Error processing "%s": Exactly one policy category must be specified.
Error processing "%s": Failed to access directory "%s": %s
Error processing "%s": Flag value for "%s" must be "true" or "false" (not "%s").
Error processing "%s": Invalid policy: cat="%s"  catValue="%s" perm="%s" 
Error processing "%s": Limit value for "%s" must be an unsigned 32 bit integer (not "%s").
Error processing "%s": 'name' attribute missing from <%s> tag.
Error Processing "%s": Unknown attribute "%s" in tag <%s> - ignoring.
Error processing "%s": Unknown tag found at top level: <%s>
Error processing "%s": Unknown tag found in <busconfig>: %s - ignoring
Error processing "%s": Value not specified for limit "%s".
Error requesting credentials from listener
Error retrieving peer's certificate chain
Error sending org.alljoyn.Daemon.DetachSession signal
Error starting timer thread %s
Error when parsing introspection XML
Error while deserializing additional
Error while deserializing answer
Error while deserializing NS
Error while deserializing question
Error while sending query for Cache refresh
error: %s
Establish complete %s
EVENT
Event list was empty
Event::Wait failed
eventList for fd %d missing from event map
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
ew.C}l
EwH9E
ExchangeGroupKeys
ExchangeGroupKeys using key gen version %d
ExchangeGuids
ExchangeGuids AuthVersion %d
ExchangeGuids failed
ExchangeGuids incompatible authentication version %u
ExchangeGuids Local %s
ExchangeGuids Remote %s
ExchangeNames
ExchangeSuites
Exhausted JoinSession retries to %s
EXIT_WAIT
Expected "%s" got "%s"
Expected a message body with signature %s
Expected GUID got: %s
Expected hex-encoded data
Expected hex-encoded data got: "%s"
Expected secure method call
Expecting AUTH
Expired segment %u is not first in rcv queue (%u)
ExpireMessageSnd(): snd.UNA %u
ExpireMessageSnd(): thinNXT %u
ExpireMessageSnd(): Update snd.UNA %u
ExpireMessageSnd(): Update thinNXT %u
ExpireMessageSnd: message with SOM %u and fcnt %d expired
Expiring discovered name %s for guid %s
EXTENSION_AGREE_VERSION
EXTENSION_NEGOTIATE_VERSION
external
EXTERNAL
external%d
ext-ms-win-shell32-shellfolders-l1-1-0.dll
extra nonce: %s
Extra observer for an existing set of interfaces.
f#\$@I
f#D$@I
f#D$Pf;D$P
f#GHfA
F(6*.,
F(f9CHw
f;{0r43
f;FTs
f;H s
f;q r{H;
f;W*D
F`I+F(H
f+N0f
F0D8h
F0HcNLH
F5CB9E723D7D4F1CFF985F4DD0D5E388
F8$:u
F8,0u
F8A9D$
F8D8d$A
F8H9E
f9_Xt
f9C0uRD
f9C2u#A
f9D$@A
f9D$@r!D
f9D$\u
f9D$|w
f9D$HH
f9D1Xt 
f9E@u
f9Ehu
f9L$@v
f9p s
f9sZt
f9u@u
f9upu
f9uXu
f9x s
fA;L$$
fA;O$
fA9D$
fA9D$$
fA9L$
fA9Z*v$A
Fail to parse matching paramter
Fail to parse msg parameters
failed
Failed to accept incoming connection request from %s (ARDP port %u)
Failed to Add AboutIcon
Failed to add alarm
Failed to add legacy description in language "%s" for interface "%s".
Failed to add legacy descriptions for interface "%s"
Failed to add match rule for org.alljoyn.Daemon
Failed to add method handler for  %s.Claim
Failed to add method handler for  %s.EndManagement
Failed to add method handler for  %s.InstallMembership
Failed to add method handler for  %s.RemoveMembership
Failed to add method handler for  %s.Reset
Failed to add method handler for  %s.ResetPolicy
Failed to add method handler for  %s.StartManagement
Failed to add method handler for  %s.UpdateIdentity
Failed to add method handler for  %s.UpdatePolicy
Failed to add method handler for %s.%s
Failed to add method handler for %s.InstallManifests
Failed to add property getter/setter message receivers for %s
Failed to add the %s interface
Failed to add the %s interface to the %s
Failed to agree on secret, ntStatus=%X
Failed to alert thread blocked on full tx queue
Failed to allocate rcv data buffer
Failed to attach session %u to %s
Failed to attach session %u to %s (reply=%d)
Failed to call %s.AddMatch
Failed to call GetDescriptionLanguages on remote legacy object
Failed to call IntrospectRemoteObject on remote legacy object
Failed to cancel advertise for name "%s"
Failed to cancel advertisment for "%s"
Failed to cancel discover for name "%s"
Failed to copy computed premaster secret to output buffer, errno=%d
Failed to copy private key out
Failed to copy r into CNG buffer, errno=%d
Failed to copy r into ECCSignature, errno=%d
Failed to copy s into CNG buffer, errno=%d
Failed to copy s into ECCSignature, errno=%d
Failed to create %s interface
Failed to create a new Elliptic Curve Cryptography object.
Failed to create hash
Failed to create interface "%s"
Failed to create interface %s
Failed to create multicast socket for MDNS packets.
Failed to create multicast socket for NS packets.
Failed to create new interface "%s"
Failed to deliver message %s
Failed to derive key, ntStatus=%X
Failed to destroy ECC key pair, ntStatus=%X
Failed to destroy ECDH key, ntStatus=%X
Failed to destroy ECDSA key, ntStatus=%X
Failed to destroy key, ntStatus=%X
Failed to destroy old private key, ntStatus=%X
Failed to destroy Secret handle, ntStatus=%X
Failed to destroy secret on error path, ntStatus=%X
Failed to dup remote endpoint's socket
Failed to enable CCM mode on AES algorithm provider
Failed to encode KeyInfoNISTP256 (%s) to PEM
Failed to establish SLAP endpoint
Failed to establish TCP endpoint
Failed to export private key blob, ntStatus=%X
Failed to export private key bytes
Failed to export public key blob, ntStatus=%X
Failed to export public key bytes
Failed to finalize ECC key pair, ntStatus=%X
Failed to find session id=%u for %s, %d
Failed to find sessionMap entry
Failed to find SessionMapEntry
Failed to find SessionMapEntry "%s",%08x
Failed to forward ExchangeNames to %s: %s
Failed to forward NameChanged to %s: %s
Failed to generate ECC key pair, ntStatus=%X
Failed to get %s interface
Failed to get AES object length property
Failed to get object length property
Failed to get size of key blob, ntStatus=%X
Failed to get the %s interface
Failed to import AES key
Failed to import ECCPublicKey.
Failed to import ECCPublicKey. Public key is not valid.
Failed to import key blob, ntStatus=%X
Failed to initialize authMechanism %s
Failed to join RemoteEndpoint used for streaming
Failed to leave session %u
Failed to memcpy_s x; err is %d
Failed to memcpy_s y; err is %d
Failed to obtain introspection XML for language %s
Failed to open "%s": %s
Failed to open AES algorithm provider, ntStatus=%X
Failed to open ECDH algorithm provider, ntStatus=%X
Failed to open ECDSA algorithm provider, ntStatus=%X
Failed to open hash algorithm provider, ntstatus=%X
Failed to parse child object %s in introspection data for %s
Failed to parse GetAll return value or inconsistent message serial number. Invalidating property cache.
Failed to parse introspection XML from response
Failed to parse PropertiesChanged signal or inconsistent message serial number. Invalidating property cache.
Failed to PerformReset after failed claim! App may be in indeterminate state. ClaimInternal status was %s.
Failed to PerformReset during claim
Failed to read first byte from stream
Failed to read first byte from stream %d %d
Failed to read from stream
Failed to read message on %s
Failed to register AboutIcon BusObject
Failed to register default object for path %s
Failed to register DetachSessionSignalHandler
Failed to register ExchangeNamesSignalHandler
Failed to register FoundAdvertisedName signal handler
Failed to register NameChangedSignalHandler
Failed to register RequestRange signal handler
Failed to register RequestRangeMatch signal handler
Failed to register RequestSignals signal handler
Failed to register SessionLost signal handler
Failed to register well-known name "%s" (disposition=%d)
Failed to release %s from %s
Failed to release name "%s"
Failed to request/advertise "%s"
Failed to respond to org.alljoyn.Bus.Advertise
Failed to respond to org.alljoyn.Bus.BindSessionPort
Failed to respond to org.alljoyn.Bus.CancelAdvertise
Failed to respond to org.alljoyn.Bus.CancelFindAdvertisement
Failed to respond to org.alljoyn.Bus.Discover
Failed to respond to org.alljoyn.Bus.GetHostInfo
Failed to respond to org.alljoyn.Bus.GetSessionFd
Failed to respond to org.alljoyn.Bus.JoinSession
Failed to respond to org.alljoyn.Bus.LeaveSession
Failed to respond to org.alljoyn.Bus.Ping
Failed to respond to org.alljoyn.Bus.ReloadConfig
Failed to respond to org.alljoyn.Bus.RemoveSessionMember
Failed to respond to org.alljoyn.Bus.SetIdleTimeouts
Failed to respond to org.alljoyn.Bus.SetLinkTimeout
Failed to respond to org.alljoyn.Bus.UnbindSessionPort
Failed to respond to org.alljoyn.Daemon.AttachSession.
Failed to resume reply handler timeout for %s
Failed to retrieve available languages from response
Failed to retrieve existing interface "%s"
Failed to retrieve language tag from response
Failed to retrieve list of available description languages for legacy node
Failed to retrieve XMLs with descriptions for legacy node
Failed to send DetachSession to %s
Failed to send ExchangeName signal
Failed to send FoundAdvertisedName to %s (name=%s)
Failed to send LostAdvertisedName to %s (name=%s)
Failed to send MPSessionChanged to %s
Failed to send MPSessionChangedWithReason to %s
Failed to send NameAcquired signal for %s to %s (%s)
Failed to send NameChanged
Failed to send NameChanged to %s
Failed to send NameLost signal for %s to %s (%s)
Failed to send NameOwnerChanged signal for %s to %s (%s)
Failed to send ReleaseName reply
Failed to send Request to %s
Failed to send RequestName reply
Failed to send SessionJoined to %s
Failed to send SessionLost(%d) to %s
Failed to send sessionLostWithReason(%u, %s) to %s
Failed to send sessionLostWithReasonAndDisposition(%u, %s, %d) to %s
Failed to SendManifests
Failed to serialize array of passed manifests for storage
Failed to set description for argument "%s" of member "%s" of interface "%s"
Failed to set description for interface "%s"
Failed to set description for member "%s" of interface "%s"
Failed to set description for property "%s" of interface "%s"
Failed to set security policy annotation for interface "%s"
Failed to set SessionOpts message arg
Failed to set socket non-blocking %s
Failed to shutdown raw endpoint
Failed to shutdown remote endpoint for raw usage
Failed to sign digest, ntStatus=%X
Failed to start authentication
Failed to StateChanged
Failed to stop RemoteEndpoint used for streaming
Failed to store manifests in keystore
Failed to store request - write lock has not been taken, status=(%#x)
Failed to StoreApplicationState
Failed to StorePolicy active policy
Failed to StorePolicy default policy
Failed to unmarshal args for DetachSession message
Failed to unmarshal message received on %s
Failed to update alarm
Failed to verify signature, ntStatus=%X
Failed to write to stream
Failed while decoding EKU extension: %s
FAILURE
false
FALSE
family
FastRetransmit(): priority re-send %u
fB9D)X
fC9D<XuGI
fD#t$B
fD#t$DL
fD;{$s
fD;{$s<H
fD;a r
fD;vH
fD;vHw
fD9$su
fD9` s
fD9{^t
fD9}pu
fD9}Xu
fD9<Zu
fD9ap
fD9d$b
fD9d$bu
fD9d$du
fD9d$du#H
fD9g^
fD9l$X
fD9nP
fD9p s
fD9sp
fD9u@u
fD9x0A
fE;H I
fE9`ru
fE9|$$
fE94Qu
fE9H s
fE9pr
fE9t$
ff02::13a
ff02::fb
fffffff
fG9T<XuLI
fhE;f
FHf9CHu
FHf9CHuaD
FhfD;
FhH+F(H
FhH+F`H
FhI+F(H
File "%s" contains invalid XML constructs.
FileDescription
FileLocker::AcquireWriteLock() failed, status=(%#x) - cannot write file (%s).
FileLocker::GetFileLockForRead() failed, status=(%#x)
FileSink::PushBytes failed status=(%#x)
FileSink::Truncate failed
FileSource::PullBytes() failed, status=(%#x)
FileVersion
Finalizing hash digest
FindAdvertisedName
FindAdvertisedNameByTransport
FindAdvertisement(%s)
FindAdvertisementByTransport
FindAdvertisementByTransport failed for name %s :
FindConn(): conn %p local = %d, foreign = %d
FindConn(): Found conn %p
FindConn(handle=%p, local=%d, foreign=%d)
First message must be Hello/BusHello method call
First observer for this set of interfaces.
First OID did not match ECC oid
FJf9CJu
FJf9CJu3L
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
FlushExpiredRcvMessages(acknxt=%u, lcs=%u, cur=%u
FlushExpiredRcvMessages(handle=%p, conn=%p, acknxt=%u
FlushExpiredRcvMessages(UPDATE rcv.CUR = %u, rcv.LCS = %u, acknxt = %u
FlushExpiredRcvMessages: advance seq %u
FlushExpiredRcvMessages: Schedule ACK timer to inform about new values of rcv.CUR %u and rcv.LCS %u
FlushExpiredRcvMessages: seq = %u
FlushFileBuffers
FlushFileBuffers failed, error=%#x
FlushMessage(): SendCb(handle=%p, conn=%p, buf=%p, len=%d, status=%d
FlushMessage(fcnt = %d): pending = %d
FormatMessageA
FormatMessageW
Found invalid name "%s"
FoundAdvertisedName
FoundAdvertisedName(name=%s,transport=0x%x,...) guid=%s,version=%u,iface=%s,changeId=%u
FoundAdvertisedName(name=%s,transport=0x%x,...): Transport not preferred
FPI;FPtmL
FpI+FhH
freeaddrinfo
FreeEnvironmentStringsW
FreeTransientObjectSecurityDescriptor
FROM_CERTIFICATE_AUTHORITY
FVHRFLH
FXI+F(H
G 9C 
G(9F(s
G(f9F(u
G(f9F(w*H
'g:$A
G@H9C@t?H
G`D9o
G<f;W*
G0D8h
G0HcOLH
G84/u
G8D8d$P
G8H9E
GenSessionKey
GenSessionKey succeeds for peer %s
GenuD
GetAboutData
GetAboutData for GetMsgArg for lang=%s
GetAdaptersAddresses
getaddrinfo
getaddrinfo - %s
GetAdtAuditSessionData
GetAll
GetAllProperties(%s) -> cache hit
GetAllProperties(%s) -> perform method call
GetAllPropertiesAsync(%s) -> cache hit
GetAllPropertiesAsync(%s) -> perform method call
GetArgs failed
GetCommState
GetCommState() returned %u
GetCommTimeouts
GetCommTimeouts() returned %u
GetConnectionSELinuxSecurityContext
GetConnectionUnixProcessID
GetConnectionUnixUser
GetContent
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDescriptionLanguages
GetDescriptionLanguages %s
GetDigest called while conversation is not in progress
GetEnvironmentStringsW
GetEnvironmentVariableA
GetExpansion
GetFileAttributesA
GetFileSizeEx
GetFileSizeEx return error=(%#x) status=(%#x)
GetHomeDir got valid path from SHGetKnownFolderPath (%ls), but string conversion failed %u
GetHomeDir retrieved from LOCALAPPDATA as %s
GetHomeDir retrieved from SHGetKnownFolderPath() as %s
GetHomeDir retrieved from USERPROFILE as %s
GetHostInfo
GetId
GetId failed
GetLastError
GetLastError=%u
GetLocalAddress(%d, %s, %u) failed
GetLocalAddress(sockfd = %d, addr = <>, port = <>)
GetMachineId
GetModuleHandleW
GetNamedPipeInfo
getnameinfo
GetNameOwner
GetObjectDescription
GetOverlappedResult
GetProcAddress
GetProcessHeap
GetProperty(%s, %s) -> cache hit
GetProperty(%s, %s) -> perform method call
GetPropertyAsync(%s, %s) -> cache hit
GetSessionFd
GetSessionInfo
GetSessionInfo failed
GetSize() failed, status=(%#x)
GetSockAddr: %s
getsockopt failed: %s
GetSystemTimeAsFileTime
GetTickCount64
Getting Local Address: %s
GetTokenInformation
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetUrl
gfffA
gfffffffH
gfffffffI
GHf9E(stH
GHfA9F8u/E
GHH;GPt
GHH;X
GHH9G@ukH
GJfA9F:t
globalbroadcast
Got conversation digest ------------------------------------
Got disconn resp, setting link to dead
Got disconn, queuing DRSP
Got disconn, setting link to dead
Got NEGO req:win %d pkt %d, pv %d agr:win %d pkt %d pv %d
GP8FPu$H
GpH+GhH
GPH9CPt?H
graph
group
GroupKey
GSSAPI
guid=
GUIDC,protoVerC,GUIDS,uniqueName,protoVerS
Gx<au
Gx<fu
GXH+GPH
h ""*$(&"*
H D8{
H D8k
H SUWH
H SVWH
H SWH
H UATAUAVAWH
h UAVAWH
H USVWAVAWH
H UVWH
h VWAUAVAWH
H WATAUAVAWH
H!_ H
H!D$@L
H!D$8A
H!T$8
H!t$PE3
H!Y(H
H#^0H
H#{HI
H#F0H
H#G`H
H#K`H
H#KHH
H#KHL
H#L$8L
H#L$hL
H#T$hH
H#T$hI
H#T$hL
H#T$xE3
H#T$xL
H#UxL
H(DhJlN9
H;\$ t
H;\$@
H;\$`
H;\$0r
H;\$H
H;\$h
H;\$H
H;\$Ht:H
H;\$P
H;\$pt
H;\$Pt,E
H;\$PtlL
H;\$x
H;\$Xt(H
H;\$Xt*H
H;\$xt0H;
H;] tJH
H;](tRH
H;]Hr
H;]HthD9{ ubH
H;^(t*I
H;^HtfH
H;_0t,H
H;{ H
H;|$`t
H;|$`u
'H;|$Ht
H;|$HtiH
H;|$P
H;|$p
H;|$Pt
H;} t+H
H;}os$
H;}Pt0H
H;~ t$H
H;3u=
H;8t,H
H;8t/H
H;8trH
H;A s
H;A t
H;A(}
H;A(s
H;B H
H;CHt_M;
H;D$@r
H;D$`
H;D$`t]E
H;D$0t
H;D$h
H;D$ht0H
H;D$P
H;Gxu
H;h s
H;H s
H;h s
H;H s
H;H(}
H;H8t
H;i H
H;i s
H;J scH
H;k s
H;K t$H
H;KHtKH
H;O(}
H;P s
H;Q r
H;q s
H;Q(}
H;r r
H;r s[H
H;s ryu
H;S t
H;T$0r
H;t$Pu
H;T$xt
H;u u
H;V(r
H;w r
H;w sVH
H;W8t
H;X t#H
H;X tf
H;x toH9O(uiH
H;x(}
H;X(}
H;X(tEH
H;X0H
H;y sUH
H;YHu
H;Z s
H^>e4
h_^][
H+\$H
H+]@I+_
H+A0I
H+C(H
H+ChH
H+CXHi
H+D$PL;
H+FxH
H+L$hH
H+O(D
H+T$HH
H+T$XH
H+U`H
H+VxI;
H2J.L(N(P.RzV
H3D$(I
H3D$HL
H9\$@
H9\$@t
H9\$0v B
H9\$p
H9\$pL
H9]@vF3
H9]PH
H9{Xu*L
H9|$@vO3
H9|$`H
H9|$`tTH
H9|$h
H9|$hL
H9|$Pu2L
H9|$xL
H9~`vmH
H91t I
H98u$L9X
H99t I
H99t!M
H99tEH
H9B(tEH
H9C8tGH
H9Cxt:H
H9CXt:H
H9Cxt?H
H9CXt?H
H9Cxt=H
H9Cxw
H9D$(
H9D$`
H9D$8
H9D$P
H9D$PtHH
H9D$X
H9D$x
H9D$X
H9E L
H9E(H
H9E0H
H9EHH
H9EhH
H9EHL
H9EhL
H9EpL
H9F`H
H9H r
H9h s
H9H s
H9h s
H9H(}
H9H(u
H9H(u-
H9h(u!
H9H(u!
H9h(u!
H9H(u!
H9h(u!
H9H(u!
H9h(u!
H9H(u!
H9h(u!
H9H(u!
H9h(u!
H9H(u!
H9h(u!
H9H(u#
H9h(u$
H9H(u&
H9h(u(
H9H(u(
H9h(u(
H9H(u(
H9h(u(
H9H(u(
H9h(u(
H9H(u(
H9h(u(
H9H(u(
H9h(u(H
H9h(u*
H9H(u*
H9h(u+
H9H(u-H
H9H0tEH
H9i s
H9L$(
H9L$htKH
H9L$p
H9l$pu
H9M8H
H9N0t
H9p s
H9P s
H9p s
H9P s
H9p(u!
H9P(u!
H9p(u!
H9P(u!
H9p(u!
H9P(u!
H9p(u#
H9p(u$
H9p(u(
H9P(u(
H9p(u(
H9P(u(
H9p(u(
H9P(u(
H9p(u(
H9p(u+
H9p(u4
H9p(u5
H9P(u6
H9P8t
H9q s
H9Q s
H9t$ u
H9t$(t
H9t$@L
H9t$`H
H9T$0v B
H9t$H
H9t$HL
H9t$P
H9T$pL
H9t$PL
H9T$PwfH
H9u H
H9u(H
H9V(v
H9wHt
H9X s
H9x s
H9x(H
H9x(u
H9x(u!
H9X(u!
H9x(u!
H9X(u!
H9x(u!
H9X(u!
H9x(u!
H9X(u!
H9x(u!
H9X(u!
H9x(u!
H9X(u!
H9x(u!
H9X(u!
H9x(u!
H9X(u!
H9x(u!
H9X(u!
H9x(u!
H9X(u#
H9x(u$
H9X(u$
H9x(u$
H9X(u$
H9x(u%
H9X(u%D
H9x(u&
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u(
H9X(u(
H9x(u*
H9x(u*H
H9x(u,
H9X(u,A
H9x(u/
H9X(u/
H9x(u/
H9X(u/
H9x(u/
H9x(u+
H9X(u+
H9x(u+
H9X(u+
H9x(u1
H9x(u1H
H9X(u3
H9xHu
H9Y s
H9y s
H9Y s
H9Y@u
hA^_^[
HA_A^_^][
HA_A^A]A\_^[]
hA_A^A]A\_^][
HA_A^A]A\_^][
Handle passing was not negotiated on this connection
HandleCancelFindAdvertisement() parse message arguments error
HandleSecurityViolation %s %s
HardwareVersion
Hash function not initialized
Hashed byte array of secret data; data intentionally not logged
Hashed byte array:
Hashed size: %Iu
Hc\$H
HcD$X
HcFlH
Header::Deserialize(): Bad message version %d
Header::Deserialize(): Insufficient bufsize %d
Header::Deserialize(): NSCOUNT = %d
Header::Serialize(): ANCOUNT = %d
Header::Serialize(): ARCOUNT = %d
Header::Serialize(): NSCOUNT = %d
Header::Serialize(): QDCOUNT = %d
Header::Serialize(): RCode = %d
Header::Serialize(): Third octet = %x
HeapFree
Hello
Hello expected destination "%s"
Hello expected interface "%s" or "%s"
Hello expected member "BusHello"
Hello expected member "Hello"
Hello expected non-zero serial
Hello expected object path "%s"
hFl.h
hH;\$Hu
hH;|$(
hH;|$HA
HHcI I
HiD$ 
high mobility
HiL$h
HiT$h
hL;|$PH
HL_DBG
HMAC key length cannot be zero
I#H`I
I(9J(t6I
I;,$uSH
I;?uW
I;\$0
I;]8tsL
I;^(tcD
I;^@t
I;O0s'I
I9@(tEI
I9_ r
I9pHt&L
IcL$ H
Identity
Identity EKU seen multiple times
IdentityCertificateId
if_indextoname
if_nametoindex
if_nametoindex() failed: unknown interface
iface
iface=
IFCONFIG
IfConfig(): The Windows way
IfConfigByFamily()
IfConfigByFamily(): GetAdaptersAddresses error %u
IfConfigByFamily(): getnameinfo error %d
IfConfigByFamily(): if_indextoname failed
IfConfigByFamily: Socket(QCC_AF_INET) failed
IfConfigByFamily: WSAIoctl(SIO_GET_INTERFACE_LIST) failed
ignore_missing
Ignoring advertisement from %s for %s received on %s
Ignoring invalid config parameter
Ignoring invalid config value:%s for router availability, using default value instead
Ignoring invalid config value:%s for router mobility, using default value instead
Ignoring invalid config value:%s for router node connection, using default value instead
Ignoring invalid config value:%s for router power source, using default value instead
Ignoring malformed XML attribute "%s"
Ignoring message %s
Ignoring my own query
Ignoring my own response
Ignoring non-unicast or unexpected packet that was received on a different interface
Ignoring packet - expected = %d, got %d
Ignoring policy rules for invalid group: %s
Ignoring policy rules for invalid user: %s
Ignoring query with duplicate burst ID
Ignoring query with invalid ping info
Ignoring query with invalid search info
Ignoring query with invalid sender info
Ignoring query without sender info
Ignoring response with duplicate burst ID
Ignoring response with invalid advertisement info
Ignoring response with invalid ipv4 address
Ignoring response with invalid ipv6 address
Ignoring response with invalid ping info
Ignoring response with invalid sender-info
Ignoring response with invalid srv
Ignoring response with invalid txt
Ignoring response without sender-info
Ignoring response without srv
Ignoring unrecognized rrtype %d
IL9{PtCH
Illegal child object name "%s" specified in introspection for %s
Illegal member name "%s" introspection data for %s
Illegal object path "%s" specified
ImpersonateNamedPipeClient
implements
implements='
in use
include
includedir
Incoming endianSwap
indirectly
inet_pton
inet_pton() failed: %s
INFORM_PROTO_VERSION
Informational: Saw unexpected EKU %s
inherit
InitConnRecord(handle=%p, conn=%p, sock=%d, ipAddr="%s", ipPort=%d, foreign=%d)
InitConnRecord: Cannot get a new connection record. Too many connections?
Initial response: %s
InitializeConditionVariable
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
Initialized authMechanism %s
InitializeSListHead
InitializeSRWLock
InitialReponse failed authMechanism %s
InitialResponse
InitialResponse() %s
InitialResponse() user id is required
Initiator KeyGen after receiving response from sender %s status %x
InitRcv: Failed to allocate space for receive structure
InitSnd(): actual max payload len %d
InitSnd(): Failed to allocate send buffer headers
InitSnd(): Failed to allocate send buffer info
InitTimer: conn=%p timer=%p handler=%p context=%p timeout=%u retry=%u
InstallManifests
InstallMembership
interface
Interface %s does not exist
interface,changed_props,invalidated_props
interface,propname,value
interface,props
interface='
Intermediate mobility
intermediate mobility
Internal error: JoinSessionThread not found on list
Internal::PropertiesChangedHandler(this = %p, member = %s, srcPath = %s, message = <>)
InternalName
Introspect
Introspect %s
Introspection XML: %s
IntrospectWithDescription
IntrospectWithDescription %s
invalid
Invalid argument index in ruleSpec "%s"
Invalid attribute "%s" in "%s".
Invalid call to TimerImpl::EnableReentrancy from thread %s
Invalid certificate date validity period
Invalid char '\%d' in array element signature
Invalid char '\%d' in signature
Invalid EKU
Invalid fragment count %u
invalid hash bucket count
Invalid header field (fieldId=%d)
Invalid interface name "%s" in XML introspection data for %s
Invalid key in ruleSpec "%s"
invalid map<K, T> key
invalid message args
Invalid mode
Invalid name attribute for argument in introspection data from %s
Invalid name attribute for property in introspection data from %s
Invalid NameOwnerChanged without oldOwner or newOwner
Invalid parameters for remote verifier
Invalid response
Invalid signature for property %s in introspection data from %s
invalid string position
Invalid syntax character '%c'
Invalid type for policy rule: "%s"
Invalid type value in ruleSpec "%s"
Invalid unique name "%s"
Invalid unique name "%s" in AttachSessionWithArgs/ExchangeNames message
invalid unordered_map<K, T> key
Invalid verifier signature data
Invalid verifier signature data size (r)
Invalid verifier signature data size (s)
invalidates
Invalidating endpoint type=%d %s
IO_READ
IO_WRITE
iodisp
IODISPATCH
IODispatch::Run exiting
IoEventCallback %x
IP_ADD_MEMBERSHIP
IP_DROP_MEMBERSHIP
IPHLPAPI.DLL
IpNameServiceImpl
IpNameServiceImpl::::Retransmit(): Current priority is %d
IpNameServiceImpl::~IpNameServiceImpl()
IpNameServiceImpl::AdvertiseName(): Bad transport mask
IpNameServiceImpl::AdvertiseName(): Duplicate advertisement
IpNameServiceImpl::AdvertiseName(): Not IMPL_RUNNING
IpNameServiceImpl::AdvertiseName(): Resulting NS message too large
IpNameServiceImpl::AdvertiseName(0x%x, "%s", %d)
IpNameServiceImpl::AdvertiseName(0x%x, 0x%p, %d)
IpNameServiceImpl::CancelAdvertiseName(): Bad transport mask
IpNameServiceImpl::CancelAdvertiseName(): Not IMPL_RUNNING
IpNameServiceImpl::CancelAdvertiseName(0x%x, "%s")
IpNameServiceImpl::CancelAdvertiseName(0x%x, 0x%p)
IpNameServiceImpl::CancelFindAdvertisement(): Bad transport mask
IpNameServiceImpl::ClearCallbacks()
IpNameServiceImpl::ClearLiveInterfaces()
IpNameServiceImpl::ClearLiveInterfaces(): clear interface %d
IpNameServiceImpl::ClearLiveInterfaces(): Clear interfaces
IpNameServiceImpl::ClearLiveInterfaces(): Done
IpNameServiceImpl::ClearNetworkEventCallbacks()
IpNameServiceImpl::CountOnes(): %d bits are set
IpNameServiceImpl::CountOnes(0x%x)
IpNameServiceImpl::DoPeriodicMaintenance(): Retransmit()
IpNameServiceImpl::Enable(): Bad transport mask
IpNameServiceImpl::Enable(0x%x, %d., %d., %d., %d, %d, %d, %d )
IpNameServiceImpl::Enabled()
IpNameServiceImpl::FindAdvertisement(): Bad transport mask
IpNameServiceImpl::FindAdvertisement(0x%x, "%s", %d)
IpNameServiceImpl::GetQueryPackets(): Message is full
IpNameServiceImpl::GetQueryPackets(): Resetting current list
IpNameServiceImpl::GetResponsePackets(): Accumulating "%s"
IpNameServiceImpl::GetResponsePackets(): Message has room.  Adding "%s"
IpNameServiceImpl::GetResponsePackets(): Message is full
IpNameServiceImpl::GetResponsePackets(): Sending partial list
IpNameServiceImpl::HandleProtocolAnswer(%s)
IpNameServiceImpl::HandleProtocolAnswer(): Bad transport mask
IpNameServiceImpl::HandleProtocolAnswer(): Calling back with %s
IpNameServiceImpl::HandleProtocolAnswer(): Got GUID %s
IpNameServiceImpl::HandleProtocolAnswer(): Got IP %s from recvfrom
IpNameServiceImpl::HandleProtocolAnswer(): Got IPv4 %s from message
IpNameServiceImpl::HandleProtocolAnswer(): Got IPv6 %s from message
IpNameServiceImpl::HandleProtocolAnswer(): Got port %d from message
IpNameServiceImpl::HandleProtocolAnswer(): Ignoring version one message from version two peer
IpNameServiceImpl::HandleProtocolAnswer(): Ignoring version zero message from version one/version two peer
IpNameServiceImpl::HandleProtocolAnswer(): No callback for transport, so nothing to do
IpNameServiceImpl::HandleProtocolMessage(): calling HandleProtocolQuery()
IpNameServiceImpl::HandleProtocolMessage(): calling HandleProtocolResponse()
IpNameServiceImpl::HandleProtocolMessage(): Deserialize(): Error
IpNameServiceImpl::HandleProtocolMessage(): Deserialize(): Error.
IpNameServiceImpl::HandleProtocolMessage(): Unknown version: Error
IpNameServiceImpl::HandleProtocolMessage(): V1 not enabled, returning
IpNameServiceImpl::HandleProtocolMessage(0x%x, %d, %s)
IpNameServiceImpl::HandleProtocolQuestion(%s)
IpNameServiceImpl::HandleProtocolQuestion(): Ignoring version one message from version two peer
IpNameServiceImpl::HandleProtocolQuestion(): Ignoring version zero message from version one peer
IpNameServiceImpl::HandleProtocolQuestion(): request for %s does not match my %s
IpNameServiceImpl::HandleProtocolResponse Ignoring Non-AllJoyn related response
IpNameServiceImpl::HandleSearchQuery(): request for %s does not match my %s
IpNameServiceImpl::HandleSearchQuery, src = %s, dst = %s
IpNameServiceImpl::IndexFromBit(): Index is %d.
IpNameServiceImpl::IndexFromBit(0x%x)
IpNameServiceImpl::Init()
IpNameServiceImpl::InterfaceRequested()
IpNameServiceImpl::InterfaceRequested(): Interface "%s" approved.
IpNameServiceImpl::IpNameServiceImpl()
IpNameServiceImpl::Join()
IpNameServiceImpl::Join(): Joined
IpNameServiceImpl::Join(): Joining thread
IpNameServiceImpl::LazyUpdateInterfaces()
IpNameServiceImpl::LazyUpdateInterfaces(): Check out interface cantidates for transport %d
IpNameServiceImpl::LazyUpdateInterfaces(): Check out requested interfaces "%s"
IpNameServiceImpl::LazyUpdateInterfaces(): Checking out interface %s
IpNameServiceImpl::LazyUpdateInterfaces(): Communication with the outside world is forbidden
IpNameServiceImpl::LazyUpdateInterfaces(): family %d not enabled
IpNameServiceImpl::LazyUpdateInterfaces(): IfConfig()
IpNameServiceImpl::LazyUpdateInterfaces(): ignoring non-IPv4 loopback
IpNameServiceImpl::LazyUpdateInterfaces(): m_any not set, look for explicitly requested interfaces for transport %d (%d currently requested)
IpNameServiceImpl::LazyUpdateInterfaces(): not UP
IpNameServiceImpl::LazyUpdateInterfaces(): The process is suspending. Stop communicating with the outside world
IpNameServiceImpl::LazyUpdateInterfaces(): Use because found requestedInterface address "%s" for transport %d.
IpNameServiceImpl::LazyUpdateInterfaces(): Use because found requestedInterface name  "%s" for transport %d
IpNameServiceImpl::LazyUpdateInterfaces(): Use entry "%s" since P2P not supported
IpNameServiceImpl::LazyUpdateInterfaces(): Wildcard set mode for transport %d
IpNameServiceImpl::LazyUpdateInterfaces(): Won't use this IfConfig entry
IpNameServiceImpl::MaskFromIndex(%d.)
IpNameServiceImpl::MaskFromIndex(): Bit is 0x%x
IpNameServiceImpl::OpenInterface(%s)
IpNameServiceImpl::OpenInterface(): Already opened.
IpNameServiceImpl::OpenInterface(): Bad transport mask
IpNameServiceImpl::OpenInterface(): Not running
IpNameServiceImpl::OpenInterface(): Wildcard interface
IpNameServiceImpl::Query(): Not running
IpNameServiceImpl::Query(0x%x, ...)
IpNameServiceImpl::QueueProtocolMessage()
IpNameServiceImpl::RefreshCache %s
IpNameServiceImpl::RefreshCache(0x%x, "%s", %d)
IpNameServiceImpl::Response(): Not running
IpNameServiceImpl::Response(0x%x, ...)
IpNameServiceImpl::Retransmit()
IpNameServiceImpl::Retransmit(): Accumulating "%s"
IpNameServiceImpl::Retransmit(): Accumulating (quiet) "%s"
IpNameServiceImpl::Retransmit(): Loop through advertised names
IpNameServiceImpl::Retransmit(): Message has room.  Adding "%s"
IpNameServiceImpl::Retransmit(): Message has room.  Adding (quiet) "%s"
IpNameServiceImpl::Retransmit(): Message is full
IpNameServiceImpl::Retransmit(): Nothing to do for transportIndex %d
IpNameServiceImpl::Retransmit(): Resetting current list
IpNameServiceImpl::Retransmit(): Sending final message 
IpNameServiceImpl::Retransmit(): Sending final version zero message 
IpNameServiceImpl::Retransmit(): Sending partial list
IpNameServiceImpl::Retransmit(): Single complete message 
IpNameServiceImpl::RewriteVersionSpecific()
IpNameServiceImpl::RewriteVersionSpecific(): Answer gets version one
IpNameServiceImpl::RewriteVersionSpecific(): Answer gets version zero
IpNameServiceImpl::RewriteVersionSpecific(): Rewrite answer %d.
IpNameServiceImpl::Run()
IpNameServiceImpl::Run(): Call qcc::RecvFrom()
IpNameServiceImpl::Run(): Event::Wait(): Failed
IpNameServiceImpl::Run(): Got IPNS message from "%s"
IpNameServiceImpl::Run(): LazyUpdateInterfaces()
IpNameServiceImpl::Run(): m_doDisable && m_outbound.empty() -> m_enabled = false
IpNameServiceImpl::Run(): m_terminal && m_outbound.empty() -> m_terminal = false
IpNameServiceImpl::Run(): Network event fired
IpNameServiceImpl::Run(): qcc::RecvFrom(%d, ...): Failed
IpNameServiceImpl::Run(): Socket event fired
IpNameServiceImpl::Run(): Stop event fired
IpNameServiceImpl::Run(): Wake event fired
IpNameServiceImpl::SameNetwork(%d, "%s", "%s")
IpNameServiceImpl::SameNetwork(): Bad IPv4 network prefix
IpNameServiceImpl::SameNetwork(): Bad IPv6 network prefix
IpNameServiceImpl::SameNetwork(): Bad network prefix
IpNameServiceImpl::SameNetwork(): IPv4 networks are different
IpNameServiceImpl::SameNetwork(): IPv4 networks are the same
IpNameServiceImpl::SameNetwork(): IPv6 Multicast, networks are the same
IpNameServiceImpl::SameNetwork(): IPv6 networks are different
IpNameServiceImpl::SameNetwork(): IPv6 networks are the same
IpNameServiceImpl::SameNetwork(): Network families are different
IpNameServiceImpl::SendOutboundMessageActively()
IpNameServiceImpl::SendOutboundMessageActively(): Checking out live interface %d. ("%s")
IpNameServiceImpl::SendOutboundMessageActively(): Interface %d. is IPv4
IpNameServiceImpl::SendOutboundMessageActively(): Interface %d. is IPv6
IpNameServiceImpl::SendOutboundMessageActively(): Interface %d. is live and has address '%s'
IpNameServiceImpl::SendOutboundMessageActively(): Interface %d. is not live
IpNameServiceImpl::SendOutboundMessageActively(): No questions or answers for this interface
IpNameServiceImpl::SendOutboundMessageActively(): Rewrite NS/MDNS packet %p
IpNameServiceImpl::SendOutboundMessageActively(): SendProtocolMessage()
IpNameServiceImpl::SendOutboundMessageActively(): Walk interfaces
IpNameServiceImpl::SendOutboundMessageQuietly()
IpNameServiceImpl::SendOutboundMessageQuietly(): Checking out live interface %d. ("%s")
IpNameServiceImpl::SendOutboundMessageQuietly(): Down-version message ignored
IpNameServiceImpl::SendOutboundMessageQuietly(): Interface %d. is address family mismatched
IpNameServiceImpl::SendOutboundMessageQuietly(): Interface %d. is IPv4
IpNameServiceImpl::SendOutboundMessageQuietly(): Interface %d. is IPv6
IpNameServiceImpl::SendOutboundMessageQuietly(): Interface %d. is live
IpNameServiceImpl::SendOutboundMessageQuietly(): Interface %d. is not live
IpNameServiceImpl::SendOutboundMessageQuietly(): Rewrite NS/MDNS packet %p
IpNameServiceImpl::SendOutboundMessageQuietly(): SendProtocolMessage()
IpNameServiceImpl::SendOutboundMessages()
IpNameServiceImpl::SendProtocolMessage():  Error sending to IPv4 (broadcast)
IpNameServiceImpl::SendProtocolMessage():  Error sending to IPv4 Local Network Control Block multicast group
IpNameServiceImpl::SendProtocolMessage():  Error sending to IPv6 Link-Local Scope multicast group 
IpNameServiceImpl::SendProtocolMessage():  Error setting multicast interface
IpNameServiceImpl::SendProtocolMessage():  Interface does not support broadcast
IpNameServiceImpl::SendProtocolMessage():  InterfaceAddress %s, prefix %d
IpNameServiceImpl::SendProtocolMessage():  Sending actively to "%s" over "%s"
IpNameServiceImpl::SendProtocolMessage():  Subnet directed broadcasts are disabled
IpNameServiceImpl::SendProtocolMessage(): Error quietly sending to "%s"
IpNameServiceImpl::SendProtocolMessage(): Sending quietly to "%s" over "%s"
IpNameServiceImpl::SendProtocolMessage(): Socket() failed: %d - %s
IpNameServiceImpl::SetCallback()
IpNameServiceImpl::SetCallback(): Bad transport mask
IpNameServiceImpl::SetNetworkEventCallback()
IpNameServiceImpl::SetNetworkEventCallback(): Bad transport mask
IpNameServiceImpl::Start()
IpNameServiceImpl::Start(): Started
IpNameServiceImpl::Start(): Starting thread
IpNameServiceImpl::Stop()
IpNameServiceImpl::Stop(): Stopped
IpNameServiceImpl::Stop(): Stopping thread
IsAt::Deserialize()
IsAt::Deserialize(): C flag %d
IsAt::Deserialize(): Count %d
IsAt::Deserialize(): F flag %d
IsAt::Deserialize(): G flag %d
IsAt::Deserialize(): Incorrect type %d
IsAt::Deserialize(): Insufficient bufsize %d
IsAt::Deserialize(): IPv4: %s
IsAt::Deserialize(): IPv6: %s
IsAt::Deserialize(): Port %d
IsAt::Deserialize(): R4 flag %d
IsAt::Deserialize(): R6 flag %d
IsAt::Deserialize(): Reliable IPv4 port %d
IsAt::Deserialize(): Reliable IPv4: %s
IsAt::Deserialize(): Reliable IPv6 port %d
IsAt::Deserialize(): Reliable IPv6: %s
IsAt::Deserialize(): S flag %d
IsAt::Deserialize(): StringData::Deserialize() GUID
IsAt::Deserialize(): StringData::Deserialize() name %d
IsAt::Deserialize(): StringData::Deserialize():  Error
IsAt::Deserialize(): T flag %d
IsAt::Deserialize(): U flag %d
IsAt::Deserialize(): U4 flag %d
IsAt::Deserialize(): Unreliable IPv4 port %d
IsAt::Deserialize(): Unreliable IPv4: %s
IsAt::Deserialize(): Unreliable IPv6 port %d
IsAt::Deserialize(): Unreliable IPv6: %s
IsAt::GetSerializedSize(): Unexpected version %d
IsAt::Serialize(): C flag
IsAt::Serialize(): Count %d
IsAt::Serialize(): F flag
IsAt::Serialize(): G flag
IsAt::Serialize(): GUID %s
IsAt::Serialize(): IPv4: %s
IsAt::Serialize(): IPv6: %s
IsAt::Serialize(): name %s
IsAt::Serialize(): Port %d
IsAt::Serialize(): R4 flag
IsAt::Serialize(): R6 flag
IsAt::Serialize(): Reliable IPv4 port %d
IsAt::Serialize(): Reliable IPv4: %s
IsAt::Serialize(): Reliable IPv6 port %d
IsAt::Serialize(): Reliable IPv6: %s
IsAt::Serialize(): S flag
IsAt::Serialize(): T flag
IsAt::Serialize(): to buffer 0x%x
IsAt::Serialize(): TransportMask 0x%x
IsAt::Serialize(): U flag
IsAt::Serialize(): U4 flag
IsAt::Serialize(): U6 flag
IsAt::Serialize(): Unreliable IPv4 port %d
IsAt::Serialize(): Unreliable IPv4: %s
IsAt::Serialize(): Unreliable IPv6 port %d
IsAt::Serialize(): Unreliable IPv6: %s
IsAuthorized with required permission %d, iName %s, mbrName %s
IsDebuggerPresent
isDuplicateConnRequest(): Found conn %p, foreign %u
IsOnlyImplicitMatch(epName=%s, msg.sender=%s)
IsProcessorFeaturePresent
issuer: 
J0L@J0N
Join: Failed to start JoinSessionThread
Joined
Joiner %s disappeared while joining
joiner, memberEp or memberB2BEp disappeared during join
Joining
JoinS-
JoinSession
JoinSession timed out waiting for %s to appear on %s
JoinSessionAsync invocation failed
JoinSessionAsync to %s failed
JoinSessionAsync to %s failed - %s
JoinSessionAsync(name=%s,...) pending
JoinSessionCB(status=%s,sid=%u) name=%s
JoinSessionThread::RunAttach()
JoinSessionThread::RunAttach(): sessionPort=%d, src="%s", sessionHost="%s", dest="%s", srcB2B="%s", busAddr="%s"
JoinSessionThread::RunJoin()
JoinSessionThread::RunJoin() sessionPort=%d, opts=<%u, 0x%x, 0x%x>)
JoinSessionThread::RunJoin(): Add local joiner to member list
JoinSessionThread::RunJoin(): Add session map entry for sender="%s", id=%d., sessionHost="%s", sessionPort=%d.
JoinSessionThread::RunJoin(): AddSessionRoute()
JoinSessionThread::RunJoin(): AddSessionRoute() for session ID %d.
JoinSessionThread::RunJoin(): Attach session success("%s")
JoinSessionThread::RunJoin(): bad args
JoinSessionThread::RunJoin(): Blocked multiple connections to same dest with same session ID
JoinSessionThread::RunJoin(): Connect("%s")
JoinSessionThread::RunJoin(): creatorName="%s"
JoinSessionThread::RunJoin(): Existing virtual endpoint IsValid() and isMultipoint
JoinSessionThread::RunJoin(): FindEndpoint("%s")
JoinSessionThread::RunJoin(): found "%s" in sessionMap with expected port %d.
JoinSessionThread::RunJoin(): Found busaddr in adv alias map: "%s"
JoinSessionThread::RunJoin(): Found busaddr in name map: "%s"
JoinSessionThread::RunJoin(): Found virtual endpoint for route
JoinSessionThread::RunJoin(): Have busaddrs to try.
JoinSessionThread::RunJoin(): IncrementRef() on existing mp session
JoinSessionThread::RunJoin(): Join session request accepted
JoinSessionThread::RunJoin(): Join session request rejected
JoinSessionThread::RunJoin(): joiner already joined
JoinSessionThread::RunJoin(): joinerEp="%s"
JoinSessionThread::RunJoin(): JoinSession returned (%d,%u) (status=%s)
JoinSessionThread::RunJoin(): Local (non-virtual) endpoint
JoinSessionThread::RunJoin(): Local (non-virtual) MPSessionChanged
JoinSessionThread::RunJoin(): Look for busaddr corresponding to sessionHost
JoinSessionThread::RunJoin(): look for busaddr in adv alias map
JoinSessionThread::RunJoin(): Member "%s"
JoinSessionThread::RunJoin(): Member "%s" is virtual
JoinSessionThread::RunJoin(): Multicast session joined.
JoinSessionThread::RunJoin(): newsessinoId=%d.
JoinSessionThread::RunJoin(): No advertisement. No existing route.  Nothing we can do.
JoinSessionThread::RunJoin(): No available transport for %s
JoinSessionThread::RunJoin(): no busaddr.  SendGetSessionInfo() directly.
JoinSessionThread::RunJoin(): optsIn="%s"
JoinSessionThread::RunJoin(): Raw session.  Tear down new endpoint
JoinSessionThread::RunJoin(): Raw socket
JoinSessionThread::RunJoin(): Remote name of new b2b endpoint is "%s"
JoinSessionThread::RunJoin(): Reply to request
JoinSessionThread::RunJoin(): rSessionEp="%s"
JoinSessionThread::RunJoin(): self-join!
JoinSessionThread::RunJoin(): SendAcceptSession()
JoinSessionThread::RunJoin(): SendAttachSession()
JoinSessionThread::RunJoin(): SendMPSessionChanged() series to local endpoint
JoinSessionThread::RunJoin(): SendSessionJoined() to local endpoint
JoinSessionThread::RunJoin(): session is with a remote attachment
JoinSessionThread::RunJoin(): session is with another locally connected attachment
JoinSessionThread::RunJoin(): sessionHost="%s"
JoinSessionThread::RunJoin(): Sleep
JoinSessionThread::RunJoin(): srcEp="%s"
JoinSessionThread::RunJoin(): Trying busaddr="%s"
JoinSessionThread::RunJoin(): vSessionEp="%s"
JoinSessionThread::RunJoin(): Wait for virtual endpoint.
JoinStream %p
K H9{8r
K SUVWAWH
k VWAVH
K@HiC8
K0+K4
K0H;K8t
K0H;N
Keep alive is not allowed for HMAC
keep_umask
kernel32.dll
KERNELBASE.dll
Key data is not in uncompressed format; other formats are not supported
Key type %d not supported for message decryption
Key type %d not supported for message encryption
Key type for DICTIONARY ENTRY was not a basic type
KeyAuthentication
keyblob
KeyDataBlob
KeyExchange
KeyExchangerECDHE::ExecKeyExchange send KeyExchange fails status 0x%x
KeyExchangerECDHE::ExecKeyExchange send KeyExchange fails to retrieve variant from response status 0x%x
KeyExchangerECDHE::ExecKeyExchange set variant fails status 0x%x
KeyExchangerECDHE::KeyExchangeReadKeyInfo parsing KeyInfo fails status 0x%x
KeyExchangerECDHE::KeyExchangeReadLegacyKey invalid curve type %d expecting %d
KeyExchangerECDHE::KeyExchangeReadLegacyKey invalid public key size %d expecting 1 + %d
KeyExchangerECDHE::RespondToKeyExchange failed to generate ECDHE key pair
KeyExchangerECDHE::RespondToKeyExchange failed to generate master secret
KeyExchangerECDHE::RespondToKeyExchange received invalid data from peer
KeyExchangerECDHE_ECDSA::GenVerifierSigInfoArg failed to generate DER encoding for certificate
KeyExchangerECDHE_ECDSA::GenVerifierSigInfoArg failed to generate local verifier sig info
KeyExchangerECDHE_ECDSA::ParseCertChainPEM has error counting certs in the PEM
KeyExchangerECDHE_ECDSA::ParseCertChainPEM has error loading certs in the PEM
KeyExchangerECDHE_ECDSA::VerifyCredentialsCB listener::VerifyCredentials failed
KeyExchangerECDHE_PSK::RequestCredentialsCB PSK value not provided
KeyExchangerECDHE_SPEKE::RequestCredentials call failed
KeyExchangerECDHE_SPEKE::RequestCredentialsCB password not provided
KeyGen using key gen version %d
KeyInfoHelper::KeyInfoKeyIdToMsgArg failed
KeyInfoHelper::KeyInfoNISTP256PubKeyToMsgArg failed
Keystore fileSize is too large, status=(%#x)
Keystore has wrong version expected %u got %u
KeyStore::AddKey %s
KeyStore::DelKey %s
KeyStore::GetExpiration %s
KeyStore::GetKey %s
KeyStore::Load deleting %s
KeyStore::Load merging %s
KeyStore::Load merging changes
KeyStore::Pull
KeyStore::Pull (revision %u)
KeyStore::Pull failed, status=(%#x)
KeyStore::Pull rev:%d GUID %s %s
KeyStore::PullEmptyKeyStore
KeyStore::Push (revision %u)
KeyStore::Push rev:%u key %s
KeyStore::Reload
KeyStore::SetExpiration %s
KeyStore::StoreInternal returned status=(%#x)
KHA8p
KHH9{`r
Killed link gracefully.
KP!s(H
KPHiCH
L!d$H
L!d$XI
L".&"( $)
L#@HH
L#CHH
L#E0M
L#r0L
L#r0M
L#v0M
L$ D+
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
L$ fD
L$ H;
L$ H9
L$ I;
L$ L+
L$ M+
L$ SUVWAVAWH
L$ SUVWAVH
L$ SUVWH
L$ SVWAVH
L$ SVWH
L$ USVWAUAVAWH
L$ UVWATAUAVAWH
L$ VH
l$ VWATAUAVH
l$ VWATAVAWH
l$ VWAUAVAWH
l$ VWAVH
l$ VWAWH
l$ WH
L$ WH
l$(E3
L$(E3
l$(E3
l$(H;
L$(H3
L$(L+
L$@;A
L$@+L$Pi
L$@9O
L$@E3
l$@E3
L$@E3
l$@fD
L$@H+
L$@H3
l$@Hc
L$@I+
L$`E3
l$`fD;m
L$`H+
L$`H3
L$`H9q s
L$`H9t$xH
L$`L;
L$`L+
L$`M;
L$0;A s
l$0?H
L$0fD
L$0H;A(}
L$0H+
L$0H3
l$0M9o
L$8D8a
L$8D8J
l$8E3
L$8E3
l$8fD
L$8H;L$@t
L$8H+
L$8H3
L$8L+
L$aE3
L$h H
L$h@H
L$HD;
l$HE2
L$hE3
L$HE3
L$hE3
L$HE3
l$HE8u
L$hE9Q
l$hf#
L$Hf9B
L$Hf9r
L$HfA
L$HfD
l$hfD
L$HfD9
L$HfD9k
L$hH;
L$HH;H(}
L$hH;L$pt
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH3
L$HH3
L$hH9L$`u
l$HL;
L$hL;e
L$HL+
L$LD8g
L$lHi
L$lLi
L$P8K
L$PA;
l$PA_A^A]A\_^
L$PD8a
L$PD8a8u
L$PD8a8v
L$PD8q8v
L$PD8y
L$pE3
L$PE3
L$pE3
l$PE3
L$Pf9r
l$PfD
L$PfE
L$pH;
l$PH;
L$pH;
l$PH;
L$PH;L$Xt
L$PH+
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$PH3
L$pH9H
L$PI+
L$PL;
l$pL;
L$PL;
L$PL9q
L$PM;
l$TfD
L$X@8y
L$XD8i
L$XE3
L$xE3
l$XfD
l$xH;
L$XH;A(}
L$XH+
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH3
L$XH3
L$xH9
L$xH9N
L$XHi
L$xHk
L$xI;
l$XI;]
l$XI+
L$XI3
L$XL+
l$xL9
l$xM;
L$XM3
l$XM9e@
L$xsh
l$Xu4H
L)L$ L
L*"N(d.f(h&l
L;{ r
L;{ s
L;1t3H
L;B r
L;c s
L;d$pt 
L;l$`t
L;p(}
L;q s_H
L;s r
L;s s
L;t$`
L;t$H
L;T$HtBI
L;t$Pt
L;x(}
L+FhA
L+FhI
L+l$X
L+t$8L
L+t$PL
l2n(p2r.t
L9!t H
L9!t I
L9!t#H
L9)t I
L9/tLH
L9@ s
L9@(u'
L9-[s$
L9` s
L9`(u-
L9`(u!
L9`(u!E3
L9`(u#
L9`(u$
L9`(u%
L9`(u&
L9`(u(
L9`(u(H
L9`(u*
L9`(u/
L9`(u+
L9{PtNH
L9|$`
L9|$`L
L9|$hu
L9|$P
L9|$pL
L9|$x
L9|$xu
L91t H
L99t H
L99t!H
L99t4H
L9A s
L9a tJI
L9B0u5L9BXu/H
L9D$@t
L9d$H
L9D$P
L9d$xvZH
L9e0H
L9e0uT
'L9ept!M
L9GHu
L9h(u-
L9h(u!
L9h(u#
L9h(u$
L9h(u&
L9h(u(
L9h(u)
L9h(u*
L9h(u,
L9h(u/
L9h(u+
L9h(uy
L9k`t
L9kPt
L9l$Pu
L9l$x
L9l$X
L9L$x
L9l$Xu
L9l$Xu=H
L9m'H
L9mXvuI
L9oHt6M
L9opuz
L9p s
L9p(L
L9p(u
L9p(u-
L9p(u!
L9p(u$
L9p(u&
L9p(u(
L9p(u)
L9p(u*
L9p(u/
L9p(u+
L9p(u2
L9q s
L9s`t
L9sHtuH
L9t$H
L9t$P
L9t$Xu:H
L9v8t2H
L9wHu
L9wXt)H
L9x s
L9x t
L9x(u-
L9x(u!
L9x(u!E3
L9x(u"
L9x(u#
L9x(u$
L9x(u&
L9x(u(
L9x(u(H
L9x(u)
L9x(u*
L9x(u/
L9x(u+
L9x(u0A
L9x(u2
L9x(uI
L9y s
L9y(u#
language
languageTag,aboutData
languageTag,data
languageTags
LazyUpdateInterfaces: !loopback && !multicast && (!broadcast || !m_broadcast || !af_inet).  Ignoring family %d flags %d
LazyUpdateInterfaces: IfConfig() failed
LcD$@H
Leaf certificate in identity chain is not of type IDENTITY_CERTIFICATE. This is not recommended.
Leaf certificate in membership chain is not of type MEMBERSHIP_CERTIFICATE. This is not recommended.
LeaveCriticalSection
LeaveHostedSession
LeaveJoinedSession
LeaveSession
LeaveSession sid=%u failed
LeaveSession(sid=%u)
Legacy descriptions not available.
LegalCopyright
lepDisp
limit
Link configured - packetsize =%d window size = %d
list too long
ListActivatableNames
LISTEN
listen
Listen(sockfd = %d, backlog = %d)
listener::RequestCredentials does not provide certificate chain
listener::RequestCredentials does not provide private key
listener::RequestCredentials returns false
Listening: %s
ListNames
ListQueuedOwners
loaded
LOC_DATA
local
Local Address: %s - %u
Local transport not running
Local transport not running discarding %s
local:
LOCAL_TRANSPORT
LOCALAPPDATA
localAuthList,remoteAuthList
localAuthMask,localPublicKey, remoteAuthMask, remotePublicKey
localEndpoint not valid
LocalEndpoint::DoPushMessage failed
LocalEndpoint::RegisterReplyHandler
LocalEndpoint::RemoveReplyHandler for serial=%u
LocalEndpoint::Stop
LocalEndpoint::UpdateSerialNumber for %s serial=%u was %u
LocalEndpoint~LocalEndpoint
LocalEndpoint~LocalEndpoint deleting reply handler for serial %u
LocalFree
localGuid,localVersion,remoteGuid,remoteVersion
localGuid,remoteGuid,localNonce,remoteNonce,verifier
localhost:
localKeyMatter,remoteKeyMatter
localVerifier,remoteVerifier
LockFileEx
LockFileEx failed, error=%#x
LogFilter
Logon attempt for user "%s"
Logon denied for user 
LostAdvertisedName
low mobility
lower
M H1E
M#}0H
M#}0M
m(jG$
M;H I
M_O_Un'
m`H;F
M9fHtJI
M9fptJI
M9H s
M9n tZH
M9n u5I
M9n urH
M9nPw
M9npw
M9oht.M
M9ohu2H
M9pht
machineid
Malformed <arg> tag (bad attributes)
ManageAuthenticatingEndpoints
ManageAuthenticatingEndpoints: moving endpoint to active list
ManageAuthenticatingEndpoints: removing invalidated, failed or stopped endpoint
mandatory
manifest
Manifest has empty signature
Manifest has empty signature algorithm OID
Manifest has empty thumbprint
Manifest has empty thumbprint algorithm OID
Manifest is unknown version; received version %u
Manifest selection done; sending %Iu
Manifest signature failed to verify
Manifest:
Manifests
manifests
manifests,manifests
ManifestTemplate
ManifestTemplateDigest
ManifestXml
Manufacturer
ManufacturerCertificate
map/set too long
MarshalMessage expected signature "%s" got "%s"
MarshalMessage: %d+%d %s %s
MarshalMessage: %s
master secret
MasterSecret:  %s
Matched reply for serial #%d
matching,transports,disposition
max_completed_connections
max_incomplete_connections
max_remote_clients_tcp
max_remote_clients_udp
max_untrusted_clients
MCTXD
MCTXH
MCTXI
MCTXL
MCTXM
MDNS TXT record does not contain u6port information, using srvRDataUdp->GetPort()
MDNSARData::Serialize Error occurred during conversion of String to IPv4 address
MDNSDefaultRData::Deserialize(): Insufficient bufsize %d
MDNSDomainName::Deserialize(): Insufficient bufsize %d
MDNSHeader::Serialize(): to buffer 0x%x
MDNSPtrRecord::Deserialize(): Insufficient bufsize %d
MDNSQuestion::Deserialize Error while deserializing QName
MDNSResourceRecord::Deserialize() Error occurred while deserializing resource data
MDNSSrvRecord::Deserialize(): Insufficient bufsize %d
MDNSSrvRecord::Deserialize(): Insufficient bufsize %d or invalid length %d
MDNSTextRecord::Deserialize(): Insufficient bufsize %d
MDNSTextRecord::Deserialize(): Invalid RDLength
MDNSTextRecord::Deserialize(): Mismatched RDLength
Mechanisms
member
member='
Membership EKU seen multiple times
MembershipSummaries
memchr
memcmp
memcpy
memmove
memset
Message arg parse error at or near %ld
Message arg parse error naked dicitionary element
Message body length %d is invalid
Message buffer length %d is invalid
Message expired %u milliseconds ago
Message expires in %d milliseconds
Message header has invalid endian flag %d
Message header length %d is invalid
Message is empty
Message size %d exceeds maximum size
Message was accompanied by %d handles
Message::GetArgs failed
Message::Unmarshal rx thread was alerted for endpoint %s
MessagePump::~MessagePump()
MessagePump::~MessagePump(): Dealing with remaining queued messages
MessagePump::~MessagePump(): Dealing with threads
MessagePump::~MessagePump(): Done
MessagePump::DoJoin() => "%s"
MessagePump::DoJoin(): m_spawnedThreads=%d.
MessagePump::DoJoin(): m_spawnedThreads=%d. at return
MessagePump::DoJoin(both="%s")
MessagePump::DoJoin: PumpThread Join() error
MessagePump::Join()
MessagePump::JoinPast()
MessagePump::MessagePump()
MessagePump::PumpThread::Run()
MessagePump::PumpThread::Run(): Alert()
MessagePump::PumpThread::Run(): Back from endpoint RecvCb()
MessagePump::PumpThread::Run(): Call out to endopint with connId=%d.
MessagePump::PumpThread::Run(): Done with wait.
MessagePump::PumpThread::Run(): Exiting
MessagePump::PumpThread::Run(): found endpoint with conn ID == %d. on m_endpointList
MessagePump::PumpThread::Run(): Have work.
MessagePump::PumpThread::Run(): Return
MessagePump::PumpThread::Run(): TimedWait for condition
MessagePump::PumpThread::Run(): TimedWait returns "%s"
MessagePump::PumpThread::Run(): Top.
MessagePump::PumpThread::Run(): Unable to find endpoint with conn ID == %d. on m_endpointList. Ignore message
MessagePump::RecvCb(): m_spawnedThreads=%d.
MessagePump::RecvCb(): Spin up new PumpThread
MessagePump::RecvCb(): Stopping
MessagePump::RecvCb(handle=%p, conn=%p, connId=%d., rcv=%p, status=%s)
MessagePump::Stop()
MessagePump::Stop() => "%s"
MessagePump::Stop(): m_activeThread->Stop()
MessagePump::Stop(): m_condition.Signal()
method
Method call not authorized
Method call to secure %s was not encrypted
method_call
method_return
MHD8q
Microsoft
Microsoft Corporation
Microsoft Primitive Provider
Microsoft.Windows.AllJoyn.MSAJApi
Microsoft.Windows.AllJoyn.MSAJDeprecated
MimeType
Mismatched tag %#x and syntax character '%c'
Missing cache in remoteCaches for %s
Missing packet - expected = %d, got %d
mobility has invalid value %u
ModelNumber
Modify
module,level
Moving peer %s from pending to active state.
MP_NAMES
MpfD9u@u
MpI;Mxt
MPSessionChanged
MPSessionChangedWithReason
MSAJApi.dll
MSAJApi.pdb
msg delivered via SendThroughEndpoint() to %s: %s
MsgArg constructor signature "%s" failed
msvcp_win.dll
multi
MXf9E
MXfA9E
MxfD9}@u
N H9KHt
N@L9qXu
N@L9qXuXH
N<|#R
n0@8nH
n6p(r>p
N8H;YH
N9t8h
N9t9p
name,disposition
name,names
name,oldOwner,newOwner
name,owner
name,timeout,disposition
name,transport,prefix
name,transports,disposition
name='
name='*'
NameAcquired
NameChanged
NamedPipeAcceptThread: Accepted client connection on pipeHandle 0x%p
NamedPipeAcceptThread: AllJoynAcceptBusConnection failed, error %u
NamedPipeAcceptThread: AllJoynCreateBus failed, error %u
NamedPipeAcceptThread: exiting, status=%s
NamedPipeAcceptThread: transport is stopping
NamedPipeAcceptThread: Waiting for connection on pipeHandle = 0x%p
NamedPipeClientTransport::Connect(): %s
NamedPipeClientTransport::Connect(): Bad transport argument. It must be 'npipe:' (without quotes)
NamedPipeClientTransport::Connect(): Connection to named pipe failed because the application doesn't have the required permissions.
NamedPipeClientTransport::Connect(): could not create pipe connection. Invalid Handle Value 
NamedPipeClientTransport::Connect(): could not create pipe connection. Invalid Handle Value (0x%08X)
NamedPipeClientTransport::Connect(): Start ClientEndpoint failed
NamedPipeClientTransport::Connect(): WriteFile to pipe failed (0x%08X).
NamedPipeDaemonTransport()
NamedPipeDaemonTransport::EndpointExit()
NamedPipeDaemonTransport::Join
NamedPipeDaemonTransport::Run
NamedPipeDaemonTransport::Stop
NamedPipeEventEnum
NamedPipeEventEnum returned %d, GLE = %u
NamedPipeEventSelect
NamedPipeEventSelect %x
NamedPipeIoEventCallback %x
NameHasOwner
NameLost
NameOwnerChanged
NameReaper
names
NameTable: AddAlias(%s, %s)
NameTable: RemoveAlias(%s, %s)
NameTable::AddUniqueName(%s)
NameTable::IsAlias(name1 = '%s', name2 = '%s')
NameTable::RemoveVirtualAliases(%s)
NameTable::SetVirtualAlias(%s, %p/%s, %p/%s)
NameTable::UpdateVirtualAliases(%s)
NEGOTIATE_UNIX_FD
NETWORK
NetworkIsolationGetAppContainerConfig
New %s state %s
NewConnRecord()
NewConnRecord(): conn %p, id %u
No auth mechanism
No logon credentials for user 
No manifests to send and we've exchanged once before; exiting
No memory allocating buffer for key blob
No message provided; sending no manifests
No read access on property %s
no state to remove
No such object %s
No write access on property %s
nodeConnection has invalid value %u
NonPrivileged
NormalizeListenSpec returned %s
Not authorized because of missing policy
Not authorized by VerifyCredential callback
not delivered
Not fatal: Failed to destroy old public key, ntStatus=%X
not in use
not relevant
Not relevant...
Not storing this manifest because it's unsigned: %s
NotifyIpInterfaceChange
Now refreshing advertisements on interface event
npipe
npipe:
ns_disable_directed_broadcast
ns_disable_ipv4
ns_disable_ipv6
ns_enable_v1
ns_interfaces
NSPacket::Deserialize(): Insufficient bufsize %d
NSPacket::Deserialize(): IsAt::Deserialize() answer %d
NSPacket::Deserialize(): IsAt::Deserialize():  Error
NSPacket::Deserialize(): WhoHas::Deserialize() question %d
NSPacket::Deserialize(): WhoHas::Deserialize():  Error
NSPacket::Serialize(): ACount = %d
NSPacket::Serialize(): IsAt::Serialize() answer %d
NSPacket::Serialize(): QCount = %d
NSPacket::Serialize(): timer = %d
NSPacket::Serialize(): to buffer 0x%x
NSPacket::Serialize(): version = %d
NSPacket::Serialize(): WhoHas::Serialize() question %d
ntdll.dll
ntelA
NULL transport pointer found in transportList
null:
numHandles=%u, maxWaitMs=%u, Handles: 
NXT - UNA=%u, window=%u
NXT=%u, UNA=%u
O%08X
O(L9o@r
O@H;O@t
O@H9Y0
O@H9Y0u]H9YXuWH
o\$PH
O`M9f
O8H;YH
object
Object %s does not implement %s
Object %s has no interface %s (member=%s)
Object %s has no member %s
ObjectDiscovered(%s:%s)
ObjectLength
Observe
OBSERVER
ObserverManager::~ObserverManager
oD$ f
ohL;opt&H
oL$0f
OnAppResume
OnAppResume() is only supported for bundled daemon
OnAppSuspend
OnAppSuspend() is only supported for bundled daemon
onecoreuap\printscan\alljoyn\allseenalliance\alljoyn\alljoyn_core\router\unicode.h
onecoreuap\printscan\alljoyn\allseenalliance\alljoyn\alljoyn_core\router\windows\ScatterGatherList.h
onecoreuap\printscan\alljoyn\allseenalliance\alljoyn\alljoyn_core\src\AuthManager.h
Opening socket: %s
OpenThreadToken
OpH;Oxs
OpH+OhH
OPL9ohr
org.alljoyn
org.alljoyn.About
org.alljoyn.Bus
org.alljoyn.Bus.
org.alljoyn.Bus.Action
org.alljoyn.Bus.Application
org.alljoyn.Bus.Blocked
org.alljoyn.Bus.DocString
org.alljoyn.Bus.ErStatus
org.alljoyn.Bus.Exiting
org.alljoyn.Bus.Peer.Authentication
org.alljoyn.Bus.Peer.HeaderCompression
org.alljoyn.Bus.Peer.Session
org.alljoyn.Bus.Secure
org.alljoyn.Bus.Security.Application
org.alljoyn.Bus.Security.ClaimableApplication
org.alljoyn.Bus.Security.Error.CertificateNotFound
org.alljoyn.Bus.Security.Error.DigestMismatch
org.alljoyn.Bus.Security.Error.DuplicateCertificate
org.alljoyn.Bus.Security.Error.InvalidCertificate
org.alljoyn.Bus.Security.Error.InvalidCertificateUsage
org.alljoyn.Bus.Security.Error.ManagementAlreadyStarted
org.alljoyn.Bus.Security.Error.ManagementNotStarted
org.alljoyn.Bus.Security.Error.PermissionDenied
org.alljoyn.Bus.Security.Error.PolicyNotNewer
org.alljoyn.Bus.Security.ManagedApplication
org.alljoyn.Bus.SecurityViolation
org.alljoyn.Bus.Signal.GlobalBroadcast
org.alljoyn.Bus.Signal.Sessioncast
org.alljoyn.Bus.Signal.Sessionless
org.alljoyn.Bus.Signal.Unicast
org.alljoyn.Bus.Timeout
org.alljoyn.Bus.Type.Default
org.alljoyn.Bus.Type.DisplayHint
org.alljoyn.Bus.Type.Max
org.alljoyn.Bus.Type.Min
org.alljoyn.Bus.Type.Reference
org.alljoyn.Bus.Type.Units
org.alljoyn.BusNode.
org.alljoyn.Daemon
org.alljoyn.Debug
org.alljoyn.Error.LanguageNotSupported
org.alljoyn.error.redirect
org.alljoyn.error.untrusted
org.alljoyn.Icon
org.alljoyn.Security.Level
org.alljoyn.sl
org.allseen.Introspectable
org.freedesktop.DBus
org.freedesktop.DBus.Deprecated
org.freedesktop.DBus.Error.Failed
org.freedesktop.DBus.Error.InvalidArgs
org.freedesktop.DBus.Error.MatchRuleNotFound
org.freedesktop.DBus.Error.NameHasNoOwner
org.freedesktop.DBus.Error.NotSupported
org.freedesktop.DBus.Error.OOM
org.freedesktop.DBus.Error.ServiceUnknown
org.freedesktop.DBus.Error.Spawn.Failed
org.freedesktop.DBus.Introspectable
org.freedesktop.DBus.Method.NoReply
org.freedesktop.DBus.Peer
org.freedesktop.DBus.Properties
org.freedesktop.DBus.Property.EmitsChangedSignal
org.freedestop.DBus.Error.Failed
OriginalFilename
oT$@f
other
OTHER_END_STOP_WAIT
Out of memory allocating CNG signature buffer
Out of memory allocating digest
Out of memory allocating private key blob
Out of memory allocating public blob
Out of memory copying manifest XML
own_prefix
oXL+o(I
p AWH
P H;S
p H9u
p WAVAWH
p"T4L
p&$6<8":"<$>"@"Bx@5
p(H;p0
P(R0T(V&Z
p(RT9
p(V\4
p:_0#
p:Y6/
P0D8h8u
p0R4;
p1Wz/
P2P_NAMES
p2R~5
p8_6M
PA^_^
pA^_^[]
PA^_^][
pA^_^][
PA^_^][
pA^_^][
PA^_^][
pA^A\_^]
pA^A]A\_^][
PA__^
pA__^[]
PA__^][
PA_A\_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^A\_^[]
PA_A^A\_^][
pA_A^A\_^][
pA_A^A]_^[]
pA_A^A]_^][
PA_A^A]_^][
pA_A^A]_^][
PA_A^A]A\_^[
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
Parameter numBytes caused an integer overflow.
parity
Parse%s%s
ParseArray len %ld at pos:%ld
ParseDictEntry at pos:%d
ParseStruct at pos:%d
ParseStruct error in signature
path_prefix
path='
pB^Tm
PCP sending NEGO pkt %d win %d conf %X %X %X
PCP sending NEGORESP conf %X %X %X
PCP sending NEGORESP pkt %d win %d conf %X %X %X
Peer %s is gone
PeerObjDispatcher
peers
Peer's certificate chain data are not in DER or PEM format
Peer's certificate chain is empty.  Not authorized
Peer's trusted peer: %d public key: %s Authorized: %d Denied: %d Manifest required: %d
PeerStateTable(%p)::DelPeerState() %s for %s
PeerStateTable(%p)::GetPeerState() %s state for %s: %p
PeerStateTable(%p)::GetPeerState() got state for %s aka %s: %p
PeerStateTable(%p)::GetPeerState() no state stored for %s aka %s
PEM input validation failed; input too large.
PEM input validation failed; input too small.
PEM input validation failed; invalid character('%#X') in input.
PERMISSION_MANIFEST
PERMISSION_MGMT
PermissionConfigurator::SetPermissionManifestTemplate does not have PermissionMgmtObj initialized
PermissionConfigurator_SetManifestFromXml
PermissionManager::AuthorizeGetProperty IsAuthorized returns ER_PERMISSION_DENIED
PermissionManager::AuthorizeGetProperty: ifc %s prop %s local policy %s
PermissionManager::AuthorizeMessage IsAuthorized returns ER_PERMISSION_DENIED
PermissionManager::AuthorizeMessage with outgoing: %d msg %s
PermissionManager::AuthorizeMessage: local policy %s
PermissionManager::ParsePropertiesMessage %s %s
PermissionManager::ParsePropertiesMessage %s %s.%s
PermissionManager::ParsePropertiesMessage PropertiesChanged %s
PermissionMgmtObj Initialization failed
PermissionMgmtObj::%s
PermissionMgmtObj::ClaimInternal failed to store identity certificate chain
PermissionMgmtObj::ClaimInternal failed to store manifests
PermissionMgmtObj::DoUpdateIdentity restoring the identity certificate failed RetrieveCertsFromMsgArg
PermissionMgmtObj::DoUpdateIdentity restoring the identity certificate failed StoreIdentityCertChain
PermissionMgmtObj::GetAllMembershipCerts error loading membership certificate
PermissionMgmtObj::GetAllMembershipCerts error looking for membership certificate
PermissionMgmtObj::GetAllMembershipCerts failed to retrieve the list of membership certificates.  Status 0x%x
PermissionMgmtObj::InstallMembership failed to retrieve certificate [%d] status 0x%x
PermissionMgmtObj::InstallMembership failed to retrieve certificate chain status 0x%x
PermissionMgmtObj::IsRelevantMembershipCert failed to load certificate in membership chain
PermissionMgmtObj::ParseSendMemberships invalidated peer's membership guild thus removing it from peer's guild list
PermissionMgmtObj::ResetPolicy rebuild the default policy failed
PermissionMgmtObj::ResetPolicy storing the default policy failed
PermissionMgmtObj::RetrieveCertsFromMsgArg does not support encoding %d
PermissionMgmtObj::RetrieveCertsFromMsgArg failed to retrieve certificate chain
PermissionMgmtObj::RetrieveCertsFromMsgArg failed to validate certificate
PermissionMgmtObj::StoreIdentityCertChain failed since certificate subject public key is not the same as target public key
PermissionMgmtObj::StoreIdentityCertChain failed to validate certificate subject public key status 0x%x
PermissionMgmtObj::StoreMembership failed since certificate subject public key is not the same as target public key
PermissionMgmtObj::StoreMembership failed to validate certificate chain 0x%x
PermissionMgmtObj::StoreMembership failed to validate certificate subject public key status 0x%x
PermissionMgmtObj::ValidateCertChain has error counting certs in the PEM
PermissionMgmtObj::ValidateCertChain has error loading certs in the PEM
PermissionPolicy::Import #4 got status 0x%x
PermissionPolicy::Import (%d bytes) failed to load status 0x%x
PermissionPolicy::Import got status 0x%x
PermissionPolicy::Import got unexcepted specification version %d
PermissionPolicyStaticBusAttachment
PersistTimerHandler: handle=%p conn=%p context=%p delta %u retry %u
PersistTimerHandler: Persist Timeout (frozen window %d)
PersistTimerHandler: window %u
pI]X%?
pidfile
Ping(%s)
Ping(<bad_args>
ping.
ping.*
Pinging GUID %s
ping-reply.
ping-reply.*
pKZ:E
PMS:  %s
Policy
policy
policy rule denies message delivery.
POLICYDB
policyVersion
PolicyVersion
port,disposition
port,id,src
port,id,src,opts,accepted
port,joiner,creator,dest,b2b,busAddr,optsIn,namesIn,status,id,optsOut,members,namesOut
port,joiner,creator,dest,b2b,busAddr,optsIn,status,id,optsOut,members
port=
portIn,opts,disposition,portOut
powerSource has invalid value %u
Premature end of ruleSpec "%s"
print
Privileged
ProbeAck
ProbeReq
ProbeTimerHandler: handle=%p conn=%p delta %u now %u lastSeen = %u elapsed %u
ProbeTimerHandler: Probe Timeout: now =%u, lastSeen = %u, (limit of %u)
ProbeTimerHandler: send ping (NUL packet)
Processing packet on interface index %d that was received on index %d from %s:%u to %s:%u
ProductName
ProductVersion
propChanged = %s
Properties message
Properties.Get %s
Properties.GetAll %s
Properties.Set %s
PropertiesChanged
property
Property value for %s has wrong type %s
ProtectedPrefix\LocalService\MSAJPipe
ProtocolDemux(): local %d, foreign %d
ProtocolDemux(buf=%p, len=%d, local*=%p, foreign*=%p)
Provide
PROXIMITY_ANY
PROXIMITY_NETWORK
PROXIMITY_PHYSICAL
ProxyBusObject::RegisterPropertiesChangedListener(this = %p, iface = %s, properties = %p, propertiesSize = %u, listener = %p, context = %p
ProxyBusObject::UnregisterPropertiesChangedListener(iface = %s, listener = %p)
prUp\?(
pSP>/
pSPra
pSZXo
publicKey
publicKey,state
publickey: 
PullBytes ALERTED continuing
PullBytes invalid readState %d
Pulled byte offset went beyond the file size.
-pump
PumpThread
punct
PurgeComm
PurgeComm() returned %u
PushBytes failed!
Pushing %s into local endpoint
Pushing back interface %s addr %s
PushMessage(msg={sender='%s',interface='%s',member='%s',path='%s'})
PXH+P(H
q"T4L
q(RT9
q(V\4
q)]X1/|
q)V|X
q:_0#
q:Y6/
q[QR<
q`^0)
q{]t\7
Q|i/U
q0R^G'
q0R4;
q0UZz
q1]40>
q1Wz/
q2R~5
q8]zV
q8_6M
q8Q:)
qA]tG/
qa{sv}
qb]T)
qB^Tm
qcc::InitializeBCryptProviderHandles
QCC_StatusText
qCUrR
qCWtP
qh[</
qhH;qpt
qI]X%?
qJUx$6
qKZ:E
qP_8{
qq\RL/
qq]|x
qQ^<q&
qqa(oas)a{sv}
qQV^E
qr[4a
qr[pd
qrUp\?(
qsP>B
qSPra
qsssss
qsssssa{sv}
qsssssa{sv}a(sas)
qSZXo
qsZxs
Query failed status %s
QueryPerformanceCounter
QueryTransientObjectSecurityDescriptor
quiet
Quote mismatch in ruleSpec "%s"
qusa{sv}
QXH;Q`tJH
qYVz,
qz_|7
qZQTy
qzRX9
qzT0X&
qZUpm7
r!u%A
r!u)A
R"L$b"
R$fA;Z*
r$u(A
R`T(VrRdZl^|`
r4addr
r4port
r6addr
r6addr=%s,r6port=%d
r6port
Raw relay creation failed
rD"F$H$JxHm
Read key store from %s, size %lld
ReadFile
ReadFile returned error (%d)
ReadFile() returned %u
ReadFile() timed out after %dms
readwrite
Receive() window = %u, seq = %u, ack = %u, lcs = %u, acknxt = %u
Receive(): thinWindow %u, thinNXT %u, seg.ACK %u, seg.LCS %u
Receive(): Update thinWindow %u
Receive(handle=%p, conn=%p, rxbuf=%p, len=%d)
Receive: ack %u ahead of SND>NXT %u
Receive: incorrect data segment seq = %u, som = %u,  fcnt = %u
Receive: incorrect sequence numbers seg.seq = %u, seg.acknxt = %u
Receive: lcs %u and ack %u out of order
Receive: length check failed len = %u, seg.hlen = %u, seg.dlen = %u
receive_
receive_sender
Received %s implements response (name=%s) ttl %d
Received %s via endpoint %s
Received %u bytes
Received %u bytes, remoteAddr = %s, remotePort = %u
Received a ping response for name %s
Received announcement from '%s'
Received AttachSession response: <bad_args>
Received AttachSession response: replyCode=%d, sessionId=%u, opts=<%x, %x, %x>
Received compressed message of len %d (via endpoint %s)
Received message on unknown sid %u, ignoring
Received network interface event type %u
Received sync response - moving to LINK_INITIALIZED
Recv (sockfd = %d): %s
Recv(sockfd = %d, buf = <>, len = %lu, received = <>)
RecvFrom(sockfd = %d, buf = <>, len = %lu, received = <>)
RecvFrom: %s
RecvWithAncillaryData (sockfd = %u): %s
RecvWithAncillaryData (sockfd = %u): unknown address family
RecvWithFds
RecvWithFds got handle %u
RecvWithFds ioctlsocket: %s
RecvWithFds OOB %d handles
RecvWithFds recv (MSG_OOB): %s
RecvWithFds WSASocket: %s
RegCloseKey
RegisterBusObject %s
RegisterEvent %s for fd %d (ioHandle=%p)
Registering signal handler
RegisterTraceGuidsW
RegisterWaitForSingleObject
RegisterWaitForSingleObject %d
RegisterWaitForSingleObject failed
RegOpenKeyExW
RegQueryValueExA
RegQueryValueExW
REJECTED
Rejecting daemon at %s because its protocol version (%d) is less than ours (%d)
ReleaseName
ReleaseRcvBuffers(handle=%p, conn=%p, seq=%u, fcnt=%u, reason=%s)
ReleaseRcvBuffers: new conn->rcv.CUR=%u
ReleaseRcvBuffers: next buffer %p, ttl = 0x%x, is %s
ReleaseRcvBuffers: released buffer %p (seq=%u)
ReleaseRcvBuffers: released buffer seq=%u does not match rcv %u
ReleaseRcvBuffers: Schedule ACK timer to inform about new values of rcv.CUR %u and rcv.LCS %u
ReleaseSRWLockExclusive
ReleaseSRWLockShared
ReloadConfig
REM_DATA
Remote method call blocked -- 
REMOTE_ERROR
RemoteEndpoint::PushMessage %s (serial=%d)
Remove %s{%d} from table for %s
Remove from peer info map: %s
remove state
RemoveChild %s from object with path = "%s"
Removed ep=%s from name table
RemoveMatch
RemoveMatch failed with %s
RemoveMembership
RemoveRule(epName=%s,rule=%s)
RemoveSessionMember
RemoveUniqueName %s
RemoveVirtualEndpoint: %s
Repeated packet seq = %d, expected %d
Replacing missing or bad sender field %s by %s
Replacing object with path = "%s"
Reply failed
reply from off device endpoint would be blocked.
Reply message replaced with an internally generated error
replycode
Replying with error = %s
Replying with status code = %#x
replyTimer
Reporting security violation %s for %s
reqLinkTO,reqProbeTO,disposition,actLinkTO,actProbeTO
Request allowed by manifest
Request for invalid busname, "
Request specifically denied by manifest
Request was not authorized by any manifest rules
request: outgoing %s, propertyRequest %s, isSetProperty %s, objPath %s, iName %s, mbrName %s
RequestCredentialsCB failed to parse the certificate chain
RequestCredentialsCB failed to parse the private key PEM
RequestCredentialsCB receives empty the certificate chain
RequestName
RequestRange
RequestRange(name=%s,sid=%u,fromId=%d,toId=%d)
RequestRange(sender=%s,sid=%u,fromId=%u,toId=%u)
RequestRangeMatch
RequestRangeMatch(name=%s,sid=%u,fromId=%d,toId=%d,numRules=%d)
RequestRangeMatch(sender=%s,sid=%u,fromId=%u,toId=%u,numMatchRules=%d)
RequestSignals
RequestSignals(name=%s,sid=%u,fromId=%d)
RequestSignals(sender=%s,sid=%u,fromId=%u)
Reset
ResetEvent
ResetEvent failed with %d
ResetPolicy
Resetting alarm for name %s
Resetting alarm for name %s to %d
ResolveDelayLoadedAPI
Responder
Responder auth failed: %s
Responder read %s
Responder sending %s
Responder starting auth conversation %s
Response %d
Response failed
Response: %s
ResumeThread
Resuming thread: %d
ret = %d  addrBuf.ss_family = %d  addrLen = %d
RetransmitTimerHandler seq=%u hit the time limit %u, retries %u
RetransmitTimerHandler(): thinWindow %u, thinNXT %u
RetransmitTimerHandler(): Update thinWindow %u, thinNXT %u
RetransmitTimerHandler: context=sBuf=%p seq=%u retries=%d
RetransmitTimerHandler: handle=%p conn=%p context=%p
RetransmitTimerHandler: segment %u ER_WOULDBLOCK
RetransmitTimerHandler: segment %u expired
RetransmitTimerHandler: Write to Socket went bad. Disconnect.
RevertToSelf
rGwEH
right.authByPolicy %u, peer GUID %s
ROUTER
Router::AddAlias failed
router_advertisement_prefix
router_availability
router_mobility
router_node_connection
router_power_source
RouteSessionlessMessage(sid=%u,msg={sender='%s',interface='%s',member='%s',path='%s'})
RtlCaptureContext
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlVirtualUnwind
rTwRH
rules
Rules:
Run: exiting, status=%s
s @8z
s WATAUAVAWH
s WATAWH
s WAVAWH
S@L9b
S`D8C
s`D8C
S0+S4
S0A;Wp
S0HiC(
S0L9b
sa{sv}as
same_user
SASL %s mechanisms %s
ScatterGatherList::AddBuffer(buffer, length = %u) [maxDataSize = %u]
Schedule persist timer: handle=%p, conn=%p, id=%u (%d)
search.
search.*
Searching for manifests for message objPath %s, interface %s, member %s
Second OID did not match P-256 OID
Securing local peer to itself
security group Id:     0x
SecurityApplication::%s
SecurityApplication::%s Failed to set state arguments %s
SecurityApplicationObj::%s
SecurityApplicationProxy::%s
SecurityApplicationProxy::%s error %s
SEGBMAX too small %u (need at least %u)
SEGMAX %u and SEGBMAX %u cannot fit max Alljoyn message %u
SEGMAX %u exceeds ARDP maximum window size %u
Send cid=%u,serialNum=%u to sid=%u
Send Ping failed
Send(): destination = 0
Send(handle=%p, conn=%p, flags=0x%02x, seq=%u, ack=%u, acknxt=%u)
Send(sockfd = %d, *buf = <>, len = %lu, sent = <>)
Send: %s
send_
SEND_AUTH_REQ
send_destination
send_match_only
SendAcceptSession failed
SendAttachSession failed
sendCode,memberships,sendCode,memberships
SendData(): destination = 0
SendData(): Large buffer %d, partitioning into %d segments
SendData(): number of fragments %u exceeds the send queue depth %u
SendData(): number of fragments %u exceeds the window size %u
SendData(): Sending %u bytes of data from src=0x%x to dst=0x%x
SendData(): thinWindow %u, thinNXT %u UNA %u segmax %u sendReady=%s
SendData(handle=%p, conn=%p, buf=%p, len=%u, ttl=%u)
SendData: Segment %d, snd.NXT=%u, snd.UNA=%u
sender
sender is localEndpoint - updating serial number
Sender was not a joiner
Sender was not the host
sender='
sender-info.
sender-info.*
SendFd WSADuplicateSocket: %s
Sending AttachSession(%u, %s, %s, %s, %s, %s, <%x, %x, %x>) to %s
Sending AttachSessionWithNames(%u, %s, %s, %s, %s, %s, <%x, %x, %x>) to %s
Sending ERROR auto reply: %s
Sending ExchangeName signal to %s
Sending LostAdvertisedName(%s, 0x%x, %s) to %s
Sending manifest
Sending manifest: %s
Sending manifest: matched on my manifest rule with object path %s, interface name %s
Sending MPSessionChanged(%u, %s, %s) to %s
Sending MPSessionChanged(%u, %s, %s, %u) to %s
Sending SessionLost(%u) to %s
Sending sessionLostWithReason(%u, %s) to %s
Sending sessionLostWithReasonAndDisposition(%u, %s, %d) to %s
SendManifests
SendMemberships
SendMsgData(): Dropping expired message (conn=0x%p, buf=0x%p, len=%d, ttl=%u, dack=%u, rttMean=%u)
SendMsgData(): handle=%p, conn=%p, hdr=%p, data=%p, datalen=%d, ttl=%u, tStart=%u
SendMsgData(): have EACKs
SendMsgData(): seq = %u, ack=%u, lcs = %u, acknxt = %u, ttl=%u
SendMsgHeader(): handle=0x%p, conn=0x%p, hdr=0x%p
SendMsgHeader: ER_WOULDBLOCK
SendMsgHeader: have EACKs
SendProtocolMessage: Message (%d bytes) is longer than NS_MESSAGE_MAX (%d bytes)
SendRst(): SendTo(sock=%d., ipAddr="%s", port=%d., buf=%p, len=%d
SendRst(handle=%p, sock=%d., ipAddr="%s", ipPort=%d., local=%d., foreign=%d.)
SendSessionJoined(%u, %u, %s) to %s
SendSGCommon(sockfd = %d, *addr, addrLen, sg, sent = <>, flags = 0x%x)
SendSyn(): timer=%p, retries=%u
SendSyn(handle=%p, conn=%p, buf=%p, len=%d)
SendThroughEndpoint(): Routing "%s" (%d) through "%s"
SendThroughEndpoint(dest=%s, ep=%s, id=%u) failed: %s
SendThroughEndpoint(dest=%s,ep=%s,sid=%u) failed
SendTo(sockfd = %d, remoteAddr = %s, remotePort = %u, *buf = <>, len = %lu, sent = <>, flags = 0x%x)
SendToSG(sockfd = %d, remoteAddr = %s, remotePort = %u, sg, sent = <>, flags = 0x%x)
SendWithFds
SendWithFds OOB %d handles
Sent %s
Sent %u bytes
Sent AnnounceSignal from %s  = %s
Sent implements response for name=%s
Sent org.alljoyn.Bus.Application.State signal from %s  = %s
Serial number was invalid for (via endpoint %s) message:
serial:     0x
serialNum,disposition
serialNumber
Server authentication failed %s
server finish
server finished
Session id mismatch (expected=%u, actual=%u)
session key
Session lost for '%u'
session_setup_timeout
sessioncast
SessionHost (%s) rejected the session joiner
SessionHost endpoint (%s) not found
sessionHost,port,opts,disp,sessionId,opts
sessionId
sessionId,disposition
sessionId,disposition,localipaddr,remoteipaddr
sessionId,handle
sessionId,inLinkTO,disposition,outLinkTO
sessionId,joiner
sessionId,name,disposition
sessionId,name,isAdded
sessionId,name,isAdded,reason
sessionId,reason
sessionId,reason,disposition
SessionJoined
SessionJoined(port=%d,sid=%u,joiner=%s)
SESSIONLESS
sessionless
sessionless 
sessionless msg delivered via sessionlessObj
sessionless='
SessionlessObj::AlarmTriggered(alarm, %s)
SessionlessObj::CancelMessage(%s, 0x%x)
SessionlessObj::DoSessionLost(%u)
SessionlessObj::HandleControlSignal(%d, %d)
SessionlessObj::Init
sessionlessObj::Init failed
sessionlessObj::Join failed
SessionlessObj::NameOwnerChanged(%s, %s, %s)
SessionlessObj::ObjectRegistered
SessionlessObj::RemoveImplicitRules(epName=%s)
SessionlessObj::RemoveImplicitRules(explicitrule=%s for endpoint %s)
SessionlessObj::RemoveImplicitRules(remotecache=%s)
sessionlessObj::Stop failed
SessionLost
SessionLost(sid=%u,reason=%d)
SessionLostWithReason
SessionLostWithReasonAndDisposition
Set %X %X
SetBlocking fd[0] failed
SetBlocking fd[1] failed
SetCommState
SetCommState() returned %u
SetCommTimeouts
SetCommTimeouts() returned %u
SetConversationHashSensitiveMode called while conversation is not in progress
SetDebugLevel
SetEmpty(node=%p)
SetEndOfFile
SetEndOfFile failed. error=%d
SetEvent
SetEvent failed
SetEvent failed with %d
SetEvent returned %d
SetFileAttributes() %s failed with (%d)
SetFileAttributesA
SetFilePointer
SetFilePointer failed. error=%d
SetIdleTimeouts
SetIdleTimeouts(%u,%u) (disposition=%u, actIdleTo=%u, actProbeTo=%u)
SetLastError
SetLinkTimeout
SetNamedPipeHandleState
SetRights challenger
SetRights mutual
SetRights responder
setsockopt(%s) failed: %s
setsockopt(IP_ADD_MEMBERSHIP) failed: %s
setsockopt(IP_MULTICAST_HOPS) failed: %s
setsockopt(IP_MULTICAST_IF) failed: %s
setsockopt(IP_MULTICAST_TTL) failed: %s
SetState: conn=%p %s=>%s
Setting default iface
Setting IP_PKTINFO failed: %s
Setting ipv4 address to %s
Setting ipv6 address to %s
Setting IPV6_PKTINFO failed: %s
Setting IPV6_V6ONLY failed: %s
Setting network interface event failed
Setting read event %p
Setting secret state failed.
Setting SO_BROADCAST failed: %s
Setting SO_EXCLUSIVEADDRUSE failed: %s
Setting SO_LINGER failed: %s
Setting SO_RCVBUF failed: %s
Setting SO_REUSEADDR failed: %s
Setting SO_SNDBUF failed: %s
Setting TCP_NODELAY failed: %s
Setting TLS key: %s
Setting write event %p
SetUnhandledExceptionFilter
SetWaitableTimer
SHA256
SHGetKnownFolderPath
ShiftRcvMsk
Short packet %d
Shutdown socket (sockfd = %d): %s
Shutdown(sockfd = %d, how = %d)
signal
Signal from secure interface was not encrypted
SignalTable::Add(iface = {%s}, member = {%s}, rule = "%s")
signature
Signature algorithm OID: 
Signature for array was not a complete type
Signature for DICT_ENTRY was not a complete type
Signature for STRUCT was not a complete type
Signature: 
signature: 
SimpleHello
Skipping already-sent manifest
Skipping already-sent manifest: %s
Skipping manifest
Skipping manifest: %s
Skipping unmatchable manifest rule
SLAP Received control packet %s.
SLAP Received control packet %s. m_configField = %X %X %X
SLAP Sending control packet %s. m_configField = %X %X %X
slap:
slap_default_idle_timeout
slap_default_probe_timeout
slap_max_idle_timeout
slap_max_probe_timeout
slap_min_idle_timeout
SLAPEp
SLAPReadPacket::DeSlip: Bad escape sequence %2x
SLAPReadPacket::DeSlip: Flushing input at %2x
SLAPReadPacket::DeSlip: Packet overrun %d
Sleep
SleepConditionVariableCS
sls_backoff
sls_backoff_exponential
sls_backoff_linear
sls_backoff_max
SLS_NAMES
sls_preferred_transports
Socket failed
Socket(addrFamily = %d, type = %d, sockfd = <>)
SocketDup WSASocket: %s
SocketDup: %s
SocketPair failed
SocketPair()
SocketPair.Accept failed
SocketPair.Connect failed
Software\Microsoft\AllJoyn
SoftwareVersion
solicited
space
SPL9r
SPL9z
sqa{sv}
srcB2BEp
SRP Logon Verifier
STARTED
Starting thread: %s
StartListen
StartManagement
StartServiceByName
StartStream %p
State
STATE_RELOADED
STOP_WAIT
stopbits
StopListen
STOPPED
STOPPING
StopStream %p
strchr
strcmp
STREAM
Stream::PullBytes failed
Stream::PushBytes failed
STRING
String "%s" is not a legal object path
String "%s" is not a legal signature
String length %ld at pos:%ld is too big
string too long
StringData::Deserialize()
StringData::Deserialize(): %s from buffer
StringData::Deserialize(): Insufficient bufsize %d
StringData::Serialize(): %s to buffer 0x%x
StringFileInfo
strncat
strncmp
strncpy
strnlen
strrchr
su L9
subject alt name:     
subject: 
SubmitThreadpoolWork
succeeded
su'L9
SupportedLanguages
SupportUrl
SUVWATAUAVAWH
SUVWATAVAWH
SUVWATH
SUVWAVH
SVWATAUAVAWH
SVWAVAWH
SVWAVH
SWATH
SYN_RCVD
SYN_SENT
syslog
t ,"P 
t!H9y
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ H9E
T$ L;
t$ L+
t$ UH
t$ UWATAUAVH
t$ UWATAVAWH
t$ UWATH
t$ UWAUAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WATAVH
t$ WAUAVH
t$ WAVAWH
t$ WH
t$(E3
T$(E9|
T$(H9
T$@E3
t$@E3
t$@E8
T$@H;
t$@H;\$ht$H
t$@H;]
T$@H;W
T$@H+
t$@H9
t$\fD
t$^H;8
t$`D9
t$`E3
t$`fD
t$`H;t$ht
T$`H;WHt
T$`H+
t$`H+
T$`H9t$xH
t$`Hc
T$`I+
T$`L;
t$091
t$0D8f
T$0D8J
T$0E3
T$0H;|$@u
T$0H;H
T$0H+
t$0H+
T$0H+
T$0H9
t$0I;
t$0I;VHt
T$0L+
T$0M+
T$8E3
t$8fD
T$8H;
T$8H;T$@t
t$8H+
t$8H9_
T$8I3
T$8L+
t$BE2
t$D@8t$@H
t$DE3
T$DE3
t$dfE
T$DH;
t$H8\$@
t$H9sH
t$HA8V
T$hE3
t$HE3
t$hE3
t$hE8f8t
T$HH;
t$HH;t$H
T$HH;U
T$hH+
T$HH+
T$hH+
T$HH+
T$hH+
T$HH+
T$hH+
t$HH+\$HH
T$HH+T$@H
T$HH9t$`H
t$hI9
T$ht?H
t$hu;H
t$huCH
T$L&|(F&
T$pE3
T$PE3
t$PE3
T$PE3
T$PH;T$Xt
T$pH;T$xt
T$PH;T$Xt
T$pH;T$xt
T$pH+
T$PH+
T$PH+T$@H
t$PH9qpuRH
T$pH9u
t$pHc
t$pI;
T$pI;
t$pI;
T$pI;
T$PI+
t$PL9|$`
T$PL9|$hH
T$PL9d$hH
T$XE3
t$xE3
t$XfD
t$xfD
t$XfD
T$XH;
T$XH+
T$xH+
T$XH+
t$XL;
T$XL+
t$xM;
t(H9~`v"
t)H9}
t*H98t
t,H9i
t.L9y
t/H9i
t/H9q
t/H9y
t/L9y
t:D8g
t\H;y
t_I;_0
t_SVWH
t`D9kHuZfD9
t+E8t$
t<9_L|7H
t0H9y
t0L9y
t1H9i
t1L9a
t1L9i
t2H9}
t5fD9sP
ta9SHu\fD9
tcp:addr=
tcp:addr=127.0.0.1,port=9955
tcp_default_idle_timeout
tcp_default_probe_timeout
tcp_max_idle_timeout
tcp_max_probe_timeout
tcp_min_idle_timeout
TCPEndpoint::Authenticate()
TCPEndpoint::AuthJoin()
TCPEndpoint::AuthStop()
TCPEndpoint::AuthThread::Run()
TCPEndpoint::AuthThread::Run(): Returning
TCPTransport
TCPTransport: Using m_minHbeatIdleTimeout=%u, m_maxHbeatIdleTimeout=%u, m_numHbeatProbes=%u, m_defaultHbeatProbeTimeout=%u m_maxHbeatProbeTimeout=%u
TCPTransport:: Stopping endpoint that timedout waiting for routing to be set up %s.
TCPTransport::~TCPTransport()
TCPTransport::Authenticated()
TCPTransport::Authenticated(): Failed to start TCP endpoint
TCPTransport::CancelAdvertiseOp(): Cancel of non-existent name "%s"
TCPTransport::CancelAdvertiseOp(): Unregistering advertisement of namePrefix "%s"
TCPTransport::Connect(): %s
TCPTransport::Connect(): Attempted connection to self; exiting
TCPTransport::Connect(): Checking for connection to self
TCPTransport::Connect(): Checking for implicit connection to self
TCPTransport::Connect(): Checking interface %s
TCPTransport::Connect(): Checking listenSpec %s
TCPTransport::Connect(): Explicit connection to self
TCPTransport::Connect(): Failed
TCPTransport::Connect(): Failed to send initial NUL byte
TCPTransport::Connect(): Interface UP with address %s
TCPTransport::Connect(): Invalid INADDR_ANY connect spec
TCPTransport::Connect(): Invalid TCP connect spec "%s"
TCPTransport::Connect(): mAuthList.size() == %d
TCPTransport::Connect(): maxAuth == %d
TCPTransport::Connect(): maxConn == %d
TCPTransport::Connect(): mEndpointList.size() == %d
TCPTransport::Connect(): No slot for new connection
TCPTransport::Connect(): Not running or stopping; exiting
TCPTransport::Connect(): Possible implicit connection to self detected
TCPTransport::Connect(): Supported options mismatch
TCPTransport::DisableAdvertisement()
TCPTransport::DisableAdvertisement(): Not running or stopping; exiting
TCPTransport::DisableAdvertisementInstance()
TCPTransport::DisableAdvertisementInstance(): Failed to Cancel "%s"
TCPTransport::DisableDiscovery()
TCPTransport::DisableDiscoveryInstance()
TCPTransport::DisableDiscoveryInstance(): Failed to cancel discovery with "%s"
TCPTransport::DisbleDiscovery(): Not running or stopping; exiting
TCPTransport::DoStartListen()
TCPTransport::DoStartListen(): %s = "%s", port = "%s"
TCPTransport::DoStartListen(): OpenInterface() failed for %s
TCPTransport::DoStartListen(): The mechanism implied by "ns_interfaces" is no longer supported.
TCPTransport::DoStopListen()
TCPTransport::EnableAdvertisement()
TCPTransport::EnableAdvertisement(): Not running or stopping; exiting
TCPTransport::EnableAdvertisementInstance()
TCPTransport::EnableAdvertisementInstance(): Advertise with no TCP listeners
TCPTransport::EnableAdvertisementInstance(): Done
TCPTransport::EnableAdvertisementInstance(): Failed to advertise "%s"
TCPTransport::EnableDiscovery()
TCPTransport::EnableDiscovery(): Not running or stopping; exiting
TCPTransport::EnableDiscoveryInstance()
TCPTransport::EnableDiscoveryInstance(): Discover with no TCP listeners
TCPTransport::EnableDiscoveryInstance(): Failed to begin discovery with multicast NS "%s"
TCPTransport::EndpointExit()
TCPTransport::FoundCallback::Found(): busAddr = "%s"
TCPTransport::FoundCallback::Found(): FoundNames(): %s
TCPTransport::FoundCallback::Found(): newBusAddr = "%s".
TCPTransport::FoundCallback::Found(): No addr in busaddr.
TCPTransport::FoundCallback::Found(): No comma after addr in busaddr.
TCPTransport::FoundCallback::Found(): No port in busaddr.
TCPTransport::GetListenAddresses()
TCPTransport::GetListenAddresses(): %s has correct name
TCPTransport::GetListenAddresses(): %s has correct state
TCPTransport::GetListenAddresses(): %s match found
TCPTransport::GetListenAddresses(): done
TCPTransport::GetListenAddresses(): IfConfig()
TCPTransport::GetListenAddresses(): looking for interface %s
TCPTransport::GetListenAddresses(): matching %s
TCPTransport::GetListenAddresses(): NameService not started
TCPTransport::GetListenAddresses(): ns.IfConfig() failed
TCPTransport::GetListenAddresses(): Supported options mismatch
TCPTransport::HandleNetworkEventInstance()
TCPTransport::HandleNetworkEventInstance(): Failed to AdvertiseNameQuietly "%s"
TCPTransport::HandleNetworkEventInstance(): Failed to bind to %s/%d
TCPTransport::HandleNetworkEventInstance(): found IPv6 address %s on the interface %s, moving to the next entry in the loop
TCPTransport::HandleNetworkEventInstance(): Listen failed
TCPTransport::Join()
TCPTransport::ManageEndpoints(): Scavenging failed authenticator
TCPTransport::ManageEndpoints(): Scavenging slow authenticator
TCPTransport::NetworkEventCallback::Handler()
TCPTransport::NetworkEventCallback::Handler(): Not running or stopping; exiting
TCPTransport::NewAdvertiseOp()
TCPTransport::NewAdvertiseOp(): Registering advertisement of namePrefix "%s"
TCPTransport::NewDiscoveryOp()
TCPTransport::NewDiscoveryOp(): Cancel of non-existent namePrefix "%s"
TCPTransport::NewDiscoveryOp(): Registering discovery of namePrefix "%s"
TCPTransport::NewDiscoveryOp(): Unregistering discovery of namePrefix "%s"
TCPTransport::NewListenOp()
TCPTransport::NewListenOp(): Registering listen of normSpec "%s"
TCPTransport::NewListenOp(): StopListen of non-existent spec "%s"
TCPTransport::NewListenOp(): StopListen of normSpec "%s"
TCPTransport::NormalizeListenSpec(): The addr "%s" is not a legal IPv4 address.
TCPTransport::NormalizeListenSpec(): The key "port" has a bad value "%s".
TCPTransport::NormalizeListenSpec(): The mechanism implied by "r6addr" is not supported.
TCPTransport::NormalizeListenSpec(): The mechanism implied by "r6port" is not supported.
TCPTransport::NormalizeListenSpec(): The mechanism implied by "u4addr" is not supported.
TCPTransport::NormalizeListenSpec(): The mechanism implied by "u4port" is not supported.
TCPTransport::NormalizeListenSpec(): The mechanism implied by "u6addr" is not supported.
TCPTransport::NormalizeListenSpec(): The mechanism implied by "u6port" is not supported.
TCPTransport::NormalizeTransportSpec
TCPTransport::NormalizeTransportSpec(): The addr may not be the default address.
TCPTransport::QueueDisableAdvertisement()
TCPTransport::QueueDisableDiscovery()
TCPTransport::QueueEnableAdvertisement()
TCPTransport::QueueEnableDiscovery()
TCPTransport::QueueHandleNetworkEvent()
TCPTransport::QueueStartListen()
TCPTransport::QueueStopListen()
TCPTransport::QueueUpdateRouterAdvertisementAndDynamicScore()
TCPTransport::Run is exiting status=%s
TCPTransport::Run()
TCPTransport::Run(): Accepting connection newSock=%d
TCPTransport::Run(): Error accepting new connection. Ignoring...
TCPTransport::Run(): mAuthList.size() == %d
TCPTransport::Run(): maxAuth == %d
TCPTransport::Run(): maxConn == %d
TCPTransport::Run(): mEndpointList.size() == %d
TCPTransport::Run(): No slot for new connection
TCPTransport::Run(): Wait for IP name service
TCPTransport::RunListenMachine()
TCPTransport::Start(): Already started
TCPTransport::Start(): The config option "max_untrusted_clients" has been deprecated.
TCPTransport::StartListen()
TCPTransport::StartListen(): %s = "%s", port = "%s"
TCPTransport::StartListen(): Invalid TCP listen spec "%s"
TCPTransport::StartListen(): Not running or stopping; exiting
TCPTransport::StartListenInstance()
TCPTransport::Stop()
TCPTransport::Stop(): Failed to Stop() server thread
TCPTransport::Stop(): Gratuitously clean out advertisements.
TCPTransport::Stop(): Gratuitously clean out discoveries.
TCPTransport::StopListen()
TCPTransport::StopListen(): Invalid TCP listen spec "%s"
TCPTransport::StopListen(): Not running or stopping; exiting
TCPTransport::StopListenInstance()
TCPTransport::StopListenInstance(): No listeners with outstanding advertisements.
TCPTransport::SupportsOptions()
TCPTransport::SupportsOptions(): returns "%s"
TCPTransport::SupportsOptions(): traffic type mismatch
TCPTransport::SupportsOptions(): transport mismatch
TCPTransport::TCPTransport()
TCPTransport::UpdateRouterAdvertisementAndDynamicScore()
TCPTransport::UpdateRouterAdvertisementAndDynamicScore(): Not running or stopping; exiting
tdD9sHu^
tE@8;t@H
teD;q
TerminateProcess
tgHcN
t'H;T$xt
The IO stream entry was not found on IO_EXIT
The language specified is not supported
There must be at least one mandatory interface.
thH9s
THREAD
Thread %s (%p) deleting ProxyBusObject called into by thread %s (%p)
Thread function exited: %s --> %p
Thread::~Thread() [%s,%x] started:%d running:%d stopped:%d
Thread::Alert() [%s run: %s]
Thread::Alert() [%s:%srunning]
Thread::Join() [%s run: %s]
Thread::Join() thread is dead [%s]
Thread::Start() [%s]
Thread::Stop() %x [%s]
Thread::Stop() thread is dead [%s]
Thread::Thread() [%s,%x]
thumbprint
Thumbprint algorithm OID: 
Thumbprint is not for this subject certificate
Thumbprint: 
tID8l$@tBH
Time Passed %ld ttl-80 : %ld ttl-90 : %ld
Time to live expired for (via endpoint %s) message:
Timed out waiting for METHOD_REPLY with serial %d
TIMER
Timer::AddAlarm failed
Timer::AddAlarm failed : %s
TimerThread::Run()
TimerThread::Run(): ******** AlarmTriggered()
TimerThread::Run(): Adding back periodic alarm
TimerThread::Run(): Alarm list is empty
TimerThread::Run(): Alarms pending
TimerThread::Run(): Alert()ing idle timer thread (tt)
TimerThread::Run(): Assuming controller role, idx == %d
TimerThread::Run(): Controller going idle
TimerThread::Run(): Controller looking for worker
TimerThread::Run(): controllerIdx == %d
TimerThread::Run(): Created timer thread %d
TimerThread::Run(): Deleted unused worker thread %d
TimerThread::Run(): Found idle worker at index %d
TimerThread::Run(): Found stopped worker at index %d
TimerThread::Run(): Have timer thread (tt)
TimerThread::Run(): isController == %d
TimerThread::Run(): Looping.
TimerThread::Run(): Next alarm delay == %d
TimerThread::Run(): Next alarm is due now
TimerThread::Run(): non-Controller idling
TimerThread::Run(): non-Controller stopping
TimerThread::Run(): Start()ing stopped timer thread (tt)
TimerThread::Run(): TimerImpl "%s" alarm is late by %ld ms
TimerThread::Run(): Worker with nothing to do
TimerThread::Run(): Worker with nothing to do stopping
TimerThread::Run(): Yielding controller role
tKL9J tEH
tLL9c8uFD
tNI9}
token,headerFields
Too few MsgArgs truncated at: "%s"
Too many array elements - could be an address
TRACE
TraceMessage
TRAFFIC_MESSAGES
TRAFFIC_RAW_RELIABLE
TRAFFIC_RAW_UNRELIABLE
traffic=
trans
trans->Connect(%s) failed
Translation
transport
Transport %s already created
Transport::ParseArguments(): argMap[%s] already exists, changing old value '%s' to new value '%s'
TransportList::Start(specs = %s)
TransportList::Stop()
TransportList::Stop() failed
tRL9J tLH
TryToChangeAuthState: from %u to %u - %s
tsL9khuT
tT9X uOI
tTfD9
ttH9k
TTL has expired - discarding message %s
TTL set to %ld
TTl=0. Removing GUID %s
tW9x uRH
tWH9W
txL;0ssH
txtvers
tyL;0stH
type=
type='
type='error',sessionless='t'
type='signal',interface='org.alljoyn.About',member='Announce',sessionless='t'
type='signal',interface='org.alljoyn.Bus'
type='signal',interface='org.alljoyn.Bus.Application',member='State',sessionless='t'
type='signal',interface='org.alljoyn.Daemon'
type='signal',interface='org.freedesktop.DBus'
type='signal',interface='org.freedesktop.DBus.Properties',member='PropertiesChanged',arg0='
type='signal',member='
tzH;0suH
tZH9y
u 9p s
U H9E8H
u#I;Q
u$@8u
u$D;B r
u%A8p
u&H9B s
u&H9i s
u);k r$H;
u)A8p
-u)D8
u*H9s
u/D8n
u/D8N
u/H9w r
u@L9e
u]D8~
u_L9e
u{f;y ruH;
u+9p s
u+D8~
u<H9U
U0H;U8t
u1I;<$tzH
u2H;u
u2H9s
u4addr
u4port
u6addr
u6port
U8H9uPH
u9H9}
u'A;I |!I
uAA8i
uAD8~
uaH;x r[H;
UART(devName=%s,baud=%d,databits=%d,parity=%s,stopbits=%d)
UARTStream::Close()
UARTStream::PullBytes() read %d of %d bytes.
UARTStream::PushBytes() - wrote %d of %d bytes.
UATAUAVAWH
UATAVH
UAVAWH
ucH;{ u]
ud;x r_H;
u-D8J
UDP Dispatcher
UDP Exit Dispatcher
udp:addr=
udp:guid=
udp_connect_retries
udp_connect_timeout
udp_delayed_ack_timeout
udp_fast_retransmit_ack_counter
udp_initial_data_timeout
udp_keepalive_retries
udp_link_timeout
udp_min_data_retries
udp_persist_interval
udp_segbmax
udp_segmax
udp_timewait
udp_total_app_timeout
udp_total_data_retry_timeout
UDPTransport
UDPTransport::~UDPTransport()
UDPTransport::~UDPTransport(): m_mAuthList.size() == %d
UDPTransport::~UDPTransport(): m_mEndpointList.size() == %d
UDPTransport::AcceptCb(): %u + 1 > %u
UDPTransport::AcceptCb(): Adding endpoint with conn ID == %d. to m_preList
UDPTransport::AcceptCb(): ARDP_Accept()
UDPTransport::AcceptCb(): ARDP_Accept() failed
UDPTransport::AcceptCb(): BusHello Message from sender="%s"
UDPTransport::AcceptCb(): BusHello was sent to self
UDPTransport::AcceptCb(): Can't LoadBytes() BusHello Message
UDPTransport::AcceptCb(): Can't make a BusHello Reply Message
UDPTransport::AcceptCb(): Can't Unmarhsal() BusHello Message
UDPTransport::AcceptCb(): Can't UnmarhsalArgs() BusHello Message
UDPTransport::AcceptCb(): Got BusHello(). remoteGuid="%s", protocolVersion=%d., nameTransfer=%d.
UDPTransport::AcceptCb(): HelloReply(true, "%s")
UDPTransport::AcceptCb(): Inbound connection accepted
UDPTransport::AcceptCb(): No BusHello with SYN
UDPTransport::AcceptCb(): No slot for new connection
UDPTransport::AcceptCb(): Stopping or not running
UDPTransport::AcceptCb(): Unexpected destination="%s" in BusHello Message
UDPTransport::AcceptCb(): Unexpected interface="%s" in BusHello Message
UDPTransport::AcceptCb(): Unexpected member name="%s" in BusHello Message
UDPTransport::AcceptCb(): Unexpected number or type of arguments in BusHello Message
UDPTransport::AcceptCb(): Unexpected object path="%s" in BusHello Message
UDPTransport::AcceptCb(): Unexpected zero serial in BusHello Message
UDPTransport::AcceptCb(handle=%p, ipAddr="%s", ipPort=%d., conn=%p)
UDPTransport::ArdpAcceptCb(handle=%p, ipAddr="%s", port=%d., conn=%p, buf =%p, len = %d)
UDPTransport::ArdpConnectCb(handle=%p, conn=%p, passive=%s, buf = %p, len = %d, status=%s)
UDPTransport::ArdpDisconnectCb(handle=%p, conn=%p, status="%s")
UDPTransport::ArdpRecvCb(handle=%p, conn=%p, buf=%p, status=%s)
UDPTransport::ArdpSendCb(handle=%p, conn=%p, buf=%p, len=%d.)
UDPTransport::ArdpSendToHook(handle=%p, conn=%p, source=%d., buf=%p, len=%d.)
UDPTransport::ArdpSendToSGHook(handle=%p, conn=%p, source=%d., buf=%p, len=%d.)
UDPTransport::ArdpSendToSGHook(handle=%p, conn=%p, source=%d., msgSG=%p)
UDPTransport::ArdpSendWindowCb(handle=%p, conn=%p, window=%d.)
UDPTransport::CancelAdvertiseOp()
UDPTransport::CancelAdvertiseOp(): Cancel of non-existent name "%s"
UDPTransport::CancelAdvertiseOp(): Unregistering advertisement of namePrefix "%s"
UDPTransport::CleanupRequestedInterfaces(),  Adding all specs of interface '%s' to replacedList
UDPTransport::CleanupRequestedInterfaces(), Adding m_requestedInterfaces[%s] address entry '%s' to replacedList
UDPTransport::CleanupRequestedInterfaces(), m_requestedInterfaces[%s] does not exist, advancing the loop
UDPTransport::CleanupRequestedInterfaces(), Removing m_requestedInterfaces[%s].m_addresses entry: %s
UDPTransport::Connect(): Add thread=%p to m_connectThreads
UDPTransport::Connect(): ARDP_Connect()
UDPTransport::Connect(): ARDP_Connect() failed
UDPTransport::Connect(): Attempted connection to self through loopback; exiting
UDPTransport::Connect(): Attempted connection to self; exiting
UDPTransport::Connect(): Can't make a BusHello Message
UDPTransport::Connect(): Check out local address "%s"
UDPTransport::Connect(): Checking for connection to self ("%s")
UDPTransport::Connect(): Checking for implicit connection to self through INADDR_ANY
UDPTransport::Connect(): Checking for implicit connection to self through loopback
UDPTransport::Connect(): Checking interface %s
UDPTransport::Connect(): Checking listenSpec %s
UDPTransport::Connect(): Compose BusHello
UDPTransport::Connect(): EnableDiscoveryListen()
UDPTransport::Connect(): Event::Wait() failed
UDPTransport::Connect(): Explicit connection to self
UDPTransport::Connect(): Finding endpoint with conn ID = %d. in m_endpointList
UDPTransport::Connect(): Found socket (%d.) listening on IN6ADDR_ANY
UDPTransport::Connect(): Found socket (%d.) listening on INADDR_ANY
UDPTransport::Connect(): Interface UP with address %s
UDPTransport::Connect(): Invalid INADDR_ANY connect spec
UDPTransport::Connect(): Invalid UDP connect spec "%s"
UDPTransport::Connect(): Look for socket corresponding to destination network, m_listenFds.size() == %d
UDPTransport::Connect(): m_reload=%s, timer=%d.
UDPTransport::Connect(): net mask is 0x%x
UDPTransport::Connect(): network "%s" does not match network "%s"
UDPTransport::Connect(): network "%s" matches network "%s"
UDPTransport::Connect(): network of "%s" does not match network of "%s"
UDPTransport::Connect(): network of "%s" matches network of "%s"
UDPTransport::Connect(): No slot for new connection
UDPTransport::Connect(): Not listening on network implied by "%s"
UDPTransport::Connect(): Not running or stopping; exiting
UDPTransport::Connect(): Possible implicit connection to self detected
UDPTransport::Connect(): prefixlen=%d.
UDPTransport::Connect(): qcc::Event::Wait(): timeout=%d.
UDPTransport::Connect(): Removing thread=%p from m_connectThreads
UDPTransport::Connect(): Skipping accepting FD %d
UDPTransport::Connect(): Success.
UDPTransport::Connect(): Supported options mismatch
UDPTransport::Connect(): UDP Transport does not support raw traffic
UDPTransport::Connect(): Unable to read network interface configuration
UDPTransport::Connect(): Waiting for STATE_RELOADED
UDPTransport::Connect(connectSpec=%s, opts=%p, newEp-%p)
UDPTransport::ConnectCb(): m_dispatcher is NULL
UDPTransport::ConnectCb(): sending CONNECT_CB request to dispatcher)
UDPTransport::ConnectCb(handle=%p, conn=%p, passive=%d., buf=%p, len=%d., status="%s")
UDPTransport::DisableAdvertisement()
UDPTransport::DisableAdvertisement(): Not running or stopping; exiting
UDPTransport::DisableAdvertisementInstance()
UDPTransport::DisableAdvertisementInstance(): Disabling NS
UDPTransport::DisableAdvertisementInstance(): DoStopListen("%s")
UDPTransport::DisableAdvertisementInstance(): Failed to Cancel "%s"
UDPTransport::DisableAdvertisementInstance(): isEmpty="%s", m_isDiscovering="%s"
UDPTransport::DisableDiscovery()
UDPTransport::DisableDiscoveryInstance()
UDPTransport::DisableDiscoveryInstance(): Disabling NS
UDPTransport::DisableDiscoveryInstance(): DoStopListen("%s")
UDPTransport::DisableDiscoveryInstance(): Failed to cancel discovery with "%s"
UDPTransport::DisableDiscoveryInstance(): isEmpty="%s", m_isAdvertising="%s"
UDPTransport::DisbleDiscovery(): Not running or stopping; exiting
UDPTransport::DisconnectCb(): m_dispatcher is NULL
UDPTransport::DisconnectCb(): sending DISCONNECT_CB request to dispatcher)
UDPTransport::DisconnectCb(handle=%p, conn=%p, status="%s")
UDPTransport::DispatcherThread::RecvCb(): Orphaned Recv_Cb for conn == %p ignored
UDPTransport::DispatcherThread::Run()
UDPTransport::DispatcherThread::Run(): command=%d., handle=%p, conn=%p., connId=%d.,rcv=%p, passive=%d., buf=%p, len=%d., status="%s"
UDPTransport::DispatcherThread::Run(): CONNECT_CB: DoConnectCb()
UDPTransport::DispatcherThread::Run(): DISCONNECT_CB: DisconnectCb(): connId=%d.
UDPTransport::DispatcherThread::Run(): Event::Wait failed
UDPTransport::DispatcherThread::Run(): EXIT: Exit()
UDPTransport::DispatcherThread::Run(): Exiting
UDPTransport::DispatcherThread::Run(): m_workerCommandQueue.size()=%d.
UDPTransport::DispatcherThread::Run(): Orphaned RECV_CB for conn ID == %d. ignored
UDPTransport::DispatcherThread::Run(): RECV_CB: Call RecvCb() on endpoint message pump
UDPTransport::DispatcherThread::Run(): Reset stopEvent
UDPTransport::DispatcherThread::Run(): SEND_CB: SendCb()
UDPTransport::DispatcherThread::Run(): Wait for some action
UDPTransport::DoConnectCb(): active connection callback with conn ID == %d.
UDPTransport::DoConnectCb(): Adding endpoint with conn ID == %d. to m_endpointList
UDPTransport::DoConnectCb(): adding endpoint with connId == %d. to m_endpointList
UDPTransport::DoConnectCb(): Adding endpoint with connId == %d. to m_endpointList
UDPTransport::DoConnectCb(): BusHello reply from sender="%s"
UDPTransport::DoConnectCb(): Can't Unmarhsal() BusHello Message
UDPTransport::DoConnectCb(): Can't Unmarhsal() BusHello Reply Message
UDPTransport::DoConnectCb(): Can't UnmarhsalArgs() BusHello Reply Message
UDPTransport::DoConnectCb(): Connect error
UDPTransport::DoConnectCb(): Disconnect() stream for endpoint with conn ID == %d.
UDPTransport::DoConnectCb(): Finding endpoint with conn ID == %d. in m_authList
UDPTransport::DoConnectCb(): Got BusHello() reply. uniqueName="%s", remoteGuid="%s", protocolVersion=%d., nameTransfer=%d.
UDPTransport::DoConnectCb(): Moving endpoint with conn ID == %d to m_endpointList
UDPTransport::DoConnectCb(): Moving endpoint with connId == %d. from m_preList to m_authList
UDPTransport::DoConnectCb(): No BusHello reply with SYN + ACK
UDPTransport::DoConnectCb(): No thread waiting for Connect() to complete
UDPTransport::DoConnectCb(): No thread waiting for endpoint
UDPTransport::DoConnectCb(): passive connection callback with conn ID == %d.
UDPTransport::DoConnectCb(): Provided connection no longer valid
UDPTransport::DoConnectCb(): Response was not a reply Message
UDPTransport::DoConnectCb(): Start()ing endpoint with conn ID == %d.
UDPTransport::DoConnectCb(): Unexpected number or type of arguments in BusHello Reply Message
UDPTransport::DoConnectCb(): Waking thread waiting for endpoint
UDPTransport::DoConnectCb(handle=%p, conn=%p)
UDPTransport::DoStartListen("%s")
UDPTransport::DoStartListen(): %s = "%s", port = "%s"
UDPTransport::DoStartListen(): OpenInterface() failed for %s
UDPTransport::DoStartListen(): The mechanism implied by "ns_interfaces" is no longer supported.
UDPTransport::DoStopListen()
UDPTransport::DoStopListen(): Looking for listen FD with normspec "%s"
UDPTransport::DoStopListen(): Setting m_remove for normspec "%s"
UDPTransport::EmitStallWarnings()
UDPTransport::EmitStallWarnings(): Endpoint with conn ID == %d stalled
UDPTransport::EmitStallWarnings(): stalled not disconneccted.
UDPTransport::EmitStallWarnings(): stalled not disconnected
UDPTransport::EmitStallWarnings(): stalled not disconnected. No stream
UDPTransport::EmitStallWarnings(): stalled not threadSetEmpty
UDPTransport::EmitStallWarnings(): stalled with threadSetEmpty and disconnected
UDPTransport::EnableAdvertisement()
UDPTransport::EnableAdvertisement(): Not running or stopping; exiting
UDPTransport::EnableAdvertisementInstance()
UDPTransport::EnableAdvertisementInstance(): Advertise with no UDP listeners
UDPTransport::EnableAdvertisementInstance(): Done
UDPTransport::EnableAdvertisementInstance(): Failed to advertise "%s"
UDPTransport::EnableDiscovery()
UDPTransport::EnableDiscovery(): Not running or stopping; exiting
UDPTransport::EnableDiscoveryInstance()
UDPTransport::EnableDiscoveryInstance(): Discover with NS not enabled
UDPTransport::EnableDiscoveryInstance(): Dup
UDPTransport::EnableDiscoveryInstance(): Explicit FindAdvertisement
UDPTransport::EnableDiscoveryInstance(): Failed to begin discovery with multicast NS "%s"
UDPTransport::EnableDiscoveryInstance(): m_isDiscovering = true
UDPTransport::EnableDiscoveryInstance(): Pending discover
UDPTransport::EnableDiscoveryListen()
UDPTransport::EnableDiscoveryListen(): DoStartListen("%s")
UDPTransport::EndpointDeletedHook()
UDPTransport::EndpointDeletedHook(): idle="%s"
UDPTransport::EndpointExit()
UDPTransport::ExitDispatcherThread::Run()
UDPTransport::ExitDispatcherThread::Run(): Call ep->Exit().  connId == %d.
UDPTransport::ExitDispatcherThread::Run(): command=%d., handle=%p, conn=%p., connId=%d.,rcv=%p, passive=%d., buf=%p, len=%d., status="%s"
UDPTransport::ExitDispatcherThread::Run(): ENDPOINT_DELETED: EndpointDeletedHook()
UDPTransport::ExitDispatcherThread::Run(): Event::Wait failed
UDPTransport::ExitDispatcherThread::Run(): Exiting
UDPTransport::ExitDispatcherThread::Run(): m_exitWorkerCommandQueue.size()=%d.
UDPTransport::ExitDispatcherThread::Run(): Reset stopEvent
UDPTransport::ExitDispatcherThread::Run(): Wait for some action
UDPTransport::ExitEndpoint(): m_exitDispatcher is NULL
UDPTransport::ExitEndpoint(): sending ENDPOINT_DELETED request to exit dispatcher
UDPTransport::ExitEndpoint(): sending EXIT request to exit dispatcher for connId == %d
UDPTransport::ExitEndpoint(connId=%d.)
UDPTransport::FoundCallback::Found(): No addr in busaddr.
UDPTransport::FoundCallback::Found(): No comma after addr in busaddr.
UDPTransport::FoundCallback::Found(): No port in busaddr.
UDPTransport::GetListenAddresses()
UDPTransport::GetListenAddresses(): %s has correct name
UDPTransport::GetListenAddresses(): %s has correct state
UDPTransport::GetListenAddresses(): %s match found
UDPTransport::GetListenAddresses(): done
UDPTransport::GetListenAddresses(): IfConfig()
UDPTransport::GetListenAddresses(): IfConfig() failed
UDPTransport::GetListenAddresses(): looking for interface %s
UDPTransport::GetListenAddresses(): matching %s
UDPTransport::GetListenAddresses(): NameService not started
UDPTransport::GetListenAddresses(): push busAddr="%s"
UDPTransport::GetListenAddresses(): Supported options mismatch
UDPTransport::HandleNetworkEventInstance(), wildcardIfaceRequested = %d, wildcardAddressRequested = %d, ifMap.size() = %d
UDPTransport::HandleNetworkEventInstance(): addedList.push_back(normSpec="%s", listenFd=%d, accepting=false)
UDPTransport::HandleNetworkEventInstance(): addedList.push_back(normSpec="%s", listenFd=%d, accepting=true)
UDPTransport::HandleNetworkEventInstance(): Adding normalized listen spec "%s", sockFd %d, accepting: %s to m_listenFds
UDPTransport::HandleNetworkEventInstance(): Advertise m_routerName="%s"
UDPTransport::HandleNetworkEventInstance(): Alert() (m_listenFds.size() == %d)
UDPTransport::HandleNetworkEventInstance(): calling CleanupRequestedInterfaces()
UDPTransport::HandleNetworkEventInstance(): Check for no interfaces or addresses
UDPTransport::HandleNetworkEventInstance(): Disable NS
UDPTransport::HandleNetworkEventInstance(): DoStopListen() on "%s" from replacedList
UDPTransport::HandleNetworkEventInstance(): Failed to AdvertiseNameQuietly "%s"
UDPTransport::HandleNetworkEventInstance(): found address %s on matching interface %s but without valid listedFd => proceed
UDPTransport::HandleNetworkEventInstance(): found address %s on matching interface %s which has a valid listedFd %d => moving to the next entry in the loop
UDPTransport::HandleNetworkEventInstance(): getaddrinfo() failed for node '%s', reason: %s
UDPTransport::HandleNetworkEventInstance(): GetLocalAddress() for accepting FD failed
UDPTransport::HandleNetworkEventInstance(): GetLocalAddress() for active FD failed
UDPTransport::HandleNetworkEventInstance(): interface="%s", address="%s"
UDPTransport::HandleNetworkEventInstance(): IpNameService::Instance().Enable()
UDPTransport::HandleNetworkEventInstance(): listenAddr="%s", requestedAcceptingPort=%d, requestedActivePort=%d.
UDPTransport::HandleNetworkEventInstance(): Listening on INADDR_ANY
UDPTransport::HandleNetworkEventInstance(): New accepting normSpec: "%s"
UDPTransport::HandleNetworkEventInstance(): New active normSpec: "%s"
UDPTransport::HandleNetworkEventInstance(): Not advertising or discovering
UDPTransport::HandleNetworkEventInstance(): not wildcard addr, current addr and iface matches
UDPTransport::HandleNetworkEventInstance(): not wildcard and not current
UDPTransport::HandleNetworkEventInstance(): not wildcard iface, current iface and addr matches
UDPTransport::HandleNetworkEventInstance(): send "%s" to replacedList
UDPTransport::HandleNetworkEventInstance(): set m_listenPortMap["%s"] to listenFd %d.
UDPTransport::HandleNetworkEventInstance(): set m_listenPortMap["*"] to listenFd %d.
UDPTransport::HandleNetworkEventInstance(): SetupSocket() for accepting FD failed
UDPTransport::HandleNetworkEventInstance(): SetupSocket() for active FD failed
UDPTransport::HandleNetworkEventInstance(): Walk map
UDPTransport::HandleNetworkEventInstance(): walk pending advertisements list
UDPTransport::HandleNetworkEventInstance(): walk pending discoveries list
UDPTransport::HandleNetworkEventInstance(): walk replacedList
UDPTransport::Join()
UDPTransport::Join(): Erasing endpoint with conn ID == %d. from m_authList
UDPTransport::Join(): Failed to Join() server thread
UDPTransport::Join(): Failed to Stop() server thread
UDPTransport::Join(): Join and delete exit dispatcher thread
UDPTransport::Join(): Join and delete message dispatcher thread
UDPTransport::Join(): Join main thread
UDPTransport::Join(): Join() message pumps
UDPTransport::Join(): Return unused message buffers to ARDP
UDPTransport::Join(): Stop exit dispatcher thread
UDPTransport::Join(): Stop main thread
UDPTransport::Join(): Stop message dispatcher thread
UDPTransport::Join(): Waiting for %d. threads to exit
UDPTransport::ManageEndpoints()
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d stalled ("%s")
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d. entering EP_WAITING
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d. exiting EP_WAITING
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d. is EP_DONE
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d. is exited
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d. is histoire
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d. NOT exited
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d. stream->Disconnect()
UDPTransport::ManageEndpoints(): Endpoint with conn ID == %d. WakeThreadSet()
UDPTransport::ManageEndpoints(): Join() endpoint with conn ID == %d.
UDPTransport::ManageEndpoints(): Join()ing stopping endpoint with conn ID == %d.
UDPTransport::ManageEndpoints(): m_stopping: Stopping endpoints on m_endpointList
UDPTransport::ManageEndpoints(): MessagePump::JoinPast()
UDPTransport::ManageEndpoints(): Moving endpoint from m_preList to m_authList
UDPTransport::ManageEndpoints(): Moving endpoint with connId == %d. from m_authList to m_endpointList
UDPTransport::ManageEndpoints(): Moving endpoint with connId == %d. from m_preList to m_authList
UDPTransport::ManageEndpoints(): Moving slow authenticator with conn ID == %d. to m_endpointList
UDPTransport::ManageEndpoints(): Removing reference for failed or done endpoint with conn ID == %d.
UDPTransport::ManageEndpoints(): Scavenging slow authenticator
UDPTransport::ManageEndpoints(): Schedule Exit() on endpoint with conn ID == %d.
UDPTransport::ManageEndpoints(): There are %d. endpoints on m_authList
UDPTransport::ManageEndpoints(): There are %d. endpoints on m_endpointList
UDPTransport::ManageEndpoints(): There are %d. endpoints on m_preList
UDPTransport::ManageEndpoints(): Waking thread on slow authenticator with conn ID == %d.
UDPTransport::NetworkEventCallback::Handler()
UDPTransport::NetworkEventCallback::Handler(): Not running or stopping; exiting
UDPTransport::NewAdvertiseOp()
UDPTransport::NewAdvertiseOp(): Registering advertisement of namePrefix "%s"
UDPTransport::NewDiscoveryOp()
UDPTransport::NewDiscoveryOp(): Cancel of non-existent namePrefix "%s"
UDPTransport::NewDiscoveryOp(): Registering discovery of namePrefix "%s"
UDPTransport::NewDiscoveryOp(): Unregistering discovery of namePrefix "%s"
UDPTransport::NewListenOp()
UDPTransport::NewListenOp(): Registering listen of normSpec "%s"
UDPTransport::NewListenOp(): StopListen of non-existent spec "%s"
UDPTransport::NewListenOp(): StopListen of normSpec "%s"
UDPTransport::NormalizeListenSpec(): The addr "%s" is not a legal IP address.
UDPTransport::NormalizeListenSpec(): The key "port" has a bad value "%s"
UDPTransport::NormalizeListenSpec(): The mechanism implied by "r4addr" is not supported
UDPTransport::NormalizeListenSpec(): The mechanism implied by "r4port" is not supported
UDPTransport::NormalizeListenSpec(): The mechanism implied by "r6addr" is not supported
UDPTransport::NormalizeListenSpec(): The mechanism implied by "r6port" is not supported
UDPTransport::NormalizeTransportSpec()
UDPTransport::NormalizeTransportSpec(): The addr may not be the default address
UDPTransport::QueueDisableAdvertisement()
UDPTransport::QueueDisableDiscovery()
UDPTransport::QueueEnableAdvertisement()
UDPTransport::QueueEnableDiscovery()
UDPTransport::QueueHandleNetworkEvent()
UDPTransport::QueueStartListen("%s")
UDPTransport::QueueStopListen()
UDPTransport::QueueUpdateRouterAdvertisementAndDynamicScore()
UDPTransport::RecvCb(): m_dispatcher is NULL
UDPTransport::RecvCb(): sending RECV_CB request to dispatcher)
UDPTransport::RecvCb(handle=%p, conn=%p, rcv=%p, status=%s)
UDPTransport::Run is exiting status=%s
UDPTransport::Run()
UDPTransport::Run(): ARDP_Run(): ER_ARDP_WRITE_BLOCKED for SocketFd=%d.
UDPTransport::Run(): ARDP_Run(): readReady="%s", writeReady="%s"
UDPTransport::Run(): ARDP_Run(): SocketFd=%d. not blocked for write
UDPTransport::Run(): Closing socket %d., Removing listen spec "%s"
UDPTransport::Run(): Defer ManageEndpoints() for %d. ms
UDPTransport::Run(): Defer ManageEndpoints() tMin=%d. ms
UDPTransport::Run(): Defer ManageEndpoints() tRemaining=%d. ms
UDPTransport::Run(): Event::Wait failed
UDPTransport::Run(): IsStopping() && passive: exiting
UDPTransport::Run(): Looking for socket %d. to become writable
UDPTransport::Run(): ManageEndpoints()
UDPTransport::Run(): ManageEndpoints() due
UDPTransport::Run(): ManageEndpoints() suggested
UDPTransport::Run(): Not STATE_RELOADED.  Deleting events
UDPTransport::Run(): Not STATE_RELOADED. Creating events
UDPTransport::Run(): NOT STATE_RELOADED. Creating events for socket %d
UDPTransport::Run(): Not STATE_RELOADED. Walking listen FDs
UDPTransport::Run(): Wait for IP name service
UDPTransport::RunListenMachine()
UDPTransport::ScheduleEndpointDeletedHook(): m_exitDispatcher is NULL
UDPTransport::SendCb(): m_dispatcher is NULL
UDPTransport::SendCb(): sending SEND_CB request for connId == %d. to dispatcher)
UDPTransport::SendCb(handle=%p, conn=%p, buf=%p, len=%d.)
UDPTransport::SendWindowCb(): callback from conn ID == %d
UDPTransport::SendWindowCb(handle=%p, conn=%p, window=%d.)
UDPTransport::SetupSocket(): addr=%s, port=%d
UDPTransport::SetupSocket(): Bind() failed
UDPTransport::SetupSocket(): Bind(socketFd=%d., addr="%s", port=%u, scopeId=%u.)
UDPTransport::SetupSocket(): enable recv IPv6 only failed for sockFd %d
UDPTransport::SetupSocket(): SetBlocking() failed
UDPTransport::SetupSocket(): SetBlocking(socketFd=%d, false)
UDPTransport::SetupSocket(): SetRcvBuf() failed
UDPTransport::SetupSocket(): SetReusePort() failed
UDPTransport::SetupSocket(): SetSndbuf() failed
UDPTransport::SetupSocket(): SetSndBuf(socketFd=%d, %u.)
UDPTransport::SetupSocket(): Socket() failed
UDPTransport::SetupSocket(): Socket(): socketFd=%d
UDPTransport::SheduleEndpointDeletedHook()
UDPTransport::Start()
UDPTransport::Start(): Acquire instance of NS
UDPTransport::Start(): Already started
UDPTransport::Start(): Failed to Start() exit dispatcher thread
UDPTransport::Start(): Failed to Start() message dispatcher thread
UDPTransport::Start(): Set NS callback
UDPTransport::Start(): Spin up exit dispatcher thread
UDPTransport::Start(): Spin up main thread
UDPTransport::Start(): Spin up message dispatcher thread
UDPTransport::StartListen("%s")
UDPTransport::StartListen(): %s = "%s", port = "%s"
UDPTransport::StartListen(): Final normSpec="%s"
UDPTransport::StartListen(): Invalid UDP listen spec "%s"
UDPTransport::StartListen(): Not running or stopping; exiting
UDPTransport::StartListen(): QueueStartListen("%s")
UDPTransport::StartListenInstance()
UDPTransport::StartListenInstance(): The config option "max_untrusted_clients" has been deprecated.
UDPTransport::Stop()
UDPTransport::Stop(): Alert connectThreads
UDPTransport::Stop(): Clear NS callback
UDPTransport::Stop(): Gratuitously clean out advertisements.
UDPTransport::Stop(): Gratuitously clean out discoveries.
UDPTransport::Stop(): Stop endpoints
UDPTransport::Stop(): Stop() message pumps
UDPTransport::StopListen()
UDPTransport::StopListen(): Invalid UDP listen spec "%s"
UDPTransport::StopListen(): Not running or stopping; exiting
UDPTransport::StopListenInstance()
UDPTransport::StopListenInstance(): No listeners with outstanding advertisements
UDPTransport::SupportsOptions()
UDPTransport::SupportsOptions(): returns "%s"
UDPTransport::SupportsOptions(): traffic type mismatch
UDPTransport::SupportsOptions(): transport mismatch
UDPTransport::UDPTransport()
UDPTransport::UDPTransport(): udp_segmax (%d) * udp_segbmax (%d) < ALLJOYN_MAX_PACKET_LEN (%d) ignored
UDPTransport::UpdateRouterAdvertisementAndDynamicScore()
UDPTransport::UpdateRouterAdvertisementAndDynamicScore(): Not running or stopping; exiting
uED8}
uFD8}
ufD8f
uFD8m
uFD8n
ug8D$@t
ugD8f
ugfD;v r`H;
uhf!E
UHH9}`H
uiD8~
uID8K
uIL9f
uLL9w
umD8}
Unable to add existing member %s to session %u
Unable to authenticate method call
Unable to decrypt (broadcast %d) message from sender %s
Unable to find sessionPortListener for port=%d
Unable to start service: 
Unauthenticated
UnbindSessionPort
Unclaimable
unD8m
UNDEFINED
Unexpected
Unexpected Command
Unexpected error, stream is not found. The dispatchEntries map should always have a stream.
Unexpected: lost a session we didn't ask for to begin with
Unexpected: session establishment failed, but the peer is not part of the pending set
Unexpected: session is established, but the peer is not part of the pending set
UnhandledExceptionFilter
unicast
uniqueName,aliases
UniversalWindowsApplication
unknown
Unknown
Unknown annotation %s is defaulting to 'inherit'. Valid values: 'true', 'inherit', or 'off'.
Unknown authentication mechanism %s
Unknown curve type %d generating ECC keys
Unknown element "%s" found in introspection data from %s
Unknown exception
Unknown link packet type %d
Unknown policy attribute: "%s"
UnlockFileEx
UnlockFileEx failed, error=%#x
Unmarshal bad header length %d != %d
UnmarshalArgs converting to native endianess
UnmarshalArgs expected argLen %d got %d
UnmarshalArgs failed
Unmarshaled
unordered_map/set too long
Unrecognized curve type %d
Unrecognized signal "%s.%s" received
UnregisterBusObject %s
Unregistering an observer that was not registered
UnregisterTraceGuids
UnregisterWait
UnregisterWait %d
Unreliable packet already queued
Unreliable packet already queued %d
UnsignedManifest
unsolicited
Unspecified error
Unsupported manifest signature algorithm: %s
Unsupported thumbprint algorithm '%s'
Untrusted client is being rejected
uOD8K
upcv4
upcv6
UpdateActivationEnvironment
Updated clock offset old %d, new %d
UpdateHash called when a conversation is not in progress
UpdateIdentity
UpdateIdleInformation(%u)
UpdatePolicy
UpdateSndSegments(): fragment=%u, som=%u, fcnt=%d
UpdateSndSegments(): handle=%p, conn=%p, ack=%u, lcs=%u
UpdateSndSegments(): last fragment=%u, som=%u, fcnt=%d
UpdateSndSegments(): snd.UNA %u
UpdateSndSegments(): thinNXT %u
UpdateSndSegments(): update snd.UNA %u
UpdateSndSegments(): update thinNXT %u
UpdateTimer: conn=%p timer=%p timeout=%u retry=%u
Updating hash digest
upH;p rjH;
upH;Q rjI;
UPH9]hH
UPI;UP
UPL9uhH
upper
uQD8f
uQH;Q rKI;
User id required
USERPROFILE
UseUnsecurePipe
Using precomputed SRP logon entry string for %s
USVWATAUAVAWH
USVWATAVAWH
USWATAUAVAWH
uua{sv}
uua{sv}as
uua{sv}asa(sas)
uUD8f
uUD8K
UUUUH
UUUUUUU
UVWATAUAVAWH
UVWATAVH
UVWATAWH
UVWAUAVH
UVWAUAWH
UVWAVAWH
UWATAUAVH
UWATAVAWH
UWATH
UWAUAVAWH
UWAUH
UWAVH
UWAWH
UXI;U`tPH
uXL9e
V (".$l(
V H9\
V I;V(t
V&X(Z6\(^0`.b.d&f.h
V*",".*,Z
V,X(Z.\.^
V@H;1H
V`H+Vh
V`H9_
V0I;V8t
v16.10.00
validity: not-before 
value
VarFileInfo
vb'vb'v
vector too long
vector<bool> too long
Verifier mismatched
Verifier signature algorithm must be SHA256
Verifier(%s):  %s
Verifier:  %s
Verifier: %s
VerifyCredentialsCB failed because of no certificate
Version
version
version,port,objectDescription,servMetadata
Version: 
Virtual endpoint %s disappeared during RemoveSessionRefs
vllbx(z2|.~l|
vN?KS
VpA;T$p
vrH9_ tlH
VS_VERSION_INFO
vSH;M
vtH9~
VWATAUAVAWI
VWATAUAVAWL
VWATAUAVH
VWATAVAWH
VWAUAVAWH
VWAVH
VWAWH
VXD9b
W H+W
W@8t$Ut)L
W@H;y
W`I+WhH
w7L9~Hu1H
Wait failed, handles:
Wait failed, numHandles=%u, maxWaitMs=%u
Wait: incorrect checkEvents vector.
WAIT_EXT_RESPONSE
WAIT_FOR_AUTH
WAIT_FOR_BEGIN
WAIT_FOR_DATA
WAIT_FOR_OK
WAIT_FOR_REJECT
WaitForMultipleObjectsEx
WaitForMultipleObjectsEx returned 0x%x.
WaitForMultipleObjectsEx timeout %u
WaitForMultipleObjectsEx(2) returned 0x%x, error=%d.
WaitForMultipleObjectsEx(2) returned WAIT_ABANDONED.
WaitForSingleObject
WaitForSingleObject() returned %u
WaitForSingleObjectEx
WaitForThreadpoolWorkCallbacks
WaitNamedPipeW
WakeAllConditionVariable
WakeConditionVariable
Warning processing "%s": Duplicate listen spec found (ignoring): %s
WATAUAVAWH
WATAVH
WATAWH
WAUAWH
WAVAWH
wcscmp
Wh9W`
WhoHas::Deserialize()
WhoHas::Deserialize(): Count %d
WhoHas::Deserialize(): F flag %d
WhoHas::Deserialize(): Incorrect type %d
WhoHas::Deserialize(): Insufficient bufsize %d
WhoHas::Deserialize(): S flag %d
WhoHas::Deserialize(): StringData::Deserialize() name %d
WhoHas::Deserialize(): StringData::Deserialize():  Error
WhoHas::Deserialize(): T flag %d
WhoHas::Deserialize(): U flag %d
WhoHas::Serialize(): Count %d
WhoHas::Serialize(): F flag
Whohas::Serialize(): name %s
WhoHas::Serialize(): S flag
WhoHas::Serialize(): T flag
WhoHas::Serialize(): to buffer 0x%x
WhoHas::Serialize(): U flag
WideCharToMultiByte
Wildcard element signature cannot be used with an empty array
Wildcard not allowed as an array element type
wired
Wireless
wireless
WITH_MEMBERSHIP
WITH_PUBLIC_KEY
Worker: auth failed
Worker: auth suceeded
Worker: calling Establish
Worker: CloseHandle failed, error %u
Worker: Connecting app with SID %s has a loopback exemption, will be treated as a Desktop application
Worker: Connecting application is a %s
Worker: ConvertSidToStringSid - User SID failed, error %u
Worker: ConvertSidToStringSid failed, error %u
Worker: ConvertUTF failed
Worker: failed to establish connection
Worker: failed to read NUL byte
Worker: GetTokenInformation - TokenAppContainerSid failed, error %u
Worker: GetTokenInformation - TokenImpersonationLevel failed, error %u
Worker: GetTokenInformation - TokenIsAppContainer failed, error %u
Worker: GetTokenInformation - TokenUser buffer size failed, error %u
Worker: GetTokenInformation - TokenUser failed, error %u
Worker: ImpersonateNamedPipeClient failed, error %u
Worker: Impersonation token was an identification-level token and can't be trusted
Worker: NetworkIsolationGetAppContainerConfig failed, error %u
Worker: OpenThreadToken failed, error %u
Worker: reading NUL byte
Worker: RevertToSelf failed, error %u
Worker: SetEvent
WP;W4
WpA;Up
WpA;Wp
WpH+WhH
write
WriteFile
WriteFile failed. error=%d
WriteFile() returned %u
Wrong number of handles accompanied this message: expected %d got %d
Wrong packet length header says %d read %d bytes.
Wrong size for signature; got %Iu, expected %Iu
Wrote key store to %s
WS2_32.dll
WSACleanup failed with error: %d
WSACloseEvent
WSACreateEvent
WSADuplicateSocketW
WSAEnumNetworkEvents
WSAEnumNetworkEvents returned %d
WSAEventSelect
WSAEventSelect %x
WSAIoctl
WSAResetEvent
WSASendMsg
WSASocketW
WSAStartup failed with error: %d
WXH+WPH
WxL9j
X 6"8 
x ATAUAVAWL
x ATAUAVH
x ATAUAWH
x ATAVAWH
x AUAVAWH
x AVH
x AWH
X H9\$h
x UATAUAVAWH
x UATAUH
x UATAVH
x UATAWH
x UAUAVH
x UAUAWH
x UAVAWH
X UVWATAUAVAWH
x&((0*",
X(H93
X(L9s
x.$0,2"4x2
X_^][
x8D8k
XA^_^[
XA^A\_^][
xA_A^_^][
XA_A^_^][
xA_A^A]A\_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^[]
XA_A^A]A\_^][
xA_A^A]A\_^][
xdigit
xHH;_0
XML Element <%s> has both children and content
XML interface does not match existing definition for "%s"
XML Invalid escape sequence "&%s;". Ignoring...
XML Invalid numeric escape sequence "&%s;"
XML_CONVERTER
XmlElement::CreateChild("%s")
Xr\V^
y`H;~h
y|?u4
Y|x' 
ya(yay)
yxxxxxxxH
Z d"d$
Z""$"&^$
Z$2&^$b
z(D8=
Z*2,^*b
ZT\@^6`
