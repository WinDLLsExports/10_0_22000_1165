       
        
           
            
                
                   
                    
                     
                        
                          
                           
                                        "SetPropertiesForCurrentUser",
                                        [loadCompletedCallback, failedCallback, userContext]);
                                        [redirectUrl, logoutCompletedCallback, failedCallback, userContext]);
                                        [saveCompletedCallback, failedCallback, userContext, flattenedProperties.count]);
                                        [username, password, isPersistent, customInfo, redirectUrl, loginCompletedCallback, failedCallback, userContext]);
                                        { userName: username, password: password, createPersistentCookie: isPersistent },
                                        { values: flattenedProperties.value, authenticatedUserOnly: false },
                                        false,
                                        Function.createDelegate(this, this._onLoadComplete),
                                        Function.createDelegate(this, this._onLoadFailed),
                                        Function.createDelegate(this, this._onLoginComplete),
                                        Function.createDelegate(this, this._onLoginFailed),
                                        Function.createDelegate(this, this._onLogoutComplete),
                                        Function.createDelegate(this, this._onLogoutFailed),
                                        Function.createDelegate(this, this._onSaveComplete),
                                        Function.createDelegate(this, this._onSaveFailed),
                                        methodName,
                                        parameters,
                                    this._traceDump(v, p, recursive, indentationPadding, loopArray);
                                }
                                if (!Function.isInstanceOfType(v)) {
                                needComma = true;
                                return this._createPostBackSettings(true, this._scriptManagerID + '|' + elementUniqueID, originalElement);
                                return this._createPostBackSettings(true, this._updatePanelIDs[indexOfPanel] + '|' + elementUniqueID, originalElement);
                                stringBuilder.append(',');
                                this._traceDump(object[i], '[' + i + ']', recursive, indentationPadding, loopArray);
                                v = object[p];
                            }
                            continue;
                            document.detachEvent("onreadystatechange", check);
                            e.cancelBubble = true;
                            el.doScroll("left");
                            else {
                            for (i = 0; i < length; i++) {
                            for (p in object) {
                            if (needComma) {
                            if (this._updatePanelHasChildrenAsTriggers[indexOfPanel]) {
                            init();
                            length = object.length;
                            offsetX += parseInt(currentStyle.borderLeftWidth) || 0;
                            offsetY += parseInt(currentStyle.borderTopWidth) || 0;
                            properties[0] = name;
                            properties[propertyCount++] = name;
                            properties[propertyCount++] = properties[0];
                            return;
                            stringBuilder.append(',');
                            stringBuilder.append(':');
                            Sys.Serialization.JavaScriptSerializer._escapeChars[c]);
                            Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(properties[i], stringBuilder, sort, prevObjects);
                            Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(value, stringBuilder, sort, prevObjects);
                            this._postBackSettings = this._createPostBackSettings(false, null, null);
                            this._postBackSettings = this._getPostBackSettings(nearestUniqueIDMatch, eventTarget);
                            timeout = window.setTimeout(check, 0);
                        (currentStyle.position === "relative" || currentStyle.position === "absolute")) {
                        '\\b','\\t','\\n','\\u000b','\\f','\\r','\\u000e','\\u000f','\\u0010','\\u0011',
                        '\\u0012','\\u0013','\\u0014','\\u0015','\\u0016','\\u0017','\\u0018','\\u0019',
                        '\\u001a','\\u001b','\\u001c','\\u001d','\\u001e','\\u001f'];
                        }
                        anchor.attachEvent("onclick", cancelBubble);
                        anchor.click();
                        anchor.detachEvent("onclick", cancelBubble);
                        anchor.href = deltaNode.content;
                        anchor.style.display = 'none';
                        behaviors[j].dispose();
                        break;
                        catch (er) {
                        continue;
                        currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
                        defaultButton.click();
                        document.removeEventListener("DOMContentLoaded", check, false);
                        el = null;
                        else {
                        else{
                        error = response.get_responseData();
                        error = result.get_exceptionType() + "-- " + result.get_message();
                        event.stopPropagation();
                        formBody.append('&');
                        formBody.append('=');
                        formBody.append(encodeURIComponent(name));
                        formBody.append(encodeURIComponent(option.value));
                        function cancelBubble(e) {
                        i++;
                        if (!queueIncludes || Sys._ScriptLoader.isScriptLoaded(scriptTagAttributes.src)) {
                        if (Array.isInstanceOfType(object)) {
                        if (currentStyle) {
                        if (document.readyState === "complete") {
                        if (i > 0) {
                        if (indexOfPanel !== -1) {
                        if (name === Sys.Serialization.JavaScriptSerializer._serverTypeFieldName && propertyCount !== 0){
                        if (name.startsWith('$')) {
                        if (nearestUniqueIDMatch) {
                        if (typeof value !== 'undefined' && typeof value !== 'function') {
                        indentationPadding += "    ";
                        init();
                        node.control.dispose();
                        node.dispose();
                        offsetX += parseInt(currentStyle.borderLeftWidth) || 0;
                        offsetX += parseInt(currentStyle.marginLeft) || 0;
                        offsetX -= (parent.scrollLeft || 0);
                        offsetY += parseInt(currentStyle.borderTopWidth) || 0;
                        offsetY += parseInt(currentStyle.marginTop) || 0;
                        offsetY -= (parent.scrollTop || 0);
                        parts.splice(i, 1);
                        result = new Sys.Net.WebServiceError(false , String.format(Sys.Res.webServiceFailedNoMsg, methodName), "", "");
                        return this._createPostBackSettings(false, null, null);
                        string = string.replace(Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[c],
                        string = string.split(c).join(Sys.Serialization.JavaScriptSerializer._escapeChars[c]);
                        stringBuilder.append('"\\/Date(');
                        stringBuilder.append(')\\/"');
                        stringBuilder.append(object.getTime());
                        Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(object[i], stringBuilder,false,prevObjects);
                        tag += ' - ' + object.id;
                        this._activeDefaultButton = null;
                        this._form.parentNode.insertBefore(anchor, this._form);
                        this._form.parentNode.removeChild(anchor);
                        this._postBackSettings = this._createPostBackSettings(false, null, null);
                        throw Error.invalidOperation(Sys.Res.cannotSerializeObjectWithCycle);
                        try {
                        v -= vali;
                        var anchor = document.createElement("a");
                        var i, length, properties, p, v;
                        var indexOfPanel = Array.indexOf(this._updatePanelClientIDs, element.id);
                        var nearestUniqueIDMatch = this._findNearestElement(eventTarget);
                        var value = object[properties[i]];
                        window.location.href = deltaNode.content;
                        x: 0,
                        x: window.pageXOffset,
                        y: 0
                        y: window.pageYOffset
                     headElements[0].appendChild(scriptElement);
                     throw new Error.invalidOperation(Sys.Res.scriptLoadFailedNoHead);
                    !((tagName === "BODY") &&
                    "</title><scri" + "pt type=\"text/javascript\">parent.Sys.Application._onIFrameLoad('" + 
                    "GetRolesForCurrentUser",
                    (!previousStyle || previousStyle.position !== "absolute"))) {
                    (((type === 'checkbox') || (type === 'radio')) && element.checked)) {
                    ((elementPositioned &&
                    ((parent.style.overflow === "scroll") || (parent.style.overflow === "auto"))))) {
                    ((tagName !== "BODY") || (!previousStyle || previousStyle.position !== "absolute"))) {
                    (type === 'hidden') ||
                    (type === 'password') ||
                    (typeof(object.nodeName) === 'string')) {
                    (window.HTMLElement && (object instanceof HTMLElement)) ||
                    [loadCompletedCallback, failedCallback, userContext],
                    _this._xmlHttpRequest = null;
                    _this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
                    {} ,
                    }
                    });
                    }, false);
                    };
                    action = encodeURI(path) + action.substr(queryIndex);
                    Array.add(arrayDeclarationNodes, deltaNode);
                    Array.add(dataItemJsonNodes, deltaNode);
                    Array.add(dataItemNodes, deltaNode);
                    Array.add(expandoNodes, deltaNode);
                    Array.add(hiddenFieldNodes, deltaNode);
                    Array.add(onSubmitNodes, deltaNode);
                    Array.add(referencedScripts, scriptSrc);
                    Array.add(scriptBlockNodes, deltaNode);
                    Array.add(scriptDisposeNodes, deltaNode);
                    Array.add(scriptStartupNodes, deltaNode);
                    Array.add(updatePanelNodes, deltaNode);
                    asyncPostBackControlIDsNode = deltaNode;
                    asyncPostBackTimeoutNode = deltaNode;
                    break;
                    check = function() {
                    check();
                    childUpdatePanelIDsNode = deltaNode;
                    continueSubmit = false;
                    count++; 
                    current[j] = val[i];
                    currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
                    date = parseInt(matchGroup, 10);
                    delete initialState[key];
                    document.addEventListener("DOMContentLoaded", check = function() {
                    document.appendChild(form);
                    document.attachEvent("onreadystatechange", check = function() {
                    document.removeChild(form);
                    document.title = deltaNode.content;
                    document.title = title;
                    element._oldDisplayMode = 'block';
                    element._oldDisplayMode = 'inline';
                    element._oldDisplayMode = 'list-item';
                    else {
                    else if (!queueBlocks) {
                    else if (node.control && typeof(node.control.dispose) === "function") {
                    entry + "');</scri" + "pt></head><body></body></html>");
                    eval("scriptTagAttributes = " + scriptBlockNodes[i].content);
                    eval(disposeScripts[i]);
                    event.cancelBubble = true;
                    false,
                    finally {
                    flattenedProperties[key] = val;
                    flattenedProperties[subKey] = subVal;
                    focusTarget = null;
                    focusTarget = WebForm_FindFirstFocusableChild(targetControl);
                    focusTarget.contentEditable = false;
                    for (i = 0; i < object.length; ++i) {
                    for (i=0; i<propertyCount; i++) {
                    for (var j = behaviors.length - 1; j >= 0; j--) {
                    for (var name in object) {
                    form.action = '#' + entry;
                    form.method = 'get';
                    form.submit();
                    formActionNode = deltaNode;
                    formBody.append('&');
                    formBody.append('=');
                    formBody.append(encodeURIComponent(element.value));
                    formBody.append(encodeURIComponent(name));
                    Function.createDelegate(this, this._onLoadComplete),
                    Function.createDelegate(this, this._onLoadFailed),
                    group = new Sys.Services.ProfileGroup();
                    history[window.history.length - this._historyInitialLength + 1] = entry;
                    hour = parseInt(matchGroup, 10);
                    if (!pmHour && (upperToken !== dtf.AMDesignator.toUpperCase())) return null;
                    if (!proposedSettings && Array.contains(this._postBackControlClientIDs, element.id)) {
                    if (!proposedSettings && this._matchesParentIDInList(element.id, this._postBackControlClientIDs)) {
                    if (!queueBlocks) {
                    if (!queueIncludes || Sys._ScriptLoader.isScriptLoaded(scriptBlockNodes[i].content)) {
                    if (!result || !errorObj) {
                    if ((date < 1) || (date > 31)) return null;
                    if ((hour < 0) || (hour > 11)) return null;
                    if ((hour < 0) || (hour > 23)) return null;
                    if ((hourOffset < -12) || (hourOffset > 13)) return null;
                    if ((indentationPadding === '') || recursive) {
                    if ((min < 0) || (min > 59)) return null;
                    if ((minOffset < 0) || (minOffset > 59)) return null;
                    if ((month < 0) || (month > 11)) return null;
                    if ((msec < 0) || (msec > 999)) return null;
                    if ((sec < 0) || (sec > 59)) return null;
                    if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop)) {
                    if ((tagName !== "TABLE") && (tagName !== "TD") && (tagName !== "HTML")) {
                    if ((typeof(parts[i]) === 'undefined') || (parts[i] === '') || (parts[i] === null)) {
                    if ((vali & param) === vali) {
                    if ((weekDay < 0) || (weekDay > 6)) return null;
                    if ((year < 0) || (year > 9999)) return null;
                    if (Array.contains(this._postBackControlIDs, eventTarget)) {
                    if (Date.isInstanceOfType(object)) {
                    if (hour === 12) hour = 0;
                    if (node.dispose && typeof(node.dispose) === "function") {
                    if (object.id) {
                    if (offsets.length !== 2) return null;
                    if (option.selected) {
                    if (parentPosition && (parentPosition === "absolute")) break;
                    if (prevObjects[j] === object) {
                    if (result && errorObj) {
                    if (scriptTagAttributes.src) {
                    if (sort) properties.sort();
                    if (Sys.Browser.agent === Sys.Browser.InternetExplorer) {
                    if (Sys.Browser.agent === Sys.Browser.Opera || Sys.Browser.agent === Sys.Browser.FireFox) {
                    if (tagName === "TABLE" &&
                    if (typeof(event.stopPropagation) === "function") {
                    if (v === 0) return null;
                    if (vali === 0) continue;
                    if (values[i] === param) return null;
                    loopArray = [];
                    min = parseInt(matchGroup, 10);
                    month = cultureInfo._getAbbrMonthIndex(matchGroup);
                    month = cultureInfo._getMonthIndex(matchGroup);
                    msec = parseInt(matchGroup, 10) * 10;
                    msec = parseInt(matchGroup, 10) * 100;
                    msec = parseInt(matchGroup, 10);
                    offsetX += offset;
                    offsetX += parent.offsetLeft;
                    offsetX -= (parent.scrollLeft || 0);
                    offsetY += offset;
                    offsetY += parent.offsetTop;
                    offsetY -= (parent.scrollTop || 0);
                    oldContentEditableSetting = focusTarget.contentEditable;
                    onFailure(result, userContext, methodName);
                    panelsToRefreshNode = deltaNode;
                    pmHour = (upperToken === dtf.PMDesignator.toUpperCase());
                    postBackControlIDsNode = deltaNode;
                    proposedSettings = this._createPostBackSettings(true, this._scriptManagerID + '|' + elementUniqueID, originalElement);
                    result = new Sys.Net.WebServiceError(false, result.Message, result.StackTrace, result.ExceptionType);
                    result = response.get_object();
                    result = response.get_responseData();
                    result = response.get_xml();
                    result._statusCode = statusCode;
                    result[result.length] = interfaceType;
                    return {
                    return false;
                    return null;
                    return numberString.slice(0, stringIndex + 1) + right;
                    return numberString.slice(0, stringIndex + 1) + sep + ret + right;
                    return;
                    scriptLoader.queueCustomScriptTag(scriptTagAttributes);
                    scriptLoader.queueScriptBlock(scriptBlockNodes[i].content);
                    scriptLoader.queueScriptReference(scriptBlockNodes[i].content);
                    sec = parseInt(matchGroup, 10);
                    stringBuilder.append('[');
                    stringBuilder.append(']');
                    stringBuilder.append('{');
                    Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(object, stringBuilder);
                    Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(object, stringBuilder);
                    Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(object, stringBuilder);
                    tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
                    this._activeDefaultButton = defaultButton;
                    this._activeDefaultButtonClicked = false;
                    this._additionalInput = encodeURIComponent(element.name) + '.x=' + offsetX + '&' + encodeURIComponent(element.name) + '.y=' + offsetY;
                    this._additionalInput = encodeURIComponent(element.name) + '=' + encodeURIComponent(element.value);
                    this._controlIDToFocus = deltaNode.content;
                    this._destroyTree(node);
                    this._endPostBack(Error.invalidOperation(String.format(Sys.WebForms.Res.PRM_MissingPanel, panelClientID)), sender, data);
                    this._endPostBack(this._createPageRequestManagerParserError(String.format(Sys.WebForms.Res.PRM_UnknownToken, deltaNode.type)), executor, null);
                    this._endPostBack(this._createPageRequestManagerServerError(Number.parseInvariant(deltaNode.id), deltaNode.content), executor, null);
                    this._get_path(),
                    this._historyLength = window.history.length + 1;
                    this._postBackSettings = this._createPostBackSettings(true, this._scriptManagerID + '|' + eventTarget, null);
                    this._scriptLoadedHandler(this._currentTask.get_scriptElement(), true);
                    this._setHistory(history);
                    this._xmlHttpRequest.setRequestHeader(header, val);
                    this.get_timeout());
                    this.prototype[methodName] = method;
                    this.trace(indentationPadding + name + ' {' +  tag + '}');
                    this.trace(indentationPadding + name + (typeof(typeName) === 'string' ? ' {' + typeName + '}' : ''));
                    this.trace(indentationPadding + name + ': ' + object.toString());
                    this.trace(indentationPadding + name + ': ...');
                    throw Error.invalidOperation(Sys.Res.urlMustBeLessThan1024chars);
                    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
                    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceInvalidJsonWrapper, methodName));
                    try {
                    tzMinOffset = (hourOffset * 60) + (matchGroup.startsWith('-')? -minOffset : minOffset);
                    tzMinOffset = hourOffset * 60;
                    unflattenedProperties[groupName] = group;
                    updatePanelIDsNode = deltaNode;
                    var behaviors = Sys.UI.Behavior.getBehaviors(node);
                    var error;
                    var form = document.createElement('form');
                    var history = this._getHistory();
                    var hourOffset = parseInt(matchGroup, 10);
                    var hourOffset = parseInt(offsets[0], 10);
                    var minOffset = parseInt(offsets[1], 10);
                    var month = parseInt(matchGroup, 10) - 1;
                    var needComma = false;
                    var offset = (f.frameBorder === "0" || f.frameBorder === "no") ? 2 : 0;
                    var offsets = matchGroup.split(/:/);
                    var option = element.options[j];
                    var parentPosition = currentStyle ? currentStyle.position : null;
                    var properties = [];
                    var propertyCount = 0;
                    var scriptTagAttributes;
                    var subVal = groupProperties[subKey];
                    var tag = object.tagName? object.tagName : 'DomElement';
                    var timeout, el = document.createElement("div");
                    var typeName = Object.getTypeName(object);
                    var upperToken = matchGroup.toUpperCase();
                    var vali = values[i];
                    weekDay = cultureInfo._getAbbrDayIndex(matchGroup);
                    weekDay = cultureInfo._getDayIndex(matchGroup);
                    window.__synchronousCallBackIndex = -1;
                    window.location.hash = entry;
                    x: d.scrollLeft,
                    xmlRequestFrame.parentNode.removeChild(xmlRequestFrame);
                    y: d.scrollTop
                    year = Date._expandYear(dtf,parseInt(matchGroup, 10));
                    year = parseInt(matchGroup, 10);
                $removeHandler(element, name, handlers[i].handler);
                $removeHandler(scriptElement, 'load', this._scriptLoadDelegate);
                $removeHandler(scriptElement, 'readystatechange', this._scriptLoadDelegate);
                (Array.indexOf(newIDs, oldIDs[i]) === -1 || Array.indexOf(childIDs, oldIDs[i]) > -1)) {
                __doPostBack(this._uniqueId, newServerEntry);
                __namespace: true,
                __typeName: namespaceParts.slice(0, i + 1).join('.')
                _this._webRequest.completed(Sys.EventArgs.Empty);
                {name: "element", domElement: true}
                }
                }), 0);
                };
                action = action.substr(0, fragmentIndex);
                action = encodeURI(action);
                args[i] = arguments[i];
                Array.add(created, document.getElementById(this._uniqueIDToClientID(newIDs[i])));
                Array.add(deleted, document.getElementById(this._uniqueIDToClientID(oldIDs[i])));
                Array.add(destinationClientIDs, this._uniqueIDToClientID(source[i]));
                Array.add(destinationIDs, source[i]);
                Array.add(loopArray, object);
                Array.add(prevObjects, object);
                Array.add(Sys._ScriptLoader._getLoadedScripts(), scriptElement.src);
                Array.add(updated, document.getElementById(this._uniqueIDToClientID(refreshedIDs[i])));
                Array.remove(loopArray, object);
                Array.removeAt(prevObjects, prevObjects.length - 1);
                asyncPostBackControlIDsArray,
                body = "";
                break;
                callback(this);
                callback(true, userContext, "Sys.Services.AuthenticationService.login");
                case "arrayDeclaration":
                case "asyncPostBackControlIDs":
                case "asyncPostBackTimeout":
                case "childUpdatePanelIDs":
                case "dataItem":
                case "dataItemJson":
                case "error":
                case "expando":
                case "focus":
                case "formAction":
                case "hiddenField":
                case "onSubmit":
                case "pageRedirect":
                case "pageTitle":
                case "panelsToRefreshIDs":
                case "postBackControlIDs":
                case "scriptBlock":
                case "ScriptContentNoTags":
                case "ScriptContentWithTags":
                case "scriptDispose":
                case "ScriptPath":
                case "scriptStartupBlock":
                case "updatePanel":
                case "updatePanelIDs":
                case 'COLGROUP': case 'DD': case 'DL': case 'DT': case 'FIELDSET': case 'FORM':
                case 'dd': case 'd':
                case 'ddd':
                case 'dddd':
                case 'DIV': case 'P': case 'ADDRESS': case 'BLOCKQUOTE': case 'BODY': case 'COL':
                case 'f':
                case 'ff':
                case 'fff':
                case 'h': case 'hh':
                case 'H': case 'HH':
                case 'H1': case 'H2': case 'H3': case 'H4': case 'H5': case 'H6': case 'HR':
                case 'IFRAME': case 'LEGEND': case 'OL': case 'PRE': case 'TABLE': case 'TD':
                case 'LI':
                case 'M': case 'MM':
                case 'm': case 'mm':
                case 'MMM':
                case 'MMMM':
                case 's': case 'ss':
                case 'TH': case 'TR': case 'UL':
                case 'tt': case 't':
                case 'y': case 'yy':
                case 'yyyy':
                case 'z': case 'zz':
                case 'zzz':
                catch (er) { }
                container = field.parentNode;
                continue;
                count += obj.count; 
                count -= result.length;
                count = result;
                curGroupIndex++;
                current = getter.apply(target);
                currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
                curSize = groupSizes[curGroupIndex];
                default:
                delete rootObject[currentPart];
                delete scriptElement.text;
                delete this._beginRequestHandler;
                delete this._endRequestHandler;
                delete this._scriptDisposes[updatePanelID];
                delete this._timerCookie;
                disposableObjects[i].dispose();
                dtf.FullDateTimePattern,
                dtf.LongDatePattern,
                dtf.LongTimePattern,
                dtf.RFC1123Pattern,
                dtf.ShortDatePattern,
                dtf.ShortTimePattern,
                dtf.SortableDateTimePattern,
                dtf.TimeSeparator + addLeadingZero(Math.abs(this.getTimezoneOffset() % 60)));
                dtf.UniversalSortableDateTimePattern ];
                dtf.YearMonthPattern,
                e.popStackFrame();
                element.style.display = element._oldDisplayMode;
                element.style.display = 'none';
                elementPositioned = elementPositioned || (parentPosition && (parentPosition !== "static"));
                else
                else {
                else if (Array.contains(loopArray, object)) {
                else if (Array.isInstanceOfType(object)) {
                else if (Boolean.isInstanceOfType(object)){
                else if (contentType.startsWith("text/xml")) {
                else if (String.isInstanceOfType(object)){
                else if (type === 'image') {
                evt.preventDefault();
                evt[i](source, args);
                executor = new executorType();
                expectedElementInteger, expectedElementDomElement, elementMayBeNull,
                failed = true;
                field.parentNode.removeChild(field);
                focusTarget = targetControl;
                focusTarget.contentEditable = oldContentEditableSetting;
                for (var i = 0, j = current.length, l= val.length; i < l; i++, j++) {
                for (var i = 0, l = disposeScripts.length; i < l; i++) {
                for (var i = 0; i < parts.length;) {
                for (var i in values) {
                for (var j = 0; j < optionCount; j++) {
                for (var parent = element.parentNode; parent; parent = parent.parentNode) {
                for( var j = 0; j < prevObjects.length; j++) {
                for(var subKey in groupProperties) {
                formBody.append('&');
                formBody.append('=');
                formBody.append(encodeURIComponent(element.value));
                formBody.append(encodeURIComponent(name));
                frameDoc.close();
                frameDoc.open("javascript:'<html></html>'");
                frameDoc.write("<html><head><title>" + (title || document.title) +
                function(x) { return Sys.Serialization.JavaScriptSerializer._escapeChars[x]; });
                group[key] = val;
                handler(this, Sys.EventArgs.Empty);
                hash = history[window.history.length - this._historyInitialLength];
                if (!(current instanceof Array)) throw new Error.invalidOperation(String.format(Sys.Res.propertyNotAnArray, name));
                if (!Array.contains(referencedScripts, scriptSrc)) {
                if (!Array.contains(result, interfaceType)) {
                if (!callback.async) {
                if (!document.getElementById(panelClientID)) {
                if (!group || !Sys.Services.ProfileGroup.isInstanceOfType(group)) {
                if (!historyElement) throw Error.invalidOperation(Sys.Res.historyMissingHiddenInput);
                if (!loopArray) {
                if (!proposedSettings && Array.contains(this._asyncPostBackControlClientIDs, element.id)) {
                if (!proposedSettings && this._matchesParentIDInList(element.id, this._asyncPostBackControlClientIDs)) {
                if (!result || typeof(result.d) === "undefined") {
                if (!this._historyFrame) throw Error.invalidOperation(Sys.Res.historyMissingFrame);
                if (!this._onSubmitStatements[i]()) {
                if (!this.prototype[methodName]) {
                if ((object == window) || (object === document) ||
                if ((parent.offsetLeft || parent.offsetTop) &&
                if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop) &&
                if ((type === 'text') ||
                if ((typeof(current) === 'undefined') || (current === null)) throw new Error.invalidOperation(String.format(Sys.Res.propertyNullOrUndefined, name));
                if ((typeof(title) !== 'undefined') && (title !== null)) {
                if ((window == window.top) && document.documentElement.doScroll) {
                if (_this._xmlHttpRequest != null) {
                if (Array.contains(this._asyncPostBackControlIDs, eventTarget)) {
                if (contentType.startsWith("application/json")) {
                if (Date.isInstanceOfType(object) || RegExp.isInstanceOfType(object)) {
                if (defaultButton && (typeof(defaultButton.click) !== "undefined")) {
                if (f) {
                if (focusTarget && (typeof(focusTarget.contentEditable) !== "undefined")) {
                if (headElements.length === 0) {
                if (key.indexOf('=') !== -1) throw Error.argument('state', Sys.Res.stateFieldNameInvalid);
                if (loc.href.length - loc.hash.length + entry.length > 1024) {
                if (node.nodeType === 1) {
                if (Number.isInstanceOfType(object)){
                if (onFailure) {
                if (path.indexOf("%") === -1) {
                if (previous !== null && currentStyle) {
                if (result) {
                if (ret.length > 0)
                if (string.indexOf(c) !== -1) {
                if (targetControl && (!WebForm_CanFocus(targetControl))) {
                if (this._isSafari2()) {
                if (this._validPosition(window.pageXOffset) || this._validPosition(window.pageYOffset)) {
                if (type === 'submit') {
                if (typeof(_this._xmlHttpRequest.status) === "undefined") {
                if (typeof(initialState[key]) !== 'undefined') {
                if (typeof(val) !== "function")
                if (v === 0) break;
                if (xmlRequestFrame) {
                if(!propertyNames || Array.indexOf(propertyNames, key) !== -1) {
                index[this._roles[i].toLowerCase()] = true;
                init();
                initialState[key] = value;
                key = key.substr(dotIndex+1);
                msg = String.format(Sys.Res.webServiceFailedNoMsg, methodName)
                msg = String.format(Sys.Res.webServiceTimedOut, methodName);
                newUpdatePanelClientIDs[i] = this._uniqueIDToClientID(realPanelID);
                newUpdatePanelHasChildrenAsTriggers[i] = childrenAsTriggers;
                newUpdatePanelIDs[i] = realPanelID;
                nodeQueue[nodeQueue.length] = node;
                offsetX += parent.offsetLeft || 0;
                offsetY += parent.offsetTop || 0;
                offsetY = clientRect.top - 2 + documentElement.scrollTop;
                onFailure(new Sys.Net.WebServiceError(response.get_timedOut(), msg, "", ""), userContext, methodName);
                onSubmitStatementScript = 'Array.add(Sys.WebForms.PageRequestManager.getInstance()._onSubmitStatements, function() {\r\n';
                onSuccess(result, userContext, methodName);
                paramName + "[" + i + "]");
                parent.findComponent(id) :
                parent[id] || null) :
                parsedName = eval(ns.__typeName);
                parsedName = null;
                parserErrorDetails = this._findText(reply, reply.length);
                parserErrorDetails = this._findText(reply, replyIndex);
                parts[parts.length] = kvp.key;
                postBackControlIDsArray);
                prevObjects = new Array();
                regexp.append("([+-]?\\d\\d?)");
                regexp.append("([+-]?\\d\\d?:\\d{2})");
                regexp.append("(\\d)");
                regexp.append("(\\D*)");
                regexp.append("(\\d\\d?)");
                regexp.append("(\\d{2})");
                regexp.append("(\\d{3})");
                regexp.append("(\\d{4})");
                regexp.append("(\\D+)");
                result = result.d;
                result[name] = skipDecodeUri ? value : decodeURIComponent(value);
                results[results.length] = behaviors[i];
                ret = numberString.slice(stringIndex - curSize + 1, stringIndex+1) + sep + ret;
                ret = numberString.slice(stringIndex - curSize + 1, stringIndex+1);
                return "GET";
                return ['-', value.substr(0, value.length - neg.length)];
                return ['-', value.substr(1, value.length - 2)];
                return ['-', value.substr(neg.length)];
                return ['+', value.substr(0, value.length - pos.length)];
                return ['+', value.substr(pos.length)];
                return {
                return a.value - b.value;
                return cache[interfaceName] = true;
                return e;
                return element;
                return i;
                return new ActiveXObject(progIDs[i]);
                return new Sys.UI.Point(0,0);
                return null;
                return parentElement.control;
                return true;
                return xmlDOM;
                return;
                right = right.slice(0, precision);
                right = zeroPad(right, precision, false);
                scriptElement.innerHTML = scriptElement.text;
                serialized[serialized.length] = key + '=' + encodeURIComponent(value);
                serverStateField.value = value;
                setter.apply(target, [val]);
                showProgress = true; 
                sl.dispose();
                sorted[sorted.length] = {key: i, value: values[i]};
                start = Math.max(0, length + start);
                start = start - (start % 1);
                stateClone[key] = this._state[key];
                String.format(Sys.Res.assertFailed, message);
                String.format(Sys.Res.assertFailedCaller, message, this.assert.caller) :
                stringBuilder.append('}');
                Sys$Component$_setProperties(current, val);
                Sys$Component$_setProperties(targetVal, val);
                Sys.__rootNamespaces[Sys.__rootNamespaces.length] = ns;
                Sys._ScriptLoader._clearScript(scriptElement);
                Sys.UI.DomEvent.removeHandler(window, "load", onload);
                Sys.UI.DomEvent.removeHandler(window, "load", this._loadHandlerDelegate);
                Sys.WebForms.PageRequestManager.getInstance().remove_beginRequest(this._beginRequestHandler);
                Sys.WebForms.PageRequestManager.getInstance().remove_endRequest(this._endRequestHandler);
                tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
                target[name] = val;
                this._additionalInput = encodeURIComponent(element.name) + '=' + encodeURIComponent(element.value);
                this._currentTask = new Sys._ScriptLoaderTask(scriptElement, this._scriptLoadedDelegate);
                this._currentTask = null;
                this._currentTask.dispose();
                this._currentTask.execute();
                this._element[name] = null;
                this._endPostBack(Error.invalidOperation(String.format(Sys.WebForms.Res.PRM_MissingPanel, node.id)), data.executor, data);
                this._historyFrame = document.getElementById('__historyFrame');
                this._historyInitialLength = window.history.length;
                this._historyLength = window.history.length;
                this._historyPointIsNew = false;
                this._ignoreIFrame = true;
                this._initialState = this._deserializeState(this.get_stateString());
                this._loadHandlerDelegate = null;
                this._loadScriptsInternal();
                this._navigate(entry);
                this._postBackSettings = this._getPostBackSettings(postBackElement, eventTarget);
                this._raiseError(true);
                this._scriptElement.removeEventListener('error', this._scriptErrorDelegate, false);
                this._scriptErrorDelegate = null;
                this._setHistory([window.location.hash]);
                this._state = state;
                this._updateHiddenField(newServerEntry);
                this._xmlHttpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');
                this.fail(message);
                this.prototype[memberName] = memberValue;
                this.trace(indentationPadding + name + ': ' + object);
                this.trace(indentationPadding + name + ': Undefined');
                this[name] = properties[name];
                throw Error.argument("defaultExecutorType", String.format(Sys.Res.invalidExecutorType, this._defaultExecutorType));
                throw Error.argument('format', Sys.Res.stringFormatBraceMismatch);
                throw Error.argument('namespacePath', Sys.Res.invalidNameSpace);
                throw Error.argument('state', Sys.Res.stateMustBeStringDictionary);
                throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "Array"));
                throw new Error.invalidOperation(String.format(Sys.Res.propertyNotWritable, name));
                throw Sys.Net.WebServiceProxy._createFailedError(methodName, msg);
                toRemove.parentNode.removeChild(toRemove);
                try {
                unflattenedProperties[key] = val;
                unloadHandler(this, Sys.EventArgs.Empty);
                updatePanelIDsArray,
                v -= vali;
                val = (typeof(doc.body) === 'undefined');
                val = (w != param) && !(w.document && param.document && (w.document === param.document));
                values[name.toLowerCase()] = prototype[name];
                var action = window.theForm.action;
                var c = Sys.Serialization.JavaScriptSerializer._charsToEscape[i];
                var callbackFrameID = "__CALLBACKFRAME" + i;
                var childrenAsTriggers = (updatePanelIDs[i].charAt(0) === 't');
                var contentType = response.getResponseHeader("Content-Type");
                var defaultButton = document.getElementById(target);
                var disposeScripts = this._scriptDisposes[updatePanelID];
                var executorType = eval(this._defaultExecutorType);
                var f = element.ownerDocument.parentWindow.frameElement || null;
                var frameDoc = this._historyFrame.contentWindow.document;
                var group = unflattenedProperties[groupName];
                var groupName = key.substr(0, dotIndex);
                var groupProperties = obj.value;
                var hashIndex = action.indexOf('#');
                var headElements = document.getElementsByTagName('head');
                var historyElement = document.getElementById('__history');
                var interfaceType = interfaces[i];
                var loc = document.location;
                var method = interfaceType.prototype[methodName];
                var name = token.substr(0, equal);
                var node = childNodes[i];
                var obj = this._flattenProperties(propertyNames, val, key);
                var optionCount = element.options.length;
                var panelClientID = this._uniqueIDToClientID(panelsToRefreshIDs[i]);
                var parentPosition = (parent && parent.style) ? parent.style.position : null;
                var path = action.substr(0, queryIndex);
                var realPanelID = updatePanelIDs[i].substr(1);
                var serverState = value;
                var tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
                var tagName = parent.tagName;
                var targetControl = $get(this._controlIDToFocus);
                var toRemove = field._isContained ? field.parentNode : field;
                var type = element.type;
                var v = param;
                var val = headers[header];
                var value = token.substr(equal + 1);
                var w = doc.defaultView || doc.parentWindow;
                var xmlDOM = new ActiveXObject(progIDs[i]);
                var xmlRequestFrame = document.getElementById(callbackFrameID);
                window.__pendingCallbacks[i] = null;
                window.clearTimeout(this._timerCookie);
                window.location.href = redirectUrl;
                window.pageUnload(this, Sys.EventArgs.Empty);
                window.scrollTo(this._scrollPosition.x, this._scrollPosition.y);
                window.setTimeout(Function.createDelegate(this, function() {
                window.theForm.action = ((hashIndex !== -1) ? action.substring(0, hashIndex) : action) + '#' + entry;
                x: d.scrollLeft,
                xmlDOM.async = false;
                xmlDOM.loadXML(markup);
                xmlDOM.setProperty('SelectionLanguage', 'XPath');
                y: d.scrollTop
              [ dtf.MonthDayPattern,
              </xs:element>
              <xs:element name="ExtensionFile" minOccurs="0" maxOccurs="unbounded" type="ExtensionFile" />
              <xs:element name="MetadataFile" minOccurs="0" maxOccurs="unbounded" type="MetadataFile" />
              <xs:element name="MetadataSource" maxOccurs="unbounded" minOccurs="0" type="MetadataSource">
             exp.replace(Sys.Serialization.JavaScriptSerializer._jsonStringRegEx, ''))) throw null;
             headElements[0].appendChild(this._scriptElement);
             throw new Error.invalidOperation(Sys.Res.scriptLoadFailedNoHead);
            $addHandler(this._scriptElement, 'load', this._scriptLoadDelegate);
            $addHandler(this._scriptElement, 'readystatechange', this._scriptLoadDelegate);
            ((Sys.IContainer.isInstanceOfType(parent)) ?
            ((typeof(text) === 'undefined') || (text === null) || (text === '')) ?
            (e.button === 2) ? Sys.UI.MouseButton.rightButton :
            (e.button === 4) ? Sys.UI.MouseButton.middleButton :
            (message || String.format(Sys.WebForms.Res.PRM_ServerError, httpStatusCode));
            (scriptElement.readyState !== 'complete')) {
            (Sys.Browser.version <= 419.3);
            /// <param name="element" domElement="true"></param>
            /// <returns type="Sys.UI.Point"></returns>
            /// <summary locid="M:J#Sys.UI.DomElement.getLocation" />
            '\r\n' : text + '\r\n';
            ]);
            _this._clearTimer();
            _this._completedCallback(scriptElement, true);
            _this._responseAvailable = true;
            _this._timedOut = true;
            _this._timer = null;
            _this._webRequest.completed(Sys.EventArgs.Empty);
            _this._xmlHttpRequest = null;
            _this._xmlHttpRequest.abort();
            _this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
            {name: "allScriptsLoadedCallback", type: Function, mayBeNull: true},
            {name: "args", type: Sys.EventArgs}
            {name: "className", type: String}
            {name: "clientId", type: String},
            {name: "component", type: Sys.Component}
            {name: "condition", type: Boolean},
            {name: "customInfo", type: String, mayBeNull: true, optional: true},
            {name: "displayCaller", type: Boolean, optional: true}
            {name: "eventArgs", type: Sys.EventArgs}
            {name: "failedCallback", type: Function, mayBeNull: true, optional: true},
            {name: "handler", type: Function}
            {name: "header", type: String}
            {name: "id", type: String}
            {name: "id", type: String},
            {name: "isPersistent", type: Boolean, mayBeNull: true, optional: true},
            {name: "loadCompletedCallback", type: Function, mayBeNull: true, optional: true},
            {name: "loginCompletedCallback", type: Function, mayBeNull: true, optional: true},
            {name: "logoutCompletedCallback", type: Function, mayBeNull: true, optional: true},
            {name: "message", type: String, mayBeNull: true, optional: true},
            {name: "message", type: String, mayBeNull: true}
            {name: "methodName", type: String},
            {name: "name", type: String, mayBeNull: true, optional: true}
            {name: "object", mayBeNull: true},
            {name: "object", type: Sys.IDisposable}
            {name: "onFailure", type: Function, mayBeNull: true, optional: true},
            {name: "onSuccess", type: Function, mayBeNull: true, optional: true},
            {name: "params"},
            {name: "parent", mayBeNull: true, optional: true}
            {name: "password", type: String, mayBeNull: true},
            {name: "propertyName", type: String}
            {name: "propertyNames", type: Array, mayBeNull: true, optional: true, elementType: String},
            {name: "redirectUrl", type: String, mayBeNull: true, optional: true},
            {name: "role", type: String}
            {name: "saveCompletedCallback", type: Function, mayBeNull: true, optional: true},
            {name: "scriptAttributes"}
            {name: "scriptContent", type: String}
            {name: "scriptLoadFailedCallback", type: Function, mayBeNull: true},
            {name: "scriptLoadTimeoutCallback", type: Function, mayBeNull: true}
            {name: "scriptTimeout", type: Number, integer: true},
            {name: "scriptUrl", type: String}
            {name: "separator", type: String, mayBeNull: true, optional: true}
            {name: "servicePath", type: String},
            {name: "source"},
            {name: "state", type: Object},
            {name: "text", mayBeNull: true, optional: true}
            {name: "text", mayBeNull: true}
            {name: "text"}
            {name: "title", type: String, mayBeNull: true, optional: true}
            {name: "uniqueId", type: String}
            {name: "useGet", type: Boolean},
            {name: "userContext", mayBeNull: true, optional: true}
            {name: "username", type: String},
            {name: "value", type: String}
            {name: "webRequest", type: Sys.Net.WebRequest}
            }
            } 
            }    
            }            
            } catch (e) {
            } catch (ex) {
            } catch(e) {}
            });
            };
            </xs:element>
            </xs:sequence>
            <xs:element name="CollectionMapping" maxOccurs="unbounded" minOccurs="0" type="CollectionMapping">
            <xs:element name="ExcludedType" minOccurs="0" maxOccurs="unbounded" type="ExcludedType">
            <xs:element name="NamespaceMapping" maxOccurs="unbounded" minOccurs="0" type="NamespaceMapping">
            <xs:element name="ReferencedAssembly" maxOccurs="unbounded" minOccurs="0" type="ReferencedAssembly">
            <xs:element name="ReferencedDataContractType" minOccurs="0" maxOccurs="unbounded" type="ReferencedDataContractType" />
            <xs:element name="ServiceContractMapping" maxOccurs="unbounded" minOccurs="0" type="ServiceContractMapping" />
            <xs:field xpath="@FileName" />
            <xs:field xpath="@ID" />
            <xs:field xpath="@Name" />
            <xs:selector xpath=".//mstns:ExtensionFile" />
            <xs:selector xpath=".//mstns:MetadataFile" />
            <xs:sequence>
            allScriptsLoadedCallback: allScriptsLoadedCallback,
            app._addComponentToSecondPass(component, references);
            arg = '';
            args[l] = context;
            Array.add(delta, {type: type, id: id, content: content});
            Array.add(this._scriptDisposes[panelID], disposeScript);
            Array.add(updated, document.getElementById(this._uniqueIDToClientID(refreshedIDs[i])));
            Array.clear(this._disposableObjects);
            Array.remove(this._disposableObjects, object);
            Array.remove(this._element._behaviors, this);
            arrayDeclarationNodes: arrayDeclarationNodes,
            arrayScript += "Sys.WebForms.PageRequestManager._addArrayElement('" + node.id + "', " + node.content + ");\r\n";
            asyncPostBackControlClientIDs: newAsyncPostBackControlClientIDs,
            asyncPostBackControlIDs: newAsyncPostBackControlIDs,
            asyncPostBackControlIDsNode: asyncPostBackControlIDsNode,
            asyncPostBackTimeout);
            asyncPostBackTimeoutNode: asyncPostBackTimeoutNode,
            baseUrl = baseElement.href;
            baseUrl = document.URL;
            break;
            browserHandler = cache[i].browserHandler;
            callback(clonedResult, userContext, "Sys.Services.RoleService.load");
            callback(count, userContext, "Sys.Services.ProfileService.save");
            callback(err, context[3], "Sys.Services.AuthenticationService.logout");
            callback(err, userContext, "Sys.Services.AuthenticationService.login");
            callback(err, userContext, "Sys.Services.ProfileService.load");
            callback(err, userContext, "Sys.Services.ProfileService.save");
            callback(err, userContext, "Sys.Services.RoleService.load");
            callback(false, userContext, "Sys.Services.AuthenticationService.login");
            callback(null, userContext, "Sys.Services.AuthenticationService.logout");
            callback(result.length, userContext, "Sys.Services.ProfileService.load");
            callback(this);
            callback(this, scriptElement, multipleCallbacks);
            case 'dd': case 'd':
            case 'dddd': case 'ddd':
            case 'f':
            case 'ff':
            case 'fff':
            case 'HH': case 'H':
            case 'hh': case 'h':
            case 'mm': case 'm':
            case 'MM': case 'M':
            case 'MMMM': case 'MMM':
            case 'number': case 'string': case 'boolean':
            case 'ss': case 's':
            case 'tt': case 't':
            case 'undefined':
            case 'yy': case 'y':
            case 'yyyy':
            case 'zz': case 'z':
            case 'zzz':
            catch (ex) {
            catch(e) {
            catch(ex) {
            childIDs = null;
            childIDs = upData.childUpdatePanelIDs;
            childUpdatePanelIDsNode, panelsToRefreshNode, formActionNode;
            childUpdatePanelIDsNode: childUpdatePanelIDsNode,
            component.endUpdate();
            component["add_" + name](events[name]);
            computedStyle[n] = style[n];
            container = document.createElement('span');
            container.style.cssText = "display:none !important";
            content = reply.substr(replyIndex, len);
            continue;
            continueSubmit = !eventArgs.get_cancel();
            continueSubmit = this._onsubmit();
            count++;
            curElem = curElem.parentNode; 
            current = current.get_parent();
            currentClassName.substring(index + className.length + 1, currentClassName.length)).trim();
            currentStyle = Sys.UI.DomElement._getCurrentStyle(element);
            currentTarget = currentTarget.get_parent();
            custom = true;
            d = document.body;
            data.asyncPostBackTimeoutNode ? data.asyncPostBackTimeoutNode.content : null);
            data.dataItems[node.id] = node.content;
            data.dataItems[node.id] = Sys.Serialization.JavaScriptSerializer.deserialize(node.content);
            data.updatePanelData = updatePanelData;
            data.updatePanelIDsNode && data.panelsToRefreshNode && data.childUpdatePanelIDsNode) {
            dataItemJsonNodes: dataItemJsonNodes,
            dataItemNodes: dataItemNodes,
            Debug.writeln(text);
            default:
            delete this._element;
            delete this._events;
            delimiterIndex = reply.indexOf('|', replyIndex);
            dotIndex = key.indexOf('.');
            e = Error.argument(paramName, Sys.Res.argumentDomElement);
            e = Error.argumentNull(paramName);
            e = Error.argumentOutOfRange(paramName, param, Sys.Res.argumentInteger);
            e = Error.argumentType(paramName, Object.getType(param), expectedType);
            e = Error.argumentUndefined(paramName);
            e = Function._validateParameterType(elem, expectedElementType,
            e.popStackFrame();
            e[v] = errorInfo[v];
            element = element.parentNode;
            element.className += ' ' + className;
            element.className = className;
            element.style.display = element._oldDisplayMode;
            element.style.display = 'none';
            else
            else {
            else if ((tagName === 'BUTTON') && (element.name.length !== 0) && (element.type === 'submit')) {
            else if ((typeof(val) === 'object') && (Object.getType(val) === Object)) {
            else if (action.indexOf("%") === -1) {
            else if (contentType.startsWith("application/json")) {
            else if (document.attachEvent) {
            else if (onSuccess) {
            else if (tagName === 'SELECT') {
            else if (tagName === 'TEXTAREA') {
            else if (typeof(result) === 'number') {
            else if (val instanceof Array) {
            else if (value.endsWith(pos)) {
            else if (value.startsWith(pos)) {
            else quoteCount++;
            else this.get_element().style.visibility = 'visible';
            entry = entry.substr(0, serverSeparator);
            errorHandled = eventArgs.get_errorHandled();
            escaped = !escaped;
            escaped = false;
            eval('debugger');
            eventArgs = new Sys.WebForms.BeginRequestEventArgs(request, this._postBackSettings.sourceElement);
            eventArgs = new Sys.WebForms.InitializeRequestEventArgs(request, this._postBackSettings.sourceElement);
            eventTarget.value = '';
            evt.preventDefault();
            executor.executeRequest();
            executor: executor,
            expandoNodes: expandoNodes,
            expandoScript += node.id + " = " + node.content + "\r\n";
            exponent = -exponent;
            expSignInfo[0] = '+';
            finally {
            for (i = 0, l = panelsToRefreshIDs.length; i < l; i++) {
            for (i = 0, l = refreshedIDs.length; i < l; i++) {
            for (i = 0, l = this._onSubmitStatements.length; i < l; i++) {
            for (i in values) {
            for (var header in headers) {
            for (var i = 0, l = disposableObjects.length; i < l; i++) {
            for (var i = 0, l = evt.length; i < l; i++) {
            for (var i = 0, l = interfaces.length; i < l; i++) {
            for (var i = 0, l = source.length; i < l; i++) {
            for (var i = 0; i < 34; i++) {
            for (var i = 0; i < l; i++) {
            for (var i = childNodes.length - 1; i >= 0; i--) {
            for (var i = handlers.length - 1; i >= 0; i--) {
            for (var methodName in interfaceType.prototype) {
            for (var name in properties) {
            for (var name in prototype) {
            for (var parent = element.parentNode; parent; parent = parent.parentNode) {
            for (var parent = element; parent; previous = parent, parent = parent.offsetParent) {
            for (var parent = element; parent; previous = parent, previousStyle = currentStyle, parent = parent.offsetParent) {
            for(var i=0; i < this._roles.length; i++) {
            form.onsubmit = null;
            form.onsubmit = this._onsubmit;
            formActionNode: formActionNode };
            formBody.append(this._additionalInput);
            function init() { if (!app._initialized) app._doInitialize(); }
            Function.createDelegate(this, Function.createCallback(this._scriptIncludesLoadComplete, data)),
            Function.createDelegate(this, Function.createCallback(this._scriptIncludesLoadFailed, data)),
            Function.createDelegate(this, Function.createCallback(this._scriptsLoadComplete, data)), null, null);
            h(this, args);
            handler = Function.createDelegate(handlerOwner, handler);
            handler(this, evArgs);
            handler(this, eventArgs);
            handler(this, new Sys.PropertyChangedEventArgs(propertyName));
            handler(this, Sys.EventArgs.Empty);
            handler(this, this._getPageLoadedEventArgs(initialLoad, data));
            handler(this, this._getPageLoadingEventArgs(data));
            handler(this._executor, eventArgs);
            hash = hash.substring(1);
            hash = this._serializeState(this._deserializeState(hash, true));
            hiddenFieldNodes: hiddenFieldNodes,
            historyElement.value = Sys.Serialization.JavaScriptSerializer.serialize(historyArray);
            hour = this.getHours() % 12;
            hour = this.getTimezoneOffset() / 60;
            httpStatusCode: httpStatusCode
            i = close + 2;
            i++;
            id = reply.substring(replyIndex, delimiterIndex);
            if (!(component["add_" + name] instanceof Function)) throw new Error.invalidOperation(String.format(Sys.Res.undefinedEvent, name));
            if (!(events[name] instanceof Function)) throw new Error.invalidOperation(Sys.Res.eventHandlerNotFunction);
            if (!body) {
            if (!clientRect) {
            if (!create) return null;
            if (!elementPosition || (elementPosition !== "absolute")) {
            if (!expectedType.__flags || (param === 0)) {
            if (!field._isContained) {
            if (!interfaceType.__interface) throw Error.argument('interfaceTypes[' + (i - 2) + ']', Sys.Res.notAnInterface);
            if (!isObject && typeof(targetVal) === 'undefined') throw Error.invalidOperation(String.format(Sys.Res.propertyUndefined, name));
            if (!postBackElement) {
            if (!src || (src.tagName.toLowerCase() !== "textarea")) {
            if (!this._ignoreTimer) {
            if (!this.prototype[memberName]) {
            if (!updatePanelElement) {
            if (!val || (typeof(val) !== 'object') || (isObject && !targetVal)) {
            if (!xml || !xml.documentElement)
            if (((statusCode < 200) || (statusCode >= 300)) || errorObj) {
            if ((element.window && (element.window === element)) || element.nodeType === 9) return new Sys.UI.Point(0,0);
            if ((equal !== -1) && (equal + 1 < token.length)) {
            if ((headers === null) || !headers['Content-Type']) {
            if ((len % 1) !== 0) {
            if ((replyIndex + len) >= reply.length) {
            if ((Sys.Browser.agent === Sys.Browser.InternetExplorer) && (Sys.Browser.documentMode < 8)) {
            if ((typeof(array[i]) !== "undefined") && (array[i] === item)) {
            if ((v !== null) && ((t === 'object') || (t === 'function') || (t === 'undefined'))) {
            if ((vali & value) === vali) {
            if (Array.contains(parents, current)) throw Error.invalidOperation(Sys.Res.circularParentChain);
            if (Array.indexOf(interfaces, interfaceType) !== -1) {
            if (Array.indexOf(refreshedIDs, oldIDs[i]) === -1 &&
            if (callback) {
            if (clientID.startsWith(parentIDList[i] + "_")) {
            if (confirm(String.format(Sys.Res.breakIntoDebugger, message))) {
            if (curElem.id && this._associatedUpdatePanelId === curElem.id) {
            if (curGroupIndex < groupSizes.length) {
            if (currentTarget.onBubbleEvent(source, args)) {
            if (curSize === 0 || curSize > stringIndex) {
            if (d && (this._validPosition(d.scrollLeft) || this._validPosition(d.scrollTop))) {
            if (date) return date;
            if (delimiterIndex === -1) {
            if (doc != param) {
            if (document.addEventListener) {
            if (dotIndex !== -1) {
            if (e) {
            if (e) throw e;
            if (element === container) {
            if (element) {
            if (element._visibilityMode === Sys.UI.VisibilityMode.hide) {
            if (element.id) {
            if (element.self || element.nodeType === 9) return new Sys.UI.Point(0,0);
            if (entry !== currentHash) {
            if (errorObj) {
            if (escaped) strBuilder.append("'");
            if (escaped) strBuilder.append("\\");
            if (evt) {
            if (failed  || !Sys.Net.WebRequestExecutor.isInstanceOfType(executor) || !executor) {
            if (field) {
            if (focusTarget) {
            if (format.charAt(close + 1) !== '}') {
            if (fragmentIndex !== -1) {
            if (handler) {
            if (history) {
            if (hour === 0) hour = 12;
            if (i === 0) {
            if (indexOfLastDollar === -1) {
            if (initialLoad || Array.indexOf(childIDs, newIDs[i]) !== -1) {
            if (isFinite(start)) {
            if (key !== '__s') {
            if (key === '__s') {
            if (name) {
            if (newServerEntry !== oldServerEntry) {
            if (node.nodeType == 1) {
            if (onFailure) {
            if (parentElement.control) {
            if (parsedName !== ns) {
            if (prevObjects){
            if (queryIndex !== -1) {
            if (reply.charAt(replyIndex) !== '|') {
            if (response.get_timedOut()) {
            if (result instanceof Array) {
            if (ret.length > 0)
            if (right.length > precision) {
            if (scriptElement.text && Sys.Browser.agent === Sys.Browser.Safari) {
            if (scriptSrc.length) {
            if (separator !== '') {
            if (serverStateField) {
            if (start < 0) {
            if (Sys.Browser.agent !== Sys.Browser.InternetExplorer) {
            if (Sys.Browser.agent === Sys.Browser.InternetExplorer) {
            if (tagName === 'INPUT') {
            if (this._beginRequestHandler) {
            if (this._body === null) {
            if (this._dynamicLayout) this.get_element().style.display = 'block';
            if (this._elementContains(updatePanelElement, document.getElementById(updatePanelID))) {
            if (this._endRequestHandler) {
            if (this._historyFrame && this._historyPointIsNew) {
            if (this._isSafari2()) {
            if (this._scriptErrorDelegate) {
            if (this._timerCookie) {
            if (type.isInstanceOfType(behaviors[i])) {
            if (typeof(name) === "undefined" || (name === null) || (name.length === 0) || (name === this._scriptManagerID)) {
            if (typeof(nextScript.src) === "string") {
            if (typeof(parsed) !== 'number') throw Error.argument('value', String.format(Sys.Res.enumInvalidValue, value.split(',')[i].trim(), this.__typeName));
            if (typeof(redirectUrl) !== "undefined" && redirectUrl !== null) {
            if (typeof(setter) === 'function') {
            if (unloadHandler) {
            if (vali === 0) continue;
            if (value === null) {
            if (value.endsWith(neg)) {
            if (value.startsWith('(') && value.endsWith(')')) {
            if (value.startsWith(neg)) {
            if (values[i] === value) {
            if (window.pageUnload) {
            if (window.scrollTo) {
            if (window.theForm) {
            if(!seen[prop]) { Array.add(nodups, prop); seen[prop]=true; };
            if(callback) {
            if(sl) {
            if(Sys.Services.ProfileGroup.isInstanceOfType(val)) {
            if(this._currentTask._notified === 1) {
            if(this._currentTask._notified > 1) {
            if(this._loadHandlerDelegate) {
            key = groupName ? groupName + "." + property : property;
            len = parseInt(reply.substring(replyIndex, delimiterIndex), 10);
            maxParams = Number.MAX_VALUE;
            message = (displayCaller && this.assert.caller) ?
            methodName = "GetAllPropertiesForCurrentUser";
            methodName = "GetPropertiesForCurrentUser";
            minParams++;
            name: 'Sys.WebForms.PageRequestManagerServerErrorException',
            neg += ' ';
            neg = ' ' + neg;
            newIDs = this._updatePanelIDs;
            newIDs = upData.updatePanelIDs;
            newUpdatePanelClientIDs = [];
            newUpdatePanelClientIDs = new Array(l);
            newUpdatePanelHasChildrenAsTriggers = [];
            newUpdatePanelHasChildrenAsTriggers = new Array(l);
            newUpdatePanelIDs = [];
            newUpdatePanelIDs = new Array(l);
            node = childNodes[i];
            node = data.arrayDeclarationNodes[i];
            node = data.dataItemJsonNodes[i];
            node = data.dataItemNodes[i];
            node = data.expandoNodes[i];
            node = data.hiddenFieldNodes[i];
            node = data.scriptDisposeNodes[i];
            node = data.updatePanelNodes[i];
            nodeQueue[nodeQueue.length] = node;
            ns = rootObject[currentPart] = {
            ns.getName = function ns$getName() {return this.__typeName;}
            null);        
            number = zeroPad(""+number, precision, true);
            numberString += right.slice(0, exponent);
            numberString = numberString.slice(0, -exponent);
            numberString = zeroPad(numberString, exponent+1, true);
            onSubmitNodes: onSubmitNodes,
            onSubmitStatementScript += "\r\nreturn true;\r\n});\r\n";
            onSubmitStatementScript += data.onSubmitNodes[i].content + "\r\n";
            panelsToRefreshNode: panelsToRefreshNode,
            parameters = { authenticatedUserOnly: false };
            parameters = { properties: this._clonePropertyNames(propertyNames), authenticatedUserOnly: false };
            paramName += "[" + (i - expectedParams.length + 1) + "]";
            parentElement = parentElement.parentNode;
            parents[parents.length] = current;
            parsed = values[part];
            path = Sys.Services._AuthenticationService.DefaultWebServicePath;
            path = Sys.Services._ProfileService.DefaultWebServicePath;
            path = Sys.Services._RoleService.DefaultWebServicePath;
            pos += ' ';
            pos = ' ' + pos;
            postBackControlClientIDs: newPostBackControlClientIDs
            postBackControlIDs: newPostBackControlIDs,
            postBackControlIDsNode: postBackControlIDsNode,
            refreshedIDs = null;
            refreshedIDs = upData.panelsToRefreshIDs;
            regexp.append(match[0]);
            replyIndex += len;
            replyIndex = delimiterIndex + 1;
            replyIndex++;
            res[res.length] = components[name];
            result += '{';
            result += arg.format(argFormat);
            result += arg.localeFormat(argFormat);
            result += arg.toFormattedString(argFormat);
            result += arg.toString();
            result += format.slice(i);
            result += format.slice(i, close + 1);
            result = this._xmlHttpRequest.getResponseHeader(header);
            result = this._xmlHttpRequest.status;
            result.__s = entry.substr(serverSeparator + 2);
            result[i] = this._toUpper(arr[i]);
            ret += nf.CurrencySymbol;
            ret += nf.NegativeSign;
            ret += nf.PercentSymbol;
            ret += number;
            ret.append(((hour <= 0) ? '+' : '-') + addLeadingZero(Math.floor(Math.abs(hour))) +
            ret.append(((hour <= 0) ? '+' : '-') + addLeadingZero(Math.floor(Math.abs(hour))));
            ret.append(((hour <= 0) ? '+' : '-') + Math.floor(Math.abs(hour)));
            ret.append(((this.getHours() < 12) ? dtf.AMDesignator : dtf.PMDesignator).charAt(0));
            ret.append((this.getHours() < 12) ? dtf.AMDesignator : dtf.PMDesignator);
            ret.append(addLeadingZero(hour));
            ret.append(addLeadingZero(this.getDate()));
            ret.append(addLeadingZero(this.getFullYear() % 100));
            ret.append(addLeadingZero(this.getHours()));
            ret.append(addLeadingZero(this.getMinutes()));
            ret.append(addLeadingZero(this.getMonth() + 1));
            ret.append(addLeadingZero(this.getSeconds()));
            ret.append(addLeadingZeros(this.getMilliseconds()));
            ret.append(addLeadingZeros(this.getMilliseconds()).charAt(0));
            ret.append(addLeadingZeros(this.getMilliseconds()).substr(0, 2));
            ret.append(ar[0]);
            ret.append(dtf.AbbreviatedDayNames[this.getDay()]);
            ret.append(dtf.AbbreviatedMonthNames[this.getMonth()]);
            ret.append(dtf.DayNames[this.getDay()]);
            ret.append(dtf.MonthNames[this.getMonth()]);
            ret.append(hour);
            ret.append(this.getDate());
            ret.append(this.getFullYear() % 100);
            ret.append(this.getFullYear());
            ret.append(this.getHours());
            ret.append(this.getMinutes());
            ret.append(this.getMonth() + 1);
            ret.append(this.getSeconds());
            return "POST";
            return {
            return { value: flattenedProperties, count: 0 };
            return '0' + num;
            return '00' + num;
            return domParser.parseFromString(markup, 'text/xml');
            return dtf.FullDateTimePattern;
            return dtf.LongDatePattern;
            return dtf.LongTimePattern;
            return dtf.MonthDayPattern;
            return dtf.ShortDatePattern;
            return dtf.ShortTimePattern;
            return dtf.SortableDateTimePattern;
            return dtf.YearMonthPattern;
            return e;
            return handler.call(element, new Sys.UI.DomEvent(e));
            return method.apply(this, args);
            return new Sys.UI.Point(offsetX, offsetY);
            return node;
            return null;
            return proposedSettings;
            return Sys.Net.WebRequestManager.get_defaultTimeout();
            return this._createPostBackSettings(false, null, null);
            return this.toLocaleString();
            return this.toString();
            return true;
            return year - 100;
            return;
            right = "";
            right = decimalChar + right;
            right = numberString.slice(-exponent, numberString.length) + right;
            right = right.substr(exponent);
            right = zeroPad(right, exponent, false);
            rounded = number;
            sb.append('&');
            scriptBlockNodes: scriptBlockNodes,
            scriptDisposeNodes: scriptDisposeNodes,
            scriptElement[attr] = queuedScript[attr];
            scriptLoader.queueScriptBlock(arrayScript);
            scriptLoader.queueScriptBlock(expandoScript);
            scriptLoader.queueScriptBlock(onSubmitStatementScript);
            scriptLoadFailedCallback: scriptLoadFailedCallback,
            scriptLoadTimeoutCallback: scriptLoadTimeoutCallback,
            scriptStartupNodes: scriptStartupNodes,
            scriptsToLoad: this._scriptsToLoad,
            scriptTimeout: scriptTimeout };
            sep = '&';
            sl.notifyScriptLoaded();
            sorted = [];
            sorted.sort(function(a, b) {
            start = 0;
            str = (left ? ('0' + str) : (str + '0'));
            strBuilder.append(c);
            string = string.replace(Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal,
            String.format(Sys.Res.argumentTypeWithTypes, actualType.getName(), expectedType.getName());
            stringBuilder.append('null');
            stringIndex -= curSize;
            switch (deltaNode.type) {
            switch (groups[j]) {
            switch (scriptBlockType) {
            switch(element.tagName.toUpperCase()) {
            Sys$Component$_setReferences(component, components[i].references);
            Sys$Component$_setReferences(component, references);
            Sys._Application.callBaseMethod(this, 'dispose');
            Sys.Application._components[id] || null);
            Sys.Application.raiseLoad();
            Sys.Browser.documentMode = document.documentMode;    
            Sys.Net.WebServiceProxy._defaultFailedCallback(err, methodName);
            Sys.Serialization.JavaScriptSerializer._init();
            Sys.UI.DomEvent.addHandler(window, "load", onload);
            Sys.UI.DomEvent.removeHandler(this._form, 'click', this._onFormElementClickHandler);
            Sys.UI.DomEvent.removeHandler(this._form, 'submit', this._onFormSubmitHandler);
            Sys.UI.DomEvent.removeHandler(window, "load", this._loadHandlerDelegate);
            Sys.UI.DomEvent.removeHandler(window, "unload", this._unloadHandlerDelegate);
            Sys.UI.DomEvent.removeHandler(window, 'load', this._pageLoadedHandler);
            Sys.UI.DomEvent.removeHandler(window, 'unload', this._onWindowUnloadHandler);
            Sys.UI.MouseButton.leftButton;
            Sys.WebForms.PageRequestManager.getInstance().add_beginRequest(this._beginRequestHandler);
            Sys.WebForms.PageRequestManager.getInstance().add_endRequest(this._endRequestHandler);
            this.__baseType.apply(instance);
            this.__baseType.apply(instance, baseArguments);
            this.__interfaces.push(interfaceType);
            this.__lowerCaseValues = values = {};
            this.__sortedValues = sorted;
            this._additionalInput = null;
            this._asyncPostBackControlClientIDs = updatePanelData.asyncPostBackControlClientIDs;
            this._asyncPostBackControlIDs = updatePanelData.asyncPostBackControlIDs;
            this._asyncPostBackTimeout = asyncPostBackTimeout * 1000;
            this._authenticated = true;
            this._beginRequestHandler = Function.createDelegate(this, this._onPageRequestManagerBeginRequest);
            this._beginRequestHandlerDelegate = null;
            this._cancelPendingCallbacks();
            this._controlIDToFocus = null;
            this._createHiddenField(node.id, node.content);
            this._currentEntry = entry;
            this._currentSession = null;
            this._currentTask = null;
            this._currentTask.dispose();
            this._dateTimeFormats =
            this._disposableObjects[this._disposableObjects.length] = object;
            this._disposing = true;
            this._doPostback();
            this._element.control = undefined;
            this._endPostBack(null, sender, null);
            this._endPostBack(this._createPageRequestManagerParserError(String.format(Sys.WebForms.Res.PRM_ParserErrorDetails, parserErrorDetails)), executor, null);
            this._endPostBack(this._createPageRequestManagerServerError(sender.get_statusCode()), sender, null);
            this._endPostBack(this._createPageRequestManagerTimeoutError(), sender, null);
            this._endRequestHandler = Function.createDelegate(this, this._onPageRequestManagerEndRequest);
            this._endRequestHandlerDelegate = null;
            this._events = new Sys.EventHandlerList();
            this._form.action = data.formActionNode.content;
            this._form.appendChild(container);
            this._historyInitialized = true;
            this._historyPointIsNew = false;
            this._historyPointIsNew = true;
            this._ignoreTimer = false;
            this._ignoreTimer = true;
            this._initializing = true;
            this._isCrossPost = false;
            this._len = parts.length;
            this._list[id] = [];
            this._loadHandlerDelegate = null;
            this._loading = false;
            this._navigate(entry);
            this._navigate(loadedEntry);
            this._nextSession();
            this._onFormElementActive(this._activeDefaultButton, 0, 0);
            this._originalDoCallback = null;
            this._originalDoCallback(eventTarget, eventArgument, eventCallback, context, errorCallback, useAsync);
            this._originalDoPostBack = null;
            this._originalDoPostBack(eventTarget, eventArgument);
            this._originalDoPostBackWithOptions = null;
            this._originalFireDefaultButton = null;
            this._pageRequestManager.remove_beginRequest(this._beginRequestHandlerDelegate);
            this._pageRequestManager.remove_endRequest(this._endRequestHandlerDelegate);
            this._postBackControlClientIDs = updatePanelData.postBackControlClientIDs;
            this._postBackControlIDs = updatePanelData.postBackControlIDs;
            this._postbackPending = false;
            this._postbackPending = true;
            this._postBackSettings = this._createPostBackSettings(false, null, null);
            this._processingRequest = false;
            this._processUpdatePanelArrays(updatePanelIDs, asyncPostBackControlIDs, postBackControlIDs),
            this._raiseError(false);
            this._raiseNavigate();
            this._registerDisposeScript(node.id, node.content);
            this._request = null;
            this._request.get_executor().abort();
            this._resultObject = Sys.Serialization.JavaScriptSerializer.deserialize(this.get_responseData());
            this._rolesIndex = index;
            this._scriptDisposes[panelID] = [disposeScript];
            this._scriptElement.addEventListener('error', this._scriptErrorDelegate, false);
            this._scriptElement.readyState = 'loaded';
            this._scriptErrorDelegate = Function.createDelegate(this, this._scriptErrorHandler);
            this._scriptLoadDelegate = null;
            this._scriptsToLoad = [];
            this._scrollPosition = null;
            this._setState(entry);
            this._startTimer();
            this._stopSession();
            this._timer = window.setTimeout(Function.createDelegate(this, this._onTimeout), timeout);
            this._timerCookie = null;
            this._timerCookie = window.setTimeout(this._startDelegate, this._displayAfter);
            this._timerCookie = window.setTimeout(this._timerHandler, 100);
            this._timerHandler = Function.createDelegate(this, this._onIdle);
            this._update(dataItem[0],dataItem[1]);
            this._updatePanel(updatePanelElement, node.content);
            this._updatePanelClientIDs = updatePanelData.updatePanelClientIDs;
            this._updatePanelHasChildrenAsTriggers = updatePanelData.updatePanelHasChildrenAsTriggers;
            this._updatePanelIDs = updatePanelData.updatePanelIDs;
            this._upperAbbrDays = this._toUpperArray(this.dateTimeFormat.AbbreviatedDayNames);
            this._upperAbbrMonths = this._toUpperArray(this.dateTimeFormat.AbbreviatedMonthNames);
            this._upperDays = this._toUpperArray(this.dateTimeFormat.DayNames);
            this._upperMonths = this._toUpperArray(this.dateTimeFormat.MonthNames);
            this._value = {};
            this._webRequest.completed(Sys.EventArgs.Empty);
            this._xmlHttpRequest = null;            
            this._xmlHttpRequest.abort();
            this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
            this.beginCreateComponents();
            this.endCreateComponents();
            this.get_events().addHandler("init", handler);
            this.offsetX = (w.pageXOffset || 0) + e.clientX - loc.x;
            this.offsetX = e.offsetX;
            this.offsetY = (w.pageYOffset || 0) + e.clientY - loc.y;
            this.offsetY = e.offsetY;
            this.properties[name] = unflattened[name];
            this.rawEvent.cancelBubble = true;
            this.rawEvent.preventDefault();
            this.rawEvent.returnValue = false;
            this.rawEvent.stopPropagation();
            this.setServerState(dataItem);
            this.trace(indentationPadding + name + ': null');
            this[property] = properties[property];
            throw Error.argument("baseUrl", Sys.Res.badBaseUrl1);
            throw Error.argument("baseUrl", Sys.Res.badBaseUrl2);
            throw Error.argument("baseUrl", Sys.Res.badBaseUrl3);
            throw Error.argument('value', Sys.Res.invalidHttpVerb);
            throw Error.argument('value', Sys.Res.invalidId);
            throw Error.argumentOutOfRange("value", value, Sys.Res.invalidTimeout);
            throw Error.format(Sys.Res.formatInvalidString);
            throw Error.invalidOperation(String.format(Sys.Res.behaviorDuplicateName, value));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_responseData'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_statusCode'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_statusText'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_xml'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'getAllResponseHeaders'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'getResponseHeader'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOnceStarted, 'executeRequest'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOnceStarted, 'set_webRequest'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_responseData'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_statusCode'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_statusText'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_xml'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'getAllResponseHeaders'));
            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'getResponseHeader'));
            throw Error.invalidOperation(String.format(Sys.Res.namespaceContainsObject, namespaceParts.splice(0, i + 1).join('.')));
            throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "Array"));
            throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "Boolean"));
            throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "null"));
            throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "Object"));
            throw Error.invalidOperation(Sys.Res.cannotAbortBeforeStart);
            throw Error.invalidOperation(Sys.Res.historyCannotEnableHistory);
            throw Error.invalidOperation(Sys.Res.invalidHistorySettingCombination);
            throw Error.invalidOperation(Sys.Res.invokeCalledTwice);
            throw Error.invalidOperation(Sys.Res.nullWebRequest);
            throw Error.invalidOperation(Sys.Res.servicePathNotSet);
            throw Error.invalidOperation(Sys.Res.setExecutorAfterActive);
            throw Error.invalidOperation(Sys.WebForms.Res.PRM_CannotRegisterTwice);
            throw error;
            throw Sys._ScriptLoader._errorScriptLoadFailed(data.scriptsFailed.src, data.scriptsFailed.multipleCallbacks);
            throw Sys._ScriptLoader._errorScriptLoadFailed(scriptElement.src, multipleCallbacks);
            traceElement.value += text + '\n';
            traceElement.value = '';
            try {
            try {e = Sys.UI.DomElement._getWindow(element).event} catch(ex) {}
            type = reply.substring(replyIndex, delimiterIndex);
            uniqueID = uniqueID.substring(0, indexOfLastDollar);
            updatePanelClientIDs: newUpdatePanelClientIDs,
            updatePanelData.childUpdatePanelIDs = childUpdatePanelIDs;
            updatePanelData.oldUpdatePanelIDs = oldUpdatePanelIDs;
            updatePanelData.panelsToRefreshIDs = panelsToRefreshIDs;
            updatePanelHasChildrenAsTriggers: newUpdatePanelHasChildrenAsTriggers,
            updatePanelIDs: newUpdatePanelIDs,
            updatePanelIDsNode, asyncPostBackTimeoutNode,
            updatePanelIDsNode: updatePanelIDsNode,
            updatePanelNodes: updatePanelNodes,
            v |= parsed;
            val = (param.nodeType === 3);
            val = properties[key];
            val = properties[property];
            val[separator] = this._parts.join(separator);
            var args = [];
            var asyncPostBackControlIDsArray = this._splitNodeIntoArray(data.asyncPostBackControlIDsNode);
            var callback = session.allScriptsLoadedCallback;
            var callback = window.__pendingCallbacks[i];
            var check, er, app = this;
            var childNodes = element.childNodes;
            var childUpdatePanelIDs = childUpdatePanelIDsString.length ? childUpdatePanelIDsString.split(',') : [];
            var childUpdatePanelIDsString = data.childUpdatePanelIDsNode.content;
            var clientID = this._uniqueIDToClientID(eventTarget);
            var clientID = this._uniqueIDToClientID(uniqueID);
            var clientRect = element.getBoundingClientRect();
            var clonedResult = Array.clone(result);
            var component = components[i].component;
            var currentHash = this.get_stateString();
            var currentStyle = null;
            var currentStyle;
            var date = Date._parseExact(value, format, cultureInfo);
            var date = Date._parseExact(value, formats[i], cultureInfo);
            var deltaNode = delta[i];
            var disposableObjects = Array.clone(this._disposableObjects);
            var doc = param.ownerDocument || param.document || param;
            var documentElement = element.ownerDocument.documentElement;
            var domParser = new window.DOMParser();
            var dtf = this.dateTimeFormat;
            var e = {};
            var e = Function._validateParams(arguments, [
            var elem = param[i];
            var element = document.getElementById(clientID);
            var element = form.elements[i];
            var elementPosition = currentStyle ? currentStyle.position : null;
            var elementPosition = element.style.position;
            var elementPositioned = elementPosition && (elementPosition !== "static");
            var equal = token.indexOf('=');
            var error = response.getResponseHeader("jsonerror");
            var errorObj = (error === "true");
            var eventArgs = new Sys.WebForms.EndRequestEventArgs(error, data ? data.dataItems : {}, executor);
            var failed = false;
            var field = document.getElementById(this._transientFields[i]);
            var focusTarget;
            var fragmentIndex = action.indexOf('#');
            var handler = this._events.getHandler("disposing");
            var handlers = cache[name];
            var history = this._getHistory();
            var index = {};
            var indexOfLastDollar = uniqueID.lastIndexOf('$');
            var interfaceType = arguments[i];
            var kvp = sorted[i];
            var l = updatePanelIDs.length;
            var loc = Sys.UI.DomElement.getLocation(this.target);
            var memberValue = baseType.prototype[memberName];
            var msg;
            var name = element.name;
            var name = this.get_name();
            var newServerEntry = state.__s || '';
            var nextScript = Array.dequeue(session.scriptsToLoad);
            var offsetX = 0;
            var offsetX = clientRect.left - 2 + documentElement.scrollLeft,
            var offsetY = 0;
            var oldContentEditableSetting;
            var oldServerEntry = this._state.__s || '';
            var oldUpdatePanelIDs = this._updatePanelIDs;
            var onload = function() {
            var panelsToRefreshIDs = this._splitNodeIntoArray(data.panelsToRefreshNode);
            var parsedName;
            var part = parts[i].trim();
            var postBackControlIDsArray = this._splitNodeIntoArray(data.postBackControlIDsNode);
            var postBackElement = document.getElementById(clientID);
            var previous = null;
            var previousStyle = null;
            var prop = arr[i];
            var prototype = this.prototype;
            var queryIndex = action.indexOf('?');
            var result = null;
            var scriptBlockType = scriptBlockNodes[i].id;
            var scriptElement = this._createScriptElement(nextScript);
            var scriptElement = this.get_scriptElement();
            var scriptNode = existingScripts[i];
            var scriptSrc = scriptNode.src;
            var serverStateField = document.getElementById(this._clientId);
            var setter = target["set_" + name];
            var sl = Sys._ScriptLoader.getInstance();
            var src = event.srcElement || event.target;
            var statusCode = response.get_statusCode();
            var t = typeof(v);
            var tagName = element.tagName.toUpperCase();
            var targetVal = target[name];
            var token = tokens[i];
            var unloadHandler = this.get_events().getHandler("unload");
            var updatePanelData = this._processUpdatePanelArrays(
            var updatePanelElement = document.getElementById(node.id);
            var updatePanelIDsArray = this._splitNodeIntoArray(data.updatePanelIDsNode);
            var userContext = context[2] || this.get_defaultUserContext();
            var userContext = context[2] || this.get_defaultUserContext();        
            var userContext = context[7] || this.get_defaultUserContext();
            var v = state[n];
            var vali = kvp.value;
            var value = state[key];
            var values = expectedType.prototype;
            var w = Sys.UI.DomElement._getWindow(this.target);
            WebForm_AutoFocus(this._controlIDToFocus);
            webRequest.set_executor(executor);
            window.__doPostBack = Function.createDelegate(this, this._doPostBack);
            window.__doPostBack = this._originalDoPostBack;
            window.__theFormPostCollection = [];
            window.__theFormPostData = "";
            window.clearTimeout(_this._timer);
            window.clearTimeout(this._timerCookie);
            window.console.log(text);
            window.debugService.trace(text);
            window.location.href = redirectUrl;
            window.location.reload();
            window.opera.postError(text);
            window.pageLoad(this, args);
            window.WebForm_DoCallback = Function.createDelegate(this, this._doCallback);
            window.WebForm_DoCallback = this._originalDoCallback;
            window.WebForm_DoPostBackWithOptions = Function.createDelegate(this, this._doPostBackWithOptions);
            window.WebForm_DoPostBackWithOptions = this._originalDoPostBackWithOptions;
            window.WebForm_FireDefaultButton = Function.createDelegate(this, this._fireDefaultButton);
            window.WebForm_FireDefaultButton = this._originalFireDefaultButton;
            window.WebForm_InitCallback();
            xml = Sys.Net.XMLDOM(this._xmlHttpRequest.responseText);
            xml.documentElement.tagName === "parsererror") {
            xml.setProperty('SelectionLanguage', 'XPath');
           (instanceType.implementsInterface && instanceType.implementsInterface(this));
           (instanceType.inheritsFrom && instanceType.inheritsFrom(this)) ||
           -->
           this._pageRequestManager = Sys.WebForms.PageRequestManager.getInstance();
           this._pageRequestManager = Sys.WebForms.PageRequestManager.getInstance();  
           this._pageRequestManager.remove_endRequest(this._endRequestHandlerDelegate);
          <!--
          </xs:complexType>
          </xs:key>
          </xs:sequence>
          <xs:complexType>
          <xs:key name="MetadataFileNameKey">
          <xs:key name="MetadataIDKey">
          <xs:key name="ReferenceGroupExtensionNameKey">
          <xs:sequence>
          currentFrame !== null &&
          currentFrame.indexOf(pattern) === -1) {
         -->
         throw Error.argument('data', Sys.Res.cannotDeserializeInvalidJson);
        $addHandler(element, name, handler);
        (expectedElementType || !elementMayBeNull)) {
        /// <param name="allScriptsLoadedCallback" type="Function" mayBeNull="true"></param>
        /// <param name="args" type="Sys.EventArgs"></param>
        /// <param name="className" type="String"></param>
        /// <param name="clientId" type="String"></param>
        /// <param name="component" type="Sys.Component"></param>
        /// <param name="condition" type="Boolean"></param>
        /// <param name="customInfo" type="String" optional="true" mayBeNull="true"></param>
        /// <param name="displayCaller" type="Boolean" optional="true"></param>
        /// <param name="eventArgs" type="Sys.EventArgs"></param>
        /// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="handler" type="Function"></param>
        /// <param name="header" type="String"></param>
        /// <param name="id" type="String"></param>
        /// <param name="isPersistent" type="Boolean" optional="true" mayBeNull="true"></param>
        /// <param name="loadCompletedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="loginCompletedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="logoutCompletedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="message" type="String" mayBeNull="true"></param>
        /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
        /// <param name="methodName" type="String"></param>
        /// <param name="name" type="String" mayBeNull="true" optional="true"></param>
        /// <param name="object" mayBeNull="true"></param>
        /// <param name="object" type="Sys.IDisposable"></param>
        /// <param name="onFailure" type="Function" mayBeNull="true" optional="true"></param>
        /// <param name="onSuccess" type="Function" mayBeNull="true" optional="true"></param>
        /// <param name="params"></param>
        /// <param name="parent" optional="true" mayBeNull="true"></param>
        /// <param name="password" type="String" mayBeNull="true"></param>
        /// <param name="propertyName" type="String"></param>
        /// <param name="propertyNames" type="Array" elementType="String" optional="true" elementMayBeNull="false" mayBeNull="true"></param>
        /// <param name="redirectUrl" type="String" optional="true" mayBeNull="true"></param>
        /// <param name="role" type="String" mayBeNull="false"></param>
        /// <param name="saveCompletedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="scriptAttributes" mayBeNull="false"></param>
        /// <param name="scriptContent" type="String" mayBeNull="false"></param>
        /// <param name="scriptLoadFailedCallback" type="Function" mayBeNull="true"></param>
        /// <param name="scriptLoadTimeoutCallback" type="Function" mayBeNull="true"></param>
        /// <param name="scriptTimeout" type="Number" integer="true"></param>
        /// <param name="scriptUrl" type="String" mayBeNull="false"></param>
        /// <param name="separator" type="String" optional="true" mayBeNull="true"></param>
        /// <param name="servicePath" type="String"></param>
        /// <param name="source"></param>
        /// <param name="state" type="Object"></param>
        /// <param name="text" mayBeNull="true"></param>
        /// <param name="text" optional="true" mayBeNull="true"></param>
        /// <param name="text"></param>
        /// <param name="title" type="String" optional="true" mayBeNull="true"></param>
        /// <param name="uniqueId" type="String"></param>
        /// <param name="useGet" type="Boolean"></param>
        /// <param name="userContext" mayBeNull="true" optional="true"></param>
        /// <param name="userContext" optional="true" mayBeNull="true"></param>
        /// <param name="username" type="String" mayBeNull="false"></param>
        /// <param name="value" type="String"></param>
        /// <param name="webRequest" type="Sys.Net.WebRequest"></param>
        /// <returns type="Array" elementType="Sys.Component"></returns>
        /// <returns type="Boolean"></returns>
        /// <returns type="Function"></returns>
        /// <returns type="String"></returns>
        /// <returns type="Sys.Component" mayBeNull="true"></returns>
        /// <returns type="Sys.Component"></returns>
        /// <returns type="Sys.Net.WebRequest"></returns>
        /// <summary locid="E:J#Sys.Application.init" />
        /// <summary locid="E:J#Sys.Application.load" />
        /// <summary locid="E:J#Sys.Application.navigate" />
        /// <summary locid="E:J#Sys.Application.unload" />
        /// <summary locid="E:J#Sys.Component.disposing" />
        /// <summary locid="E:J#Sys.Component.propertyChanged" />
        /// <summary locid="E:J#Sys.Net.WebRequestManager.completedRequest" />
        /// <summary locid="E:J#Sys.Net.WebRequestManager.invokingRequest" />
        /// <summary locid="E:J#Sys.WebForms.PageRequestManager.beginRequest" />
        /// <summary locid="E:J#Sys.WebForms.PageRequestManager.endRequest" />
        /// <summary locid="E:J#Sys.WebForms.PageRequestManager.initializeRequest" />
        /// <summary locid="E:J#Sys.WebForms.PageRequestManager.pageLoaded" />
        /// <summary locid="E:J#Sys.WebForms.PageRequestManager.pageLoading" />
        /// <summary locid="M:J#Sys._ScriptLoader.loadScripts" />
        /// <summary locid="M:J#Sys._ScriptLoader.notifyScriptLoaded" />
        /// <summary locid="M:J#Sys._ScriptLoader.queueCustomScriptTag" />
        /// <summary locid="M:J#Sys._ScriptLoader.queueScriptBlock" />
        /// <summary locid="M:J#Sys._ScriptLoader.queueScriptReference" />
        /// <summary locid="M:J#Sys._ScriptLoaderTask.execute" />
        /// <summary locid="M:J#Sys.Application.addComponent" />
        /// <summary locid="M:J#Sys.Application.addHistoryPoint" />
        /// <summary locid="M:J#Sys.Application.beginCreateComponents" />
        /// <summary locid="M:J#Sys.Application.dispose" />
        /// <summary locid="M:J#Sys.Application.endCreateComponents" />
        /// <summary locid="M:J#Sys.Application.findComponent" />
        /// <summary locid="M:J#Sys.Application.getComponents" />
        /// <summary locid="M:J#Sys.Application.initialize" />
        /// <summary locid="M:J#Sys.Application.notifyScriptLoaded" />
        /// <summary locid="M:J#Sys.Application.raiseLoad" />
        /// <summary locid="M:J#Sys.Application.registerDisposableObject" />
        /// <summary locid="M:J#Sys.Application.removeComponent" />
        /// <summary locid="M:J#Sys.Application.setServerId" />
        /// <summary locid="M:J#Sys.Application.setServerState" />
        /// <summary locid="M:J#Sys.Application.unregisterDisposableObject" />
        /// <summary locid="M:J#Sys.Component.raisePropertyChanged" />
        /// <summary locid="M:J#Sys.Debug.assert" />
        /// <summary locid="M:J#Sys.Debug.clearTrace" />
        /// <summary locid="M:J#Sys.Debug.fail" />
        /// <summary locid="M:J#Sys.Debug.trace" />
        /// <summary locid="M:J#Sys.Debug.traceDump" />
        /// <summary locid="M:J#Sys.EventHandlerList.addHandler" />
        /// <summary locid="M:J#Sys.EventHandlerList.getHandler" />
        /// <summary locid="M:J#Sys.EventHandlerList.removeHandler" />
        /// <summary locid="M:J#Sys.IContainer.addComponent" />
        /// <summary locid="M:J#Sys.IContainer.findComponent" />
        /// <summary locid="M:J#Sys.IContainer.getComponents" />
        /// <summary locid="M:J#Sys.IContainer.removeComponent" />
        /// <summary locid="M:J#Sys.Net.WebRequest.completed" />
        /// <summary locid="M:J#Sys.Net.WebRequest.getResolvedUrl" />
        /// <summary locid="M:J#Sys.Net.WebRequest.invoke" />
        /// <summary locid="M:J#Sys.Net.WebRequestExecutor.abort" />
        /// <summary locid="M:J#Sys.Net.WebRequestExecutor.executeRequest" />
        /// <summary locid="M:J#Sys.Net.WebRequestExecutor.getAllResponseHeaders" />
        /// <summary locid="M:J#Sys.Net.WebRequestExecutor.getResponseHeader" />
        /// <summary locid="M:J#Sys.Net.WebRequestManager.executeRequest" />
        /// <summary locid="M:J#Sys.Net.WebServiceProxy._invoke" />
        /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.abort" />
        /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.executeRequest" />
        /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.getAllResponseHeaders" />
        /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.getResponseHeader" />
        /// <summary locid="M:J#Sys.Services.AuthenticationService.login" />
        /// <summary locid="M:J#Sys.Services.AuthenticationService.logout" />
        /// <summary locid="M:J#Sys.Services.ProfileService.load" />
        /// <summary locid="M:J#Sys.Services.ProfileService.save" />
        /// <summary locid="M:J#Sys.Services.RoleService.isUserInRole" />
        /// <summary locid="M:J#Sys.Services.RoleService.load" />
        /// <summary locid="M:J#Sys.StringBuilder.append" />
        /// <summary locid="M:J#Sys.StringBuilder.appendLine" />
        /// <summary locid="M:J#Sys.StringBuilder.clear" />
        /// <summary locid="M:J#Sys.StringBuilder.isEmpty" />
        /// <summary locid="M:J#Sys.StringBuilder.toString" />
        /// <summary locid="M:J#Sys.UI.Control.addCssClass" />
        /// <summary locid="M:J#Sys.UI.Control.onBubbleEvent" />
        /// <summary locid="M:J#Sys.UI.Control.raiseBubbleEvent" />
        /// <summary locid="M:J#Sys.UI.Control.removeCssClass" />
        /// <summary locid="M:J#Sys.UI.Control.toggleCssClass" />
        /// <summary locid="M:J#Sys.UI.DomEvent.preventDefault" />
        /// <summary locid="M:J#Sys.UI.DomEvent.stopPropagation" />
        /// <value domElement="true" locid="P:J#Sys._ScriptLoaderTask.scriptElement"></value>
        /// <value domElement="true" locid="P:J#Sys.UI.Behavior.element"></value>
        /// <value domElement="true" locid="P:J#Sys.UI.Control.element"></value>
        /// <value domElement="true" mayBeNull="true" locid="P:J#Sys.WebForms.BeginRequestEventArgs.postBackElement"></value>
        /// <value domElement="true" mayBeNull="true" locid="P:J#Sys.WebForms.InitializeRequestEventArgs.postBackElement"></value>
        /// <value locid="P:J#Sys.Net.WebRequest.headers"></value>
        /// <value locid="P:J#Sys.Net.WebRequestExecutor.object"></value>
        /// <value locid="P:J#Sys.Net.WebRequestExecutor.xml"></value>
        /// <value locid="P:J#Sys.Net.XMLHttpExecutor.xml"></value>
        /// <value mayBeNull="true" locid="P:J#Sys.Net.WebRequest.body"></value>
        /// <value mayBeNull="true" locid="P:J#Sys.Net.WebRequest.userContext"></value>
        /// <value mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultUserContext"></value>
        /// <value type="Array" elementType="String" mayBeNull="false" locid="P:J#Sys.Services.RoleService.roles"></value>
        /// <value type="Array" elementType="Sys.Component" locid="P:J#Sys.ApplicationLoadEventArgs.components"></value>
        /// <value type="Array" locid="P:J#Sys.WebForms.PageLoadedEventArgs.panelsCreated"></value>
        /// <value type="Array" locid="P:J#Sys.WebForms.PageLoadedEventArgs.panelsUpdated"></value>
        /// <value type="Array" locid="P:J#Sys.WebForms.PageLoadingEventArgs.panelsDeleting"></value>
        /// <value type="Array" locid="P:J#Sys.WebForms.PageLoadingEventArgs.panelsUpdating"></value>
        /// <value type="Boolean" locid="P:J#Sys.Application.enableHistory"></value>
        /// <value type="Boolean" locid="P:J#Sys.Application.isCreatingComponents"></value>
        /// <value type="Boolean" locid="P:J#Sys.ApplicationLoadEventArgs.isPartialLoad"></value>
        /// <value type="Boolean" locid="P:J#Sys.CancelEventArgs.cancel"></value>
        /// <value type="Boolean" locid="P:J#Sys.Component.isInitialized"></value>
        /// <value type="Boolean" locid="P:J#Sys.Component.isUpdating"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.aborted"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.responseAvailable"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.started"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.timedOut"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.WebServiceError.timedOut"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.aborted"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.responseAvailable"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.started"></value>
        /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.timedOut"></value>
        /// <value type="Boolean" locid="P:J#Sys.Services.AuthenticationService.isLoggedIn"></value>
        /// <value type="Boolean" locid="P:J#Sys.UI._Timer.enabled"></value>
        /// <value type="Boolean" locid="P:J#Sys.UI._UpdateProgress.dynamicLayout"></value>
        /// <value type="Boolean" locid="P:J#Sys.UI.Control.visible"></value>
        /// <value type="Boolean" locid="P:J#Sys.WebForms.EndRequestEventArgs.errorHandled"></value>
        /// <value type="Boolean" locid="P:J#Sys.WebForms.PageRequestManager.isInAsyncPostBack"></value>
        /// <value type="Error" locid="P:J#Sys.WebForms.EndRequestEventArgs.error"></value>
        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultFailedCallback"></value>
        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultSucceededCallback"></value>
        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Services.AuthenticationService.defaultLoginCompletedCallback"></value>
        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Services.AuthenticationService.defaultLogoutCompletedCallback"></value>
        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Services.ProfileService.defaultLoadCompletedCallback"></value>
        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Services.ProfileService.defaultSaveCompletedCallback"></value>
        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Services.RoleService.defaultLoadCompletedCallback"></value>
        /// <value type="Number" locid="P:J#Sys.Net.WebRequest.timeout"></value>
        /// <value type="Number" locid="P:J#Sys.Net.WebRequestExecutor.statusCode"></value>
        /// <value type="Number" locid="P:J#Sys.Net.WebRequestManager.defaultTimeout"></value>
        /// <value type="Number" locid="P:J#Sys.Net.WebServiceError.statusCode"></value>
        /// <value type="Number" locid="P:J#Sys.Net.WebServiceProxy.timeout"></value>
        /// <value type="Number" locid="P:J#Sys.Net.XMLHttpExecutor.statusCode"></value>
        /// <value type="Number" locid="P:J#Sys.UI._Timer.interval"></value>
        /// <value type="Number" locid="P:J#Sys.UI._UpdateProgress.displayAfter"></value>
        /// <value type="Object" locid="P:J#Sys.HistoryEventArgs.state"></value>
        /// <value type="Object" locid="P:J#Sys.WebForms.EndRequestEventArgs.dataItems"></value>
        /// <value type="Object" locid="P:J#Sys.WebForms.PageLoadedEventArgs.dataItems"></value>
        /// <value type="Object" locid="P:J#Sys.WebForms.PageLoadingEventArgs.dataItems"></value>
        /// <value type="String" locid="P:J#Sys.Application.stateString"></value>
        /// <value type="String" locid="P:J#Sys.Component.id"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebRequest.httpVerb"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebRequest.url"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebRequestExecutor.responseData"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebRequestExecutor.statusText"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebRequestManager.defaultExecutorType"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebServiceError.exceptionType"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebServiceError.message"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebServiceError.stackTrace"></value>
        /// <value type="String" locid="P:J#Sys.Net.WebServiceProxy.path"></value>
        /// <value type="String" locid="P:J#Sys.Net.XMLHttpExecutor.responseData"></value>
        /// <value type="String" locid="P:J#Sys.Net.XMLHttpExecutor.statusText"></value>
        /// <value type="String" locid="P:J#Sys.PropertyChangedEventArgs.propertyName"></value>
        /// <value type="String" locid="P:J#Sys.UI._Timer.uniqueID"></value>
        /// <value type="String" locid="P:J#Sys.UI.Behavior.id"></value>
        /// <value type="String" locid="P:J#Sys.UI.Behavior.name"></value>
        /// <value type="String" locid="P:J#Sys.UI.Control.id"></value>
        /// <value type="String" mayBeNull="true" locid="P:J#Sys.Services.AuthenticationService.path"></value>
        /// <value type="String" mayBeNull="true" locid="P:J#Sys.Services.ProfileService.path"></value>
        /// <value type="String" mayBeNull="true" locid="P:J#Sys.Services.RoleService.path"></value>
        /// <value type="String" mayBeNull="true" locid="P:J#Sys.UI._UpdateProgress.associatedUpdatePanelId"></value>
        /// <value type="Sys.EventHandlerList" locid="P:J#Sys.Component.events"></value>
        /// <value type="Sys.Net.WebRequest" locid="P:J#Sys.Net.NetworkRequestEventArgs.webRequest"></value>
        /// <value type="Sys.Net.WebRequest" locid="P:J#Sys.Net.WebRequestExecutor.webRequest"></value>
        /// <value type="Sys.Net.WebRequest" locid="P:J#Sys.WebForms.BeginRequestEventArgs.request"></value>
        /// <value type="Sys.Net.WebRequest" locid="P:J#Sys.WebForms.InitializeRequestEventArgs.request"></value>
        /// <value type="Sys.Net.WebRequestExecutor" locid="P:J#Sys.Net.WebRequest.executor"></value>
        /// <value type="Sys.Net.WebRequestExecutor" locid="P:J#Sys.WebForms.EndRequestEventArgs.response"></value>
        /// <value type="Sys.UI.Control" locid="P:J#Sys.UI.Control.parent"></value>
        /// <value type="Sys.UI.VisibilityMode" locid="P:J#Sys.UI.Control.visibilityMode"></value>
        [initialText.toString()] : [];
        ]);
        __doPostBack(this.get_uniqueID(),'');
        {name: "actualType", type: Type, mayBeNull: true, optional: true},
        {name: "actualValue", mayBeNull: true, optional: true},
        {name: "args", mayBeNull: true, parameterArray: true}
        {name: "array", type: Array, elementMayBeNull: true}
        {name: "array", type: Array, elementMayBeNull: true},
        {name: "baseArguments", type: Array, mayBeNull: true, optional: true, elementMayBeNull: true}
        {name: "baseType", type: Type, mayBeNull: true, optional: true},
        {name: "className", type: String}
        {name: "completedCallback", type: Function}
        {name: "components", type: Array, elementType: Sys.Component},
        {name: "context", mayBeNull: true}
        {name: "data", type: String},
        {name: "dataItems", type: Object, mayBeNull: true}
        {name: "dataItems", type: Object, mayBeNull: true},
        {name: "dateTimeFormat", type: Object}
        {name: "element", domElement: true}
        {name: "element", domElement: true},
        {name: "element", mayBeNull: true, domElement: true, optional: true}
        {name: "element"}
        {name: "element"},
        {name: "error", type: Error, mayBeNull: true},
        {name: "errorInfo", mayBeNull: true, optional: true}
        {name: "eventName", type: String},
        {name: "eventObject"}
        {name: "events", mayBeNull: true, optional: true},
        {name: "events", type: Object},
        {name: "exceptionType", type: String, mayBeNull: true}
        {name: "expectedType", type: Type, mayBeNull: true, optional: true},
        {name: "flags", type: Boolean, optional: true}
        {name: "format", type: String}
        {name: "format", type: String},
        {name: "formats", mayBeNull: true, optional: true, parameterArray: true}
        {name: "handler", type: Function}
        {name: "handlerOwner", optional: true}
        {name: "height", type: Number, integer: true},
        {name: "id", type: String},
        {name: "ignoreCase", type: Boolean, optional: true}
        {name: "index", mayBeNull: true}
        {name: "index", mayBeNull: true},
        {name: "initialText", mayBeNull: true, optional: true}
        {name: "instance", mayBeNull: true, optional: true}
        {name: "instance", mayBeNull: true}
        {name: "instance", mayBeNull: true},
        {name: "instance"}
        {name: "instance"},
        {name: "interfaceType", type: Type}
        {name: "interfaceTypes", type: Type, parameterArray: true}
        {name: "isPartialLoad", type: Boolean}
        {name: "item", mayBeNull: true, optional: true},
        {name: "item", mayBeNull: true}
        {name: "items", type: Array, elementMayBeNull: true}
        {name: "markup", type: String}
        {name: "message", type: String, mayBeNull: true, optional: true}
        {name: "message", type: String, mayBeNull: true, optional: true},
        {name: "message", type: String, mayBeNull: true},
        {name: "method", type: Function}
        {name: "method", type: Function},
        {name: "methodName", type: String},
        {name: "name", type: String}
        {name: "name", type: String},
        {name: "namespacePath", type: String}
        {name: "ns", mayBeNull: true, optional: true}
        {name: "numberFormat", type: Object},
        {name: "object", mayBeNull: true}
        {name: "onFailure", type: Function, mayBeNull: true, optional: true},
        {name: "onSuccess", type: Function, mayBeNull: true, optional: true},
        {name: "panelsCreated", type: Array},
        {name: "panelsDeleting", type: Array},
        {name: "panelsUpdated", type: Array},
        {name: "panelsUpdating", type: Array},
        {name: "paramName", type: String, mayBeNull: true, optional: true},
        {name: "params", mayBeNull: true, optional: true},
        {name: "parentType", type: Type}
        {name: "postBackElement", mayBeNull: true, domElement: true}
        {name: "prefix", type: String}
        {name: "properties", mayBeNull: true, optional: true}
        {name: "properties", mayBeNull: true, optional: true},
        {name: "properties"}
        {name: "propertyName", type: String}
        {name: "references", mayBeNull: true, optional: true},
        {name: "request", type: Sys.Net.WebRequest},
        {name: "response", type: Sys.Net.WebRequestExecutor}
        {name: "scriptElement", domElement: true},
        {name: "secure", type: Boolean, optional: true}
        {name: "servicePath", type: String},
        {name: "stackTrace", type: String, mayBeNull: true},
        {name: "start", mayBeNull: true, optional: true}
        {name: "state", type: Object}
        {name: "suffix", type: String}
        {name: "target"},
        {name: "timedOut", type: Boolean},
        {name: "timeout", type: Number, optional: true}
        {name: "type", mayBeNull: true}
        {name: "type", type: Type}
        {name: "type", type: Type},
        {name: "typeName", type: String, mayBeNull: true},
        {name: "typeName", type: String}
        {name: "typeName", type: String},
        {name: "useGet", type: Boolean, optional: true},
        {name: "userContext", mayBeNull: true, optional: true},
        {name: "value", mayBeNull: true, optional: true}
        {name: "value", type: Boolean}
        {name: "value", type: String, mayBeNull: true}
        {name: "value", type: String}
        {name: "value", type: String},
        {name: "value", type: Sys.UI.VisibilityMode}
        {name: "webRequest", type: Sys.Net.WebRequest}
        {name: "width", type: Number, integer: true}
        {name: "x", type: Number, integer: true},
        {name: "x", type: Number},
        {name: "y", type: Number, integer: true}
        {name: "y", type: Number, integer: true},
        {name: "y", type: Number}
        }
        } 
        }    
        }        
        } catch (e) {
        });
        }, 0);
        };
        <!--
        </xs:complexType>
        </xs:element>
        <xs:complexType>
        <xs:element name="ClientOptions" maxOccurs="1" minOccurs="0" type="ClientOptions" />
        <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
        <xs:element name="Metadata" maxOccurs="1" minOccurs="1">
        <xs:element name="MetadataSources" maxOccurs="1" minOccurs="0">
        actualType: actualType,
        actualValue: actualValue
        app._createdComponents[app._createdComponents.length] = component;
        app.addComponent(component);
        Array.add(groups, match[0]);
        Array.add(this._getEvent(id, true), handler);
        Array.add(this._scriptsToLoad, {src: scriptUrl});
        Array.add(this._scriptsToLoad, {text: scriptContent});
        Array.add(this._scriptsToLoad, scriptAttributes);
        Array.add(window[arrayName], arguments[i]);
        Array.remove(evt, handler);
        array.splice(index, 1);
        baseType = baseType.__baseType;
        baseType.resolveInheritance();
        baseUrl = baseUrl.substr(0, qsStart);
        behaviors[behaviors.length] = this;
        body = Sys.Serialization.JavaScriptSerializer.serialize(params);
        break;
        browserHandler = function() {
        browserHandler = function(e) {
        cache = this.__interfaceCache = {};
        case "-":
        case "$":
        case "%":
        case "D":
        case "d":
        case "dd":
        case "ddd":
        case "dddd":
        case "f":
        case "F":
        case "ff":
        case "fff":
        case "H":
        case "h":
        case "hh":
        case "HH":
        case "m":
        case "M":
        case "M": case "m":
        case "mm":
        case "MM":
        case "MMM":
        case "MMMM":
        case "n":
        case "s":
        case "ss":
        case "T":
        case "t":
        case "tt":
        case "y":
        case "Y": case "y":
        case "yy":
        case "yyyy":
        case "z":
        case "zz":
        case "zzz":
        case '\'':
        case '\\':
        case 0: 
        case 1: 
        case 2: 
        case 3: 
        case 4: 
        catch (ex) {
        catch(ex) {
        childNodes = node.childNodes;
        component.endUpdate();
        computedStyle = {};
        computedStyle.display = 'none';
        container.innerHTML = "<input type='hidden' />";
        Copyright (c) Microsoft Corp. All rights reserved.
        currentFrame = stackFrames[0];
        data.dataItems = {};
        data.scriptsFailed = { src: scriptElement.src, multipleCallbacks: multipleCallbacks };
        date = result.getDate();
        default:
        delete this.__basePrototypePending;
        delete this._events;
        delete this._timerCookie;
        displayMessage +=
        displayMessage += "\n" + String.format(Sys.Res.actualValue, actualValue);
        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
        displayMessage += message;
        displayMessage += Sys.Res.argumentType;
        dtf._parseRegExp = {};
        e = Error.argumentOutOfRange(paramName, param, String.format(Sys.Res.enumInvalidValue, param, expectedType.getName()));
        e = Error.argumentType(paramName, Object.getType(param), expectedType);
        e = Function._validateParameter(params[i], expectedParam, paramName);
        e.popStackFrame();
        element._behaviors = [this];
        element._events = {};
        element._events = null;
        element._events[eventName] = eventCache = [];
        element._oldDisplayMode = style ? style.display : null;
        element._visibilityMode = value;
        element.addEventListener(eventName, browserHandler, false);
        element.attachEvent('on' + eventName, browserHandler);
        element.className = (currentClassName.substr(0, index) + ' ' +
        element.currentStyle || element.style;
        element.detachEvent('on' + eventName, browserHandler);
        element.removeEventListener(eventName, browserHandler, false);
        element.style.display = 'block';
        element.style.display = oldDisplay;
        element.style.position = 'absolute';
        element.style.position = oldPosition;
        element.style.visibility = value ? 'visible' : 'hidden';
        else
        else {
        else { 
        else if (!expectedParams[i].optional) {
        else if (arg.format) {
        else if (callback) {
        else if (exponent < 0) {
        else if (navigator.userAgent.indexOf('MSIE') !== -1 && typeof(xml.setProperty) != 'undefined') {
        else if (this._historyEnabledInScriptManager && !value) {
        else if (this.target && (this.target.nodeType !== 3) && (typeof(e.clientX) === 'number')) {
        else if (useLocale && arg.localeFormat) {
        else if (window.event) {
        else pattern = _currencyPositivePattern[nf.CurrencyPositivePattern];
        else pattern = _percentPositivePattern[nf.PercentPositivePattern];
        else pattern = 'n';
        else this.get_element().style.visibility = 'hidden';
        encodeMethod = encodeURIComponent;
        entry = entry || '';
        errorMessage = Sys.Res.scriptLoadFailedDebug;
        errorMessage = Sys.Res.scriptLoadMultipleCallbacks;
        evt = Array.clone(evt);
        expectedType: expectedType
        exponent = (split.length > 1 ? parseInt(split[1]) : 0);
        exponent = null;
        exponent = num.substr(exponentPos + 1);
        field = container.childNodes[0];
        field._isContained = true;
        field.id = field.name = id;
        field.value = value;
        fn = eval(typeName);
        fn = Sys.__upperCaseTypes[ns.getName().toUpperCase() + '.' + typeName.toUpperCase()];
        for (i = 0, l = data.arrayDeclarationNodes.length; i < l; i++) {
        for (i = 0, l = data.dataItemJsonNodes.length; i < l; i++) {
        for (i = 0, l = data.dataItemNodes.length; i < l; i++) {
        for (i = 0, l = data.expandoNodes.length; i < l; i++) {
        for (i = 0, l = data.hiddenFieldNodes.length; i < l; i++) {
        for (i = 0, l = data.onSubmitNodes.length; i < l; i++) {
        for (i = 0, l = data.scriptDisposeNodes.length; i < l; i++) {
        for (i = 0, l = data.updatePanelNodes.length; i < l; i++) {
        for (i = 0, l = newIDs.length; i < l; i++) {
        for (i = 0, l = oldIDs.length; i < l; i++) {
        for (i = 0, l = refreshedIDs.length; i < l; i++) {
        for (i = 0, l = this._transientFields.length; i < l; i++) {
        for (i = 0; i < childNodes.length; i++) {
        for (i = 0; i < count; i++) {
        for (i = existingScripts.length - 1; i >= 0; i--) {
        for (i = sorted.length - 1; i >= 0; i--) {
        for (i in values) {
        for (var attr in queuedScript) {
        for (var i = 0, il = arr.length; i < il; i++) {
        for (var i = 0, il = formats.length; i < il; i++) {
        for (var i = 0, l = behaviors.length; i < l; i++) {
        for (var i = 0, l = components.length; i < l; i++) {
        for (var i = 0, l = delta.length; i < l; i++) {
        for (var i = 0, l = parentIDList.length; i < l; i++) {
        for (var i = 0, l = progIDs.length; i < l; i++) {
        for (var i = 0, l = scriptBlockNodes.length; i < l; i++) {
        for (var i = 0, l = tokens.length; i < l; i++) {
        for (var i = 0, l = window.__pendingCallbacks.length; i < l; i++) {
        for (var i = 2, l = arguments.length; i < l; i++) {
        for (var i = parts.length - 1; i >= 0; i--) {
        for (var i = start; i < length; i++) {
        for (var i=0; i < arr.length; i++) {
        for (var i=0; i < param.length; i++) {
        for (var key in properties) {
        for (var key in state) {
        for (var key in this._state) {
        for (var l=str.length; l < count; l++) {
        for (var memberName in baseType.prototype) {
        for (var n in state) {
        for (var n in style) {
        for (var name in cache) {
        for (var name in components) {
        for (var name in events) {
        for (var name in unflattened) {
        for (var property in properties) {
        for (var updatePanelID in this._scriptDisposes) {
        for (var v in errorInfo) {
        form.__EVENTARGUMENT.value = eventArgument;
        form.__EVENTTARGET.value = eventTarget;
        format = "D";
        format = "F";
        formBody.append("__ASYNCPOST=true&");
        formBody.append(encodeURIComponent(this._scriptManagerID) + '=' + encodeURIComponent(this._postBackSettings.panelID) + '&');
        fraction = intAndFraction.substr(decimalPos + numFormat.NumberDecimalSeparator.length);
        fraction = null;
        handler = this._get_eventHandlerList().getHandler("beginRequest");
        handler = this._get_eventHandlerList().getHandler("completed");
        hour += 12;
        i = close + 1;
        i = open + 1;
        i++;
        if (! this._dateTimeFormats) {
        if (!_this._responseAvailable) {
        if (!ar)
        if (!ar) break;
        if (!baseArguments) {
        if (!condition) {
        if (!container) {
        if (!continueSubmit) {
        if (!data) return;
        if (!element) throw Error.argument('element', Sys.Res.createNoDom);
        if (!element._oldDisplayMode || element._oldDisplayMode === 'none') {
        if (!evArgs.get_cancel()) {
        if (!evt || (evt.length === 0)) return null;
        if (!evt) return;
        if (!executor) {
        if (!historyElement) return '';
        if (!id) throw Error.invalidOperation(Sys.Res.cantAddWithoutId);
        if (!initialLoad) {
        if (!isFinite(rounded)) {
        if (!ns) {
        if (!path || !path.length) {
        if (!path.length) {
        if (!propertyNames) {
        if (!proposedSettings) {
        if (!reference) throw Error.invalidOperation(String.format(Sys.Res.referenceNotFound, references[name]));
        if (!result) result = "";
        if (!sorted) {
        if (!this._disposing) {
        if (!this._element || !this._element.id) return '';
        if (!this._element) return '';
        if (!this._element) return null;
        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
        if (!this._enableHistory) throw Error.invalidOperation(Sys.Res.historyCannotAddHistoryPointWithHistoryDisabled);
        if (!this._events) {
        if (!this._events) return;
        if (!this._historyInitialized && this._enableHistory) {
        if (!this._ignoreIFrame) {
        if (!this._initialized) this.initialize();
        if (!this._list[id]) {
        if (!this._loading) {
        if (!this._postBackSettings.async) {
        if (!this._processingRequest && this._request) {
        if (!this._request || (sender.get_webRequest() !== this._request)) {
        if (!this._responseAvailable) {
        if (!this._resultObject) {
        if (!this._rolesIndex) {
        if (!this._scriptDisposes[panelID]) {
        if (!this._started) {
        if (!this._upperAbbrDays) {
        if (!this._upperAbbrMonths) {
        if (!this._upperDays) {
        if (!this._upperMonths) {
        if (!this._xmlHttpRequest) {
        if (!this.get_isInAsyncPostBack()) {
        if (!this.get_isInitialized()) this._name = name;
        if (!Type.__identifierRegExp.test(i)) throw Error.invalidOperation(String.format(Sys.Res.enumInvalidValueName, i));
        if (!upData) {
        if (!values) {
        if (!xml || !xml.documentElement) {
        if ((close > 0) && ((close < open) || (open < 0))) {
        if ((eventTarget === null) || (typeof(eventTarget) === "undefined") || (this._isCrossPost)) {
        if ((hash.length > 0) && (hash.charAt(0) === '#')) {
        if ((open < 0) && (close < 0)) {
        if ((param % 1) !== 0) {
        if ((param % 1) === 0) {
        if ((quoteCount%2) === 1) {
        if ((scriptElement.readyState !== 'loaded') &&
        if ((serverSeparator !== -1) && (serverSeparator + 2 < entry.length)) {
        if ((this._pageRequestManager === null) || (!this._pageRequestManager.get_isInAsyncPostBack())){
        if ((typeof(Debug) !== 'undefined') && Debug.writeln) {
        if ((typeof(e.offsetX) !== 'undefined') && (typeof(e.offsetY) !== 'undefined')) {
        if ((value === '') || (value.charAt(0) === ' ') || (value.charAt(value.length - 1) === ' '))
        if (_this._timer != null) {
        if (_this._xmlHttpRequest.readyState === 4 ) {
        if (arg.toFormattedString) {
        if (arguments.length !== 0) throw Error.parameterCount();
        if (arrayScript.length) {
        if (baseElement && baseElement.href && baseElement.href.length > 0) {
        if (baseId) return baseId;
        if (baseType === parentType) {
        if (body === "{}") body = "";
        if (cache[i].handler === handler) {
        if (callback) {
        if (close < 0) throw Error.argument('format', Sys.Res.stringFormatBraceMismatch);
        if (continueSubmit) {
        if (cultureInfo && (cultureInfo.name.length > 0)) {
        if (d && (this._validPosition(d.scrollLeft) || this._validPosition(d.scrollTop))) {
        if (data.asyncPostBackControlIDsNode && data.postBackControlIDsNode &&
        if (data.executor.get_webRequest() !== this._request) {
        if (data.formActionNode) {
        if (data.scriptsFailed) {
        if (document.documentMode >= 7) {
        if (e) {
        if (e) throw e;
        if (element.className === '') {
        if (element.disabled) {
        if (element.name) {
        if (element.nodeType === 1) {
        if (entry !== this._currentEntry) {
        if (error && !errorHandled) {
        if (event.keyCode === 13) {
        if (eventTarget && eventTarget.value === this._uniqueId) {
        if (evt) {
        if (executor.get_aborted()) {
        if (expandoScript.length) {
        if (expectedParam.parameterArray) {
        if (expectedParams[i].parameterArray) {
        if (exponent > 0) {
        if (expSignInfo[0] === '') {
        if (field) {
        if (format) {
        if (format.charAt(i) === '{') {
        if (h) {
        if (handler) {
        if (handlerOwner) {
        if (headElements.length === 0) {
        if (headers) {
        if (historyElement) {
        if (i != -1) name = name.substr(i + 1);
        if (i !== 0) {
        if (id) delete this._components[id];
        if (interfaces) {
        if (isCrossPost) {
        if (isNaN(argNumber)) throw Error.argument('format', Sys.Res.stringFormatInvalid);
        if (isNaN(start)) {
        if (isObject || typeof(getter) !== 'function') {
        if (l > 0) {
        if (lastSlash === -1) {
        if (loadedEntry !== this._currentEntry) {
        if (matchGroup) {
        if (mayBeNull) {
        if (name) this._element[name] = this;
        if (nextSlash === -1) {
        if (node.id == id) {
        if (node.nodeType == 1) {
        if (ns && !ns.__namespace) {
        if (num < 10) {
        if (num < 100) {
        if (object === null) {
        if (object) {
        if (oldId && Sys.Application.findComponent(oldId)) throw Error.invalidOperation(Sys.Res.componentCantSetIdAfterAddedToApp);
        if (onFailure === null || typeof onFailure === 'undefined') onFailure = this.get_defaultFailedCallback();
        if (onSubmitStatementScript.length) {
        if (onSuccess === null || typeof onSuccess === 'undefined') onSuccess = this.get_defaultSucceededCallback();
        if (parserErrorDetails) {
        if (parts.length && v === 0) return parts.reverse().join(', ');
        if (precision !== -1) {
        if (precision === -1) precision = nf.CurrencyDecimalDigits;
        if (precision === -1) precision = nf.NumberDecimalDigits;
        if (precision === -1) precision = nf.PercentDecimalDigits;
        if (precision > 0) {
        if (properties) {
        if (propertyNames && propertyNames.length === 0) {
        if (references) {
        if (refreshedIDs) {
        if (response.get_responseAvailable()) {
        if (result !== null) { 
        if (secure && Sys.Serialization.JavaScriptSerializer._jsonRegEx.test(
        if (sender.get_aborted()) {
        if (sender.get_statusCode() !== 200) {
        if (sender.get_timedOut()) {
        if (session.scriptsToLoad && session.scriptsToLoad.length > 0) {
        if (showProgress) {
        if (slashslash === -1) {
        if (source) {
        if (string.length < 128) {
        if (Sys.Browser.agent !== Sys.Browser.InternetExplorer) {
        if (Sys.Browser.agent === Sys.Browser.Firefox) {
        if (Sys.Browser.agent === Sys.Browser.InternetExplorer) {
        if (Sys.Browser.hasDebuggerStatement) {
        if (Sys.Serialization.JavaScriptSerializer._charsToEscape.length === 0) {
        if (Sys.UI.DomElement.getVisible(element) === false) {
        if (Sys.WebForms) {
        if (this < 0) number = -number;
        if (this < 0) pattern = _currencyNegativePattern[nf.CurrencyNegativePattern];
        if (this < 0) pattern = _numberNegativePattern[nf.NumberNegativePattern];
        if (this < 0) pattern = _percentNegativePattern[nf.PercentNegativePattern];
        if (this._aborted || this._responseAvailable || this._timedOut)
        if (this._activeDefaultButton && !this._activeDefaultButtonClicked) {
        if (this._additionalInput) {
        if (this._beginRequestHandlerDelegate !== null) {
        if (this._clientId) {
        if (this._controlIDToFocus) {
        if (this._dynamicLayout) this.get_element().style.display = 'none';
        if (this._element) {
        if (this._events) {
        if (this._executor !== null && this._executor.get_started()) {
        if (this._form) {
        if (this._httpVerb === null) {
        if (this._idSet) throw Error.invalidOperation(Sys.Res.componentCantSetIdTwice);
        if (this._initialized && !this._initializing) {
        if (this._initialized) {
        if (this._invokeCalled) {
        if (this._isSafari2()) {
        if (this._len !== parts.length) {
        if (this._name) return this._name;
        if (this._onsubmit) {
        if (this._originalDoCallback) {
        if (this._originalDoPostBack) {
        if (this._originalDoPostBackWithOptions) {
        if (this._originalFireDefaultButton) {
        if (this._pageRequestManager.get_isInAsyncPostBack()) {
        if (this._parent) delete this._parent;
        if (this._parent) return this._parent;
        if (this._parts.length === 0) return true;
        if (this._prmInitialized) {
        if (this._request === executor.get_webRequest()) {
        if (this._scriptElement.addEventListener) {
        if (this._scrollPosition) {
        if (this._sessions.length === 0) {
        if (this._started) {
        if (this._timeout === 0) {
        if (this._timerCookie) {
        if (this._uniqueId) {
        if (this._webRequest === null) {
        if (this._xmlHttpRequest && !this._responseAvailable) {
        if (this.get_isInitialized()) throw Error.invalidOperation(Sys.Res.cantSetNameAfterInit);
        if (this.get_started()) {
        if (this.rawEvent.preventDefault) {
        if (this.rawEvent.stopPropagation) {
        if (timeout > 0) {
        if (traceElement && (traceElement.tagName.toUpperCase() === 'TEXTAREA')) {
        if (typeof(arg) === "undefined" || arg === null) {
        if (typeof(asyncPostBackTimeout) !== 'undefined' && asyncPostBackTimeout !== null) {
        if (typeof(cacheEntry) !== 'undefined') return cacheEntry;
        if (typeof(dataItem) !== 'undefined') {
        if (typeof(elt) !== 'undefined') method.call(instance, elt, i, array);
        if (typeof(fn) !== 'function') throw Error.argument('typeName', Sys.Res.notATypeName);
        if (typeof(handler) !== 'function') throw Error.invalidOperation(Sys.Res.cantAddNonFunctionhandler);
        if (typeof(obj) === "function") continue;
        if (typeof(param) !== 'number') {
        if (typeof(param.nodeType) !== 'number') {
        if (typeof(parsed) !== 'number') throw Error.argument('value', String.format(Sys.Res.enumInvalidValue, value, this.__typeName));
        if (typeof(result) !== "object") {
        if (typeof(setter) !== 'function') throw new Error.invalidOperation(String.format(Sys.Res.propertyNotWritable, name));
        if (typeof(this._components[id]) !== 'undefined') throw Error.invalidOperation(String.format(Sys.Res.appDuplicateComponent, id));
        if (typeof(this._element[value]) !== 'undefined')
        if (typeof(this[i]) !== 'undefined') throw Error.invalidOperation(String.format(Sys.Res.enumReservedName, i));
        if (typeof(val) !== 'number' || (val % 1) !== 0) throw Error.invalidOperation(Sys.Res.enumValueNotInteger);
        if (typeof(val[separator]) === 'undefined') {
        if (updatePanelData) {
        if (updatePanelIDs) {
        if (url && url.indexOf('?') !== -1)
        if (userContext === null || typeof userContext === 'undefined') userContext = this.get_defaultUserContext();
        if (val) {
        if (value || (element._visibilityMode === Sys.UI.VisibilityMode.hide)) {
        if (value < 0) {
        if (value < 0) { throw Error.argumentOutOfRange('value', value, Sys.Res.invalidTimeout); }
        if (value.length === 0) {
        if (verb.toLowerCase() === "post") {
        if (window.__theFormPostCollection) {
        if (window.__theFormPostData) {
        if (window.console && window.console.log) {
        if (window.debugService) {
        if (window.opera) {
        if (window.pageLoad) {
        if (window.WebForm_InitCallback) {
        if (xml.documentElement.firstChild && xml.documentElement.firstChild.tagName === "parsererror") {
        if (xml.documentElement.namespaceURI === "http://www.mozilla.org/newlayout/xml/parsererror.xml" &&
        if (year > dtf.Calendar.TwoDigitYearMax) {
        if(!path || !path.length) {
        if(!path.length) {
        if(!redirectUrl) {
        if(!this._initialized && !this._initializing) {
        if(!this._loading) {
        if(!this._scriptsToLoad) {
        if(callback) {
        if(loaded && this._currentTask._notified) {
        if(result !== null) {
        if(result && !(result instanceof Array)) {
        if(result) {
        if(sl) {
        if(Sys.Browser.agent === Sys.Browser.Safari) {           
        if(this._currentTask) {
        if(this._disposed) {
        if(this._events) {
        if(this._loadHandlerDelegate) {
        if(this._scriptLoadDelegate) {
        if(this.get_enabled()) {
        if(typeof(result) !== "boolean") {
        indentationPadding = indentationPadding? indentationPadding : '';
        index = tokenRegExp.lastIndex;
        intAndFraction = num.substr(0, exponentPos);
        intAndFraction = num;
        integer = intAndFraction.substr(0, decimalPos);
        integer = intAndFraction;
        integer = integer.split(altNumGroupSeparator).join('');
        month = result.getMonth();
        name = name? name : 'traceDump';
        name: "Sys.ArgumentOutOfRangeException",
        name: "Sys.ArgumentTypeException",
        node = nodeQueue.shift();
        num = signInfo[1];
        number = expandNumber(Math.abs(this) * 100, precision, nf.PercentGroupSizes, nf.PercentGroupSeparator, nf.PercentDecimalSeparator);
        number = expandNumber(Math.abs(this), precision, nf.CurrencyGroupSizes, nf.CurrencyGroupSeparator, nf.CurrencyDecimalSeparator);
        number = expandNumber(Math.abs(this), precision, nf.NumberGroupSizes, nf.NumberGroupSeparator, nf.NumberDecimalSeparator);
        number = rounded;
        numberString = split[0];
        p += '.' + fraction;
        p += 'e' + expSignInfo[0] + expSignInfo[1];
        paramName: paramName,
        parsed = values[val.trim()];
        parsedName = eval(name);
        parsedName = eval(typeName);
        pattern = 'n';
        prm = Sys.WebForms.PageRequestManager._instance = new Sys.WebForms.PageRequestManager();
        properties.length = count;
        quoteCount += Date._appendPreOrPostMatch(preMatch, regexp);
        quoteCount += Date._appendPreOrPostMatch(preMatch, ret);
        request.add_completed(Function.createDelegate(this, this._onFormSubmitCompleted));
        request.get_headers()['Cache-Control'] = 'no-cache';
        request.get_headers()['X-MicrosoftAjax'] = 'Delta=true';
        request.invoke();
        request.set_body(formBody.toString());
        request.set_timeout(this._asyncPostBackTimeout);
        request.set_url(action);
        result += format.slice(i, open);
        result.setHours(result.getHours() + parseInt(adjustedMin/60, 10), adjustedMin%60);
        ret += pattern.slice(index, ar ? ar.index : pattern.length);
        return !!v;
        return (baseMethod instanceof Function) ? baseMethod : null;
        return (parent ?
        return (Sys.Browser.agent === Sys.Browser.Safari) &&
        return (typeof(position) !== "undefined") && (position !== null) && (position !== 0);
        return [array[0]];
        return {
        return { async:async, panelID:panelID, sourceElement:sourceElement };
        return { value: flattenedProperties, count: count };
        return arr;
        return Array.apply(null, array);
        return Array.clone(this._roles);
        return Array.indexOf(this._upperAbbrDays, this._toUpper(value));
        return Array.indexOf(this._upperAbbrMonths, this._toUpper(value));
        return Array.indexOf(this._upperDays, this._toUpper(value));
        return Array.indexOf(this._upperMonths, this._toUpper(value));
        return baseMethod.apply(instance);
        return baseMethod.apply(instance, baseArguments);
        return baseUrl.substr(0, lastSlash+1) + url;
        return baseUrl.substr(0, nextSlash) + url;
        return baseUrl;
        return dtf._parseRegExp[format];
        return e;
        return eval('(' + exp + ')');
        return false;
        return fn || null;
        return function(source, args) {
        return hash;
        return method.apply(instance, arguments);
        return method.call(this, context);
        return name;
        return new Sys.WebForms.PageLoadedEventArgs(updated, created, data ? data.dataItems : {});
        return new Sys.WebForms.PageLoadingEventArgs(updated, deleted, data.dataItems);
        return nodups;
        return null;
        return num.toString();
        return numberString.slice(0, stringIndex + 1) + sep + ret + right;
        return Object;
        return parsed;
        return parseFloat(p);
        return parseFloat(value);
        return parseInt(value);
        return path;
        return res;
        return result;
        return scriptElement;
        return serialized.join('&') + (serverState ? '&&' + serverState : '');
        return str;
        return Sys.Net.WebRequest._resolveUrl(this._url);
        return Sys.Net.WebServiceProxy.invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext, this.get_timeout());
        return Sys.UI.DomElement.getVisibilityMode(this._element);
        return Sys.UI.DomElement.getVisible(this._element);
        return text.substring(startIndex, endIndex);
        return this._aborted;
        return this._associatedUpdatePanelId;
        return this._authenticated;
        return this._body;
        return this._cancel;
        return this._components;
        return this._creatingComponents;
        return this._dataItems;
        return this._dateTimeFormats;
        return this._defaultExecutorType;
        return this._defaultLoadCompletedCallback;
        return this._defaultLoginCompletedCallback;
        return this._defaultLogoutCompletedCallback;
        return this._defaultSaveCompletedCallback;
        return this._defaultTimeout;
        return this._displayAfter;
        return this._dynamicLayout;
        return this._element.id + '$' + this.get_name();
        return this._element.id;
        return this._element;
        return this._enabled;
        return this._enableHistory;
        return this._error;
        return this._errorHandled;
        return this._events;
        return this._exceptionType;
        return this._executor;
        return this._failed;
        return this._headers;
        return this._httpVerb;
        return this._id;
        return this._initialized;
        return this._interval;
        return this._isPartialLoad;
        return this._list[id];
        return this._message;
        return this._panelsCreated;
        return this._panelsDeleting;
        return this._panelsUpdated;
        return this._panelsUpdating;
        return this._path || '';
        return this._path;
        return this._postBackElement;
        return this._propertyName;
        return this._request !== null;
        return this._request;
        return this._response;
        return this._responseAvailable;
        return this._resultObject;
        return this._rolesIndex;
        return this._scriptElement;
        return this._stackTrace;
        return this._started;
        return this._state;
        return this._statusCode;
        return this._succeeded;
        return this._timedOut;
        return this._timeout;
        return this._uniqueID;
        return this._updating;
        return this._url;
        return this._userContext;
        return this._webRequest;
        return this._xmlHttpRequest.getAllResponseHeaders();
        return this._xmlHttpRequest.responseText;
        return this._xmlHttpRequest.statusText;
        return this.toString() === '';
        return true;
        return unflattenedProperties;
        return uniqueID.replace(/\$/g, '_');
        return url + sep + qs;
        return url;
        return v ? Sys.Serialization.JavaScriptSerializer.deserialize(v, true) : '';
        return v;
        return val[separator];
        return value.split("\u00A0").join(' ').toUpperCase();
        return xml;
        return;
        right = split.length > 1 ? split[1] : "";
        rootObject = ns;
        sb.append('=');
        sb.append(arg);
        sb.append(encodeMethod(val));
        scriptElement.parentNode.removeChild(scriptElement);
        scriptElement.type = 'text/javascript';
        scriptLoader.loadScripts(0,
        separator = separator || '';
        setter.apply(component, [reference]);
        sign = signInfo[0];
        signInfo = Number._parseNumberNegativePattern(value, numFormat, 1);
        sl = Sys._ScriptLoader._activeInstance = new Sys._ScriptLoader();
        split = numberString.split('.');
        stackFrames.shift();
        start = start - 0;
        stringBuilder.append('null');
        stringBuilder.append(String(object));
        switch (ar[0]) {
        switch (c) {
        switch (format) {
        switch (match[0]) {
        switch(typeof(object)) {
        Sys$Component$_setProperties(component, properties);
        Sys._Application.callBaseMethod(this, 'initialize');
        Sys._ScriptLoader._clearScript(this._scriptElement);
        Sys._ScriptLoader._referencedScripts = [];
        Sys._ScriptLoader.readLoadedScripts();
        Sys.Application.beginCreateComponents();
        Sys.Application.endCreateComponents();
        Sys.Application.removeComponent(this);
        Sys.Application.unregisterDisposableObject(this);
        Sys.Net.WebRequestManager.executeRequest(this);
        Sys.Net.WebServiceProxy.invoke(
        Sys.Serialization.JavaScriptSerializer._charsToEscape[i+2] = c;
        Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[c] = new RegExp(c, 'g');
        Sys.Serialization.JavaScriptSerializer._escapeChars[c] = replaceChars[i];
        Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(object, stringBuilder);
        Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(object, stringBuilder);
        Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(object, stringBuilder);
        Sys.UI._Timer.callBaseMethod(this, 'initialize');
        Sys.UI._UpdateProgress.callBaseMethod(this, 'initialize');
        Sys.UI._UpdateProgress.callBaseMethod(this,"dispose");
        Sys.UI.Behavior.callBaseMethod(this, 'dispose');
        Sys.UI.Behavior.callBaseMethod(this, 'initialize');
        Sys.UI.Control.callBaseMethod(this, 'dispose');
        Sys.UI.DomElement._ensureOldDisplayMode(element);
        Sys.UI.DomElement.addCssClass(element, className);
        Sys.UI.DomElement.addCssClass(this._element, className);
        Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
        Sys.UI.DomElement.removeCssClass(element, className);
        Sys.UI.DomElement.removeCssClass(this._element, className);
        Sys.UI.DomElement.setVisibilityMode(this._element, value);
        Sys.UI.DomElement.setVisible(this._element, value)
        Sys.UI.DomElement.toggleCssClass(this._element, className);
        Sys.UI.DomEvent.addHandler(this._form, 'click', this._onFormElementClickHandler);
        Sys.UI.DomEvent.addHandler(this._form, 'submit', this._onFormSubmitHandler);
        Sys.UI.DomEvent.addHandler(window, 'load', this._pageLoadedHandler);
        Sys.UI.DomEvent.addHandler(window, 'unload', this._onWindowUnloadHandler);
        Sys.UI.VisibilityMode.collapse;
        Sys.UI.VisibilityMode.hide :
        The schema of Data Service Reference Map files
        The schema of Service Reference Map files
        this.__basePrototypePending = true;
        this.__baseType = baseType;
        this.__interfaces = [];
        this.__type = type;
        this._aborted = true;
        this._activeDefaultButtonClicked = (evt.target === this._activeDefaultButton);
        this._additionalInput = null;
        this._addScriptElementHandlers();
        this._appendConsole(message);
        this._appendConsole(text);
        this._appendTrace(text);
        this._associatedUpdatePanelId = value;
        this._asyncPostBackControlClientIDs = null;
        this._asyncPostBackControlIDs = null;
        this._asyncPostBackTimeout = null;
        this._authenticated = authenticated;
        this._authenticated = false;
        this._body = value;
        this._cancel = value;
        this._clearTimeout();
        this._clearTimer();
        this._clientId = clientId;
        this._commitControls(
        this._commitControls(data.updatePanelData,
        this._completedCallback(this.get_scriptElement(), false);
        this._components[id] = component;
        this._convertToClientIDs(asyncPostBackControlIDs, newAsyncPostBackControlIDs, newAsyncPostBackControlClientIDs);
        this._convertToClientIDs(postBackControlIDs, newPostBackControlIDs, newPostBackControlClientIDs);
        this._createdComponents = [];
        this._creatingComponents = false;
        this._creatingComponents = true;
        this._currentSession = null;
        this._currentSession = session;
        this._currentTask._notified++;
        this._defaultExecutorType = value;
        this._defaultLoadCompletedCallback = value;
        this._defaultLoginCompletedCallback = value;
        this._defaultLogoutCompletedCallback = value;
        this._defaultSaveCompletedCallback = value;
        this._defaultTimeout = value;
        this._destroyTree(updatePanelElement);
        this._displayAfter = value;
        this._disposed = true;
        this._dynamicLayout = value;
        this._enabled = value;
        this._enableHistory = true;
        this._enableHistory = value;
        this._endPostBack(null, response, data);
        this._ensureHistory();
        this._errorHandled = value;
        this._executor = value;
        this._executor._set_webRequest(this);
        this._failed = value;
        this._form = formElement;
        this._form = null;
        this._form.onsubmit = null;
        this._get_eventHandlerList().addHandler("beginRequest", handler);
        this._get_eventHandlerList().addHandler("completed", handler);
        this._get_eventHandlerList().addHandler("completedRequest", handler);
        this._get_eventHandlerList().addHandler("endRequest", handler);
        this._get_eventHandlerList().addHandler("initializeRequest", handler);
        this._get_eventHandlerList().addHandler("invokingRequest", handler);
        this._get_eventHandlerList().addHandler("pageLoaded", handler);
        this._get_eventHandlerList().addHandler("pageLoading", handler);
        this._get_eventHandlerList().removeHandler("beginRequest", handler);
        this._get_eventHandlerList().removeHandler("completed", handler);
        this._get_eventHandlerList().removeHandler("completedRequest", handler);
        this._get_eventHandlerList().removeHandler("endRequest", handler);
        this._get_eventHandlerList().removeHandler("initializeRequest", handler);
        this._get_eventHandlerList().removeHandler("invokingRequest", handler);
        this._get_eventHandlerList().removeHandler("pageLoaded", handler);
        this._get_eventHandlerList().removeHandler("pageLoading", handler);
        this._historyEnabledInScriptManager = true;
        this._historyPointIsNew = true;
        this._httpVerb = value;
        this._id = value;
        this._idSet = true;
        this._ignoreIFrame = false;
        this._ignoreTimer = true;
        this._initialized = true;
        this._initializing = false;
        this._interval = value;
        this._invoke(this._get_path(),
        this._invoke(this._get_path(), "Login", false,
        this._invoke(this._get_path(), "Logout", false, {}, 
        this._invokeCalled = true;
        this._isCrossPost = false;
        this._isCrossPost = options && options.actionUrl;
        this._len = 0;
        this._loading = false;
        this._loading = true;
        this._loadScriptsInternal();
        this._name = value;
        this._nextSession();
        this._onFormElementActive(evt.target, evt.offsetX, evt.offsetY);
        this._onFormElementClickHandler = Function.createDelegate(this, this._onFormElementClick);
        this._onFormSubmit();
        this._onFormSubmitHandler = Function.createDelegate(this, this._onFormSubmit);
        this._onsubmit = this._form.onsubmit;
        this._onWindowUnloadHandler = Function.createDelegate(this, this._onWindowUnload);
        this._originalDoCallback = window.WebForm_DoCallback;
        this._originalDoPostBack = window.__doPostBack;
        this._originalDoPostBackWithOptions = window.WebForm_DoPostBackWithOptions;
        this._originalDoPostBackWithOptions(options);
        this._originalFireDefaultButton = window.WebForm_FireDefaultButton;
        this._pageLoaded(false, data);
        this._pageLoaded(true, null);
        this._pageLoadedHandler = Function.createDelegate(this, this._pageLoadedInitialLoad);
        this._parent = value;
        this._parts = [];
        this._parts[this._parts.length] =
        this._parts[this._parts.length] = text;
        this._path = value;
        this._postBackControlClientIDs = null;
        this._postBackControlIDs = null;
        this._postBackSettings = this._getPostBackSettings(element, element.name);
        this._prmInitialized = true;
        this._processingRequest = false;
        this._processingRequest = true;
        this._queueScripts(scriptLoader, data.scriptBlockNodes, false, true);
        this._queueScripts(scriptLoader, data.scriptBlockNodes, true, false);
        this._queueScripts(scriptLoader, data.scriptStartupNodes, true, true);
        this._raiseNavigate();
        this._removeScriptElementHandlers();
        this._request = request;
        this._roles = result;
        this._rolesIndex = null;
        this._scriptElement = null;
        this._scriptIncludesLoadComplete(scriptLoader, data);
        this._scriptLoadDelegate = Function.createDelegate(this, this._scriptLoadHandler);
        this._scriptLoadedDelegate = null;        
        this._scriptManagerID = scriptManagerID;
        this._scriptsToLoad = null;
        this._scrollPosition = null;
        this._scrollPosition = this._getScrollPosition();
        this._secondPassComponents = [];
        this._secondPassComponents[this._secondPassComponents.length] = {component: component, references: references};
        this._sessions = null;
        this._sessions[this._sessions.length] = session;
        this._setState(entry);
        this._setState(entry, title);
        this._started = true;
        this._startTimer();
        this._state = state;
        this._state.__s = value;
        this._stopSession();
        this._succeeded = value;
        this._timeout = value;
        this._timer = window.setTimeout(Function.createDelegate(this,this._raiseTick),this.get_interval());
        this._timerCookie = null;
        this._timerCookie = window.setTimeout(this._timerHandler, 100);
        this._uniqueId = uniqueId;
        this._uniqueID = value;
        this._updateHiddenField(value);
        this._updatePanelClientIDs = null;
        this._updatePanelIDs = null;
        this._updating = false;
        this._updating = true;
        this._url = value;
        this._userContext = value;
        this._value = {};
        this._webRequest = this.get_webRequest();
        this._webRequest = value;
        this._xmlHttpRequest = new XMLHttpRequest();
        this._xmlHttpRequest.onreadystatechange = this._onReadyStateChange;
        this._xmlHttpRequest.open(verb, this._webRequest.getResolvedUrl(), true );
        this._xmlHttpRequest.send(body);
        this.abortPostBack();
        this.button = (typeof(e.which) !== 'undefined') ? e.button :
        this.charCode = e.charCode || e.keyCode;
        this.dispose();
        this.get_events().addHandler("disposing", handler);
        this.get_events().addHandler("load", handler);
        this.get_events().addHandler("navigate", handler);
        this.get_events().addHandler("propertyChanged", handler);
        this.get_events().addHandler("unload", handler);
        this.get_events().removeHandler("disposing", handler);
        this.get_events().removeHandler("init", handler);
        this.get_events().removeHandler("load", handler);
        this.get_events().removeHandler("navigate", handler);
        this.get_events().removeHandler("propertyChanged", handler);
        this.get_events().removeHandler("unload", handler);
        this.initialize();
        this.keyCode = 127;
        this.keyCode = e.keyCode;
        this.raiseLoad();
        this.resolveInheritance();
        this.updated();
        this[i] = this.prototype[i];
        throw Error.argument("element", Sys.Res.argumentDomNode);
        throw Error.argument('name', Sys.Res.argumentTypeName);
        throw Error.argument('type', String.format(Sys.Res.createNotComponent, type.getName()));
        throw Error.argument('typeName', Sys.Res.argumentTypeName);
        throw Error.format(Sys.Res.formatBadFormatSpecifier);
        throw Error.invalidOperation(Sys.Res.cannotSerializeNonFiniteNumbers);
        throw Error.invalidOperation(Sys.Res.cantSetId);
        throw Error.notImplemented();
        try {
        type = type.__baseType;
        Type.__htClasses = {};
        Type.__htClasses[typeName] = fn;
        typeof(this.fileName) === "undefined" || this.fileName === null ||
        typeof(this.lineNumber) === "undefined" || this.lineNumber === null) {
        updatePanelElement.innerHTML = rendering;
        val = (ignoreCase ? value.toLowerCase() : value);
        values = this.__lowerCaseValues;
        values = this.prototype;
        var _this = this;
        var action = form.action;
        var adjustedMin = result.getMinutes() - (tzMinOffset + result.getTimezoneOffset());
        var ar = regex.exec(pattern);
        var ar = tokenRegExp.exec(format);
        var arg = args[argNumber];
        var argFormat = (colonIndex < 0)? '' : brace.substring(colonIndex + 1);
        var argNumber = parseInt((colonIndex < 0)? brace : brace.substring(0, colonIndex), 10) + 1;
        var args = new Sys.ApplicationLoadEventArgs(Array.clone(this._createdComponents), !this._initializing);
        var args = new Sys.HistoryEventArgs(stateClone);
        var arr = str.length ? str.split(',') : [];
        var arrayDeclarationNodes = [];
        var arrayScript = '';
        var asyncPostBackControlIDsNode, postBackControlIDsNode,
        var baseElement = document.getElementsByTagName('base')[0];
        var baseId = Sys.UI.Behavior.callBaseMethod(this, 'get_id');
        var baseMethod = baseType.prototype[name];
        var baseType = this.__baseType;
        var body = this._webRequest.get_body();
        var brace = format.substring(i, close);
        var c = preMatch.charAt(i);
        var c = String.fromCharCode(i);
        var cache = element._events;
        var cacheEntry = cache[interfaceName];
        var callback = context[0] || this.get_defaultLoadCompletedCallback() || this.get_defaultSucceededCallback();
        var callback = context[0] || this.get_defaultSaveCompletedCallback() || this.get_defaultSucceededCallback();
        var callback = context[1] || this.get_defaultFailedCallback();
        var callback = context[1] || this.get_defaultLogoutCompletedCallback() || this.get_defaultSucceededCallback();
        var callback = context[2] || this.get_defaultFailedCallback();
        var callback = context[5] || this.get_defaultLoginCompletedCallback() || this.get_defaultSucceededCallback();
        var callback = context[6] || this.get_defaultFailedCallback();
        var callback = this._currentSession.scriptLoadFailedCallback;
        var callback = this._currentSession.scriptLoadTimeoutCallback;
        var childIDs = upData.childUpdatePanelIDs;
        var close = format.indexOf('}', i);
        var colonIndex = brace.indexOf(':');
        var components = this._components;
        var components = this._secondPassComponents;
        var container, field = document.getElementById(id);
        var continueSubmit = true;
        var count = 0;
        var count = context[3];
        var count = form.elements.length;
        var created = [];
        var curElem = arg.get_postBackElement();
        var curGroupIndex = 1;
        var curr = new Date().getFullYear();
        var current = value;
        var currentPart = namespaceParts[i];
        var currentTarget = this.get_parent();
        var curSize = groupSizes[0];
        var d = document.documentElement;
        var data = this._parseDelta(sender);
        var dataItem = arg.get_dataItems()[this.get_id()];
        var dataItem = args.get_dataItems()[this._clientId];
        var dataItemJsonNodes = [];
        var dataItemNodes = [];
        var deleted = [];
        var delimiterIndex, len, type, id, content;
        var delta = [];
        var displayMessage = "Sys.WebForms.PageRequestManagerParserErrorException: " + String.format(Sys.WebForms.Res.PRM_ParserError, parserErrorMessage);
        var displayMessage = "Sys.WebForms.PageRequestManagerServerErrorException: " +
        var displayMessage = "Sys.WebForms.PageRequestManagerTimeoutException: " + Sys.WebForms.Res.PRM_TimeoutError;
        var dotIndex;
        var e = Error.create(displayMessage, {
        var e = Error.create(displayMessage, {name: 'Sys.WebForms.PageRequestManagerParserErrorException'});
        var e = Error.create(displayMessage, {name: 'Sys.WebForms.PageRequestManagerTimeoutException'});
        var e = Error.parameterCount();
        var e = Function._validateParams(arguments, [
        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
        var e = Function._validateParams(arguments, [{name: "value", mayBeNull: true}]);
        var e = Function._validateParams(arguments, [{name: "value", type: Boolean}]);
        var e = Function._validateParams(arguments, [{name: "value", type: Function, mayBeNull: true}]);
        var e = Function._validateParams(arguments, [{name: "value", type: Number}]);
        var e = Function._validateParams(arguments, [{name: "value", type: String, mayBeNull: true}]);
        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
        var e = Function._validateParams(arguments, [{name: "value", type: Sys.Net.WebRequestExecutor}]);
        var e = Function._validateParams(arguments, [{name: "value", type: Sys.UI.Control}]);
        var e = Function._validateParams(arguments, [{name: "value", type: Sys.UI.VisibilityMode}]);
        var elt = array[i];
        var endIndex = Math.min(text.length, location + 20);
        var entry = this._serializeState(initialState);
        var entry = this._serializeState(this._state);
        var entry = this.get_stateString();
        var errorHandled = false;
        var evArgs = new Sys.Net.NetworkRequestEventArgs(webRequest);
        var eventArgs, handler = this._get_eventHandlerList().getHandler("initializeRequest");
        var eventTarget = document.getElementById("__EVENTTARGET");
        var evt = this._getEvent(id);
        var executor = webRequest.get_executor();
        var existingScripts = document.getElementsByTagName('script');
        var exp = data.replace(Sys.Serialization.JavaScriptSerializer._dateRegEx, "$1new Date($2)");
        var expandoNodes = [];
        var expandoScript = '';
        var expectedElementDomElement = !!expectedParam.elementDomElement;
        var expectedElementInteger = !!expectedParam.elementInteger;
        var expectedParam = expectedParams[Math.min(i, expectedParams.length - 1)];
        var exponent;
        var expSignInfo = Number._parseNumberNegativePattern(exponent, numFormat, 1);
        var factor = Math.pow(10, precision);
        var flattenedProperties = {};
        var flattenedProperties = this._flattenProperties(propertyNames, this.properties);
        var form = this._form;
        var format = args[i];
        var formats = cultureInfo._getDateTimeFormats();
        var formBody = new Sys.StringBuilder();
        var getter = isObject ? null : target["get_" + name];
        var h = this.get_events().getHandler("load");
        var h = this.get_events().getHandler("navigate");
        var handler = events[name];
        var handler = Sys.Net.WebRequestManager._get_eventHandlerList().getHandler("completedRequest");
        var handler = this._events.getHandler("propertyChanged");
        var handler = this._get_eventHandlerList().getHandler("endRequest");
        var handler = this._get_eventHandlerList().getHandler("invokingRequest");
        var handler = this._get_eventHandlerList().getHandler("pageLoaded");
        var handler = this._get_eventHandlerList().getHandler("pageLoading");
        var handler = this.get_events().getHandler("init");
        var hash = window.location.hash;
        var headElements = document.getElementsByTagName('head');
        var headers = this._webRequest.get_headers();
        var hiddenFieldNodes = [];
        var historyElement = document.getElementById('__history');
        var i = name.lastIndexOf('.');
        var i, l, node;
        var i, l;
        var id = component.get_id();
        var index = regex.lastIndex;
        var index = tokenRegExp.lastIndex;
        var initialState = this._state;
        var interfaces = baseType.__interfaces;
        var interfaces = type.__interfaces;
        var intervalChanged= (this.get_interval() !== interval);
        var isCrossPost = this._isCrossPost;
        var key;
        var l = arguments.length;
        var l;
        var lastSlash = baseUrl.lastIndexOf('/');
        var loadedEntry = this.get_stateString();
        var matchGroup = match[j+1];
        var methodName;
        var name = Object.getTypeName(this);
        var name = this.get_name();
        var newAsyncPostBackControlClientIDs = [];
        var newAsyncPostBackControlIDs = [];
        var newIDs = upData.updatePanelIDs;
        var newIDs, childIDs, refreshedIDs;
        var newPostBackControlClientIDs = [];
        var newPostBackControlIDs = [];
        var newUpdatePanelClientIDs;
        var newUpdatePanelHasChildrenAsTriggers;
        var newUpdatePanelIDs;
        var nextSlash = baseUrl.indexOf('/', slashslash + 3);
        var node = childNodes[i];
        var node;
        var nodups = [];
        var ns = rootObject[currentPart];
        var numberString = number.toString();
        var obj = queryString[arg];
        var oldDisplay = element.style.display;
        var oldId = this.get_id();
        var oldIDs = upData.oldUpdatePanelIDs;
        var oldPosition = element.style.position;
        var onSubmitNodes = [];
        var onSubmitStatementScript = '';
        var open = format.indexOf('{', i);
        var originalElement = element;
        var parameters;
        var paramName = expectedParam.name;
        var parentElement = this._element.parentNode;
        var parents = [this];
        var parserErrorDetails = null;
        var parts = (ignoreCase ? value.toLowerCase() : value).split(',');
        var parts = [];
        var parts = this._parts;
        var path = this.get_path();
        var preMatch = expFormat.slice(index, match.index);
        var preMatch = format.slice(index, ar ? ar.index : format.length);
        var progIDs = [ 'Msxml2.DOMDocument.3.0', 'Msxml2.DOMDocument' ];
        var progIDs = [ 'Msxml2.XMLHTTP.3.0', 'Msxml2.XMLHTTP' ];
        var proposedSettings = null;
        var redirectUrl = context[0];
        var redirectUrl = context[4];
        var reference = $find(references[name]);
        var referencedScripts = Sys._ScriptLoader._referencedScripts = [];
        var refreshedIDs = upData.panelsToRefreshIDs;
        var reply = executor.get_responseData();
        var replyIndex = 0;
        var request = new Sys.Net.WebRequest();
        var res = [];
        var response = data.executor;
        var result = [];
        var result = {};
        var result = 0;
        var result;
        var ret = "";
        var right = "";
        var rounded = (Math.round(number * factor) / factor);
        var scriptBlockNodes = [];
        var scriptDisposeNodes = [];
        var scriptElement = document.createElement('script');
        var scriptElement = this._currentTask.get_scriptElement();
        var scriptElement = this.get_scriptElement();
        var scriptLoader = Sys._ScriptLoader.getInstance();
        var scriptStartupNodes = [];
        var seen = {};
        var sep = '?';
        var serialized = [];
        var serverSeparator = entry.indexOf('&&');
        var session = {
        var session = Array.dequeue(this._sessions);
        var session = this._currentSession;
        var setter = component["set_" + name];
        var showProgress = !this._associatedUpdatePanelId; 
        var sl = Sys._ScriptLoader.getInstance();
        var slashslash = baseUrl.indexOf('://');
        var sorted = this.__sortedValues;
        var split = numberString.split(/e/i);
        var startIndex = Math.max(0, location - 20);
        var state = this._deserializeState(entry);
        var stateClone = {};
        var stopped = !this.get_enabled();
        var str = node.content;
        var stringIndex = numberString.length-1;
        var style = element.currentStyle || Sys.UI.DomElement._getCurrentStyle(element);
        var style = w.getComputedStyle(element, null);
        var text = this._traceDump(object, name, true);
        var timeout = this._webRequest.get_timeout();
        var tokens = entry.split('&');
        var traceElement = document.getElementById('TraceConsole');
        var unflattened = this._unflattenProperties(result);
        var unflattenedProperties = {};
        var upData = data ? data.updatePanelData : null;
        var upData = data.updatePanelData;
        var updated = [];
        var updatePanelNodes = [];
        var userContext = context[3] || this.get_defaultUserContext();
        var userContext = context[7] || this.get_defaultUserContext();
        var v = 0;
        var v = historyElement.value;
        var v = this._get_rolesIndex()[role.trim().toLowerCase()];
        var v = value;
        var val = properties[name];
        var val = Sys.Serialization.JavaScriptSerializer.serialize(obj);
        var val = this._value;
        var val = this.prototype[i];
        var val;
        var verb = this._webRequest.get_httpVerb();
        var xml = this._xmlHttpRequest.responseXML;
        w.getComputedStyle(element, null) :
        while (!showProgress && curElem) {
        while (current) {
        while (currentTarget) {
        while (element) {
        while (parentElement) {
        while (replyIndex < reply.length) {
        while (stringIndex >= 0) {
        while (uniqueID.length > 0) {
        window.setTimeout(function() {
        window[arrayName] = new Array();
        year += curr - (curr % 100);
        year = result.getFullYear();
       }
       } 
       if(this._pageRequestManager !== null){
       Sys.UI._Timer.callBaseMethod(this,"dispose");
       this._stopTimer();
      </xs:element>
      </xs:sequence>
      <xs:attribute name="ID" type="guid" use="required" />
      <xs:element name="CollectionMappings" minOccurs="0">
      <xs:element name="DefaultContractNamespace" type="xs:string" minOccurs="0" />
      <xs:element name="DisableGeneratingConfiguration" type="xs:boolean" minOccurs="0" />
      <xs:element name="DisableGeneratingContract" type="xs:boolean" minOccurs="0" />
      <xs:element name="EnableDataBinding" type="xs:boolean" minOccurs="0" />
      <xs:element name="ExcludedTypes" minOccurs="0">
      <xs:element name="GenerateAsynchronousMethods" type="xs:boolean" minOccurs="0" />
      <xs:element name="GenerateInternalTypes" type="xs:boolean" minOccurs="0" />
      <xs:element name="GenerateMessageContracts" type="xs:boolean" minOccurs="0" />
      <xs:element name="GenerateSerializableTypes" type="xs:boolean" minOccurs="0" />
      <xs:element name="ImportXmlTypes" type="xs:boolean" minOccurs="0" />
      <xs:element name="NamespaceMappings" minOccurs="0">
      <xs:element name="ReferenceAllAssemblies" type="xs:boolean" minOccurs="0" />
      <xs:element name="ReferencedAssemblies" minOccurs="0">
      <xs:element name="ReferencedDataContractTypes" minOccurs="0">
      <xs:element name="Serializer" type="ProxySerializerType" minOccurs="0" />
      <xs:element name="ServiceContractMappings" minOccurs="0">
      <xs:element name="UseSerializerForFaults" type="xs:boolean" minOccurs="0" />
      <xs:element name="Wrapped" type="xs:boolean" minOccurs="0" />
      <xs:enumeration value="Auto" />
      <xs:enumeration value="DataContractSerializer" />
      <xs:enumeration value="Dictionary" />
      <xs:enumeration value="Disco" />
      <xs:enumeration value="file" />
      <xs:enumeration value="http" />
      <xs:enumeration value="List" />
      <xs:enumeration value="mex" />
      <xs:enumeration value="Policy" />
      <xs:enumeration value="Schema" />
      <xs:enumeration value="Unknown" />
      <xs:enumeration value="Wsdl" />
      <xs:enumeration value="Xml" />
      <xs:enumeration value="XmlSerializer" />
      <xs:field xpath="@SourceId" />
      <xs:minLength value="1" />
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
      <xs:selector xpath=".//mstns:MetadataFile" />
      <xs:selector xpath=".//mstns:MetadataSource" />
      <xs:sequence>
    /// <field name="altKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.altKey"></field>
    /// <field name="backspace" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.backspace"></field>
    /// <field name="button" type="Sys.UI.MouseButton" locid="F:J#Sys.UI.DomEvent.button"></field>
    /// <field name="charCode" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.charCode"></field>
    /// <field name="clientX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.clientX"></field>
    /// <field name="clientY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.clientY"></field>
    /// <field name="collapse" type="Number" integer="true" static="true" locid="F:J#Sys.UI.VisibilityMode.collapse"></field>
    /// <field name="ctrlKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.ctrlKey"></field>
    /// <field name="del" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.del"></field>
    /// <field name="down" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.down"></field>
    /// <field name="end" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.end"></field>
    /// <field name="enter" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.enter"></field>
    /// <field name="esc" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.esc"></field>
    /// <field name="height" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.height"></field>
    /// <field name="hide" type="Number" integer="true" static="true" locid="F:J#Sys.UI.VisibilityMode.hide"></field>
    /// <field name="home" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.home"></field>
    /// <field name="isDebug" type="Boolean" locid="F:J#Sys.Debug.isDebug"></field>
    /// <field name="keyCode" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.keyCode"></field>
    /// <field name="left" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.left"></field>
    /// <field name="leftButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.leftButton"></field>
    /// <field name="middleButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.middleButton"></field>
    /// <field name="offsetX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.offsetX"></field>
    /// <field name="offsetY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.offsetY"></field>
    /// <field name="pageDown" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.pageDown"></field>
    /// <field name="pageUp" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.pageUp"></field>
    /// <field name="right" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.right"></field>
    /// <field name="rightButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.rightButton"></field>
    /// <field name="screenX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.screenX"></field>
    /// <field name="screenY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.screenY"></field>
    /// <field name="shiftKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.shiftKey"></field>
    /// <field name="space" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.space"></field>
    /// <field name="tab" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.tab"></field>
    /// <field name="target" locid="F:J#Sys.UI.DomEvent.target"></field>
    /// <field name="type" type="String" locid="F:J#Sys.UI.DomEvent.type"></field>
    /// <field name="up" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.up"></field>
    /// <field name="width" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.width"></field>
    /// <field name="x" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.x"></field>
    /// <field name="x" type="Number" integer="true" locid="F:J#Sys.UI.Point.x"></field>
    /// <field name="y" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.y"></field>
    /// <field name="y" type="Number" integer="true" locid="F:J#Sys.UI.Point.y"></field>
    /// <param name="actualType" type="Type" optional="true" mayBeNull="true"></param>
    /// <param name="actualValue" optional="true" mayBeNull="true"></param>
    /// <param name="args" parameterArray="true" mayBeNull="true"></param>
    /// <param name="array" type="Array" elementMayBeNull="true"></param>
    /// <param name="baseArguments" type="Array" optional="true" mayBeNull="true" elementMayBeNull="true"></param>
    /// <param name="baseType" type="Type" optional="true" mayBeNull="true"></param>
    /// <param name="className" type="String"></param>
    /// <param name="completedCallback" type="Function"></param>
    /// <param name="components" type="Array" elementType="Sys.Component"></param>
    /// <param name="context" mayBeNull="true"></param>
    /// <param name="data" type="String"></param>
    /// <param name="dataItems" type="Object" mayBeNull="true"></param>
    /// <param name="dateTimeFormat" type="Object"></param>
    /// <param name="element" domElement="true" optional="true" mayBeNull="true"></param>
    /// <param name="element" domElement="true"></param>
    /// <param name="element"></param>
    /// <param name="error" type="Error" mayBeNull="true"></param>
    /// <param name="errorInfo" optional="true" mayBeNull="true"></param>
    /// <param name="eventName" type="String"></param>
    /// <param name="eventObject"></param>
    /// <param name="events" optional="true" mayBeNull="true"></param>
    /// <param name="events" type="Object"></param>
    /// <param name="exceptionType" type="String" mayBeNull="true"></param>
    /// <param name="expectedType" type="Type" optional="true" mayBeNull="true"></param>
    /// <param name="flags" type="Boolean" optional="true"></param>
    /// <param name="format" type="String"></param>
    /// <param name="formats" parameterArray="true" optional="true" mayBeNull="true"></param>
    /// <param name="handler" type="Function"></param>
    /// <param name="handlerOwner" optional="true"></param>
    /// <param name="height" type="Number" integer="true"></param>
    /// <param name="id" type="String"></param>
    /// <param name="ignoreCase" type="Boolean" optional="true"></param>
    /// <param name="index" mayBeNull="true"></param>
    /// <param name="initialText" optional="true" mayBeNull="true"></param>
    /// <param name="instance" mayBeNull="true"></param>
    /// <param name="instance" optional="true" mayBeNull="true"></param>
    /// <param name="instance"></param>
    /// <param name="interfaceType" type="Type"></param>
    /// <param name="interfaceTypes" parameterArray="true" type="Type"></param>
    /// <param name="isPartialLoad" type="Boolean"></param>
    /// <param name="item" mayBeNull="true"></param>
    /// <param name="item" optional="true" mayBeNull="true"></param>
    /// <param name="items" type="Array" elementMayBeNull="true"></param>
    /// <param name="markup" type="String"></param>
    /// <param name="message" type="String" mayBeNull="true"></param>
    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="method" type="Function"></param>
    /// <param name="methodName" type="String"></param>
    /// <param name="name" type="String"></param>
    /// <param name="namespacePath" type="String"></param>
    /// <param name="ns" optional="true" mayBeNull="true"></param>
    /// <param name="numberFormat" type="Object"></param>
    /// <param name="object" mayBeNull="true"></param>
    /// <param name="onFailure" type="Function" mayBeNull="true" optional="true"></param>
    /// <param name="onSuccess" type="Function" mayBeNull="true" optional="true"></param>
    /// <param name="panelsCreated" type="Array"></param>
    /// <param name="panelsDeleting" type="Array"></param>
    /// <param name="panelsUpdated" type="Array"></param>
    /// <param name="panelsUpdating" type="Array"></param>
    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
    /// <param name="params" mayBeNull="true" optional="true"></param>
    /// <param name="parentType" type="Type"></param>
    /// <param name="postBackElement" domElement="true" mayBeNull="true"></param>
    /// <param name="prefix" type="String"></param>
    /// <param name="properties" optional="true" mayBeNull="true"></param>
    /// <param name="properties"></param>
    /// <param name="propertyName" type="String"></param>
    /// <param name="references" optional="true" mayBeNull="true"></param>
    /// <param name="request" type="Sys.Net.WebRequest"></param>
    /// <param name="response" type="Sys.Net.WebRequestExecutor"></param>
    /// <param name="scriptElement" domElement="true"></param>
    /// <param name="secure" type="Boolean" optional="true"></param>
    /// <param name="servicePath" type="String"></param>
    /// <param name="stackTrace" type="String" mayBeNull="true"></param>
    /// <param name="start" optional="true" mayBeNull="true"></param>
    /// <param name="state" type="Object"></param>
    /// <param name="suffix" type="String"></param>
    /// <param name="target"></param>
    /// <param name="timedOut" type="Boolean"></param>
    /// <param name="timeout" type="Number" optional="true"></param>
    /// <param name="type" mayBeNull="true"></param>
    /// <param name="type" type="Type"></param>
    /// <param name="typeName" type="String" mayBeNull="true"></param>
    /// <param name="typeName" type="String"></param>
    /// <param name="useGet" type="Boolean" optional="true"></param>
    /// <param name="userContext" mayBeNull="true" optional="true"></param>
    /// <param name="value" optional="true" mayBeNull="true"></param>
    /// <param name="value" type="Boolean"></param>
    /// <param name="value" type="String" mayBeNull="true"></param>
    /// <param name="value" type="String"></param>
    /// <param name="value" type="Sys.UI.VisibilityMode"></param>
    /// <param name="webRequest" type="Sys.Net.WebRequest"></param>
    /// <param name="width" type="Number" integer="true"></param>
    /// <param name="x" type="Number" integer="true"></param>
    /// <param name="x" type="Number"></param>
    /// <param name="y" type="Number" integer="true"></param>
    /// <param name="y" type="Number"></param>
    /// <returns domElement="true" mayBeNull="true"></returns>
    /// <returns mayBeNull="true"></returns>
    /// <returns type="Array" elementMayBeNull="true"></returns>
    /// <returns type="Array" elementType="Sys.UI.Behavior"></returns>
    /// <returns type="Array" elementType="Type" mayBeNull="false" elementMayBeNull="false"></returns>
    /// <returns type="Array"></returns>
    /// <returns type="Boolean"></returns>
    /// <returns type="Date"></returns>
    /// <returns type="Error"></returns>
    /// <returns type="Function" mayBeNull="true"></returns>
    /// <returns type="Function"></returns>
    /// <returns type="Number"></returns>
    /// <returns type="String"></returns>
    /// <returns type="Sys.Net.WebRequest"></returns>
    /// <returns type="Sys.UI.Behavior" mayBeNull="true"></returns>
    /// <returns type="Sys.UI.Bounds"></returns>
    /// <returns type="Sys.UI.Component"></returns>
    /// <returns type="Sys.UI.VisibilityMode"></returns>
    /// <returns type="Sys.WebForms.PageRequestManager"></returns>
    /// <returns type="Type" mayBeNull="true"></returns>
    /// <returns type="Type"></returns>
    /// <returns></returns>
    /// <summary locid="E:J#Sys.INotifyDisposing.disposing" />
    /// <summary locid="E:J#Sys.INotifyPropertyChange.propertyChanged" />
    /// <summary locid="E:J#Sys.Net.WebRequest.completed" />
    /// <summary locid="M:J#Array.addRange" />
    /// <summary locid="M:J#Array.clear" />
    /// <summary locid="M:J#Array.clone" />
    /// <summary locid="M:J#Array.contains" />
    /// <summary locid="M:J#Array.dequeue" />
    /// <summary locid="M:J#Array.enqueue" />
    /// <summary locid="M:J#Array.forEach" />
    /// <summary locid="M:J#Array.indexOf" />
    /// <summary locid="M:J#Array.insert" />
    /// <summary locid="M:J#Array.parse" />
    /// <summary locid="M:J#Array.remove" />
    /// <summary locid="M:J#Array.removeAt" />
    /// <summary locid="M:J#Boolean.parse" />
    /// <summary locid="M:J#checkParam" />
    /// <summary locid="M:J#Date.format" />
    /// <summary locid="M:J#Date.localeFormat" />
    /// <summary locid="M:J#Date.parseInvariant" />
    /// <summary locid="M:J#Date.parseLocale" />
    /// <summary locid="M:J#Error.argument" />
    /// <summary locid="M:J#Error.argumentNull" />
    /// <summary locid="M:J#Error.argumentOutOfRange" />
    /// <summary locid="M:J#Error.argumentType" />
    /// <summary locid="M:J#Error.argumentUndefined" />
    /// <summary locid="M:J#Error.create" />
    /// <summary locid="M:J#Error.format" />
    /// <summary locid="M:J#Error.invalidOperation" />
    /// <summary locid="M:J#Error.notImplemented" />
    /// <summary locid="M:J#Error.parameterCount" />
    /// <summary locid="M:J#Function.createCallback" />
    /// <summary locid="M:J#Function.createDelegate" />
    /// <summary locid="M:J#Function.emptyMethod" />
    /// <summary locid="M:J#Number.format" />
    /// <summary locid="M:J#Number.localeFormat" />
    /// <summary locid="M:J#Number.parseInvariant" />
    /// <summary locid="M:J#Number.parseLocale" />
    /// <summary locid="M:J#Object.getType" />
    /// <summary locid="M:J#Object.getTypeName" />
    /// <summary locid="M:J#String.endsWith" />
    /// <summary locid="M:J#String.format" />
    /// <summary locid="M:J#String.localeFormat" />
    /// <summary locid="M:J#String.startsWith" />
    /// <summary locid="M:J#String.trim" />
    /// <summary locid="M:J#String.trimEnd" />
    /// <summary locid="M:J#String.trimStart" />
    /// <summary locid="M:J#Sys._ScriptLoaderTask.#ctor" />
    /// <summary locid="M:J#Sys.Application.#ctor" />
    /// <summary locid="M:J#Sys.ApplicationLoadEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.CancelEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.Component.#ctor" />
    /// <summary locid="M:J#Sys.Component._setProperties" />
    /// <summary locid="M:J#Sys.Component.create" />
    /// <summary locid="M:J#Sys.CultureInfo.#ctor" />
    /// <summary locid="M:J#Sys.Debug.#ctor" />
    /// <summary locid="M:J#Sys.Enum.parse" />
    /// <summary locid="M:J#Sys.Enum.toString" />
    /// <summary locid="M:J#Sys.EventArgs.#ctor" />
    /// <summary locid="M:J#Sys.EventHandlerList.#ctor" />
    /// <summary locid="M:J#Sys.HistoryEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.INotifyDisposing.#ctor" />
    /// <summary locid="M:J#Sys.INotifyPropertyChange.#ctor" />
    /// <summary locid="M:J#Sys.Net.NetworkRequestEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.Net.ProfileService.#ctor" />
    /// <summary locid="M:J#Sys.Net.WebRequest.#ctor" />
    /// <summary locid="M:J#Sys.Net.WebRequestExecutor.#ctor" />
    /// <summary locid="M:J#Sys.Net.WebServiceError.#ctor" />
    /// <summary locid="M:J#Sys.Net.WebServiceProxy.invoke" />
    /// <summary locid="M:J#Sys.Net.XMLDOM.#ctor" />
    /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.#ctor" />
    /// <summary locid="M:J#Sys.PropertyChangedEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.#ctor" />
    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.deserialize" />
    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.serialize" />
    /// <summary locid="M:J#Sys.Services.AuthenticationService.#ctor" />
    /// <summary locid="M:J#Sys.Services.ProfileGroup.#ctor" />
    /// <summary locid="M:J#Sys.Services.RoleService.#ctor" />
    /// <summary locid="M:J#Sys.StringBuilder.#ctor" />
    /// <summary locid="M:J#Sys.UI.Behavior.#ctor" />
    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviorByName" />
    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviors" />
    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviorsByType" />
    /// <summary locid="M:J#Sys.UI.Bounds.#ctor" />
    /// <summary locid="M:J#Sys.UI.Control.#ctor" />
    /// <summary locid="M:J#Sys.UI.DomElement.#ctor" />
    /// <summary locid="M:J#Sys.UI.DomElement.addCssClass" />
    /// <summary locid="M:J#Sys.UI.DomElement.containsCssClass" />
    /// <summary locid="M:J#Sys.UI.DomElement.getBounds" />
    /// <summary locid="M:J#Sys.UI.DomElement.getElementById" />
    /// <summary locid="M:J#Sys.UI.DomElement.getVisibilityMode" />
    /// <summary locid="M:J#Sys.UI.DomElement.getVisible" />
    /// <summary locid="M:J#Sys.UI.DomElement.removeCssClass" />
    /// <summary locid="M:J#Sys.UI.DomElement.setLocation" />
    /// <summary locid="M:J#Sys.UI.DomElement.setVisibilityMode" />
    /// <summary locid="M:J#Sys.UI.DomElement.setVisible" />
    /// <summary locid="M:J#Sys.UI.DomElement.toggleCssClass" />
    /// <summary locid="M:J#Sys.UI.DomEvent.#ctor" />
    /// <summary locid="M:J#Sys.UI.DomEvent.addHandler" />
    /// <summary locid="M:J#Sys.UI.DomEvent.addHandlers" />
    /// <summary locid="M:J#Sys.UI.DomEvent.clearHandlers" />
    /// <summary locid="M:J#Sys.UI.DomEvent.removeHandler" />
    /// <summary locid="M:J#Sys.UI.Key.#ctor" />
    /// <summary locid="M:J#Sys.UI.LineType.#ctor" />
    /// <summary locid="M:J#Sys.UI.MouseButton.#ctor" />
    /// <summary locid="M:J#Sys.UI.Point.#ctor" />
    /// <summary locid="M:J#Sys.UI.VisibilityMode.#ctor" />
    /// <summary locid="M:J#Sys.WebForms.BeginRequestEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.WebForms.EndRequestEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.WebForms.InitializeRequestEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.WebForms.PageLoadedEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.WebForms.PageLoadingEventArgs.#ctor" />
    /// <summary locid="M:J#Sys.WebForms.PageRequestManager.getInstance" />
    /// <summary locid="M:J#Type.callBaseMethod" />
    /// <summary locid="M:J#Type.getBaseMethod" />
    /// <summary locid="M:J#Type.getBaseType" />
    /// <summary locid="M:J#Type.getInterfaces" />
    /// <summary locid="M:J#Type.getName" />
    /// <summary locid="M:J#Type.getRootNamespaces" />
    /// <summary locid="M:J#Type.implementsInterface" />
    /// <summary locid="M:J#Type.inheritsFrom" />
    /// <summary locid="M:J#Type.initializeBase" />
    /// <summary locid="M:J#Type.isClass" />
    /// <summary locid="M:J#Type.isEnum" />
    /// <summary locid="M:J#Type.isFlags" />
    /// <summary locid="M:J#Type.isImplementedBy" />
    /// <summary locid="M:J#Type.isInstanceOfType" />
    /// <summary locid="M:J#Type.isInterface" />
    /// <summary locid="M:J#Type.isNamespace" />
    /// <summary locid="M:J#Type.parse" />
    /// <summary locid="M:J#Type.registerClass" />
    /// <summary locid="M:J#Type.registerInterface" />
    /// <summary locid="M:J#Type.registerNamespace" />
    /// <summary locid="M:J#Type.resolveInheritance" />
    /// <summary locid="P:J#Sys.Net.WebRequestManager.#ctor" />
    ]);
    __namespace: true,
    __typeName: "Sys",
    __upperCaseTypes: {}
    _addComponentToSecondPass: Sys$_Application$_addComponentToSecondPass,
    _addScriptElementHandlers: Sys$_ScriptLoaderTask$_addScriptElementHandlers,    
    _appendConsole: Sys$_Debug$_appendConsole,
    _appendTrace: Sys$_Debug$_appendTrace,
    _authenticated: false,
    _cancelPendingCallbacks: Sys$WebForms$PageRequestManager$_cancelPendingCallbacks,
    _clearTimeout: Sys$UI$_UpdateProgress$_clearTimeout,
    _clonePropertyNames: Sys$Services$_ProfileService$_clonePropertyNames,    
    _commitControls: Sys$WebForms$PageRequestManager$_commitControls,
    _convertToClientIDs: Sys$WebForms$PageRequestManager$_convertToClientIDs,
    _createHiddenField: Sys$WebForms$PageRequestManager$_createHiddenField,
    _createPageRequestManagerParserError: Sys$WebForms$PageRequestManager$_createPageRequestManagerParserError,
    _createPageRequestManagerServerError: Sys$WebForms$PageRequestManager$_createPageRequestManagerServerError,
    _createPageRequestManagerTimeoutError: Sys$WebForms$PageRequestManager$_createPageRequestManagerTimeoutError,
    _createPostBackSettings: Sys$WebForms$PageRequestManager$_createPostBackSettings,
    _createScriptElement: Sys$_ScriptLoader$_createScriptElement,
    _creatingComponents: false,
    _defaultLoadCompletedCallback: null,
    _defaultLoginCompletedCallback: null,
    _defaultLogoutCompletedCallback: null,
    _defaultSaveCompletedCallback: null,
    _deserializeState: Sys$_Application$_deserializeState,
    _destroyTree: Sys$WebForms$PageRequestManager$_destroyTree,
    _disposing: false,
    _doCallback: Sys$WebForms$PageRequestManager$_doCallback,
    _doInitialize: Sys$_Application$_doInitialize,
    _doPostback: Sys$UI$_Timer$_doPostback,
    _doPostBack: Sys$WebForms$PageRequestManager$_doPostBack,
    _doPostBackWithOptions: Sys$WebForms$PageRequestManager$_doPostBackWithOptions,
    _elementContains: Sys$WebForms$PageRequestManager$_elementContains,
    _enableHistoryInScriptManager: Sys$_Application$_enableHistoryInScriptManager,    
    _endPostBack: Sys$WebForms$PageRequestManager$_endPostBack,
    _ensureHistory: Sys$_Application$_ensureHistory,
    _findNearestElement: Sys$WebForms$PageRequestManager$_findNearestElement,
    _findText: Sys$WebForms$PageRequestManager$_findText,
    _fireDefaultButton: Sys$WebForms$PageRequestManager$_fireDefaultButton,
    _flattenProperties: Sys$Services$_ProfileService$_flattenProperties,
    _get_eventHandlerList: Sys$Net$_WebRequestManager$_get_eventHandlerList,
    _get_eventHandlerList: Sys$Net$WebRequest$_get_eventHandlerList,
    _get_eventHandlerList: Sys$WebForms$PageRequestManager$_get_eventHandlerList,
    _get_path: Sys$Services$_AuthenticationService$_get_path,
    _get_path: Sys$Services$_ProfileService$_get_path,    
    _get_path: Sys$Services$_RoleService$_get_path,  
    _get_rolesIndex: Sys$Services$_RoleService$_get_rolesIndex,
    _getAbbrDayIndex: Sys$CultureInfo$_getAbbrDayIndex,
    _getAbbrMonthIndex: Sys$CultureInfo$_getAbbrMonthIndex,
    _getDateTimeFormats: Sys$CultureInfo$_getDateTimeFormats,
    _getDayIndex: Sys$CultureInfo$_getDayIndex,
    _getEvent: Sys$EventHandlerList$_getEvent
    _getHistory: Sys$_Application$_getHistory,
    _getMonthIndex: Sys$CultureInfo$_getMonthIndex,
    _getPageLoadedEventArgs: Sys$WebForms$PageRequestManager$_getPageLoadedEventArgs,
    _getPageLoadingEventArgs: Sys$WebForms$PageRequestManager$_getPageLoadingEventArgs,
    _getPostBackSettings: Sys$WebForms$PageRequestManager$_getPostBackSettings,
    _getScrollPosition: Sys$WebForms$PageRequestManager$_getScrollPosition,
    _handleBeginRequest: Sys$UI$_UpdateProgress$_handleBeginRequest,
    _handleEndRequest: Sys$UI$_Timer$_handleEndRequest,
    _handleEndRequest: Sys$UI$_UpdateProgress$_handleEndRequest,
    _id: null,
    _idSet: false,
    _initialized: false,
    _initializeInternal: Sys$WebForms$PageRequestManager$_initializeInternal,
    _invoke: Sys$Net$WebServiceProxy$_invoke
    _isSafari2: Sys$_Application$_isSafari2,
    _loadHandler: Sys$_Application$_loadHandler,
    _loadScriptsInternal: Sys$_ScriptLoader$_loadScriptsInternal,
    _matchesParentIDInList: Sys$WebForms$PageRequestManager$_matchesParentIDInList,
    _name: null,
    _navigate: Sys$_Application$_navigate,
    _nextSession: Sys$_ScriptLoader$_nextSession,
    _onFormElementActive: Sys$WebForms$PageRequestManager$_onFormElementActive,
    _onFormElementClick: Sys$WebForms$PageRequestManager$_onFormElementClick,
    _onFormSubmit: Sys$WebForms$PageRequestManager$_onFormSubmit,
    _onFormSubmitCompleted: Sys$WebForms$PageRequestManager$_onFormSubmitCompleted,
    _onIdle: Sys$_Application$_onIdle,
    _onIFrameLoad: Sys$_Application$_onIFrameLoad,
    _onLoadComplete: Sys$Services$_ProfileService$_onLoadComplete,
    _onLoadComplete: Sys$Services$_RoleService$_onLoadComplete,
    _onLoadFailed: Sys$Services$_ProfileService$_onLoadFailed,
    _onLoadFailed: Sys$Services$_RoleService$_onLoadFailed
    _onLoginComplete: Sys$Services$_AuthenticationService$_onLoginComplete,
    _onLoginFailed: Sys$Services$_AuthenticationService$_onLoginFailed,
    _onLogoutComplete: Sys$Services$_AuthenticationService$_onLogoutComplete,
    _onLogoutFailed: Sys$Services$_AuthenticationService$_onLogoutFailed,
    _onPageRequestManagerBeginRequest: Sys$_Application$_onPageRequestManagerBeginRequest,
    _onPageRequestManagerEndRequest: Sys$_Application$_onPageRequestManagerEndRequest,
    _onSaveComplete: Sys$Services$_ProfileService$_onSaveComplete,
    _onSaveFailed: Sys$Services$_ProfileService$_onSaveFailed,
    _onWindowUnload: Sys$WebForms$PageRequestManager$_onWindowUnload,
    _pageLoaded: Sys$WebForms$PageRequestManager$_pageLoaded,
    _pageLoadedInitialLoad: Sys$WebForms$PageRequestManager$_pageLoadedInitialLoad,
    _parent: null,
    _parseDelta: Sys$WebForms$PageRequestManager$_parseDelta,
    _path: '',
    _processUpdatePanelArrays: Sys$WebForms$PageRequestManager$_processUpdatePanelArrays,
    _queueScripts: Sys$WebForms$PageRequestManager$_queueScripts,
    _raiseError: Sys$_ScriptLoader$_raiseError,
    _raiseNavigate: Sys$_Application$_raiseNavigate,
    _raiseTick: Sys$UI$_Timer$_raiseTick,
    _registerDisposeScript: Sys$WebForms$PageRequestManager$_registerDisposeScript,
    _removeScriptElementHandlers: Sys$_ScriptLoaderTask$_removeScriptElementHandlers,    
    _rolesIndex: null,
    _scriptErrorHandler: Sys$_ScriptLoaderTask$_scriptErrorHandler,
    _scriptIncludesLoadComplete: Sys$WebForms$PageRequestManager$_scriptIncludesLoadComplete,
    _scriptIncludesLoadFailed: Sys$WebForms$PageRequestManager$_scriptIncludesLoadFailed,
    _scriptLoadedHandler: Sys$_ScriptLoader$_scriptLoadedHandler,
    _scriptLoadHandler: Sys$_ScriptLoaderTask$_scriptLoadHandler  
    _scriptLoadTimeoutHandler: Sys$_ScriptLoader$_scriptLoadTimeoutHandler,
    _scriptsLoadComplete: Sys$WebForms$PageRequestManager$_scriptsLoadComplete,
    _serializeState: Sys$_Application$_serializeState,
    _set_webRequest: Sys$Net$WebRequestExecutor$_set_webRequest,
    _setAuthenticated: Sys$Services$_AuthenticationService$_setAuthenticated    
    _setHistory: Sys$_Application$_setHistory,
    _setState: Sys$_Application$_setState,
    _splitNodeIntoArray: Sys$WebForms$PageRequestManager$_splitNodeIntoArray,
    _startRequest: Sys$UI$_UpdateProgress$_startRequest,
    _startTimer: Sys$UI$_Timer$_startTimer,
    _stopSession: Sys$_ScriptLoader$_stopSession    
    _stopTimer: Sys$UI$_Timer$_stopTimer,
    _timeout: 0,
    _toUpper: Sys$CultureInfo$_toUpper
    _toUpperArray: Sys$CultureInfo$_toUpperArray,
    _traceDump: Sys$_Debug$_traceDump
    _unflattenProperties: Sys$Services$_ProfileService$_unflattenProperties
    _uniqueIDToClientID: Sys$WebForms$PageRequestManager$_uniqueIDToClientID,
    _unloadHandler: Sys$_Application$_unloadHandler,
    _update: Sys$UI$_Timer$_update
    _updateControls: Sys$WebForms$PageRequestManager$_updateControls,
    _updateHiddenField: Sys$_Application$_updateHiddenField
    _updatePanel: Sys$WebForms$PageRequestManager$_updatePanel,
    _updating: false,
    _validPosition: Sys$WebForms$PageRequestManager$_validPosition
    _visibilityMode: Sys.UI.VisibilityMode.hide,
    }
    } else {
    });
    </xs:all>
    </xs:attribute>
    </xs:complexType>
    </xs:documentation>
    </xs:key>
    </xs:keyref>
    </xs:restriction>
    </xs:sequence>
    <xs:all>
    <xs:attribute name="Address" type="nonEmptyString" use="required" />
    <xs:attribute name="AssemblyName" type="AssemblyName" use="required" />
    <xs:attribute name="Category" type="CollectionCategory" />
    <xs:attribute name="ClrNamespace" type="xs:string" use="required" />
    <xs:attribute name="FileName" type="FileName" use="required" />
    <xs:attribute name="ID" type="guid" use="required" />
    <xs:attribute name="Ignore" type="xs:boolean" default="false" use="optional" />
    <xs:attribute name="IsMergeResult" type="xs:boolean" use="optional" default="false" />
    <xs:attribute name="MetadataType" type="MetadataType" use="required" />
    <xs:attribute name="Name" type="nonEmptyString" use="required" />
    <xs:attribute name="Protocol" type="ProtocolType" use="required" />
    <xs:attribute name="SourceId" type="xs:positiveInteger" use="required" />
    <xs:attribute name="SourceId" use="optional" type="xs:positiveInteger">
    <xs:attribute name="SourceUrl" type="xs:string" />
    <xs:attribute name="TargetNamespace" type="xs:anyURI" />
    <xs:attribute name="TargetNamespace" type="xs:anyURI" use="required" />
    <xs:attribute name="TypeName" type="TypeName" use="required" />
    <xs:complexType>
    <xs:documentation xml:lang="en">
    <xs:key name="ReferenceGroupSourceIdKey">
    <xs:keyref name="MetadataFileSourceIdRef" refer="ReferenceGroupSourceIdKey">
    <xs:restriction base="nonEmptyString">
    <xs:restriction base="xs:string">
    <xs:sequence />
    <xs:sequence>
    abort: Sys$Net$WebRequestExecutor$abort,
    abort: Sys$Net$XMLHttpExecutor$abort
    abortPostBack: Sys$WebForms$PageRequestManager$abortPostBack,
    add_beginRequest: Sys$WebForms$PageRequestManager$add_beginRequest,
    add_completed: Sys$Net$WebRequest$add_completed,
    add_completedRequest: Sys$Net$_WebRequestManager$add_completedRequest,
    add_disposing: Sys$Component$add_disposing,
    add_disposing: Sys$INotifyDisposing$add_disposing,
    add_endRequest: Sys$WebForms$PageRequestManager$add_endRequest,
    add_init: Sys$_Application$add_init,
    add_initializeRequest: Sys$WebForms$PageRequestManager$add_initializeRequest,
    add_invokingRequest: Sys$Net$_WebRequestManager$add_invokingRequest,
    add_load: Sys$_Application$add_load,
    add_navigate: Sys$_Application$add_navigate,
    add_pageLoaded: Sys$WebForms$PageRequestManager$add_pageLoaded,
    add_pageLoading: Sys$WebForms$PageRequestManager$add_pageLoading,
    add_propertyChanged: Sys$Component$add_propertyChanged,
    add_propertyChanged: Sys$INotifyPropertyChange$add_propertyChanged,
    add_unload: Sys$_Application$add_unload,
    addComponent: Sys$_Application$addComponent,
    addComponent: Sys$IContainer$addComponent,
    addCssClass: Sys$UI$Control$addCssClass,
    addHandler: Sys$EventHandlerList$addHandler,
    addHistoryPoint: Sys$_Application$addHistoryPoint,
    append: Sys$StringBuilder$append,
    appendLine: Sys$StringBuilder$appendLine,
    array.length = 0;
    array.push.apply(array, items);
    array.splice(index, 0, item);
    array.splice(index, 1);
    array[array.length] = item;
    assert: Sys$_Debug$assert,
    backspace: 8,
    baseUrl = baseUrl.substr(0, baseUrl.lastIndexOf('/') + 1);
    beginCreateComponents: Sys$_Application$beginCreateComponents,
    beginUpdate: Sys$Component$beginUpdate,
    cache.splice(i, 1);
    case "c":
    case "C":
    case "D":
    case "d":
    case "n":
    case "N":
    case "p":
    case "P":
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case Sys.Browser.InternetExplorer:
    case Sys.Browser.Opera:
    case Sys.Browser.Safari:
    catch (e) {
    catch(e) {
    clear: Sys$StringBuilder$clear,
    clearTrace: Sys$_Debug$clearTrace,
    collapse: 1
    completed: Sys$Net$WebRequest$completed,
    component.beginUpdate();
    Date._appendPreOrPostMatch(expFormat.slice(index), regexp);
    default:
    del: 127
    dispose: Sys$_Application$dispose,
    dispose: Sys$_ScriptLoader$dispose,
    dispose: Sys$_ScriptLoaderTask$dispose,
    dispose: Sys$Component$dispose,
    dispose: Sys$IDisposable$dispose
    dispose: Sys$UI$_Timer$dispose,
    dispose: Sys$UI$_UpdateProgress$dispose,
    dispose: Sys$UI$Behavior$dispose
    dispose: Sys$UI$Control$dispose,
    dispose: Sys$WebForms$PageRequestManager$dispose,
    down: 40,
    dtf._parseRegExp[format] = parseRegExp;
    dummyScript.src = scriptSrc;
    e = Function._validateParameterCount(params, expectedParams);
    e = Function._validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName);
    e.message = message;
    e.popStackFrame();
    element.control = this;
    else {
    else if (actualType && expectedType) {
    else if (dtf._parseRegExp[format]) {
    else if (e.keyCode && (e.keyCode === 46)) {
    else if (element) throw Error.argument('element', Sys.Res.createComponentOnDom);
    else if (element.attachEvent) {
    else if (element.detachEvent) {
    end: 35,
    endCreateComponents: Sys$_Application$endCreateComponents,
    endUpdate: Sys$Component$endUpdate,
    enter: 13,
    esc: 27,
    eventCache[eventCache.length] = {handler: handler, browserHandler: browserHandler};
    execute: Sys$_ScriptLoaderTask$execute,
    executeRequest: Sys$Net$_WebRequestManager$executeRequest
    executeRequest: Sys$Net$WebRequestExecutor$executeRequest,
    executeRequest: Sys$Net$XMLHttpExecutor$executeRequest,
    expFormat = expFormat.replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1");
    fail: Sys$_Debug$fail,
    findComponent: Sys$_Application$findComponent,
    findComponent: Sys$IContainer$findComponent,
    fn = Type.__htClasses[typeName];
    for (;;) {
    for (var arg in queryString) {
    for (var i = 0, il = preMatch.length; i < il; i++) {
    for (var i = 0, l = array.length; i < l; i++) {
    for (var i = 0, l = cache.length; i < l; i++) {
    for (var i = 0; i < 32; i++) {
    for (var i = 0; i < childNodes.length; i++) {
    for (var i = 0; i < namespaceParts.length; i++) {
    for (var i = 1, il = args.length; i < il; i++) {
    for (var i = 1, l = arguments.length; i < l; i++) {
    for (var i in this.prototype) {
    for (var i=0; i < expectedParams.length; i++) {
    for (var i=0; i < params.length; i++) {
    for (var i=0;;) {
    for (var j = 0, jl = groups.length; j < jl; j++) {
    for (var name in events) {
    for (var name in properties) {
    for (var name in references) {
    format = Date._expandFormat(dtf, format);
    function addLeadingZero(num) {
    function addLeadingZeros(num) {
    function expandNumber(number, precision, groupSizes, sep, decimalChar) {
    function onComplete(response, eventArgs) {
    function Sys$_Application$_addComponentToSecondPass(component, references) {
    function Sys$_Application$_deserializeState(entry, skipDecodeUri) {
    function Sys$_Application$_doInitialize() {
    function Sys$_Application$_enableHistoryInScriptManager() {
    function Sys$_Application$_ensureHistory() {
    function Sys$_Application$_getHistory() {
    function Sys$_Application$_isSafari2() {
    function Sys$_Application$_loadHandler() {
    function Sys$_Application$_navigate(entry) {
    function Sys$_Application$_onIdle() {
    function Sys$_Application$_onIFrameLoad(entry) {
    function Sys$_Application$_onPageRequestManagerBeginRequest(sender, args) {
    function Sys$_Application$_onPageRequestManagerEndRequest(sender, args) {
    function Sys$_Application$_raiseNavigate() {
    function Sys$_Application$_serializeState(state) {
    function Sys$_Application$_setHistory(historyArray) {
    function Sys$_Application$_setState(entry, title) {
    function Sys$_Application$_unloadHandler(event) {
    function Sys$_Application$_updateHiddenField(value) {
    function Sys$_Application$add_init(handler) {
    function Sys$_Application$add_load(handler) {
    function Sys$_Application$add_navigate(handler) {
    function Sys$_Application$add_unload(handler) {
    function Sys$_Application$addComponent(component) {
    function Sys$_Application$addHistoryPoint(state, title) {
    function Sys$_Application$beginCreateComponents() {
    function Sys$_Application$dispose() {
    function Sys$_Application$endCreateComponents() {
    function Sys$_Application$findComponent(id, parent) {
    function Sys$_Application$get_enableHistory() {
    function Sys$_Application$get_isCreatingComponents() {
    function Sys$_Application$get_stateString() {
    function Sys$_Application$getComponents() {
    function Sys$_Application$initialize() {
    function Sys$_Application$notifyScriptLoaded() {
    function Sys$_Application$raiseLoad() {
    function Sys$_Application$registerDisposableObject(object) {
    function Sys$_Application$remove_init(handler) {
    function Sys$_Application$remove_load(handler) {
    function Sys$_Application$remove_navigate(handler) {
    function Sys$_Application$remove_unload(handler) {
    function Sys$_Application$removeComponent(component) {
    function Sys$_Application$set_enableHistory(value) {
    function Sys$_Application$setServerId(clientId, uniqueId) {
    function Sys$_Application$setServerState(value) {
    function Sys$_Application$unregisterDisposableObject(object) {
    function Sys$_Debug$_appendConsole(text) {
    function Sys$_Debug$_appendTrace(text) {
    function Sys$_Debug$_traceDump(object, name, recursive, indentationPadding, loopArray) {
    function Sys$_Debug$assert(condition, message, displayCaller) {
    function Sys$_Debug$clearTrace() {
    function Sys$_Debug$fail(message) {
    function Sys$_Debug$trace(text) {
    function Sys$_Debug$traceDump(object, name) {
    function Sys$_ScriptLoader$_createScriptElement(queuedScript) {
    function Sys$_ScriptLoader$_loadScriptsInternal() {
    function Sys$_ScriptLoader$_nextSession() {
    function Sys$_ScriptLoader$_raiseError(multipleCallbacks) {
    function Sys$_ScriptLoader$_scriptLoadedHandler(scriptElement, loaded) {
    function Sys$_ScriptLoader$_scriptLoadTimeoutHandler() {
    function Sys$_ScriptLoader$_stopSession() {
    function Sys$_ScriptLoader$dispose() {
    function Sys$_ScriptLoader$loadScripts(scriptTimeout, allScriptsLoadedCallback, scriptLoadFailedCallback, scriptLoadTimeoutCallback) {
    function Sys$_ScriptLoader$notifyScriptLoaded() {
    function Sys$_ScriptLoader$queueCustomScriptTag(scriptAttributes) {
    function Sys$_ScriptLoader$queueScriptBlock(scriptContent) {
    function Sys$_ScriptLoader$queueScriptReference(scriptUrl) {
    function Sys$_ScriptLoaderTask$_addScriptElementHandlers() {
    function Sys$_ScriptLoaderTask$_removeScriptElementHandlers() {
    function Sys$_ScriptLoaderTask$_scriptErrorHandler() {
    function Sys$_ScriptLoaderTask$_scriptLoadHandler() {
    function Sys$_ScriptLoaderTask$dispose() {
    function Sys$_ScriptLoaderTask$execute() {
    function Sys$_ScriptLoaderTask$get_scriptElement() {
    function Sys$ApplicationLoadEventArgs$get_components() {
    function Sys$ApplicationLoadEventArgs$get_isPartialLoad() {
    function Sys$CancelEventArgs$get_cancel() {
    function Sys$CancelEventArgs$set_cancel(value) {
    function Sys$Component$add_disposing(handler) {
    function Sys$Component$add_propertyChanged(handler) {
    function Sys$Component$beginUpdate() {
    function Sys$Component$dispose() {
    function Sys$Component$endUpdate() {
    function Sys$Component$get_events() {
    function Sys$Component$get_id() {
    function Sys$Component$get_isInitialized() {
    function Sys$Component$get_isUpdating() {
    function Sys$Component$initialize() {
    function Sys$Component$raisePropertyChanged(propertyName) {
    function Sys$Component$remove_disposing(handler) {
    function Sys$Component$remove_propertyChanged(handler) {
    function Sys$Component$set_id(value) {
    function Sys$Component$updated() {
    function Sys$CultureInfo$_getAbbrDayIndex(value) {
    function Sys$CultureInfo$_getAbbrMonthIndex(value) {
    function Sys$CultureInfo$_getDateTimeFormats() {
    function Sys$CultureInfo$_getDayIndex(value) {
    function Sys$CultureInfo$_getMonthIndex(value) {
    function Sys$CultureInfo$_toUpper(value) {
    function Sys$CultureInfo$_toUpperArray(arr) {
    function Sys$EventHandlerList$_getEvent(id, create) {
    function Sys$EventHandlerList$addHandler(id, handler) {
    function Sys$EventHandlerList$getHandler(id) {
    function Sys$EventHandlerList$removeHandler(id, handler) {
    function Sys$HistoryEventArgs$get_state() {
    function Sys$IContainer$addComponent(component) {
    function Sys$IContainer$findComponent(id) {
    function Sys$IContainer$getComponents() {
    function Sys$IContainer$removeComponent(component) {
    function Sys$IDisposable$dispose() {
    function Sys$INotifyDisposing$add_disposing(handler) {
    function Sys$INotifyDisposing$remove_disposing(handler) {
    function Sys$INotifyPropertyChange$add_propertyChanged(handler) {
    function Sys$INotifyPropertyChange$remove_propertyChanged(handler) {
    function Sys$Net$_WebRequestManager$_get_eventHandlerList() {
    function Sys$Net$_WebRequestManager$add_completedRequest(handler) {
    function Sys$Net$_WebRequestManager$add_invokingRequest(handler) {
    function Sys$Net$_WebRequestManager$executeRequest(webRequest) {
    function Sys$Net$_WebRequestManager$get_defaultExecutorType() {
    function Sys$Net$_WebRequestManager$get_defaultTimeout() {
    function Sys$Net$_WebRequestManager$remove_completedRequest(handler) {
    function Sys$Net$_WebRequestManager$remove_invokingRequest(handler) {
    function Sys$Net$_WebRequestManager$set_defaultExecutorType(value) {
    function Sys$Net$_WebRequestManager$set_defaultTimeout(value) {
    function Sys$Net$NetworkRequestEventArgs$get_webRequest() {
    function Sys$Net$WebRequest$_get_eventHandlerList() {
    function Sys$Net$WebRequest$add_completed(handler) {
    function Sys$Net$WebRequest$completed(eventArgs) {
    function Sys$Net$WebRequest$get_body() {
    function Sys$Net$WebRequest$get_executor() {
    function Sys$Net$WebRequest$get_headers() {
    function Sys$Net$WebRequest$get_httpVerb() {
    function Sys$Net$WebRequest$get_timeout() {
    function Sys$Net$WebRequest$get_url() {
    function Sys$Net$WebRequest$get_userContext() {
    function Sys$Net$WebRequest$getResolvedUrl() {
    function Sys$Net$WebRequest$invoke() {
    function Sys$Net$WebRequest$remove_completed(handler) {
    function Sys$Net$WebRequest$set_body(value) {
    function Sys$Net$WebRequest$set_executor(value) {
    function Sys$Net$WebRequest$set_httpVerb(value) {
    function Sys$Net$WebRequest$set_timeout(value) {
    function Sys$Net$WebRequest$set_url(value) {
    function Sys$Net$WebRequest$set_userContext(value) {
    function Sys$Net$WebRequestExecutor$_set_webRequest(value) {
    function Sys$Net$WebRequestExecutor$abort() {
    function Sys$Net$WebRequestExecutor$executeRequest() {
    function Sys$Net$WebRequestExecutor$get_aborted() {
    function Sys$Net$WebRequestExecutor$get_object() {
    function Sys$Net$WebRequestExecutor$get_responseAvailable() {
    function Sys$Net$WebRequestExecutor$get_responseData() {
    function Sys$Net$WebRequestExecutor$get_started() {
    function Sys$Net$WebRequestExecutor$get_statusCode() {
    function Sys$Net$WebRequestExecutor$get_statusText() {
    function Sys$Net$WebRequestExecutor$get_timedOut() {
    function Sys$Net$WebRequestExecutor$get_webRequest() {
    function Sys$Net$WebRequestExecutor$get_xml() {
    function Sys$Net$WebRequestExecutor$getAllResponseHeaders() {
    function Sys$Net$WebRequestExecutor$getResponseHeader(header) {
    function Sys$Net$WebServiceError$get_exceptionType() {
    function Sys$Net$WebServiceError$get_message() {
    function Sys$Net$WebServiceError$get_stackTrace() {
    function Sys$Net$WebServiceError$get_statusCode() {
    function Sys$Net$WebServiceError$get_timedOut() {
    function Sys$Net$WebServiceProxy$_invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext) {
    function Sys$Net$WebServiceProxy$get_defaultFailedCallback() {
    function Sys$Net$WebServiceProxy$get_defaultSucceededCallback() {
    function Sys$Net$WebServiceProxy$get_defaultUserContext() {
    function Sys$Net$WebServiceProxy$get_path() {
    function Sys$Net$WebServiceProxy$get_timeout() {
    function Sys$Net$WebServiceProxy$set_defaultFailedCallback(value) {
    function Sys$Net$WebServiceProxy$set_defaultSucceededCallback(value) {
    function Sys$Net$WebServiceProxy$set_defaultUserContext(value) {
    function Sys$Net$WebServiceProxy$set_path(value) {
    function Sys$Net$WebServiceProxy$set_timeout(value) {
    function Sys$Net$XMLHttpExecutor$abort() {
    function Sys$Net$XMLHttpExecutor$executeRequest() {
    function Sys$Net$XMLHttpExecutor$get_aborted() {
    function Sys$Net$XMLHttpExecutor$get_responseAvailable() {
    function Sys$Net$XMLHttpExecutor$get_responseData() {
    function Sys$Net$XMLHttpExecutor$get_started() {
    function Sys$Net$XMLHttpExecutor$get_statusCode() {
    function Sys$Net$XMLHttpExecutor$get_statusText() {
    function Sys$Net$XMLHttpExecutor$get_timedOut() {
    function Sys$Net$XMLHttpExecutor$get_xml() {
    function Sys$Net$XMLHttpExecutor$getAllResponseHeaders() {
    function Sys$Net$XMLHttpExecutor$getResponseHeader(header) {
    function Sys$PropertyChangedEventArgs$get_propertyName() {
    function Sys$Services$_AuthenticationService$_get_path() {
    function Sys$Services$_AuthenticationService$_onLoginComplete(result, context, methodName) {
    function Sys$Services$_AuthenticationService$_onLoginFailed(err, context, methodName) {
    function Sys$Services$_AuthenticationService$_onLogoutComplete(result, context, methodName) {
    function Sys$Services$_AuthenticationService$_onLogoutFailed(err, context, methodName) {
    function Sys$Services$_AuthenticationService$_setAuthenticated(authenticated) {
    function Sys$Services$_AuthenticationService$get_defaultLoginCompletedCallback() {
    function Sys$Services$_AuthenticationService$get_defaultLogoutCompletedCallback() {
    function Sys$Services$_AuthenticationService$get_isLoggedIn() {
    function Sys$Services$_AuthenticationService$get_path() {
    function Sys$Services$_AuthenticationService$login(username, password, isPersistent, customInfo, redirectUrl, loginCompletedCallback, failedCallback, userContext) {
    function Sys$Services$_AuthenticationService$logout(redirectUrl, logoutCompletedCallback, failedCallback, userContext) {
    function Sys$Services$_AuthenticationService$set_defaultLoginCompletedCallback(value) {
    function Sys$Services$_AuthenticationService$set_defaultLogoutCompletedCallback(value) {
    function Sys$Services$_ProfileService$_clonePropertyNames(arr) {
    function Sys$Services$_ProfileService$_flattenProperties(propertyNames, properties, groupName) {
    function Sys$Services$_ProfileService$_get_path() {
    function Sys$Services$_ProfileService$_onLoadComplete(result, context, methodName) {
    function Sys$Services$_ProfileService$_onLoadFailed(err, context, methodName) {
    function Sys$Services$_ProfileService$_onSaveComplete(result, context, methodName) {
    function Sys$Services$_ProfileService$_onSaveFailed(err, context, methodName) {
    function Sys$Services$_ProfileService$_unflattenProperties(properties) {
    function Sys$Services$_ProfileService$get_defaultLoadCompletedCallback() {
    function Sys$Services$_ProfileService$get_defaultSaveCompletedCallback() {
    function Sys$Services$_ProfileService$get_path() {
    function Sys$Services$_ProfileService$load(propertyNames, loadCompletedCallback, failedCallback, userContext) {
    function Sys$Services$_ProfileService$save(propertyNames, saveCompletedCallback, failedCallback, userContext) {
    function Sys$Services$_ProfileService$set_defaultLoadCompletedCallback(value) {
    function Sys$Services$_ProfileService$set_defaultSaveCompletedCallback(value) {
    function Sys$Services$_RoleService$_get_path() {
    function Sys$Services$_RoleService$_get_rolesIndex() {
    function Sys$Services$_RoleService$_onLoadComplete(result, context, methodName) {
    function Sys$Services$_RoleService$_onLoadFailed(err, context, methodName) {
    function Sys$Services$_RoleService$get_defaultLoadCompletedCallback() {
    function Sys$Services$_RoleService$get_path() {
    function Sys$Services$_RoleService$get_roles() {
    function Sys$Services$_RoleService$isUserInRole(role) {
    function Sys$Services$_RoleService$load(loadCompletedCallback, failedCallback, userContext) {
    function Sys$Services$_RoleService$set_defaultLoadCompletedCallback(value) {
    function Sys$StringBuilder$append(text) {
    function Sys$StringBuilder$appendLine(text) {
    function Sys$StringBuilder$clear() {
    function Sys$StringBuilder$isEmpty() {
    function Sys$StringBuilder$toString(separator) {
    function Sys$UI$_Timer$_doPostback(){
    function Sys$UI$_Timer$_handleEndRequest(sender, arg){
    function Sys$UI$_Timer$_raiseTick() {
    function Sys$UI$_Timer$_startTimer(){
    function Sys$UI$_Timer$_stopTimer(){
    function Sys$UI$_Timer$_update(enabled,interval) {
    function Sys$UI$_Timer$dispose(){
    function Sys$UI$_Timer$get_enabled() {
    function Sys$UI$_Timer$get_interval() {
    function Sys$UI$_Timer$get_uniqueID(){
    function Sys$UI$_Timer$initialize(){
    function Sys$UI$_Timer$set_enabled(value) {
    function Sys$UI$_Timer$set_interval(value) {
    function Sys$UI$_Timer$set_uniqueID(value){
    function Sys$UI$_UpdateProgress$_clearTimeout() {
    function Sys$UI$_UpdateProgress$_handleBeginRequest(sender, arg) {
    function Sys$UI$_UpdateProgress$_handleEndRequest(sender, arg) {
    function Sys$UI$_UpdateProgress$_startRequest() {
    function Sys$UI$_UpdateProgress$dispose() {
    function Sys$UI$_UpdateProgress$get_associatedUpdatePanelId() {
    function Sys$UI$_UpdateProgress$get_displayAfter() {
    function Sys$UI$_UpdateProgress$get_dynamicLayout() {
    function Sys$UI$_UpdateProgress$initialize() {
    function Sys$UI$_UpdateProgress$set_associatedUpdatePanelId(value) {
    function Sys$UI$_UpdateProgress$set_displayAfter(value) {
    function Sys$UI$_UpdateProgress$set_dynamicLayout(value) {
    function Sys$UI$Behavior$dispose() {
    function Sys$UI$Behavior$get_element() {
    function Sys$UI$Behavior$get_id() {
    function Sys$UI$Behavior$get_name() {
    function Sys$UI$Behavior$initialize() {
    function Sys$UI$Behavior$set_name(value) {
    function Sys$UI$Control$addCssClass(className) {
    function Sys$UI$Control$dispose() {
    function Sys$UI$Control$get_element() {
    function Sys$UI$Control$get_id() {
    function Sys$UI$Control$get_parent() {
    function Sys$UI$Control$get_visibilityMode() {
    function Sys$UI$Control$get_visible() {
    function Sys$UI$Control$onBubbleEvent(source, args) {
    function Sys$UI$Control$raiseBubbleEvent(source, args) {
    function Sys$UI$Control$removeCssClass(className) {
    function Sys$UI$Control$set_id(value) {
    function Sys$UI$Control$set_parent(value) {
    function Sys$UI$Control$set_visibilityMode(value) {
    function Sys$UI$Control$set_visible(value) {
    function Sys$UI$Control$toggleCssClass(className) {
    function Sys$UI$DomEvent$preventDefault() {
    function Sys$UI$DomEvent$stopPropagation() {
    function Sys$WebForms$BeginRequestEventArgs$get_postBackElement() {
    function Sys$WebForms$BeginRequestEventArgs$get_request() {
    function Sys$WebForms$EndRequestEventArgs$get_dataItems() {
    function Sys$WebForms$EndRequestEventArgs$get_error() {
    function Sys$WebForms$EndRequestEventArgs$get_errorHandled() {
    function Sys$WebForms$EndRequestEventArgs$get_response() {
    function Sys$WebForms$EndRequestEventArgs$set_errorHandled(value) {
    function Sys$WebForms$InitializeRequestEventArgs$get_postBackElement() {
    function Sys$WebForms$InitializeRequestEventArgs$get_request() {
    function Sys$WebForms$PageLoadedEventArgs$get_dataItems() {
    function Sys$WebForms$PageLoadedEventArgs$get_panelsCreated() {
    function Sys$WebForms$PageLoadedEventArgs$get_panelsUpdated() {
    function Sys$WebForms$PageLoadingEventArgs$get_dataItems() {
    function Sys$WebForms$PageLoadingEventArgs$get_panelsDeleting() {
    function Sys$WebForms$PageLoadingEventArgs$get_panelsUpdating() {
    function Sys$WebForms$PageRequestManager$_cancelPendingCallbacks() {
    function Sys$WebForms$PageRequestManager$_commitControls(updatePanelData, asyncPostBackTimeout) {
    function Sys$WebForms$PageRequestManager$_convertToClientIDs(source, destinationIDs, destinationClientIDs) {
    function Sys$WebForms$PageRequestManager$_createHiddenField(id, value) {
    function Sys$WebForms$PageRequestManager$_createPageRequestManagerParserError(parserErrorMessage) {
    function Sys$WebForms$PageRequestManager$_createPageRequestManagerServerError(httpStatusCode, message) {
    function Sys$WebForms$PageRequestManager$_createPageRequestManagerTimeoutError() {
    function Sys$WebForms$PageRequestManager$_createPostBackSettings(async, panelID, sourceElement) {
    function Sys$WebForms$PageRequestManager$_destroyTree(element) {
    function Sys$WebForms$PageRequestManager$_doCallback(eventTarget, eventArgument, eventCallback, context, errorCallback, useAsync) {
    function Sys$WebForms$PageRequestManager$_doPostBack(eventTarget, eventArgument) {
    function Sys$WebForms$PageRequestManager$_doPostBackWithOptions(options) {
    function Sys$WebForms$PageRequestManager$_elementContains(container, element) {
    function Sys$WebForms$PageRequestManager$_endPostBack(error, executor, data) {
    function Sys$WebForms$PageRequestManager$_findNearestElement(uniqueID) {
    function Sys$WebForms$PageRequestManager$_findText(text, location) {
    function Sys$WebForms$PageRequestManager$_fireDefaultButton(event, target) {
    function Sys$WebForms$PageRequestManager$_get_eventHandlerList() {
    function Sys$WebForms$PageRequestManager$_getPageLoadedEventArgs(initialLoad, data) {
    function Sys$WebForms$PageRequestManager$_getPageLoadingEventArgs(data) {
    function Sys$WebForms$PageRequestManager$_getPostBackSettings(element, elementUniqueID) {
    function Sys$WebForms$PageRequestManager$_getScrollPosition() {
    function Sys$WebForms$PageRequestManager$_initializeInternal(scriptManagerID, formElement) {
    function Sys$WebForms$PageRequestManager$_matchesParentIDInList(clientID, parentIDList) {
    function Sys$WebForms$PageRequestManager$_onFormElementActive(element, offsetX, offsetY) {
    function Sys$WebForms$PageRequestManager$_onFormElementClick(evt) {
    function Sys$WebForms$PageRequestManager$_onFormSubmit(evt) {
    function Sys$WebForms$PageRequestManager$_onFormSubmitCompleted(sender, eventArgs) {
    function Sys$WebForms$PageRequestManager$_onWindowUnload(evt) {
    function Sys$WebForms$PageRequestManager$_pageLoaded(initialLoad, data) {
    function Sys$WebForms$PageRequestManager$_pageLoadedInitialLoad(evt) {
    function Sys$WebForms$PageRequestManager$_parseDelta(executor) {
    function Sys$WebForms$PageRequestManager$_processUpdatePanelArrays(updatePanelIDs, asyncPostBackControlIDs, postBackControlIDs) {
    function Sys$WebForms$PageRequestManager$_queueScripts(scriptLoader, scriptBlockNodes, queueIncludes, queueBlocks) {
    function Sys$WebForms$PageRequestManager$_registerDisposeScript(panelID, disposeScript) {
    function Sys$WebForms$PageRequestManager$_scriptIncludesLoadComplete(scriptLoader, data) {
    function Sys$WebForms$PageRequestManager$_scriptIncludesLoadFailed(scriptLoader, scriptElement, multipleCallbacks, data) {
    function Sys$WebForms$PageRequestManager$_scriptsLoadComplete(scriptLoader, data) {
    function Sys$WebForms$PageRequestManager$_splitNodeIntoArray(node) {
    function Sys$WebForms$PageRequestManager$_uniqueIDToClientID(uniqueID) {
    function Sys$WebForms$PageRequestManager$_updateControls(updatePanelIDs, asyncPostBackControlIDs, postBackControlIDs, asyncPostBackTimeout) {
    function Sys$WebForms$PageRequestManager$_updatePanel(updatePanelElement, rendering) {
    function Sys$WebForms$PageRequestManager$_validPosition(position) {
    function Sys$WebForms$PageRequestManager$abortPostBack() {
    function Sys$WebForms$PageRequestManager$add_beginRequest(handler) {
    function Sys$WebForms$PageRequestManager$add_endRequest(handler) {
    function Sys$WebForms$PageRequestManager$add_initializeRequest(handler) {
    function Sys$WebForms$PageRequestManager$add_pageLoaded(handler) {
    function Sys$WebForms$PageRequestManager$add_pageLoading(handler) {
    function Sys$WebForms$PageRequestManager$dispose() {
    function Sys$WebForms$PageRequestManager$get_isInAsyncPostBack() {
    function Sys$WebForms$PageRequestManager$remove_beginRequest(handler) {
    function Sys$WebForms$PageRequestManager$remove_endRequest(handler) {
    function Sys$WebForms$PageRequestManager$remove_initializeRequest(handler) {
    function Sys$WebForms$PageRequestManager$remove_pageLoaded(handler) {
    function Sys$WebForms$PageRequestManager$remove_pageLoading(handler) {
    function zeroPad(str, count, left) {
    get_aborted: Sys$Net$WebRequestExecutor$get_aborted,
    get_aborted: Sys$Net$XMLHttpExecutor$get_aborted,
    get_associatedUpdatePanelId: Sys$UI$_UpdateProgress$get_associatedUpdatePanelId,
    get_body: Sys$Net$WebRequest$get_body,
    get_cancel: Sys$CancelEventArgs$get_cancel,
    get_components: Sys$ApplicationLoadEventArgs$get_components,
    get_dataItems: Sys$WebForms$EndRequestEventArgs$get_dataItems,
    get_dataItems: Sys$WebForms$PageLoadedEventArgs$get_dataItems,
    get_dataItems: Sys$WebForms$PageLoadingEventArgs$get_dataItems,
    get_defaultExecutorType: Sys$Net$_WebRequestManager$get_defaultExecutorType,
    get_defaultFailedCallback: Sys$Net$WebServiceProxy$get_defaultFailedCallback,
    get_defaultLoadCompletedCallback: Sys$Services$_ProfileService$get_defaultLoadCompletedCallback,
    get_defaultLoadCompletedCallback: Sys$Services$_RoleService$get_defaultLoadCompletedCallback,
    get_defaultLoginCompletedCallback: Sys$Services$_AuthenticationService$get_defaultLoginCompletedCallback,
    get_defaultLogoutCompletedCallback: Sys$Services$_AuthenticationService$get_defaultLogoutCompletedCallback,
    get_defaultSaveCompletedCallback: Sys$Services$_ProfileService$get_defaultSaveCompletedCallback,
    get_defaultSucceededCallback: Sys$Net$WebServiceProxy$get_defaultSucceededCallback,
    get_defaultTimeout: Sys$Net$_WebRequestManager$get_defaultTimeout,
    get_defaultUserContext: Sys$Net$WebServiceProxy$get_defaultUserContext,
    get_displayAfter: Sys$UI$_UpdateProgress$get_displayAfter,
    get_dynamicLayout: Sys$UI$_UpdateProgress$get_dynamicLayout,
    get_element: Sys$UI$Behavior$get_element,
    get_element: Sys$UI$Control$get_element,
    get_enabled: Sys$UI$_Timer$get_enabled,
    get_enableHistory: Sys$_Application$get_enableHistory,
    get_error: Sys$WebForms$EndRequestEventArgs$get_error,
    get_errorHandled: Sys$WebForms$EndRequestEventArgs$get_errorHandled,
    get_events: Sys$Component$get_events,
    get_exceptionType: Sys$Net$WebServiceError$get_exceptionType
    get_executor: Sys$Net$WebRequest$get_executor,
    get_headers: Sys$Net$WebRequest$get_headers,
    get_httpVerb: Sys$Net$WebRequest$get_httpVerb,
    get_id: Sys$Component$get_id,
    get_id: Sys$UI$Behavior$get_id,
    get_id: Sys$UI$Control$get_id,
    get_interval: Sys$UI$_Timer$get_interval,
    get_isCreatingComponents: Sys$_Application$get_isCreatingComponents,
    get_isInAsyncPostBack: Sys$WebForms$PageRequestManager$get_isInAsyncPostBack,
    get_isInitialized: Sys$Component$get_isInitialized,
    get_isLoggedIn: Sys$Services$_AuthenticationService$get_isLoggedIn,
    get_isPartialLoad: Sys$ApplicationLoadEventArgs$get_isPartialLoad
    get_isUpdating: Sys$Component$get_isUpdating,
    get_message: Sys$Net$WebServiceError$get_message,
    get_name: Sys$UI$Behavior$get_name,
    get_object: Sys$Net$WebRequestExecutor$get_object,
    get_panelsCreated: Sys$WebForms$PageLoadedEventArgs$get_panelsCreated,
    get_panelsDeleting: Sys$WebForms$PageLoadingEventArgs$get_panelsDeleting,
    get_panelsUpdated: Sys$WebForms$PageLoadedEventArgs$get_panelsUpdated
    get_panelsUpdating: Sys$WebForms$PageLoadingEventArgs$get_panelsUpdating
    get_parent: Sys$UI$Control$get_parent,
    get_path: Sys$Net$WebServiceProxy$get_path,
    get_path: Sys$Services$_AuthenticationService$get_path,  
    get_path: Sys$Services$_ProfileService$get_path,
    get_path: Sys$Services$_RoleService$get_path,
    get_postBackElement: Sys$WebForms$BeginRequestEventArgs$get_postBackElement,
    get_postBackElement: Sys$WebForms$InitializeRequestEventArgs$get_postBackElement,
    get_propertyName: Sys$PropertyChangedEventArgs$get_propertyName
    get_request: Sys$WebForms$BeginRequestEventArgs$get_request
    get_request: Sys$WebForms$InitializeRequestEventArgs$get_request
    get_response: Sys$WebForms$EndRequestEventArgs$get_response
    get_responseAvailable: Sys$Net$WebRequestExecutor$get_responseAvailable,
    get_responseAvailable: Sys$Net$XMLHttpExecutor$get_responseAvailable,
    get_responseData: Sys$Net$WebRequestExecutor$get_responseData,
    get_responseData: Sys$Net$XMLHttpExecutor$get_responseData,
    get_roles: Sys$Services$_RoleService$get_roles,
    get_scriptElement: Sys$_ScriptLoaderTask$get_scriptElement,
    get_stackTrace: Sys$Net$WebServiceError$get_stackTrace,
    get_started: Sys$Net$WebRequestExecutor$get_started,
    get_started: Sys$Net$XMLHttpExecutor$get_started,
    get_state: Sys$HistoryEventArgs$get_state
    get_stateString: Sys$_Application$get_stateString,
    get_statusCode: Sys$Net$WebRequestExecutor$get_statusCode,
    get_statusCode: Sys$Net$WebServiceError$get_statusCode,
    get_statusCode: Sys$Net$XMLHttpExecutor$get_statusCode,
    get_statusText: Sys$Net$WebRequestExecutor$get_statusText,
    get_statusText: Sys$Net$XMLHttpExecutor$get_statusText,
    get_timedOut: Sys$Net$WebRequestExecutor$get_timedOut,
    get_timedOut: Sys$Net$WebServiceError$get_timedOut,
    get_timedOut: Sys$Net$XMLHttpExecutor$get_timedOut,
    get_timeout: Sys$Net$WebRequest$get_timeout,
    get_timeout: Sys$Net$WebServiceProxy$get_timeout,
    get_uniqueID: Sys$UI$_Timer$get_uniqueID,
    get_url: Sys$Net$WebRequest$get_url,
    get_userContext: Sys$Net$WebRequest$get_userContext,
    get_visibilityMode: Sys$UI$Control$get_visibilityMode,
    get_visible: Sys$UI$Control$get_visible,
    get_webRequest: Sys$Net$NetworkRequestEventArgs$get_webRequest
    get_webRequest: Sys$Net$WebRequestExecutor$get_webRequest,
    get_xml: Sys$Net$WebRequestExecutor$get_xml,
    get_xml: Sys$Net$XMLHttpExecutor$get_xml,
    getAllResponseHeaders: Sys$Net$WebRequestExecutor$getAllResponseHeaders
    getAllResponseHeaders: Sys$Net$XMLHttpExecutor$getAllResponseHeaders,
    getComponents: Sys$_Application$getComponents,
    getComponents: Sys$IContainer$getComponents
    getHandler: Sys$EventHandlerList$getHandler,
    getName: function() {return "Sys";},
    getResolvedUrl: Sys$Net$WebRequest$getResolvedUrl,
    getResponseHeader: Sys$Net$WebRequestExecutor$getResponseHeader,
    getResponseHeader: Sys$Net$XMLHttpExecutor$getResponseHeader,
    hide: 0,
    home: 36,
    if (! custom) {
    if (!(cache instanceof Array)) throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
    if (!Array.isInstanceOfType(v)) throw Error.argument('value', Sys.Res.arrayParseBadFormat);
    if (!baseArguments) {
    if (!baseMethod) throw Error.invalidOperation(String.format(Sys.Res.methodNotFound, name));
    if (!baseUrl || baseUrl.length === 0) {
    if (!behaviors) {
    if (!computedStyle && (Sys.Browser.agent === Sys.Browser.Safari) && element.style) {
    if (!ctor || (typeof(ctor) !== "function") || !ctor.__typeName || (ctor.__typeName === 'Object')) {
    if (!dtf._parseRegExp) {
    if (!element) return document.getElementById(id);
    if (!element._behaviors) return [];
    if (!element._events) {
    if (!element._oldDisplayMode) {
    if (!encodeMethod)
    if (!etype.startsWith('key')) {
    if (!eventCache) {
    if (!fn) {
    if (!format || (format.length === 0) || (format === 'i')) {
    if (!format)
    if (!format) {
    if (!params) params = {};
    if (!prm) {
    if (!queryString) {
    if (!style) return true;
    if (!Sys.Debug.isDebug) {
    if (!Sys.UI.DomElement.containsCssClass(element, className)) {
    if (!this.__flags || (value === 0)) {
    if (!this.__flags) {
    if (!this.isInstanceOfType(instance)) throw Error.argumentType('instance', Object.getType(instance), this);
    if (!Type.__fullyQualifiedIdentifierRegExp.test(name)) throw Error.argument('name', Sys.Res.notATypeName);
    if (!Type.__fullyQualifiedIdentifierRegExp.test(namespacePath)) throw Error.argument('namespacePath', Sys.Res.invalidNameSpace);
    if (!Type.__fullyQualifiedIdentifierRegExp.test(typeName)) throw Error.argument('typeName', Sys.Res.notATypeName);
    if (!Type.__htClasses) {
    if (!type.inheritsFrom(Sys.Component)) {
    if (!typeName) return null;
    if (!url || url.length === 0) {
    if (!useGet || !urlParams) urlParams = {};
    if (!useGet) {
    if (!value) return [];
    if (!window.DOMParser) {
    if (!window[arrayName]) {
    if ((!stopped) && ((!enabled)||(intervalChanged))){
    if ((arguments.length > 1) && (typeof(baseType) === 'undefined')) throw Error.argumentUndefined('baseType');
    if ((sign === '') && (numFormat.NumberNegativePattern !== 1)) {
    if ((this._postbackPending === true) && (this._pageRequestManager !== null)&&(this._pageRequestManager.get_isInAsyncPostBack() === false)){
    if ((typeof(element._events) !== 'object') || (element._events == null)) throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
    if ((typeof(element.document) !== 'object') && (element != doc) && (typeof(element.nodeType) !== 'number')) {
    if ((typeof(object) === 'undefined') || (object === null)) return false;
    if ((typeof(type) === 'undefined') || (type === null)) return false;
    if ((typeof(value) != 'number') || ((value % 1) !== 0)) throw Error.argumentType('value', Object.getType(value), this);
    if ((typeof(value) === 'undefined') || (value === null)) return this.__string;
    if ((weekDay !== null) && (result.getDay() !== weekDay)) {
    if (arguments.length !== 0) throw Error.parameterCount();
    if (array.length === 1) {
    if (baseType && !baseType.__class) throw Error.argument('baseType', Sys.Res.baseNotAClass);
    if (baseType) {
    if (behaviors) {
    if (cache) {
    if (component.get_id()) {
    if (creatingComponents) {
    if (data.length === 0) throw Error.argument('data', Sys.Res.cannotDeserializeEmptyString);
    if (dataItem){
    if (date === null) {
    if (decimalPos < 0) {
    if (e) {
    if (e) throw e;
    if (element._events) {
    if (element._visibilityMode !== value) {
    if (element.addEventListener) {
    if (element.documentElement) element = element.documentElement;
    if (element.getElementById) return element.getElementById(id);
    if (element.nodeType === 3) return null;
    if (element.removeEventListener) {
    if (element.tagName && (element.tagName.toUpperCase() === "SCRIPT")) return;
    if (errorInfo) {
    if (etype === 'keypress') {
    if (eventName === "error") throw Error.invalidOperation(Sys.Res.addHandlerCantBeUsedForError);
    if (events) {
    if (expectedDomElement) {
    if (expectedType && !expectedType.isInstanceOfType(param)) {
    if (expectedType && expectedType.__enum) {
    if (expectedType === Array && typeof(param) !== "undefined" && param !== null &&
    if (expectedType === Number && expectedInteger) {
    if (exponent !== null) {
    if (exponentPos < 0) {
    if (exponentPos < 0) exponentPos = num.indexOf('E');
    if (format.length === 1) {
    if (format.length > 1) precision = parseInt(format.slice(1), 10);
    if (fraction !== null) {
    if (ignoreCase) {
    if (index >= 0) {
    if (instance instanceof this) return true;
    if (interfaceTypes) {
    if (isComponent) target.beginUpdate();
    if (isComponent) target.endUpdate();
    if (isFinite(object)) {
    if (length !== 0) {
    if (match === null) return null;
    if (message) {
    if (month === null) {
    if (ns) {
    if (numFormat.NumberGroupSeparator !== altNumGroupSeparator) {
    if (p.match(/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/)) {
    if (param === null) {
    if (paramName) {
    if (params.length < minParams || params.length > maxParams) {
    if (parsedName !== this) throw Error.argument('name', Sys.Res.badTypeName);
    if (parsedName !== this) throw Error.argument('typeName', Sys.Res.badTypeName);
    if (pmHour && (hour < 12)) {
    if (properties) {
    if (qs.length > 0) {
    if (qsStart !== -1) {
    if (result.getDate() !== date) return null;
    if (sign === '') sign = '+';
    if (Sys.__registeredTypes[name]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, name));
    if (Sys.__registeredTypes[typeName]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, typeName));
    if (Sys.Application) Sys.Application.registerDisposableObject(this);
    if (Sys.Browser.version >= 8) {
    if (Sys.Serialization.JavaScriptSerializer._escapeRegEx.test(string)) {
    if (Sys.UI.DomElement.containsCssClass(element, className)) {
    if (this.__basePrototypePending) {
    if (this.__baseType) {
    if (this._timer !== null){
    if (timeout && timeout > 0) request.set_timeout(timeout);
    if (type.inheritsFrom(Sys.UI.Behavior) || type.inheritsFrom(Sys.UI.Control)) {
    if (typeof(actualValue) !== "undefined" && actualValue !== null) {
    if (typeof(browserHandler) !== 'function') throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
    if (typeof(e.button) !== 'undefined') {
    if (typeof(element.control) != 'undefined') throw Error.invalidOperation(Sys.Res.controlAlreadyDefined);
    if (typeof(instance) === "undefined" || instance === null) return false;
    if (typeof(item) === "undefined") return -1;
    if (typeof(nextFrame) === "undefined" || nextFrame === null) {
    if (typeof(nextFrameParts) === "undefined" || nextFrameParts === null) {
    if (typeof(param) === "undefined") {
    if (typeof(this.stack) === "undefined" || this.stack === null ||
    if (tzMinOffset !== null) {
    if (url && url.indexOf('://') !== -1) {
    if (url.charAt(0) === '/') {
    if (v === 'false') return false;
    if (v === 'true') return true;
    if (value !== Sys.UI.DomElement.getVisible(element)) {
    if (value.match(/^[+-]?infinity$/i)) {
    if (value.match(/^0x[a-f0-9]+$/i)) {
    if (year < 100) {
    if (year === null) {
    if(!sl) {
    if(!Sys._ScriptLoader._referencedScripts) {
    if(multipleCallbacks) {
    initialize: Sys$_Application$initialize,
    initialize: Sys$Component$initialize,
    initialize: Sys$UI$_Timer$initialize,
    initialize: Sys$UI$_UpdateProgress$initialize
    initialize: Sys$UI$Behavior$initialize,
    integer = integer.split(numFormat.NumberGroupSeparator).join('');
    invoke: Sys$Net$WebRequest$invoke
    isEmpty: Sys$StringBuilder$isEmpty,
    isUserInRole: Sys$Services$_RoleService$isUserInRole,
    left: 37,
    leftButton: 0,
    load: Sys$Services$_ProfileService$load,
    load: Sys$Services$_RoleService$load,
    loadScripts: Sys$_ScriptLoader$loadScripts,
    login: Sys$Services$_AuthenticationService$login,
    logout: Sys$Services$_AuthenticationService$logout,
    middleButton: 1,
    notifyScriptLoaded: Sys$_Application$notifyScriptLoaded,
    notifyScriptLoaded: Sys$_ScriptLoader$notifyScriptLoaded,
    onBubbleEvent: Sys$UI$Control$onBubbleEvent,
    pageDown: 34,
    pageUp: 33,
    preventDefault: Sys$UI$DomEvent$preventDefault,
    qsStart = baseUrl.indexOf('#');
    queueCustomScriptTag: Sys$_ScriptLoader$queueCustomScriptTag,
    queueScriptBlock: Sys$_ScriptLoader$queueScriptBlock,
    queueScriptReference: Sys$_ScriptLoader$queueScriptReference,
    raiseBubbleEvent: Sys$UI$Control$raiseBubbleEvent,
    raiseLoad: Sys$_Application$raiseLoad,
    raisePropertyChanged: Sys$Component$raisePropertyChanged,
    regexp.append("$");
    registerDisposableObject: Sys$_Application$registerDisposableObject,
    remove_beginRequest: Sys$WebForms$PageRequestManager$remove_beginRequest,
    remove_completed: Sys$Net$WebRequest$remove_completed,
    remove_completedRequest: Sys$Net$_WebRequestManager$remove_completedRequest,
    remove_disposing: Sys$Component$remove_disposing,
    remove_disposing: Sys$INotifyDisposing$remove_disposing
    remove_endRequest: Sys$WebForms$PageRequestManager$remove_endRequest,
    remove_init: Sys$_Application$remove_init,
    remove_initializeRequest: Sys$WebForms$PageRequestManager$remove_initializeRequest,
    remove_invokingRequest: Sys$Net$_WebRequestManager$remove_invokingRequest,
    remove_load: Sys$_Application$remove_load,
    remove_navigate: Sys$_Application$remove_navigate,
    remove_pageLoaded: Sys$WebForms$PageRequestManager$remove_pageLoaded,
    remove_pageLoading: Sys$WebForms$PageRequestManager$remove_pageLoading,
    remove_propertyChanged: Sys$Component$remove_propertyChanged,
    remove_propertyChanged: Sys$INotifyPropertyChange$remove_propertyChanged
    remove_unload: Sys$_Application$remove_unload,
    removeComponent: Sys$_Application$removeComponent,
    removeComponent: Sys$IContainer$removeComponent,
    removeCssClass: Sys$UI$Control$removeCssClass,
    removeHandler: Sys$EventHandlerList$removeHandler,
    request.add_completed(onComplete);
    request.get_headers()['Content-Type'] = 'application/json; charset=utf-8';
    request.invoke();
    request.set_body(body);
    request.set_url(Sys.Net.WebRequest._createUrl(servicePath+"/"+encodeURIComponent(methodName), urlParams));
    result.setFullYear(year, month, date);
    result.setHours(hour, min, sec, msec);
    return !!(instanceType === this) ||
    return !!(instanceType.implementsInterface && instanceType.implementsInterface(this));
    return !!object.__namespace;
    return !!type.__class;
    return !!type.__enum;
    return !!type.__flags;
    return !!type.__interface;
    return (Array.indexOf(array, item) >= 0);
    return (element._visibilityMode === Sys.UI.VisibilityMode.hide) ?
    return (index >= 0);
    return (style.visibility !== 'hidden') && (style.display !== 'none');
    return (this.substr(0, prefix.length) === prefix);
    return (this.substr(this.length - suffix.length) === suffix);
    return (typeof(this.__baseType) === "undefined") ? null : this.__baseType;
    return (typeof(this.__typeName) === "undefined") ? "" : this.__typeName;
    return /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g;
    return ['', value];
    return -1;
    return Array.clone(element._behaviors);
    return Array.clone(Sys.__rootNamespaces);
    return Array.contains(element.className.split(' '), className);
    return Array.contains(Sys._ScriptLoader._getLoadedScripts(), dummyScript.src);
    return array.shift();
    return cache[interfaceName] = false;
    return component;
    return computedStyle;
    return ctor;
    return Date._parse(value, Sys.CultureInfo.CurrentCulture, arguments);
    return Date._parse(value, Sys.CultureInfo.InvariantCulture, arguments);
    return doc.defaultView || doc.parentWindow;
    return e;
    return false;
    return fn;
    return format;
    return function() {
    return function(properties) {
    return instance;
    return new Sys.CultureInfo(cultureInfo.name, cultureInfo.numberFormat, cultureInfo.dateTimeFormat);
    return new Sys.UI.Bounds(offset.x, offset.y, element.offsetWidth || 0, element.offsetHeight || 0);
    return null;
    return Number._parse(value, Sys.CultureInfo.CurrentCulture);
    return Number._parse(value, Sys.CultureInfo.InvariantCulture);
    return Number.NaN;
    return Object.getType(instance).getName();
    return parseRegExp;
    return prm;
    return quoteCount;
    return request;
    return result;
    return results;
    return ret.toString();
    return ret;
    return sb.toString();
    return sl;
    return String._toFormattedString(false, arguments);
    return String._toFormattedString(true, arguments);
    return stringBuilder.toString();
    return Sys._ScriptLoader._referencedScripts;
    return this._toFormattedString(format, Sys.CultureInfo.CurrentCulture);
    return this._toFormattedString(format, Sys.CultureInfo.InvariantCulture);
    return this.replace(/\s+$/, '');
    return this.replace(/^\s+/, '');
    return this.replace(/^\s+|\s+$/g, '');
    return this;
    return v;
    return year;
    right: 39,
    rightButton: 2
    save: Sys$Services$_ProfileService$save,
    set_associatedUpdatePanelId: Sys$UI$_UpdateProgress$set_associatedUpdatePanelId,
    set_body: Sys$Net$WebRequest$set_body,
    set_cancel: Sys$CancelEventArgs$set_cancel
    set_defaultExecutorType: Sys$Net$_WebRequestManager$set_defaultExecutorType,
    set_defaultFailedCallback: Sys$Net$WebServiceProxy$set_defaultFailedCallback,
    set_defaultLoadCompletedCallback: Sys$Services$_ProfileService$set_defaultLoadCompletedCallback,
    set_defaultLoadCompletedCallback: Sys$Services$_RoleService$set_defaultLoadCompletedCallback,
    set_defaultLoginCompletedCallback: Sys$Services$_AuthenticationService$set_defaultLoginCompletedCallback,
    set_defaultLogoutCompletedCallback: Sys$Services$_AuthenticationService$set_defaultLogoutCompletedCallback,
    set_defaultSaveCompletedCallback: Sys$Services$_ProfileService$set_defaultSaveCompletedCallback,
    set_defaultSucceededCallback: Sys$Net$WebServiceProxy$set_defaultSucceededCallback,
    set_defaultTimeout: Sys$Net$_WebRequestManager$set_defaultTimeout,
    set_defaultUserContext: Sys$Net$WebServiceProxy$set_defaultUserContext,
    set_displayAfter: Sys$UI$_UpdateProgress$set_displayAfter,
    set_dynamicLayout: Sys$UI$_UpdateProgress$set_dynamicLayout,
    set_enabled: Sys$UI$_Timer$set_enabled,
    set_enableHistory: Sys$_Application$set_enableHistory,
    set_errorHandled: Sys$WebForms$EndRequestEventArgs$set_errorHandled,
    set_executor: Sys$Net$WebRequest$set_executor,
    set_httpVerb: Sys$Net$WebRequest$set_httpVerb,
    set_id: Sys$Component$set_id,
    set_id: Sys$UI$Control$set_id,
    set_interval: Sys$UI$_Timer$set_interval,
    set_name: Sys$UI$Behavior$set_name,
    set_parent: Sys$UI$Control$set_parent,
    set_path: Sys$Net$WebServiceProxy$set_path,
    set_timeout: Sys$Net$WebRequest$set_timeout,
    set_timeout: Sys$Net$WebServiceProxy$set_timeout,
    set_uniqueID: Sys$UI$_Timer$set_uniqueID,
    set_url: Sys$Net$WebRequest$set_url,
    set_userContext: Sys$Net$WebRequest$set_userContext,
    set_visibilityMode: Sys$UI$Control$set_visibilityMode,
    set_visible: Sys$UI$Control$set_visible,
    setServerId: Sys$_Application$setServerId,
    setServerState: Sys$_Application$setServerState,
    space: 32,
    stackFrames.shift();
    stopPropagation: Sys$UI$DomEvent$stopPropagation
    stringBuilder.append('"');
    stringBuilder.append(object.toString());
    stringBuilder.append(string);
    style.left = x + "px";
    style.position = 'absolute';
    style.top = y + "px";
    switch (format.charAt(0)) {
    switch (numberNegativePattern) {
    switch (typeof object) {
    Sys.__registeredTypes[name] = true;
    Sys.__registeredTypes[typeName] = true;
    Sys.__upperCaseTypes[name.toUpperCase()] = this;
    Sys.__upperCaseTypes[typeName.toUpperCase()] = this;
    Sys._Application.initializeBase(this);
    Sys.ApplicationLoadEventArgs.initializeBase(this);
    Sys.Browser.agent = Sys.Browser.Firefox;
    Sys.Browser.agent = Sys.Browser.InternetExplorer;
    Sys.Browser.agent = Sys.Browser.Opera;
    Sys.Browser.agent = Sys.Browser.Safari;
    Sys.Browser.hasDebuggerStatement = true;
    Sys.Browser.name = 'Firefox';
    Sys.Browser.name = 'Safari';
    Sys.Browser.version = parseFloat(navigator.userAgent.match(/ AppleWebKit\/(\d+(\.\d+)?)/)[1]);
    Sys.Browser.version = parseFloat(navigator.userAgent.match(/ Firefox\/(\d+\.\d+)/)[1]);
    Sys.Browser.version = parseFloat(navigator.userAgent.match(/MSIE (\d+\.\d+)/)[1]);
    Sys.CancelEventArgs.initializeBase(this);
    Sys.Debug.isDebug = true;
    Sys.HistoryEventArgs.initializeBase(this);
    Sys.Net.NetworkRequestEventArgs.initializeBase(this);
    Sys.Net.XMLHttpExecutor.initializeBase(this);
    Sys.PropertyChangedEventArgs.initializeBase(this);
    Sys.Serialization.JavaScriptSerializer._charsToEscape[0] = '\\';
    Sys.Serialization.JavaScriptSerializer._charsToEscape[1] = '"';
    Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['"'] = new RegExp('"', 'g');
    Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['\\'] = new RegExp('\\\\', 'g');
    Sys.Serialization.JavaScriptSerializer._escapeChars['"'] = '\\"';
    Sys.Serialization.JavaScriptSerializer._escapeChars['\\'] = '\\\\';
    Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(object, stringBuilder, false);
    Sys.Services._AuthenticationService.initializeBase(this);
    Sys.Services._ProfileService.initializeBase(this);
    Sys.Services._RoleService.initializeBase(this);
    Sys.UI._Timer.initializeBase(this,[element]);
    Sys.UI._UpdateProgress.initializeBase(this,[element]);
    Sys.UI.Behavior.initializeBase(this);
    Sys.UI.Control.initializeBase(this);
    Sys.UI.DomElement._ensureOldDisplayMode(element);
    Sys.UI.DomEvent._ensureDomNode(element);
    Sys.UI.DomEvent.addHandler(window, "load", this._loadHandlerDelegate);
    Sys.UI.DomEvent.addHandler(window, "unload", this._unloadHandlerDelegate);
    Sys.WebForms.BeginRequestEventArgs.initializeBase(this);
    Sys.WebForms.EndRequestEventArgs.initializeBase(this);
    Sys.WebForms.InitializeRequestEventArgs.initializeBase(this);
    Sys.WebForms.PageLoadedEventArgs.initializeBase(this);
    Sys.WebForms.PageLoadingEventArgs.initializeBase(this);
    Sys.WebForms.PageRequestManager.getInstance()._initializeInternal(scriptManagerID, formElement);
    tab: 9,
    this.__class = true;
    this.__enum = true;
    this.__flags = flags;
    this.__interface = true;
    this.__string = this.toString();
    this.__typeName = name;
    this.__typeName = typeName;
    this._aborted = false;
    this._activeDefaultButton = null;
    this._activeDefaultButtonClicked = false;
    this._additionalInput = null;
    this._appLoadHandler = null;
    this._associatedUpdatePanelId = null;
    this._asyncPostBackControlClientIDs = null;
    this._asyncPostBackControlIDs = null;
    this._asyncPostBackTimeout = null;
    this._beginRequestHandler = null;
    this._beginRequestHandlerDelegate = null;
    this._body = null;
    this._cancel = false;
    this._clearTimer = (function() {
    this._clientId = null;
    this._completedCallback = completedCallback;
    this._components = {};
    this._components = components;
    this._controlIDToFocus = null;
    this._createdComponents = [];
    this._currentEntry = '';
    this._dataItems = dataItems || new Object();
    this._defaultExecutorType = "Sys.Net.XMLHttpExecutor";
    this._defaultTimeout = 0;
    this._displayAfter = 500;
    this._disposableObjects = [];
    this._dynamicLayout = true;
    this._element = element;
    this._enabled = true;
    this._enableHistory = false;
    this._endRequestHandler = null;
    this._endRequestHandlerDelegate = null;
    this._error = error;
    this._errorHandled = false;
    this._exceptionType = exceptionType;
    this._executor = null;
    this._form = null;
    this._headers = { };
    this._history = null;
    this._historyEnabledInScriptManager = false;
    this._historyFrame = null;
    this._historyInitialized = false;
    this._historyInitialLength = 0;
    this._historyLength = 0;
    this._historyPointIsNew = false;
    this._httpVerb = null;
    this._ignoreTimer = false;
    this._initialState = null;
    this._interval = 60000;
    this._invokeCalled = false;
    this._isCrossPost = false;
    this._isPartialLoad = isPartialLoad;
    this._len = 0;
    this._list = {};
    this._loadHandlerDelegate = Function.createDelegate(this, this._loadHandler);
    this._message = message;
    this._notified = 0;
    this._onFormElementClickHandler = null;
    this._onFormSubmitHandler = null;
    this._onReadyStateChange = (function () {
    this._onsubmit = null;
    this._onSubmitStatements = [];
    this._onTimeout = (function() {
    this._onWindowUnloadHandler = null;
    this._originalDoCallback = null;
    this._originalDoPostBack = null;
    this._originalDoPostBackWithOptions = null;
    this._originalFireDefaultButton = null;
    this._pageLoadedHandler = null;
    this._pageRequestManager = null;
    this._pageRequestManager.add_beginRequest(this._beginRequestHandlerDelegate);
    this._pageRequestManager.add_endRequest(this._endRequestHandlerDelegate);
    this._panelsCreated = panelsCreated;
    this._panelsDeleting = panelsDeleting;
    this._panelsUpdated = panelsUpdated;
    this._panelsUpdating = panelsUpdating;
    this._parts = (typeof(initialText) !== 'undefined' && initialText !== null && initialText !== '') ?
    this._postBackControlClientIDs = null;
    this._postBackControlIDs = null;
    this._postBackElement = postBackElement;
    this._postbackPending = false;
    this._postBackSettings = null;
    this._processingRequest = false;
    this._propertyName = propertyName;
    this._raiseTickDelegate = null;
    this._request = null;
    this._request = request;
    this._response = response;
    this._responseAvailable = false;
    this._resultObject = null;
    this._roles = [];
    this._scriptDisposes = {};
    this._scriptElement = scriptElement;
    this._scriptLoadedDelegate = Function.createDelegate(this, this._scriptLoadedHandler);
    this._scriptManagerID = null;
    this._scriptsToLoad = null;
    this._scrollPosition = null;
    this._secondPassComponents = [];
    this._sessions = [];
    this._stackTrace = stackTrace;
    this._startDelegate = null;
    this._started = false;
    this._startTimer();
    this._state = {};
    this._state = state;
    this._statusCode = -1;
    this._timedOut = false;
    this._timedOut = timedOut;
    this._timeout = 0;
    this._timer = null;
    this._timerCookie = 0;
    this._timerCookie = null;
    this._timerHandler = null;
    this._transientFields = ["__VIEWSTATEENCRYPTED", "__VIEWSTATEFIELDCOUNT"];
    this._uniqueID = null;
    this._uniqueId = null;
    this._unloadHandlerDelegate = Function.createDelegate(this, this._unloadHandler);
    this._updatePanelClientIDs = null;
    this._updatePanelHasChildrenAsTriggers = null;
    this._updatePanelIDs = null;
    this._url = "";
    this._userContext = null;
    this._value = {};
    this._webRequest = null;
    this._webRequest = webRequest;
    this._xmlHttpRequest = null;
    this.altKey = e.altKey;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.ctrlKey = e.ctrlKey;
    this.dateTimeFormat = dateTimeFormat;
    this.fileName = nextFrameParts[1];
    this.height = height;
    this.lineNumber = parseInt(nextFrameParts[2]);
    this.name = name;
    this.numberFormat = numberFormat;
    this.parse = Sys$Enum$parse;
    this.properties = {};
    this.prototype.constructor = this;
    this.rawEvent = e;
    this.resolveInheritance();
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.shiftKey = e.shiftKey;
    this.stack = stackFrames.join("\n");
    this.target = e.target ? e.target : e.srcElement;
    this.toString = Sys$Enum$toString;
    this.width = width;
    this.x = Math.round(x);
    this.x = x;
    this.y = Math.round(y);
    this.y = y;
    throw Error.argumentOutOfRange('value', value, String.format(Sys.Res.enumInvalidValue, value, this.__typeName));
    throw Error.argumentOutOfRange('value', value, Sys.Res.boolTrueOrFalse);
    throw Error.notImplemented();
    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
    toggleCssClass: Sys$UI$Control$toggleCssClass
    toString: Sys$StringBuilder$toString
    trace: Sys$_Debug$trace,
    traceDump: Sys$_Debug$traceDump,
    try {
    try {    
    unregisterDisposableObject: Sys$_Application$unregisterDisposableObject,
    up: 38,
    updated: Sys$Component$updated
    value = value.trim();
    var __cultureInfo = '{"name":"en-US","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":false,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"$","NaNSymbol":"NaN","CurrencyNegativePattern":0,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"\u2030","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"@-62135568000000@","MaxSupportedDateTime":"@253402300799999@","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":false},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, MMMM dd, yyyy h:mm:ss tt","LongDatePattern":"dddd, MMMM dd, yyyy","LongTimePattern":"h:mm:ss tt","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'","ShortDatePattern":"M/d/yyyy","ShortTimePattern":"h:mm tt","SortableDateTimePattern":"yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'","YearMonthPattern":"MMMM, yyyy","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":false,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]}}';
    var _currencyNegativePattern = ["($n)","-$n","$-n","$n-","(n$)","-n$","n-$","n$-","-n $","-$ n","n $-","$ n-","$ -n","n- $","($ n)","(n $)"];
    var _currencyPositivePattern = ["$n","n$","$ n","n $"];
    var _numberNegativePattern = ["(n)","-n","- n","n-","n -"];
    var _percentNegativePattern = ["-n %", "-n%", "-%n"];
    var _percentPositivePattern = ["n %", "n%", "%n" ];
    var _this = this;
    var altNumGroupSeparator = numFormat.NumberGroupSeparator.replace(/\u00A0/g, " ");
    var app = Sys.Application;
    var b = element[name];
    var baseMethod = this.getBaseMethod(instance, name);
    var baseType = this.__baseType;
    var baseType = this.getBaseType();
    var baseType = this;
    var behaviors = element._behaviors;
    var body = null;
    var browserHandler = null;
    var browserHandler;
    var cache = element._events[eventName];
    var cache = this.__interfaceCache;
    var childNodes = element.childNodes;
    var component = (element ? new type(element): new type());
    var computedStyle = (w && (element !== w) && w.getComputedStyle) ?
    var creatingComponents = app.get_isCreatingComponents();
    var ctor = instance.constructor;
    var cultureInfo = Sys.Serialization.JavaScriptSerializer.deserialize(value);
    var current;
    var currentClassName = ' ' + element.className + ' ';
    var currentFrame = stackFrames[0];
    var custom = false;
    var decimalPos = intAndFraction.indexOf(numFormat.NumberDecimalSeparator);
    var displayMessage = "Sys.ArgumentException: " + (message ? message : Sys.Res.argument);
    var displayMessage = "Sys.ArgumentNullException: " + (message ? message : Sys.Res.argumentNull);
    var displayMessage = "Sys.ArgumentOutOfRangeException: " + (message ? message : Sys.Res.argumentOutOfRange);
    var displayMessage = "Sys.ArgumentTypeException: ";
    var displayMessage = "Sys.ArgumentUndefinedException: " + (message ? message : Sys.Res.argumentUndefined);
    var displayMessage = "Sys.FormatException: " + (message ? message : Sys.Res.format);
    var displayMessage = "Sys.InvalidOperationException: " + (message ? message : Sys.Res.invalidOperation);
    var displayMessage = "Sys.Net.WebServiceFailedException: " + errorMessage;
    var displayMessage = "Sys.NotImplementedException: " + (message ? message : Sys.Res.notImplemented);
    var displayMessage = "Sys.ParameterCountException: " + (message ? message : Sys.Res.parameterCount);
    var displayMessage = "Sys.ScriptLoadFailedException: " + String.format(errorMessage, scriptUrl);
    var doc = element.ownerDocument || element.document || element;
    var dtf = cultureInfo.dateTimeFormat;
    var dummyScript = document.createElement('script');
    var e = Error.create(displayMessage, {
    var e = Error.create(displayMessage, { name: "Sys.ArgumentException", paramName: paramName });
    var e = Error.create(displayMessage, { name: "Sys.ArgumentNullException", paramName: paramName });
    var e = Error.create(displayMessage, { name: "Sys.ArgumentUndefinedException", paramName: paramName });
    var e = Error.create(displayMessage, { 'name': 'Sys.Net.WebServiceFailedException', 'methodName': methodName });
    var e = Error.create(displayMessage, {name: 'Sys.FormatException'});
    var e = Error.create(displayMessage, {name: 'Sys.InvalidOperationException'});
    var e = Error.create(displayMessage, {name: 'Sys.NotImplementedException'});
    var e = Error.create(displayMessage, {name: 'Sys.ParameterCountException'});
    var e = Error.create(displayMessage, {name: 'Sys.ScriptLoadFailedException', 'scriptUrl': scriptUrl });
    var e = eventObject;
    var e = Function._validateParams(arguments, [
    var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
    var e = new Error(message);
    var e;
    var elementMayBeNull = !!expectedParam.elementMayBeNull;
    var error = err.get_exceptionType() + "-- " + err.get_message();
    var errorMessage;
    var escaped = false;
    var etype = this.type = e.type.toLowerCase();
    var eventCache = element._events[eventName];
    var expectedDomElement = !!expectedParam.domElement;
    var expectedElementType = expectedParam.elementType;
    var expectedInteger = !!expectedParam.integer;
    var expectedType = expectedParam.type;
    var expFormat = Date._expandFormat(dtf, format);
    var exponent;
    var exponentPos = num.indexOf('e');
    var fn;
    var format = args[0];
    var fraction;
    var groups = [];
    var groups = parseInfo.groups;
    var hour = 0, min = 0, sec = 0, msec = 0, tzMinOffset = null;
    var hour;
    var i = 0;
    var i;
    var index = 0;
    var index = Array.indexOf(array, item);
    var index = currentClassName.indexOf(' ' + className + ' ');
    var instanceType = Object.getType(instance);
    var intAndFraction;
    var integer;
    var interfaceName = interfaceType.getName();
    var isComponent = Sys.Component.isInstanceOfType(target) && !target.get_isUpdating();
    var isObject = (targetType === Object) || (targetType === Sys.UI.DomElement);
    var length = array.length;
    var match = new RegExp(parseInfo.regExp).exec(value);
    var match;
    var maxParams = expectedParams.length;
    var mayBeNull = !!expectedParam.mayBeNull;
    var minParams = 0;
    var namespaceParts = namespacePath.split('.');
    var neg = numFormat.NegativeSign;
    var nextFrame = stackFrames[1];
    var nextFrameParts = nextFrame.match(/@(.*):(\d+)$/);
    var nf = cultureInfo.numberFormat;
    var nodeQueue = [];
    var num = signInfo[1];
    var number = Math.abs(this);
    var numFormat = cultureInfo.numberFormat;
    var offset = Sys.UI.DomElement.getLocation(element);
    var p = sign + integer;
    var parsedName;
    var parseInfo = Date._getParseRegExp(dtf, format);
    var parseRegExp = {'regExp': regexpStr, 'groups': groups};
    var pattern = this.fileName + ":" + this.lineNumber;
    var pattern;
    var pmHour = false;
    var pos = numFormat.PositiveSign;    
    var precision = -1;
    var prm = Sys.WebForms.PageRequestManager._instance;
    var qs = Sys.Net.WebRequest._createQueryString(queryString);
    var qsStart = baseUrl.indexOf('?');
    var quoteCount = 0;
    var regex = /n|\$|-|%/g;
    var regexp = new Sys.StringBuilder("^");
    var regexpStr = regexp.toString().replace(/\s+/g, "\\s+");
    var replaceChars = ['\\u0000','\\u0001','\\u0002','\\u0003','\\u0004','\\u0005','\\u0006','\\u0007',
    var request = new Sys.Net.WebRequest();
    var result = '';
    var result = [];
    var result = new Date();
    var results = [];
    var ret = "";
    var ret = new Sys.StringBuilder();
    var rootObject = window;
    var sb = new Sys.StringBuilder();
    var sign = signInfo[0];
    var signInfo = Number._parseNumberNegativePattern(value, numFormat, numFormat.NumberNegativePattern);
    var sl = Sys._ScriptLoader._activeInstance;
    var stackFrames = this.stack.split("\n");
    var stringBuilder = new Sys.StringBuilder();
    var style = element.currentStyle || Sys.UI.DomElement._getCurrentStyle(element);
    var style = element.style;
    var targetType = Object.getType(target);
    var tokenRegExp = Date._getTokenRegExp();
    var type = this;
    var urlParams = params;
    var v = eval(value);
    var v = value.trim().toLowerCase();
    var values = this.prototype;
    var values, parsed, val;
    var w = Sys.UI.DomElement._getWindow(element);
    var year = null, month = null, date = null, weekDay = null;
    while ((match = tokenRegExp.exec(expFormat)) !== null) {
    while (baseType) {
    while (nodeQueue.length) {
    while(type) {
    while(typeof(currentFrame) !== "undefined" &&
    window.clearTimeout(this._timer);
    window.XMLHttpRequest = function window$XMLHttpRequest() {
   return (b && Sys.UI.Behavior.isInstanceOfType(b)) ? b : null;
  </xs:annotation>
  </xs:complexType>
  </xs:element>
  </xs:simpleType>
  <xs:annotation>
  <xs:complexType name="ClientOptions">
  <xs:complexType name="CollectionMapping">
  <xs:complexType name="ExcludedType">
  <xs:complexType name="ExtensionFile">
  <xs:complexType name="MetadataFile">
  <xs:complexType name="MetadataSource">
  <xs:complexType name="NamespaceMapping">
  <xs:complexType name="ReferencedAssembly">
  <xs:complexType name="ReferencedDataContractType">
  <xs:complexType name="ServiceContractMapping">
  <xs:element name="ReferenceGroup">
  <xs:simpleType name="AssemblyName">
  <xs:simpleType name="CollectionCategory">
  <xs:simpleType name="FileName">
  <xs:simpleType name="guid">
  <xs:simpleType name="MetadataType">
  <xs:simpleType name="nonEmptyString">
  <xs:simpleType name="ProtocolType">
  <xs:simpleType name="ProxySerializerType">
  <xs:simpleType name="TypeName">
  Sys.Application.add_navigate(
  Sys.Application.setServerState('
 .NET Framework
 = function() { throw Error.invalidOperation(); }
 = new Sys.Services.ProfileGroup(Sys.Serialization.JavaScriptSerializer.deserialize('
 AND 
 AppleWebKit/
 Cannot deserialize empty string.
 CompositeScriptReference_Scripts
 DESC
 else return 
 if (p) return p;
 Inaccessible path.
 LinqDataSource_GroupByParameters
 LinqDataSource_OrderByParameters
 ListView_AlternatingItemTemplate
 ListView_OnPagePropertiesChanged
 ListView_OnSelectedIndexChanging
 Microsoft Corporation.  All rights reserved.
 Missing call to Sys.Application.notifyScriptLoaded().
 No method found with name '{0}'.
 Script errors. (IE) Enable 'Display a notification about every script error' under advanced settings.
 ScriptManager_AsyncPostBackError
 ScriptReference_IgnoreScriptPath
 TemplatePagerField_PagerTemplate
 The collection of visible items.
 The trigger's target control ID.
 type="
 Value must be 'true' or 'false'.
 var p = this.get_path();
!))$F@????N
!.>+c
!'{0}' is not a writable property.
!Expression of type '{0}' expected
!Identifies the control to extend.
!ListView_ConvertEmptyStringToNull
!ListView_OnPagePropertiesChanging
!NextPreviousPagerField_ButtonType
!Role Provider could not be found.
!ScriptManager_LoadScriptsBeforeUI
!TemplatePagerField_OnPagerCommand
!The text of the last page button.
!The text of the next page button.
!This program cannot be run in DOS mode.
!Value must be a positive integer.
!Web resource '{0}' was not found.
" id="
" type="text/javascript"></script>
" value="
"\/Date(
"Cannot call invoke more than once.
"NumericPagerField_NextPageImageUrl
"NumericPagerField_PreviousPageText
"ScriptManager_AsyncPostBackTimeout
"ScriptReference_NotifyScriptLoaded
"ScriptReference_ResourceUICultures
"System.Web.Configuration.Converter
"System.Web.UI.WebControls.ListView
"The collection of DataPagerFields.
"The server method '{0}' timed out.
"The template used for item groups.
"The text of the first page button.
#Blob
#GUID
#LinqDataSource_EnableObjectTracking
#Name and Path cannot both be empty.
#NextPreviousPagerField_LastPageText
#NextPreviousPagerField_NextPageText
#ScriptManager_AuthenticationService
#ScriptManager_ClientNavigateHandler
#SSL is required for this operation.
#Strings
#System.Web.UI.WebControls.DataPager
#The value of {0} must not be empty.
#UpdatePanelControlTrigger_ControlID
$$method0x6000db5-1
$$method0x6000ddd-1
$-6?HRapy
$An unhandled exception has occurred.
$Base URL does not contain another /.
$Cannot convert null to a value type.
$Cannot serialize non finite numbers.
$create(
$Expression is missing an 'as' clause
$find('
$get("
$NextPreviousPagerField_FirstPageText
$No data models have been registered.
$ProfileServiceManager_LoadProperties
$ScriptManager_EnablePartialRendering
$ScriptManager_ResolveScriptReference
$You must log on to call this method.
%@@@=D@@@@@@=%
%NextPreviousPagerField_ButtonCssClass
%No matching constructor in type '{0}'
%NumericPagerField_DefaultNextPageText
%The script '{0}' could not be loaded.
%The template used in the pager field.
%The text of the previous page button.
&Invalid array passed in, ',' expected.
&Invalid array passed in, '[' expected.
&Invalid array passed in, ']' expected.
&LinqDataSource_AutoGenerateWhereClause
&LinqDataSource_OrderGroupsByParameters
&nbsp;
&NextPrevPagerField_DefaultLastPageText
&NextPrevPagerField_DefaultNextPageText
&NumericPagerField_PreviousPageImageUrl
&ScriptManager_EnableScriptLocalization
&ScriptManager_EnableSecureHistoryState
&Specifies the path to the web service.
&System.Web.UI.WebControls.ListViewItem
&The template used for separator items.
&title=
&UpdateProgress_AssociatedUpdatePanelID
'(' expected
(\s+(asc|ascending|desc|descending))?\s*$
('{0}' is not a valid value for enum {1}.
(Assembly cannot be defined without Name.
(f:\dd\tools\devdiv\35MSSharedLib1024.snk
(Fires after an item has been data-bound.
(Invalid string passed in, '\"' expected.
(LinqDataSource_AutoGenerateOrderByClause
(Methods on type '{0}' are not accessible
(NextPreviousPagerField_FirstPageImageUrl
(System.Web.UI.WebControls.LinqDataSource
(The collection of data key field values.
(The server method returned invalid data.
(The template used for alternating items.
(Whether the data pager field is visible.
) === 'undefined') {
')' or ',' expected
')' or operator expected
').dispose();
)Ambiguous invocation of '{0}' constructor
)Array index must be an integer expression
)Cannot specify more than one unique path.
)Input string was not in a correct format.
)NextPreviousPagerField_ShowLastPageButton
)NextPreviousPagerField_ShowNextPageButton
)NumericPagerField_DefaultPreviousPageText
)The direction in which to sort the field.
)The index of the currently selected item.
)The index of the item shown in edit mode.
)The path to the service being referenced.
)The template used for items in edit mode.
)Value must be greater than or equal to 0.
*NextPreviousPagerField_ShowFirstPageButton
*NextPrevPagerField_DefaultPreviousPageText
*No applicable indexer exists in type '{0}'
*NumericPagerField_CurrentPageLabelCssClass
*RecursionLimit must be a positive integer.
*System.Web.UI.WebControls.ListViewDataItem
*The id property can't be set on a control.
*The template used for the ListView layout.
*There was an error processing the request.
*Value is not a valid namespace identifier.
*Value is not the name of an existing type.
', document.getElementById('
, System.Data.SqlServerCe
, System.Data.SqlServerCe, Version=3.0.3600.0, Culture=neutral, PublicKeyToken=3be235df1c8d2ad3
, System.Data.SqlServerCe, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91
, true);
,'{0}' is not a valid name for an enum value.
,DisplayAfter must be a non negative integer.
,Event raised before the context is disposed.
,Fires when the ListView's layout is created.
,Invalid array passed in, extra trailing ','.
,NumericPagerField_NextPreviousButtonCssClass
,succeededCallback,failedCallback,userContext); }
',Sys.Net.WebServiceProxy);
,System.Web.UI.WebControls.DataPagerFieldItem
,The id property can't be set on this object.
,Value must be greater than or equal to zero.
'.' or '(' expected
._staticInstance = new 
._staticInstance.
._staticInstance.get_defaultFailedCallback(); }
._staticInstance.get_defaultSucceededCallback(); }
._staticInstance.get_defaultUserContext(); }
._staticInstance.get_path(); }
._staticInstance.get_path();}
._staticInstance.get_path();},
._staticInstance.get_timeout(); }
._staticInstance.set_defaultFailedCallback(value); }
._staticInstance.set_defaultSucceededCallback(value); }
._staticInstance.set_defaultUserContext(value); }
._staticInstance.set_path(value); }
._staticInstance.set_timeout(value); }
.asmx
.Cannot set enableHistory after initialization.
.Can't add a component that doesn't have an id.
.cctor
.clientdata
.ctor
.datasvcmap
.debug.js
.get_defaultFailedCallback = function() { 
.get_defaultFailedCallback = function() { return 
.get_defaultSucceededCallback = function() { 
.get_defaultSucceededCallback = function() { return 
.get_defaultUserContext = function() { 
.get_defaultUserContext = function() { return 
.get_path = function() { 
.get_path = function() { return 
.get_timeout = function() { 
.get_timeout = function() { return 
.initializeBase(this);
.Invalid object passed in, ':' or '}' expected.
.prototype
.prototype = {
.registerClass('
.registerEnum('
.resources
.set_defaultFailedCallback = function(value) { 
.set_defaultSucceededCallback = function(value) { 
.set_defaultUserContext = function(value) { 
.set_path = function(value) {
.set_path = function(value) { 
.set_path("
.set_timeout = function(value) {
.set_timeout = function(value) { 
.Specifies whether data is automatically paged.
.SqlServerCe
.svcmap
.text
.The first expression must be of type 'Boolean'
.The Role Manager feature has not been enabled.
.Value does not fall within the expected range.
//----------------------------------------------------------
//-----------------------------------------------------------------------
// Assembly:    
// Copyright (C) Microsoft Corporation. All rights reserved.
// FileVersion: 
// Microsoft AJAX ASP.NET WebForms Framework.
// Microsoft AJAX Framework.
// MicrosoftAjax.js
// MicrosoftAjaxTimer.js
// MicrosoftAjaxWebForms.js
// Name:        
// Sys.UI._Timer component
// Version:     
/// <param name="
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
/// <value mayBeNull="true">The service default user context.</value>
/// <value type="Function" mayBeNull="true">The service default failed callback.</value>
/// <value type="Function" mayBeNull="true">The service default succeeded callback.</value>
/// <value type="Number">The service timeout.</value>
/// <value type="String" mayBeNull="true">The service url.</value>
//]]>
//<![CDATA[
/Cannot set executor after it has become active.
/Delete can only be called on a valid data item.
/GetPropertiesForCurrentUser
/GetPropertiesMetadata
/GetRolesForCurrentUser
/Invalid object passed in, member name expected.
/IsLoggedIn
/jsdebug
/Login
/Logout
/No applicable method '{0}' exists in type '{1}'
/No property or field '{0}' exists in type '{1}'
/Select can only be called on a valid data item.
/SetPropertiesForCurrentUser
/Specifies whether data is automatically sorted.
/Style properties are not supported on ListView.
/The identifier '{0}' was defined more than once
/Update can only be called on a valid data item.
/Value is not a valid type or a valid type name.
':' expected
:Address, :Protocol, :SourceId
:An enumeration definition can only contain integer values.
:AssemblyName
:FileName, :MetadataType, :ID, :Ignore, :IsMergeResult, :SourceId, :SourceUrl
:FileName, :Name
:Fires when an Edit event is generated within the ListView.
:Name, :TargetNamespace, :TypeName
:Neither of the types '{0}' and '{1}' converts to the other
:TargetNamespace, :ClrNamespace
:There are no tables defined in the registered data models.
:TypeName
:TypeName, :Category
;Fires when a Cancel event is generated within the ListView.
;ProgressTemplate which is displayed during async postbacks.
;SourceId of a metadata source should be a positive integer.
;The id property of a component can't be set more than once.
?Assembly '{0}' does not contain a Web resource with name '{1}'.
?Cannot deserialize. The data does not correspond to valid JSON.
?Indicates whether user roles are rendered inline with the page.
?The following configuration attribute was not recognized: '{0}'
?The number of items that are rendered inside the GroupTemplate.
?The number of records displayed in a page by the paged control.
?title=
@.reloc
@Contains preferences for the client side authentication service.
@Date
@G^^F?>(
@I^^F?>'
@PasswordHashName
@PasswordHashValue
@PasswordSaltName
@PasswordSaltValue
@PropName
@PropVal
@PropValue
@RoleName
@RolesCachedDate
@UserName
@Whether the pager field should display the previous page button.
@wnglwrggh
@xrpwxzzzzzzz=
'[' expected
[Enables ScriptManager to generate localized versions of script files if they are available.
[Specifies that script references should be loaded before the UI is rendered in the browser.
[Specifies whether ObjectTracking should be disabled on read-only Linq to SQL data contexts.
\.,+b
\Indicates whether this script reference should ignore the ScriptManager.ScriptPath property.
\Parameters for LinqDataSource '{0}' that are not used for AutoGenerateOrderBy must be named.
\The id property of a component can't be set after it's been added to the Application object.
\Whether the ListView treats empty strings as null when the value is extracted from the item.
']' or ',' expected
]`|E2
]PdvJ
]The global {0} ('{1}') has been defined in both '{2}' and '{3}'. They are different at '{4}'.
^"\\/Date\((?<ticks>-?[0-9]+)(?:[a-zA-Z]|(?:\+|-)[0-9]{4})?\)\\/"
^\s*[\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}_][\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}\p{Nd}\p{Pc}\p{Mn}\p{Mc}\p{Cf}_]*
^4rS//@LPO>>
^LinqDataSource '{0}' does not support the Where property when AutoGenerateWhereClause is true.
^Specifies that scripts should be loaded from this path instead of from assembly web resources.
^The script tag registered for type '{0}' and key '{1}' does not contain any valid script tags.
^This event is raised during asynchronous postbacks when the server-side history state changes.
_!ItemCount
__ASYNCPOST
__EVENTARGUMENT
__EVENTTARGET
__EVENTVALIDATION
__history
__historyFrame
__LASTFOCUS
__PREVIOUSPAGE
__SCROLLPOSITIONX
__SCROLLPOSITIONY
__type
__VIEWSTATE
_A collection of script references that the CompositeScriptReference should include in the page.
_absoluteScriptResourceUrl
_actualType
_addScriptTags
_affectedRows
_allowAnonymousAccess
_allowClear
_allowCustomErrorsRedirect
_allowServerPaging
_allUpdatePanels
_alternatingItemTemplate
_alwaysLoadBeforeUI
_appLevelCompilationSection
_applicationClientData
_AppService.axd
_appSettingsLock
_arguments
_assembly
_assemblyCache
_assemblyContainsWebResourceCache
_assemblyInfoCache
_associatedControl
_associatedUpdatePanelID
_asyncPostBackControls
_asyncPostBackErrorMessage
_asyncPostBackMode
_asyncPostBackModeInitialized
_asyncPostBackSourceElementID
_asyncPostBackTimeout
_attributes
_authenticated
_authenticating
_authenticatingEventHandlerLock
_AuthenticationCookies
_authenticationIsComplete
_authenticationServiceFileName
_authenticationServiceManager
_authenticationServiceType
_AuthenticationType
_authRequiresSSL
_authServiceEnabled
_autoGenerateOrderByClause
_autoGenerateOrderByRegex
_autoGenerateWhereClause
_autoIDIndex
_automaticIDPrefix
_autoPage
_autoSort
_boundFieldValues
_builder
_bypassVirtualPathResolution
_CacheExpiryDate
_CacheTimeout
_cancelMode
_childrenAsTriggers
_childUpdatePanelsToRefresh
_clientNavigateHandler
_clientScriptBlocks
_clientScriptManager
_clientTypeNameDictionary
_clientTypesDictionary
_clientTypesProcessed
_clientUrlResolver
_commandSource
_componentID
_compositeScript
_ConnectionString
_ConnectionStringProvider
_containingControl
_contentTemplate
_contentTemplateContainer
_contentType
_context
_contextType
_contextTypeName
_control
_controlID
_controlId
_converters
_cookieIsSet
_CorDllMain
_creatingCookie
_creatingCookieEventHandlerLock
_creatingPagerFields
_'C-SRJ
_cultureCache
_CurrentUser
_curUserName
_customCredential
_customErrorsSection
_Data source must implement ICollection when calling CreateChildControls with dataBinding=false.
_dataItem
_dataItemIndex
_dataKeyArray
_dataKeyNames
_dataKeysArrayList
_dataPager
_dataSource
_DB.spf
_debug
_debugMode
_defaultValue
_deletedItemIndex
_deleteKeys
_deleteParameters
_deleteValues
_deploymentSection
_depthLimit
_descriptionResourceName
_dictionary
_dictionaryGenericType
_displayAfter
_displayIndex
_displayNameResourceName
_Disposed
_docCommentCache
_duplicateScriptAttributesChecked
_dynamicLayout
_dynamicQueryable
_editIndex
_editItemTemplate
_elementID
_elementIDInternal
_emptyDataTemplate
_emptyFileVersion
_emptyItemTemplate
_enableDelete
_enableHistory
_enableInsert
_enableObjectTracking
_enablePageMethods
_enablePartialRendering
_enableScriptGlobalization
_enableScriptLocalization
_enableSecureHistoryState
_enableUpdate
_encode
_enumerableGenericType
_enumTypesDictionary
_eventHandled
_eventHandler
_eventName
_events
_exception
_exceptionHandled
_expandos
_explicitUpdate
_extenderControls
_failedProperties
_failedSettingsList
_field
_fields
_first
_firstTime
_focusedControl
_focusedControlID
_form
_formAction
_get_path:function() {
_GetCredentialsType
_GetCredentialsTypeName
_getMethodLock
_groupBy
_groupByParameters
_groupItemCount
_groupSeparatorTemplate
_groupsGroupPlaceholderContainer
_groupsItemCreatedCount
_groupsOriginalIndexOfGroupPlaceholderInContainer
_groupTemplate
_hiddenFields
_HonorCookieExpiry
_httpResponse
_identifierPattern
_identifierRegex
_Identity
_idictionaryGenericType
_ignoreScriptPath
_index
_initCompleted
_initialized
_initialState
_initialValue
_inlineScript
_innerExceptions
_insertItem
_insertItemTemplate
_insertParameters
_insertValues
_instance
_instantiatedEmptyDataTemplate
_IsAuthenticated
_isDebug
_isInAsyncPostBack
_isJsonSerialized
_isNavigating
_isNewContext
_IsOffline
_IsOfflineFetched
_Isolated_Storage_Tag
_IsolatedDir
_isPersistent
_isReadOnly
_isStaticReference
_item
_itemIndex
_itemList
_items
_itemSeparatorTemplate
_itemTemplate
_itemType
_javaScriptSerializer
_keepInEditMode
_keepInInsertMode
_keys
_KnownTypesArray
_KnownTypesHashtable
_layoutTemplate
_linqToSql
_listGenericType
_loadProperties
_loadRoles
_loadScriptsBeforeUI
_lock
_matchingHiddenFieldName
_maximumResourceUrlLength
_maximumRows
_maxJsonDeserializerMembers
_maxJsonLength
_maxJsonLimit
_methodInfo
_methodName
_methods
_modelValidationGroup
_name
_Name
_nameToType
_navigateEvent
_NeedToDoReset
_newDataObject
_newEditIndex
_newMaximumRows
_newObject
_newPointCreated
_newSelectedIndex
_newStartRowIndex
_noGroupsItemCreatedCount
_noGroupsItemPlaceholderContainer
_noGroupsOriginalIndexOfItemPlaceholderInContainer
_nonEmptyStringValidator
_notifyScriptLoaded
_NumStoredValues
_objectInstance
_oldValues
_operation
_orderBy
_orderByParameters
_orderGroupsBy
_orderGroupsByParameters
_originalDataObject
_originalFactory
_originalHandler
_originalObject
_originalValues
_owner
_page
_pageableItemContainer
_pageMethods
_pagePreRenderRaised
_pager
_pageRequestManager
_pagerField
_pagerTemplate
_panelRegistered
_panelsInitialized
_param
_parameterData
_paramName
_paramType
_parentUpdatePanel
_parserState
_parseWrites
_Password
_password
_path
_pendingWrites
_performSubstitution
_persistedDataKey
_postBackControls
_processedTypes
_profileAllowedGet
_profileAllowedSet
_profileServiceEnabled
_profileServiceFileName
_profileServiceManager
_progressTemplate
_progressTemplateContainer
_propConverters
_propEnableCaching
_propEnableCompression
_propEnabled
_propEnableForReading
_propEnableForWriting
_properties
_Properties
_propertyName
_PropertyValues
_propMaxJsonLength
_propName
_proposedHiddenFieldName
_proposedHiddenFieldValue
_propRecursionLimitLimit
_propRequireSSL
_propType
_Provider
_providerName
_proxies
_queryStringHandled
_queryStringNavigateUrl
_recursionLimit
_recusionLimit
_referencedAssemblies
_registerDispose
_registeredNamespaces
_RememberMe
_rendered
_renderMode
_requireFocusScript
_resourceLoaded
_resourceUICultures
_responseFormat
_restHandlerFactory
_result
_retail
_reuseSelectContext
_Roles
_roleServiceEnabled
_roleServiceFileName
_roleServiceManager
_SavePasswordHash
_script
_scriptArrays
_scriptCache
_scriptControlManager
_scriptControls
_scriptDataItems
_scriptDisposes
_scriptManager
_scriptMethodAttribute
_scriptMode
_scriptName
_scriptPath
_scriptPathCache
_scriptReferencesRegistered
_scriptRegistration
_scriptResourceAbsolutePath
_scriptResourceAllowNonJsFiles
_scriptResourceHandler
_scriptResourceName
_scriptResourceUrl
_scripts
_scriptType
_second
_secondTry
_selectContexts
_selectedIndex
_selectedItemTemplate
_selectingProvider
_selectingProviderEventHandlerLock
_selectNew
_selectNewParameters
_selectParameters
_serializeAs
_serializer
_services
_ServiceUri
_setPageProperties
_SettingsBaseClass
_settingsInitialized
_sortDirection
_sortExpression
_SQL_CE_CONN_STRING
_SQL_CE_Tag
_SQL_FILES_Tag
_SqlCeConnectionType
_SqlCeParamType
_startRowIndex
_startupScriptBlocks
_state
_stateBag
_stateDirty
_StoredValueNames
_StoredValues
_storeOriginalValuesInViewState
_stringRepresentation
_submitStatements
_supportsPartialRendering
_supportsPartialRenderingSetByUser
_table
_tableName
_targetControlID
_targetControlType
_targetControlTypeCache
_totalRowCount
_tracking
_trackViewState
_triggers
_type
_typeData
_typeId
_typeName
_typeNamespace
_typeResolver
_typeResolverSpecials
_uniqueScriptCounter
_updateKeys
_updateMode
_updateNewValues
_updateOldValues
_updatePanelMaxScriptLength
_updatePanelRequiresUpdate
_updatePanelsToRefresh
_updatePanelWriter
_updateParameters
_urlCache
_useHttpGet
_user
_userClientData
_UserName
_userName
_UsingFileSystemStore
_UsingIsolatedStore
_UsingWFCService
_validatingProperties
_validatingPropertiesEventHandlerLock
_value
_values
_view
_viewNames
_webMethodAttribute
_webResourceRegEx
_webServiceErrorEventCode
_webServiceHandlerFactory
_webServiceMethodData
_where
_whereParameters
_whiteSpaceTrimStringConverter
_writingForm
_xmlSerializeString
_zipSet
`.i.r.{.
`.rsrc
`ChildrenAsTriggers cannot be set to false when UpdateMode is set to Always on UpdatePanel '{0}'.
{"d":
{0:x4}
'{0}' ({1}): {2}
'{0}' ({1},{2}): {3}
{0} (at index {1})
'{0} does not derive from Sys.Component.
{0} expected
{0} is disabled.
{0} is not a method.
-'{0}' is not a property or an existing field.
'{0}' is not an Array property.
'{0}' is not an event.
{0} Line {1}, position {2}.
{0}: {1}
'{0}': {1}
{0}:{1}
{0}[@name='{1}']
|)|A|T|c|l|r|~|
|4}d}
|FILES|
|Isolated_Storage|
|SQL/CE|
}'~4~?~R~^~n~t~
}System.Web.UI.WebControls.StringArrayConverter, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
}The name of the query string field for the current page index. The pager will use the query string when this property is set.
~/Authentication_JSON_AppService.axd
~/Profile_JSON_AppService.axd
~/Role_JSON_AppService.axd
~/ScriptResource.axd
~/ScriptResource.axd?d=
~The {0} control '{1}' does not have a naming container.  Ensure that the control is added to the page before calling DataBind.
~The table property used by LinqDataSource '{0}' must extend Table<T> when the Delete, Insert or Update operations are enabled.
+Cannot abort when executor has not started.
+Can't add a handler that is not a function.
+NextPreviousPagerField_PreviousPageImageUrl
+No applicable aggregate method '{0}' exists
+The 'iif' function requires three arguments
+The method or operation is not implemented.
+The template used for items in insert mode.
+This is an invalid script resource request.
+Value must be a DOM element or a text node.
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<%\s*=\s*(?<resourceType>WebResource|ScriptResource)\("(?<resourceName>[^"]*)"\)\s*%>
</param>
</script>
</title></head><body></body></html>
</xs:schema>
<?xml version="1.0" encoding="utf-8"?>
<>1__state
<>2__current
<>3__type
<>4__this
<>7__wrap3
<>c__DisplayClass1
<>c__DisplayClass11
<>c__DisplayClass3
<>c__DisplayClass5
<>c__DisplayClassf
<>l__initialThreadId
<>m__Finally4
<Cannot convert value of parameter '{0}' from '{1}' to '{2}'.
<desc>5__4
<FindBestMethod>b__9
<FindBestMethod>b__a
<FindBestMethod>b__b
<FindBestMethod>b__c
<FindIndexer>b__1
<FindIndexer>b__2
<Fires after a Delete Command is executed on the data source.
<GetEnumerator>d__0
<GetScriptDescriptors>d__0
<GetScriptDescriptors>d__3
<GetScriptReferences>d__0
<GetScriptReferences>d__4
<html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript">parent.Sys.Application._onIFrameLoad();</script><title>
<i>5__1
<iA).lj^Ng^^i7
<input type="hidden" name="
<key>5__2
<LoadMapFile>b__0
<MatchMessages>b__4
<MatchOperations>b__3
<MatchPortTypes>b__0
<Module>
<PrivateImplementationDetails>{C0094683-9BB3-4BC5-9D7D-D4A0BF58E480}
<ProcessRequest>b__0
<s>5__1
<script src="
<script type="text/javascript">
<script type="text/javascript">window.location="about:blank"</script>
<script(\s+(?<attrname>\w[-\w:]*)(\s*=\s*"(?<attrval>[^"]*)"|\s*=\s*'(?<attrval>[^']*)'))*\s*(?<empty>/)?>
<SelfAndBaseClasses>d__5
<The chain of control parents can't have circular references.
<The PageRequestManager cannot be initialized more than once.
<The server method '{0}' failed with the following error: {1}
<Type '{0}' is not supported for deserialization of an array.
<updatePanelClientID>5__5
<Where>k__BackingField
<Whether the pager field should display the last page button.
<Whether the pager field should display the next page button.
<xs:schema id="DataServiceMapSchema" targetNamespace="urn:schemas-microsoft-com:xml-dataservicemap" elementFormDefault="qualified" xmlns="urn:schemas-microsoft-com:xml-dataservicemap" xmlns:mstns="urn:schemas-microsoft-com:xml-dataservicemap" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:schema id="ServiceMapSchema" targetNamespace="urn:schemas-microsoft-com:xml-wcfservicemap" elementFormDefault="qualified" xmlns="urn:schemas-microsoft-com:xml-wcfservicemap" xmlns:mstns="urn:schemas-microsoft-com:xml-wcfservicemap" xmlns:xs="http://www.w3.org/2001/XMLSchema">
= function(
=5YX|
=Failed to generate code for the service reference '{0}'.
=Fires after an Insert Command is executed on the data source.
=Fires after an Update Command is executed on the data source.
=Fires before a Delete Command is executed on the data source.
=Invalid web service call, expected path info of /js/<Method>.
=Invalid web service call, missing value for parameter: '{0}'.
=nD-BwwppsSUZYTP9cJFJc^JJ[R0P0Q
=NextPreviousPagerField_RenderNonBreakingSpacesBetweenControls
=RegisterDataItem can only be called during an async postback.
=Specifies the caption displayed when the field value is null.
=The TemplatePagerField raised event {0} which wasn't handled.
=Whether the pager field should display the first page button.
>'{0}' is not a valid script name.  The name must end in '.js'.
>'{0}' is not a valid script path.  The path must end in '.js'.
>Could not create a valid Sys.Net.WebRequestExecutor from: {0}.
>Fires before an Insert Command is executed on the data source.
>Fires before an Update Command is executed on the data source.
>Only one instance of a ScriptManager can be added to the page.
>Operation is not valid due to the current state of the object.
>Operator '{0}' incompatible with operand types '{1}' and '{2}'
>The template used for group separators between GroupTemplates.
0.0.0.0
00000000000000000400000000000000
000004b0
002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293
0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9
0Cannot call {0} when responseAvailable is false.
0Object cannot be converted to the required type.
0SetPartialRenderingMode can only be called once.
0System.Web.UI.WebControls.IPageableItemContainer
0The ListViewItem that is currently being edited.
1"="A"E$M'U'A-
102030405060708090:0;0<0QPbacadaeawv{z
1A control is already associated with the element.
1Argument list incompatible with lambda expression
1Cannot convert object of type '{0}' to type '{1}'
1I^\=%&$
1L-ViL
1Object {0} already exists and is not a namespace.
1Specifies the display format for the field value.
1The duration between Tick events in milliseconds.
1The ID of the control this DataPager should page.
2.0.0.0
2Ambiguous invocation of method '{0}' in type '{1}'
2An ItemTemplate must be defined on ListView '{0}'.
2ASP.NET Ajax client-side framework failed to load.
2Cannot call executeRequest with a null webRequest.
2httpVerb cannot be set to an empty or null string.
2I^^K39!
2Method '{0}' in type '{1}' does not return a value
2Specifies whether the Delete operation is enabled.
2Specifies whether the Insert operation is enabled.
2Specifies whether the Update operation is enabled.
2System.Web.UI.EmptyStringExpandableObjectConverter
2The control must be in the control tree of a page.
2The ListViewItem that is currently being inserted.
2The template used for the currently selected item.
2Value must not be null for Controls and Behaviors.
3.5.0.0
3.5.30729.9151
31bf3856ad364e35
3Cannot deserialize object graph into type of '{0}'.
3Operator '{0}' incompatible with operand type '{1}'
3System.Resources.Tools.StronglyTypedResourceBuilder
3The CSS class applied to the numeric pager buttons.
3The name of the table property on the data context.
3The serviceUri configuration setting was not found.
4Character literal must contain exactly one character
4NextPreviousPagerField_RenderDisabledButtonsAsLabels
4Occurs whenever the specified interval time elapses.
4The position of the insert item within the ListView.
4The type of button contained within the pager field.
5Cannot call {0} outside of a completed event handler.
5Event raised after the Delete operation is completed.
5Event raised after the Insert operation is completed.
5Event raised after the Select operation is completed.
5Event raised after the Update operation is completed.
5Event raised before the Delete operation is executed.
5Event raised before the Insert operation is executed.
5Event raised before the Select operation is executed.
5Event raised before the Update operation is executed.
5Fires when an event is generated within the ListView.
5One of the identified items was in an invalid format.
5The control '{0}' already has a data item registered.
6(?9:n
6<<<<<<<<3
6Both of the types '{0}' and '{1}' convert to the other
6Failed to set one or more properties on type {0}.  {1}
6Script controls may not be registered after PreRender.
6State field names must not contain any '=' characters.
6The state object can only have null and string fields.
7_NGGc_N^_OO_7
7A value of type '{0}' cannot be converted to type '{1}'
7No parameterless constructor defined for type of '{0}'.
7No UpdatePanel found for AssociatedUpdatePanelID '{0}'.
7Object of type '{0}' cannot be converted to type '{1}'.
7Script controls may not be registered before PreRender.
7The CSS class applied to the next and previous buttons.
7The data context type that contains the table property.
7Type: '{0}' does not inherits from JavaScriptConverter.
8A comma-separated list of key fields in the data source.
8Control '{0}' does not implement IPageableItemContainer.
8Extender controls may not be registered after PreRender.
8Fires when an event is generated within the pager field.
8Indexing of multiple-dimensional arrays is not supported
8NumericPagerField_RenderNonBreakingSpacesBetweenControls
8ScriptLoader requires pages to contain a <head> element.
8Specified argument was out of the range of valid values.
8The assembly that contains the script as a web resource.
8UpdatePanel that this UpdateProgress is associated with.
9Argument must be null, empty or same as the current user.
9Contains preferences for the client side profile service.
9Extender controls may not be registered before PreRender.
9Fires when the ListView's paging properties are changing.
9Fires when the ListView's paging properties have changed.
9The ListView '{0}' raised event {1} which wasn't handled.
9The message received from the server could not be parsed.
9Time in ms after which the ProgressTemplate is displayed.
A collection of script references that the ScriptManager should include in the page. The Scripts collections on the ScriptManager and ScriptManagerProxy controls are merged at runtime.
A collection of service references that the ScriptManager should include in the page. The Services collections on the ScriptManager and ScriptManagerProxy controls are merged at runtime.
A group placeholder must be specified on ListView '{0}' when the GroupTemplate is defined. Specify a group placeholder by setting its ID property to "{1}". The group placeholder control must also specify runat="server".
AbstractDataSvcMapFileLoader
AbstractSvcMapFileLoader
Accept-encoding
acceptEncodingHeader
AccessKey
AcquireReaderLock
Action
action
Activator
activeRegistration
Actual value was {0}.
ActualType
ActualTypeAnnotationName
actualTypeAnnotationName
ActualTypeLocalName
ActualTypeNameAttribute
ActualTypeNamespaceAttribute
actualValue
add_AsyncPostBackError
add_AuthenticateRequest
add_Authenticating
add_ContextCreated
add_ContextCreating
add_ContextDisposing
add_CreatingCookie
add_Deleted
add_Deleting
add_EndRequest
add_Error
add_Exception
add_FieldChanged
add_FieldsChanged
add_InitComplete
add_Inserted
add_Inserting
add_ItemCanceling
add_ItemCommand
add_ItemCreated
add_ItemDataBound
add_ItemDeleted
add_ItemDeleting
add_ItemEditing
add_ItemInserted
add_ItemInserting
add_ItemUpdated
add_ItemUpdating
add_LayoutCreated
add_LoadComplete
add_Navigate
add_PagePropertiesChanged
add_PagePropertiesChanging
add_PagerCommand
add_ParametersChanged
add_PostAcquireRequestState
add_PreRender
add_PreRenderComplete
add_PreSendRequestHeaders
add_ResolveCompositeScriptReference
add_ResolveScriptReference
add_Selected
add_SelectedIndexChanged
add_SelectedIndexChanging
add_Selecting
add_SelectingProvider
add_SettingsSaved
add_Sorted
add_Sorting
add_Tick
add_TotalRowCountAvailable
add_Updated
add_Updating
add_UserValidated
add_ValidatingProperties
add_ValidationEventHandler
AddAssemblyReference
AddAt
AddAttribute
AddAttributesToRender
AddCacheDependency
AddCacheItemDependencies
AddCacheItemDependency
AddCodeCompileUnit
AddComponentProperty
AddContentTemplateContainer
AddControlToContainer
AddElementProperty
AddEvent
AddEventHandler
AddFileDependencies
AddFileDependency
AddFrameworkLoadedCheck
AddFrameworkScript
AddFrameworkScripts
AddHandler
addHandlerCantBeUsedForError
AddHeader
AddHistoryPoint
AddInterface
AddItemToList
addLocation
AddMethod
AddMinutes
AddNonBreakingSpace
AddObject
AddParameter
AddProperty
addQuotes
AddRange
Address
address
Address must be specified.
addressType
AddScriptCollections
AddScriptProperty
AddScriptReferenceForExtenderControl
AddScriptReferenceForScriptControl
AddScriptReferences
AddScriptReferencesForExtenderControls
AddScriptReferencesForScriptControls
addScriptTags
AddScriptTags
AddSeconds
AddSingleChild
AddSqlCeParameter
AddStyleAttribute
AddSymbol
AddToColl
AddToNamespace
AddUsersToRoles
AddValue
AddYears
ADetermines whether the progress template is dynamically rendered.
affectedRows
AffectedRows
aIndicates whether the UpdatePanel should render as a block tag (<div>) or an inline tag (<span>).
aLinqDataSource '{0}' has no values to insert. Check that the 'values' dictionary contains values.
AllowAnonymous
AllowAnonymousAccess
AllowCustomErrorsRedirect
AllowMultiple
AllowPartiallyTrustedCallersAttribute
AllowServerPaging
AltDirectorySeparatorChar
AlternatingItemTemplate
Always
AlwaysLoadBeforeUI
-Ambiguous invocation of indexer in type '{0}'
Amphersand
An insert item wasn't found.
An item placeholder must be specified on ListView '{0}'. Specify an item placeholder by setting a control's ID property to "{1}". The item placeholder control must also specify runat="server".
AndAlso
annotation
annotationQualifiedName
answer
App_WebReferences
App_WebReferences\
appComponentMustBeInitializedl
AppDomain
appDuplicateComponent
Appearance
Append
AppendChar
AppendCharAsUnicode
AppendCharToBuilder
AppendClientTypeDeclaration
AppendCookie
AppendEventsScript
AppendFormat
AppendHeader
AppendLine
AppendPropertiesScript
AppendReferencesScript
AppendToLog
AppendTrailingSlash
AppendValue
AppInitialize
AppIsOffline
AppleMAC-Safari
AppLevelCompilationSection
appLevelCompilationSection
AppLevelCompilationSectionCache
applicable
Application
application/json
application/json;
application/json; charset=utf-8
application/x-javascript
ApplicationName
ApplicationServiceHelper
ApplicationServiceManager
ApplicationServiceManager_Path
ApplicationServicesHostFactory
ApplicationSettings
ApplicationSettingsBase
ApplyAppPathModifier
appRelativePath
AppRelativeTemplateSourceDirectory
AppRelativeVirtualPath
AppService_Disabled
AppService_MultiplePaths
AppService_RequiredSSL
AppService_RequiredSSL=
AppService_UnknownProfileProperty
AppService_UnknownProfilePropertyb
AppServicesConfig
AppSettings
AreSchemaObjectsEquivalent
argsDict
argument
Argument must be null or empty.
argumentDomElementG
argumentDomNode
ArgumentException
argumentIntegere
ArgumentMustBeCurrentUser
ArgumentMustBeNull
argumentNull
ArgumentNullException
argumentOutOfRange
ArgumentOutOfRangeException
arguments
Arguments
arguments
argumentType
argumentTypeName
argumentTypeWithTypes
argumentUndefined
Array
array
Array.__class = true;
Array.__typeName = 'Array';
Array.add = Array.enqueue = function Array$enqueue(array, item) {
Array.addRange = function Array$addRange(array, items) {
Array.clear = function Array$clear(array) {
Array.clone = function Array$clone(array) {
Array.contains = function Array$contains(array, item) {
Array.dequeue = function Array$dequeue(array) {
Array.forEach = function Array$forEach(array, method, instance) {
Array.indexOf = function Array$indexOf(array, item, start) {
Array.insert = function Array$insert(array, index, item) {
Array.parse = function Array$parse(value) {
Array.remove = function Array$remove(array, item) {
Array.removeAt = function Array$removeAt(array, index) {
arrayDeclaration
ArrayDeclarationToken
ArrayIndex
arrayIndex
ArrayList
arrayName
arrayParseBadFormat
arrayValue
arrToWrite
Ascending
ascending
aSF-X
AsmxEndpointPickerExtension
ASP.BrowserCapsFactory, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f
ASPBrowserCapsFactory
ASPBrowserCapsPublicKey
aspnet:MaxJsonDeserializerMembers
aspnet:ScriptResourceAllowNonJsFiles
aspnet:UpdatePanelMaxScriptLength
aspnet:UseLegacyClientServicesJsonHandling
AspNetCompatibilityRequirementsAttribute
AspNetHostingPermissionAttribute
AsQueryable
AsReadOnly
Assembly
assembly
Assembly '{0}' does not contain a Web resource with name '{1}'.  Setting the ScriptReference.ScriptMode property to ScriptMode.Auto or ScriptMode.Release will cause the release script to be used.
Assembly Version
assemblyBuilder
AssemblyBuilder
AssemblyBuilderAccess
AssemblyCache
AssemblyCompanyAttribute
AssemblyContainsWebResource
AssemblyCopyrightAttribute
AssemblyDefaultAliasAttribute
AssemblyDelaySignAttribute
AssemblyDescriptionAttribute
AssemblyFileVersionAttribute
AssemblyInformationalVersionAttribute
AssemblyKeyFileAttribute
AssemblyName
assemblyName
AssemblyName
assemblyName
AssemblyProductAttribute
AssemblyRef
assemblyResourceLists
AssemblyResourceLoader
AssemblyTitleAttribute
AssemblyUtil
AssemblyVersionAttribute
assertFailed
assertFailedCaller
Assertion Failed: {0}
AssignToPropertyOrField
AssociatedUpdatePanelID
associatedUpdatePanelId
Asterisk
AsyncCallback
AsyncHandlerWrapper
AsyncHandlerWrapperWithSession
AsyncPostBack
AsyncPostBack: 
asyncPostBackControlIDs
AsyncPostBackControlIDsToken
AsyncPostBackError
AsyncPostBackErrorEvent
AsyncPostBackErrorEventArgs
AsyncPostBackErrorHttpCodeKey
AsyncPostBackErrorKey
AsyncPostBackErrorMessage
AsyncPostBackErrorMessageKey
asyncPostBackMode
AsyncPostBackSourceElementID
asyncPostBackTimeout
AsyncPostBackTimeout
asyncPostBackTimeout
AsyncPostBackTimeoutDefault
AsyncPostBackTimeoutToken
AsyncPostBackTrigger
AsyncPostBackTrigger_CannotFindEvent
AsyncPostBackTrigger_EventName
AsyncPostBackTrigger_InvalidEvent
AsyncPostFormField
at {1}
AThe format string contains an unmatched opening or closing brace.
AThe id property can't be set on this object after initialization.
aThe server method '{0}' returned invalid data. The 'd' property is missing from the JSON wrapper.
AtlasWeb
Attach
attribute
Attribute
attribute1
attribute2
AttributeCollection
attributeCollection
attributeCollection1
attributeCollection2
AttributeComparer
attributeGroup
attributeName
AttributeNotRecognized
Attributes
attributes
AttributeTargets
AttributeUsageAttribute
attributeValue
attrname
attrval
Authenticated
authenticatedUserOnly
AuthenticateRequestHandler
Authenticating
AuthenticatingEventArgs
Authentication failed.
Authentication_JSON_AppService.axd
authenticationCookies
AuthenticationCookies
AuthenticationIsComplete
authenticationService
AuthenticationService
AuthenticationServiceEnabled
AuthenticationServiceManager
authenticationType
AuthenticationType
Auto"
AutoGenerateOrderByClause
AutoGenerateWhereClause
AutoIDControl
AutoPage
AutoPage is disabled on LinqDataSource {0} but paging has not been handled.  Ensure you have set the LinqDataSourceSelectArguments.Arguments.TotalRowCount property to the total number of rows.
AutoSort
Average
B'{0}' is a reserved name that can't be used as an enum value name.
b03f5f7f11d50a3a
b77a5c561934e089
b7bd7678b977bd8f
BA history point can only be added if enableHistory is set to true.
BA history point can only be added if EnableHistory is set to true.
BackColor
badBaseUrl1
badBaseUrl2
badBaseUrl3
BadImageFormatException
badTypeName
Base URL does not contain ://.
BaseAdd
baseAddresses
BaseClear
BaseDataBoundControl
BaseGet
baseNotAClass
BaseRemove
BaseRemoveAt
BasicDeserialize
BeforeImport
BeginInvoke
BeginProcessRequest
BeginTransaction
Behavior
behaviorDuplicateName
BinaryContent
BinaryExpression
BinaryWrite
Binder
bIndicates whether this service reference should have its proxy script rendered inline in the page.
Binding
bindingCollection
BindingCollection
bindingCollection
BindingDirection
BindingFlags
bLinqDataSource '{0}' does not support the OrderBy property when AutoGenerateOrderByClause is true.
block
Block
Boolean
Boolean.__class = true;
Boolean.__typeName = 'Boolean';
Boolean.parse = function Boolean$parse(value) {
boolTrueOrFalse
BorderColor
BorderStyle
BorderWidth
BoundFieldValues
Break into debugger?
breakIntoDebugger
BrowsableAttribute
Brtrue_S
BSpecifies a client-side event handler name for the navigate event.
bThe ContentTemplate of UpdatePanel with ID '{0}' cannot be changed after it has been instantiated.
BThe data source retrieved by '{0}' returned a null DataSourceView.
BThe EnableHistory property cannot be changed after the Init event.
BThe expression defining a projection used during the Select query.
bubbleExceptionFromSvc
Buffer
buffer
BufferOutput
BuildArgsDictionary
BuildDataObject
BuildDeleteDataObject
BuildDependencySet
builder
BuildInsertDataObject
BuildManager
BuildObjectValue
BuildProperties
BuildProvider
BuildUpdateDataObjects
Button
ButtonCount
ButtonCssClass
buttonText
ButtonType
bWhether the data bound control will register itself with a data bound control manager on the page.
byteContent
Cache
CacheControl
CacheDependency
CachedMetadata
CacheDuration
cacheIsMoreFresh
cacheKey
cacheKeys
cacheTimeout
CalculateGeneratedNamespace
callback
CallMethod
CallMethodFromRawParams
Callvirt
Cancel
CancelEventArgs
CancelingEdit
CancelingInsert
CancelMode
cancelMode
CanConvertFrom
CanDelete
CanDeserialize
CanInsert
Cannot call {0} once started.
Cannot create instance of {0}.
Cannot find last / in base URL.
Cannot unregister UpdatePanel with ID '{0}' since it was not registered with the ScriptManager. This might occur if the UpdatePanel was removed from the control tree and later added again, which is not supported.
cannotAbortBeforeStart
cannotCallBeforeResponse
cannotCallOnceStarted
cannotCallOutsideHandler
cannotDeserializeEmptyString
cannotDeserializeInvalidJson
cannotSerializeNonFiniteNumbers
cannotSerializeObjectWithCycle
CanPage
CanRetrieveTotalRowCount
CanSerialize
CanSort
Can't be called after dispose.
cantAddNonFunctionhandler
cantAddWithoutId
cantBeCalledAfterDispose
cantSetId
cantSetIdAfterInit
cantSetNameAfterInit
CanUpdate
capacity
Capture
CaptureCollection
Category
category
Category_
Category_Sorting
CategoryAttribute
causesValidation
ChangeCookieAndStoreInDB
ChangePassword
ChangePasswordQuestionAndAnswer
ChannelEndpointElement
CharRequiresJavaScriptEncoding
Charset
CheckAndPromoteOperand
CheckAndPromoteOperands
CheckDuplicatedWsdlItems
CheckIfCollection
CheckIfCollectionSequence
CheckIfEnum
CheckIfEnumRestriction
CheckQuoteChar
CheckReaderCount
CheckScriptTagTweenSpace
CheckServiceDescriptions
checkType
child
ChildControls
ChildrenAsTriggers
childUpdatePanelIDs
ChildUpdatePanelIDsToken
cI5cI5cI5cI5cI5j
circularParentChain
CLaca]E)
classCount
classes
ClassFactory
CleanUpContent
Clear
ClearChildViewState
ClearContent
ClearDataKeys
ClearError
ClearHeaders
ClearInternal
ClearItems
ClientCultureInfo
ClientData
ClientDataManager
ClientDateStoreOrderEnum
ClientDebugProxyRequestPathInfo
ClientForms
ClientFormsAuthenticationCredentials
ClientFormsAuthenticationMembershipProvider
ClientFormsIdentity
ClientID
clientID
ClientNavigateHandler
ClientOptions
ClientProxyGenerator
ClientProxyRequestPathInfo
ClientRolePrincipal
ClientRoleProvider
ClientScript
ClientScriptBlock
ClientScriptInclude
clientScriptManager
ClientScriptManager
ClientScriptManagerWrapper
ClientSection
ClientService_BadJsonResponse
ClientSettingsProvider
ClientSettingsProvider.ConnectionStringName
ClientSettingsProvider.HonorCookieExpiry
ClientSettingsProvider.ServiceUri
ClientStartupScript
ClientSupportsFocus
ClientTypeDictionary
ClientTypeNameDictionary
ClientTypes
clientUrlResolver
ClientUrlResolver
ClientUrlResolverWrapper
ClientWindowsAuthenticationMembershipProvider
Clone
CloneField
CloneFields
CloseBracket
CloseParen
ClrNamespace
CLSCompliantAttribute
CodeAttributeArgument
CodeAttributeArgumentCollection
CodeAttributeDeclaration
CodeAttributeDeclarationCollection
codeClass
CodeCompileUnit
codeCompileUnit
CodeDomProvider
codeDomProvider
CodeExpression
CodeGenerationOptions
CodeMemberMethod
CodeNamespace
CodeNamespaceCollection
CodeParameterDeclarationExpression
CodeParameterDeclarationExpressionCollection
CodePrimitiveExpression
CodeTypeDeclaration
CodeTypeDeclarationCollection
CodeTypeMember
CodeTypeMemberCollection
CodeTypeReference
collectedMessages
CollectErrorMessages
collection
Collection of parameters used during the Delete operation. These parameters are merged with the parameters provided by data-bound controls.
Collection of parameters used during the Insert operation. These parameters are merged with the parameters provided by data-bound controls.
Collection of parameters used during the Update operation. These parameters are merged with the parameters provided by data-bound controls.
Collection`1
CollectionBase
CollectionCategory
collectionEnum
CollectionMapping
CollectionMapping8System.Web.Compilation.WCFModel.ReferencedCollectionType
CollectionMappingList
CollectionMappings
CollectionMappingsO
CollectMetadataDocuments
CollectScripts
Colon
Color
Combine
CombineHashCodes
CombinePath
CombineTwoNames
Comma
commandArgument
CommandEventArgs
commandName
commandSource
CommandSource
Comments
Commit
Common_ArgumentInvalidType
Common_GreaterThanOrEqualToZero
Common_GreaterThanOrEqualToZeroAndLessThanOrEqualToOne
Common_NullOrEmpty
Common_PageCannotBeNull
Common_ScriptManagerRequired
CompanyName
Compare
CompareConversions
compareItems
CompareSchemaCollections
CompareSchemaPropertyValues
CompareSchemaValues
CompareStringArrays
CompareXmlAttributeCollections
CompareXmlAttributes
CompareXmlElements
CompareXmlTexts
CompilationRelaxationsAttribute
CompilationSection
CompilerGeneratedAttribute
compileUnit
CompleteRequest
Component
Component '{0}' was not found.
componentCantSetIdAfterAddedToApp
componentCantSetIdTwice
componentID
ComponentReference
compositeScript
CompositeScript
CompositeScriptReference
CompositeScriptReference_Scripts
CompositeScriptReferenceEventArgs
CompressionMode
ComputeHash
ComVisibleAttribute
Concat
ConcurrencyMode
Condition
Conditional
ConditionalExpression
config
configNamespace
Configuration
ConfigurationCollectionAttribute
ConfigurationElement
ConfigurationElementCollection
ConfigurationException
ConfigurationManager
ConfigurationName
configurationName
ConfigurationName
configurationNamespace
ConfigurationPermissionAttribute
ConfigurationProperty
ConfigurationPropertyAttribute
ConfigurationPropertyCollection
ConfigurationPropertyOptions
ConfigurationSection
ConfigurationSectionCollection
ConfigurationSectionGroup
ConfigurationSectionGroupCollection
ConfigurationValidatorBase
ConfigureApplicationServices
ConfigureAuthenticationService
ConfigureProfileService
ConfigureRoleService
connectionString
connectionStringName
connectionStringProvider
ConnectionStringSettings
ConnectionStringSettingsCollection
ConnectivityStatus
ConnectToEvents
Constant
ConstantExpression
Constraints
ConstructCookieContainer
ConstructorInfo
container
containerControl
containerID
containingControl
ContainingControl
Contains
ContainsControl
ContainsHttpBindings
ContainsKey
ContainsValue
content
Content
ContentBuffer
ContentEncoding
Content-encoding
contentReader
ContentTemplate
ContentTemplateContainer
contentType
ContentType
context
Context
ContextCreate
ContextCreated
ContextCreating
ContextDisposing
ContextType
contextType
ContextTypeName
contract
ContractCollection
contractCollection
ContractDescription
contractGenerator
ContractMapping
contractType
ContractType
control
Control
control
Control with ID '{0}' being registered through RegisterAsyncPostBackControl or RegisterPostBackControl must implement either INamingContainer, IPostBackDataHandler, or IPostBackEventHandler.
Control with ID '{0}' cannot be registered through both RegisterAsyncPostBackControl and RegisterPostBackControl. This can happen if you have conflicting triggers associated with the target control.
controlAlreadyDefined
controlCantSetId
ControlCollection
controlId
ControlID
ControlId
controlID
Controls
ControlUtil
ControlValuePropertyAttribute
Convert
ConvertChecked
ConvertDictionaryToObject
convertedList
convertedObject
ConvertEmptyStringToNull
converter
Converter
ConverterExistsForType
converters
Converters
converters
ConvertersCollection
ConvertersCollection_NotJavaScriptConverter
ConvertersCollection_UnknownType
ConvertFrom
ConvertFromInvariantString
ConvertFromString
ConvertListToObject
ConvertMetadataErrorToProxyGenerationError
ConvertObjectToType
ConvertObjectToTypeInternal
ConvertObjectToTypeMain
ConvertTo
ConvertToBuildProviderErrorMessage
ConvertToInvariantString
ConvertToType
ConvertType
cookie
Cookie
CookieCollection
CookieContainer
cookieHeader
cookieHeaders
CookieIsSet
cookieName
CookieName_
CookieNames
Cookies
cookies
cookieValue
CookieValues
CopyProperties
Copyright
CopyScriptToStringBuilderWithSubstitution
CopyTo
Could not find a row that matches the given keys in the original values stored in ViewState.  Ensure that the 'keys' dictionary contains unique key values that correspond to a row returned from the previous Select operation.
Count
count
Count
Create
CREATE TABLE ApplicationProperties (PropertyName nvarchar(256), PropertyValue nvarchar(256))
CREATE TABLE Roles (UserName nvarchar(256), RoleName nvarchar(256))
CREATE TABLE Settings (PropertyName nvarchar(256), PropertyStoredAs nvarchar(1), PropertyValue nvarchar(2048))
CREATE TABLE UserProperties (PropertyName nvarchar(256), PropertyValue nvarchar(256))
Create404
CreateChildControls
CreateClass
CreateCodeFile
CreateCommand
createComponentOnDom
CreateContents
CreateContentTemplateContainer
CreateContext
CreateContextAndTable
CreateContextAndTableForEdit
CreateContextAndTableForSelect
CreateContractGenerator
CreateControl
CreateControlCollection
CreateControlStyle
CreateConverters
CreateDatabase
CreateDataContractImporter
CreateDataItem
CreateDataPagers
CreateDataPagersForCommand
CreateDataPagersForQueryString
CreateDataSourceSelectArguments
CreateDBIfRequired
CreateDelegate
CreateDictionaryOfCopiedExtensionFiles
CreateDirectory
CreateDynamicClass
CreateEmptyDataItem
CreateEmptyItem
CreateField
CreateFromPolicy
CreateFromSchema
CreateFromServiceDescription
CreateHandler
CreateInsertItem
CreateInstance
CreateInstanceFromVirtualPath
CreateInvalidEnumValueException
CreateItem
CreateItemsInGroups
CreateItemsWithoutGroups
CreateKeywords
CreateKnownType
CreateLayoutTemplate
CreateLink
CreateLiteral
CreateMetadataSection
CreateNewElement
CreateNewSqlCeConnection
CreateNextPrevButton
CreateNextPrevLink
createNoDom
createNotComponent
CreateNumericButton
CreateNumericLink
CreateObjectInstance
CreatePagedDataSource
CreatePagerFields
createPersistentCookie
CreateProvider
CreateQuery
CreateReader
CreateRole
CreateServerPagedDataSource
CreateServiceHost
CreateType
CreateUniqueScriptKey
CreateUnknownConstantException
CreateUnknownNodeException
CreateUnknownTypeException
CreateUser
CreateView
CreateWebRequestAndGetResponse
CreateWriter
CreateWsdlImporter
CreateXmlSerializerImportOptions
CreatingCookie
CreatingCookieEventArgs
credentialsProvider
CryptographicException
CS$<>8__locals10
CS$<>8__locals2
CS$<>9__CachedAnonymousMethodDelegate1
CS$<>9__CachedAnonymousMethodDelegate3
CS$<>9__CachedAnonymousMethodDelegate4
CS$<>9__CachedAnonymousMethodDelegated
CSpecifies the user control with which the field should be rendered.
CssClass
CssClassPropertyAttribute
CSystem.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter
CThe name property can't be set on this object after initialization.
culture
Culture
cultureInfo
CultureInfo
cultureScriptBlockCache
Current
CurrentPageLabelCssClass
CustomCredential
customCredential
CustomError
CustomErrorCollection
customErrorsSection
CustomErrorsSection
CustomErrorsSectionHasRedirect
CustomErrorsSectionWrapper
Cv}ZD 
d e!f"g#u$z%
d".BLJ=<
DA history point can only be created during an asynchronous postback.
DailyBuildNumber
Data keys must be specified on ListView '{0}' before the selected data keys can be retrieved.  Use the DataKeyNames property to specify data keys.
Data Source = |SQL/CE|
DataBind
databind
DataBindChildren
DataBinder
dataBinding
DataBoundControl
DataBoundControlHelper
DataBoundControlHelper_NoNamingContainer
DataContext
dataContext
DataContractAttribute
DataContractSerializer
DataContractSerializerMessageContractImporter
DataContractXsdBaseNamespace
DataItem
dataItem
dataItemIndex
DataItemIndex
dataItemJson
DataItemJsonToken
DataItemToken
DataKey
DataKeyArray
DataKeyNames
DataKeyNamesInternal
DataKeys
DataKeysArrayList
DataMemberAttribute
dataObject
dataObjectType
dataPager
DataPager
DataPager.ico
DataPager_ControlIsntPageable
DataPager_Fields
DataPager_NoNamingContainer
DataPager_NoPageableItemContainer
DataPager_PageableItemContainerNotFound
DataPager_PagedControlID
DataPager_PagePropertiesCannotBeSet
DataPager_PageSize
DataPager_QueryStringField
DataPagerCommandEventArgs
DataPagerField
DataPagerField_Visible
DataPagerFieldCollection
DataPagerFieldCommandEventArgs
DataPagerFieldItem
DataService_MoreThanOneMetadataFile
DataService_NoMetadataFilesu
DataServiceContext
DataServices
DataSet
DataSetSchemaImporterExtension
dataSource
DataSource
DataSourceControl
DataSourceCount
DataSourceOperation
DataSourceSelectArguments
DataSourceView
DataSourceViewOperationCallback
DataSourceViewSelectCallback
DataSvcMapExtension
DataSvcMapFile
DataSvcMapFileLoader
DataSvcMapFileSerializer
Date.__class = true;
Date.__typeName = 'Date';
Date._appendPreOrPostMatch = function Date$_appendPreOrPostMatch(preMatch, strBuilder) {
Date._expandFormat = function Date$_expandFormat(dtf, format) {
Date._expandYear = function Date$_expandYear(dtf, year) {
Date._getParseRegExp = function Date$_getParseRegExp(dtf, format) {
Date._getTokenRegExp = function Date$_getTokenRegExp() {
Date._parse = function Date$_parse(value, cultureInfo, args) {
Date._parseExact = function Date$_parseExact(value, format, cultureInfo) {
Date.parseInvariant = function Date$parseInvariant(value, formats) {
Date.parseLocale = function Date$parseLocale(value, formats) {
Date.prototype._toFormattedString = function Date$_toFormattedString(format, cultureInfo) {
Date.prototype.format = function Date$format(format) {
Date.prototype.localeFormat = function Date$localeFormat(format) {
DateTime
datetime
dateTimeFormat
DateTimeFormatInfo
DateTimeKind
DatetimeMinTimeTicks
DateTimeOffset
DateTimePrefix
DateTimePrefixLength
DbCommand
DbConnection
DbDataReader
DBNull
DbParameter
DbParameterCollection
DbTransaction
DCannot set the properties of '{0}' because it returned a null value.
debug
Debug
debug.js
DebuggableAttribute
DebuggerHiddenAttribute
DebuggerNonUserCodeAttribute
DebuggingModes
debugMode
debugResourceName
DebugXmlComments
Decimal
DeclareLocal
DecodeName
DecryptParameter
DecryptString
Default
DEFAULT_FILE_NAME
DefaultAlias
DefaultEventAttribute
DefaultMaxJsonDeserializerMembers
DefaultMaxJsonLength
DefaultMemberAttribute
DefaultPropertyAttribute
DefaultRecursionLimit
DefaultRedirect
defaultTypeName
DefaultValue
DefaultValueAttribute
DefaultView
DefaultViewName
DefineDynamicAssembly
DefineDynamicModule
DefineField
DefineLabel
DefineMethod
DefineProperty
DefineType
definitions
Delegate
Delete
delete __cultureInfo;
DELETE FROM ApplicationProperties WHERE PropertyName = N'LastLoggedInUserName'
DELETE FROM Roles WHERE UserName = @UserName
DELETE FROM Settings WHERE PropertyName = @PropName
DELETE FROM Settings WHERE PropertyName = @PropName AND PropertyStoredAs='I'
DELETE FROM UserProperties WHERE PropertyName = @PasswordHashName
DELETE FROM UserProperties WHERE PropertyName = @PasswordSaltName
DELETE FROM UserProperties WHERE PropertyName = @RolesCachedDate
DELETE FROM UserProperties WHERE PropertyName LIKE N'CookieName_%'
DELETE FROM UserProperties WHERE PropertyName LIKE N'CookieName_%' AND PropertyValue LIKE @PropValue
DeleteAllCookies
deleteAllRelatedData
Deleted
DeleteDataObject
DeleteItem
DeleteOnSubmit
DeleteParameters
DeleteRole
DeleteUser
Deleting
Delta=true
dependencies
DependencyAttribute
deploymentSection
DeploymentSection
DeploymentSectionCache
DeploymentSectionRetail
depth
depthLimit
descending
description
Description
DescriptionAttribute
descriptionResourceName
Deserialize
DeserializeDictionary
DeserializeInternal
DeserializeList
DeserializeMemberName
DeserializeObject
DeserializePrimitiveObject
DeserializePrimitiveToken
DeserializeString
DeserializeStringIntoDateTime
DesignerAttribute
DesignerSerializationVisibility
DesignerSerializationVisibilityAttribute
DesignMode
destination
destinationCopy
destinationType
Details: {0}
DetermineCulture
DetermineFileType
DetermineNearestAvailableCulture
DHandler was not added through the Sys.UI.DomEvent.addHandler method.
Dictionary
dictionary
Dictionary
Dictionary`2
DictionaryEntry
DictionaryTypeResolver
differentAttribute1
differentAttribute2
differentItem1
differentItem2
differentLocation
Digit expected
DirectorySeparatorChar
DisableKernelCache
Disco
disco
Disco
DISCO
Disco
discovery
DiscoveryDocument
discoveryDocument
displayAfter
DisplayAfter
DisplayIndex
displayIndex
DisplayName
DisplayNameAttribute
displayNameResourceName
Dispose
disposeScript
disposing
Divide
DllImportAttribute
DoAnyCookiesExist
docComments
document
document.getElementById('
DocumentableItem
Double
DoubleAmphersand
DoubleBar
DoubleEqual
DowngradeFromWriterLock
DpA$-xpffnfgs@
DThe expression passed to the Where operator during the Select query.
DThe ID of the DynamicFilter control that exists in the ItemTemplate.
DThe server method '{0}' returned an invalid type. Expected type: {1}
dThis event is raised to allow modifications to composite script references before they are rendered.
duplicatedItems
duplicatedSchemas
dUse LINQ to connect to a DataContext or object in the Bin or App_Code directory for the application.
dwSize
DynamicClass
DynamicClasses
DynamicControlBase_ConvertEmptyStringToNull
DynamicControlBase_DataField
DynamicControlBase_DataFormatString
DynamicControlBase_HtmlEncode
DynamicControlBase_NullDisplayText
DynamicControlBase_UIHint
DynamicControlBase_ValidationGroup
DynamicDataSourceOperation
DynamicExpression
DynamicFilterRepeater_DynamicFilterContainerId
DynamicLayout
dynamicLayout
DynamicNavigatorDataSource_NoAccessibleTablesFound
DynamicNavigatorDataSource_NoModelsRegistered
DynamicNavigatorDataSource_NoTablesInModels
DynamicOrdering
DynamicProperty
dynamicQueryable
DynamicQueryable
DynamicQueryableWrapper
DynamicValidatorEventArgs
EcmaPublicKey
EcmaPublicKeyFull
EcmaPublicKeyToken
eCould not find an event named '{0}' on associated control '{1}' for the trigger in UpdatePanel '{2}'.
-Edit can only be called on a valid data item.
EditIndex
EditItem
EditItemTemplate
EditorAttribute
EditorBrowsableAttribute
EditorBrowsableState
EdmSchemaError
EffectiveScriptMode
EFires when a field is sorted in the ListView, before the sort occurs.
element
element1
element2
elementID
ElementID
ElementIDInternal
ElementName
ElementReference
Elements
elementSelector
elementType
else if (navigator.userAgent.indexOf(' AppleWebKit/') > -1) {
else if (navigator.userAgent.indexOf(' Firefox/') > -1) {
else if (navigator.userAgent.indexOf('Opera/') > -1) {
email
emailToMatch
EmbeddedResourceFinder
EmbeddedResourceFinder$System.Web.Resources.UpdatePanel.bmp
EmbeddedResourceFinder&System.Web.Resources.ScriptManager.bmp
EmbeddedResourceFinder+System.Web.Resources.ScriptManagerProxy.bmp
EmbeddedResourceFinder'System.Web.Resources.UpdateProgress.bmp
EmitCall
empty
Empty
emptyCollection
EmptyDataTemplate
EmptyItem
EmptyItemTemplate
EmptyPageUrl
EmptyStringExpandableObjectConverter
EmptyTypes
emptyXmlAttributeCollection
enableCaching
EnableCaching
enableCompression
EnableCompression
Enabled
enabled
Enabled
enabled
EnableDataBinding
EnableDelete
EnableEventValidation
EnableHistory
EnableInsert
EnableLegacyRendering
EnableModelValidation
EnableNextPage
EnableObjectTracking
EnablePageMethods
EnablePartialRendering
EnablePasswordReset
EnablePasswordRetrieval
EnablePreviousPage
Enables asynchronous postbacks for the UpdatePanel control on supported browsers. To override the default browser support detection you can set the SupportsPartialRendering property.
Enables page methods.
Enables raising of Tick events.
EnableScriptGlobalization
EnableScriptLocalization
EnableSecureHistoryState
EnableUpdate
encode
Encode
EncodePassword
encodeSpaces
EncodeString
encoding
Encoding
EncryptString
EndInvoke
EndpointCollection
EndpointMap
EndpointReference
endpoints
EndProcessRequest
EndRequestHandler
endResponse
EndsWith
enforceSSL
eNo accessible tables found. Make sure scaffolds are enabled or custom templates exist for your model.
ensure
EnsureAbsoluteScriptResourceUrl
EnsureAuthenticated
EnsureAuthenticationConfigLoaded
EnsureAuthenticationServiceEnabled
EnsureChildControls
EnsureClientTypesProcessed
EnsureDataBound
ensureExists
EnsureLayoutTemplate
EnsureMethods
EnsureNamespace
ensureNS
EnsureParameters
EnsureProfileConfigLoaded
EnsureProfileServiceEnabled
EnsureProviderEnabled
EnsureRoleServiceEnabled
EnsureScriptResourceRequest
EnsureSectionLoaded
EnsureSettingsLoaded
Enter
entity
EntityClassGenerator
EntitySetName
entry
enumerable
Enumerable
enumerableA
enumerableB
EnumerableContentEquals
EnumerationValue
enumerationValueAnnotationName
EnumerationValueAnnotationName
EnumerationValueLocalName
Enumerator
EnumeratorOnArray
EnumeratorOnICollection
EnumeratorOnIEnumerator
EnumeratorOnIList
enumInvalidValue
enumInvalidValueName
enumReservedName
Enums based on System.Int64 or System.UInt64 are not JSON-serializable because JavaScript does not support the necessary precision.
EnumTypeDictionary
enumTypes
EnumTypes
enumValueNotInteger
en-US
Environment
eOnly Web services with a [ScriptService] attribute on the class definition can be called from script.
Equal
EqualityComparer`1
Equals
Error
error
Error during serialization or deserialization using the JSON JavaScriptSerializer. The length of the string exceeds the value set on the maxJsonLength property.
Error parsing near '{0}'.
Error.__class = true;
Error.__typeName = 'Error';
Error.argument = function Error$argument(paramName, message) {
Error.argumentNull = function Error$argumentNull(paramName, message) {
Error.argumentOutOfRange = function Error$argumentOutOfRange(paramName, actualValue, message) {
Error.argumentType = function Error$argumentType(paramName, actualType, expectedType, message) {
Error.argumentUndefined = function Error$argumentUndefined(paramName, message) {
Error.create = function Error$create(message, errorInfo) {
Error.format = function Error$format(message) {
Error.invalidOperation = function Error$invalidOperation(message) {
Error.notImplemented = function Error$notImplemented(message) {
Error.parameterCount = function Error$parameterCount(message) {
Error.prototype.popStackFrame = function Error$popStackFrame() {
errorException
ErrorGeneratorState
ErrorInLoading
errorMessage
errorPos
Errors
errors
ErrorToken
EscapeParameterKeys
eSpecifies the name of the validation group to which validation controls in the DynamicControl belong.
EValue must be greater than or equal to 0 and less than or equal to 1.
EValue must be null for Components that are not Controls or Behaviors.
eventArgs
EventArgs
eventArgument
EventContextCreated
EventContextCreating
EventContextDisposing
EventDeleted
EventDeleting
EventException
EventHandler
EventHandler`1
eventHandlerInvalid
EventHandlerList
eventHandlerNotFound
eventHandlerNotFunction
EventInfo
EventInserted
EventInserting
EventItemCanceling
EventItemCommand
EventItemCreated
EventItemDataBound
EventItemDeleted
EventItemDeleting
EventItemEditing
EventItemInserted
EventItemInserting
EventItemUpdated
EventItemUpdating
EventLayoutCreated
EventName
EventPagePropertiesChanged
EventPagePropertiesChanging
EventPagerCommand
Events
EventSelected
EventSelectedIndexChanged
EventSelectedIndexChanging
EventSelecting
EventSorted
EventSorting
eventSource
EventTotalRowCountAvailable
EventUpdated
EventUpdating
exact
ExactlyOne
Exception
exception
ExceptionHandled
ExceptionType
Exclamation
ExclamationEqual
ExcludedType
ExcludedType.System.Web.Compilation.WCFModel.ReferencedType
ExcludedTypeList
ExcludedTypes
ExcludedTypes@
Execute
ExecuteDelete
ExecuteInsert
ExecuteNonQuery
ExecuteReader
ExecuteScalar
ExecuteSelect
ExecuteSelectAutoSortAndPage
ExecuteSelectExpressions
ExecuteSelectQuery
ExecuteUpdate
ExecuteWebServiceCall
Execution
existingProperties
existingUrl
Exists
ExpandableObjectConverter
expando
ExpandoToken
expectedEncoding
Expires
ExpiresAbsolute
Export
expr1
expr2
expression
Expression
expression
Expression expected
Expression`1
ExpressionParser
ExpressionParser_AmbiguousConstructorInvocation
ExpressionParser_AmbiguousIndexerInvocation
ExpressionParser_AmbiguousMethodInvocation
ExpressionParser_ArgsIncompatibleWithLambda
ExpressionParser_BothTypesConvertToOther
ExpressionParser_CannotConvertValue
ExpressionParser_CannotIndexMultipleDimensionalArray
ExpressionParser_CloseBracketOrCommaExpected
ExpressionParser_CloseParenOrCommaExpected
ExpressionParser_CloseParenOrOperatorExpected
ExpressionParser_ColonExpected
ExpressionParser_DigitExpected
ExpressionParser_DotOrOpenParenExpected
ExpressionParser_DuplicateIdentifier
ExpressionParser_ExpressionExpected
ExpressionParser_ExpressionTypeMismatch
ExpressionParser_FirstExprMustBeBool
ExpressionParser_IdentifierExpected
ExpressionParser_IifRequiresThreeArgs
ExpressionParser_IncompatibleOperand
ExpressionParser_IncompatibleOperands
ExpressionParser_InvalidCharacter
ExpressionParser_InvalidCharacterLiteral
ExpressionParser_InvalidIndex
ExpressionParser_InvalidIntegerLiteral
ExpressionParser_InvalidRealLiteral
ExpressionParser_MethodIsVoid
ExpressionParser_MethodsAreInaccessible
ExpressionParser_MissingAsClause
ExpressionParser_NeitherTypeConvertsToOther
ExpressionParser_NoApplicableAggregate
ExpressionParser_NoApplicableIndexer
ExpressionParser_NoApplicableMethod
ExpressionParser_NoItInScope
ExpressionParser_NoMatchingConstructor
ExpressionParser_OpenBracketExpected
ExpressionParser_OpenParenExpected
ExpressionParser_SyntaxError
ExpressionParser_TokenExpected
ExpressionParser_TypeHasNoNullableForm
ExpressionParser_UnknownIdentifier
ExpressionParser_UnknownPropertyOrField
ExpressionParser_UnterminatedStringLiteral
ExpressionType
Extender control '{0}' is not a registered extender control. Extender controls must be registered using RegisterExtenderControl() before calling RegisterScriptDescriptors().
Extender control type '{0}' does not have any attributes of type '{1}'. Extender control types must have at least one attribute of type '{1}'.
ExtenderControl
extenderControl
ExtenderControl_TargetControlDifferentUpdatePanel
ExtenderControl_TargetControlID
ExtenderControl_TargetControlIDEmpty
ExtenderControl_TargetControlIDInvalid
ExtenderControls
extenderControlType
extension
ExtensionAttribute
ExtensionFile
extensionFile
ExtensionFile-System.Web.Compilation.WCFModel.ExtensionFile
Extensions
ExtensionsT
extensionType
ExternalFile
externals
ExtractItemValues
ExtractValues
ExtractValuesFromBindableControls
extraData
FA collection of triggers that can cause the UpdatePanel to be updated.
Failed to set one or more properties on the data object.  Ensure that the input values are valid and can be converted to the corresponding property types.
FailedProperties
failedSettingsList
FailedSettingsList
failIfNoData
false
falseLiteral
FastCreatePublicInstance
FaultImportOptions
faultX
faultY
FCannot serialize object with cyclic reference within child properties.
FEnables ScriptManager to manage browser history on supported browsers.
fEncode
FetchIsOffline
Field
field
FieldAttributes
FieldBuilder
FieldChanged
FieldDirection
fieldIndex
FieldInfo
fields
Fields
FieldsChanged
FileAccess
FileDescription
FileExists
fileHandle
FileLoadException
FileMode
filename
FileName
fileName
FileName
filenames
FileNotFoundException
fileReader
FileStream
FileType
fileType
FileVersion
Filter
FilterNameIgnoreCase
FilterRepeater_TableName
FindBestMethod
FindControl
FindDataPager
FindDuplicatedItems
FindGenericEnumerableType
FindGenericType
FindIndexer
FindMembers
FindMethod
FindPageableItemContainer
FindPlaceholder
FindPropertyOrField
FindTargetControl
FindUpdatePanel
FindUsersByEmail
FindUsersByName
FindUsersInRole
Fires when an item is created.
First
first
First
FirstItem
FirstPageImageUrl
FirstPageText
Flags
Flush
FlushPendingWrites
FNo metadata files found or failed to load them for data service '{0}'.
focus
Focus.js
FocusMinimumEcmaVersion
FocusMinimumJScriptVersion
FocusToken
FontInfo
For RoleService, 'loadRoles' property must be set to false when the 'path' property is set to a value different from the default value.
For the history feature to work in IE, the page must have an iFrame element with id '__historyFrame' pointed to a page that gets its title from the 'title' query string parameter and calls Sys.Application._onIFrameLoad() on the parent window. This can be done by setting EnableHistory to true on ScriptManager.
force
ForeColor
formAction
FormAction
formAction
FormActionToken
format
Format
Format specifier was invalid.
formatBadFormatSpecifier
FormatException
formatInvalidString
FormsAuthentication
fragment
FRAMEWORK_VERSION_35
FrameworkLoadedCheck
frameworkScript
FreeBSTR
FromBase64String
FromDays
FromFileTimeUtc
fSystem.Web.Extensions.Test, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293
FThe CSS class applied to the label containing the current page number.
FThe expression passed to the GroupBy operator during the Select query.
FThe expression passed to the OrderBy operator during the Select query.
fThe method '{0}' returns a value of type '{1}', which cannot be serialized as Xml. Original error: {2}
fThe script '{0}' contains multiple calls to Sys.Application.notifyScriptLoaded(). Only one is allowed.
FThe value '{0}' for parameter '{1}' is not a valid OrderBy field name.
fullPropertyName
FullTrust
FullTrustvSystem.Web.AspNetHostingPermissionAttribute, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
Func`1
Func`2
Func`3
Func`4
Func`5
function Sys$Component$_setProperties(target, properties) {
function Sys$Component$_setReferences(component, references) {
function Sys$Enum$parse(value, ignoreCase) {
function Sys$Enum$toString(value) {
function(
function() {
Function.__class = true;
Function.__typeName = 'Function';
Function.__typeName="Function";Function.__class=true;Function.createCallback=function(b,a){return function(){var e=arguments.length;if(e>0){var d=[];for(var c=0;c<e;c++)d[c]=arguments[c];d[e]=a;return b.apply(this,d)}return b.call(this,a)}};Function.createDelegate=function(a,b){return function(){return b.apply(a,arguments)}};Function.emptyFunction=Function.emptyMethod=function(){};Function._validateParams=function(e,c){var a;a=Function._validateParameterCount(e,c);if(a){a.popStackFrame();return a}for(var b=0;b<e.length;b++){var d=c[Math.min(b,c.length-1)],f=d.name;if(d.parameterArray)f+="["+(b-c.length+1)+"]";a=Function._validateParameter(e[b],d,f);if(a){a.popStackFrame();return a}}return null};Function._validateParameterCount=function(e,a){var c=a.length,d=0;for(var b=0;b<a.length;b++)if(a[b].parameterArray)c=Number.MAX_VALUE;else if(!a[b].optional)d++;if(e.length<d||e.length>c){var f=Error.parameterCount();f.popStackFrame();return f}return null};Function._validateParameter=function(c,a,h){var b,g=a.type,l=!!a.integer,k=!!a.domElement,m=!!a.mayBeNull;b=Function._validateParameterType(c,g,l,k,m,h);if(b){b.popStackFrame();return b}var e=a.elementType,f=!!a.elementMayBeNull;if(g===Array&&typeof c!=="undefined"&&c!==null&&(e||!f)){var j=!!a.elementInteger,i=!!a.elementDomElement;for(var d=0;d<c.length;d++){var n=c[d];b=Function._validateParameterType(n,e,j,i,f,h+"["+d+"]");if(b){b.popStackFrame();return b}}}return null};Function._validateParameterType=function(a,c,n,m,k,d){var b;if(typeof a==="undefined")if(k)return null;else{b=Error.argumentUndefined(d);b.popStackFrame();return b}if(a===null)if(k)return null;else{b=Error.argumentNull(d);b.popStackFrame();return b}if(c&&c.__enum){if(typeof a!=="number"){b=Error.argumentType(d,Object.getType(a),c);b.popStackFrame();return b}if(a%1===0){var e=c.prototype;if(!c.__flags||a===0){for(var i in e)if(e[i]===a)return null}else{var l=a;for(var i in e){var f=e[i];if(f===0)continue;if((f&a)===f)l-=f;if(l===0)return null}}}b=Error.argumentOutOfRange(d,a,String.format(Sys.Res.enumInvalidValue,a,c.getName()));b.popStackFrame();return b}if(m){var h;if(typeof a.nodeType!=="number"){var g=a.ownerDocument||a.document||a;if(g!=a){var j=g.defaultView||g.parentWindow;h=j!=a&&!(j.document&&a.document&&j.document===a.document)}else h=typeof g.body==="undefined"}else h=a.nodeType===3;if(h){b=Error.argument(d,Sys.Res.argumentDomElement);b.popStackFrame();return b}}if(c&&!c.isInstanceOfType(a)){b=Error.argumentType(d,Object.getType(a),c);b.popStackFrame();return b}if(c===Number&&n)if(a%1!==0){b=Error.argumentOutOfRange(d,a,Sys.Res.argumentInteger);b.popStackFrame();return b}return null};Error.__typeName="Error";Error.__class=true;Error.create=function(d,b){var a=new Error(d);a.message=d;if(b)for(var c in b)a[c]=b[c];a.popStackFrame();return a};Error.argument=function(a,c){var b="Sys.ArgumentException: "+(c?c:Sys.Res.argument);if(a)b+="\n"+String.format(Sys.Res.paramName,a);var d=Error.create(b,{name:"Sys.ArgumentException",paramName:a});d.popStackFrame();return d};Error.argumentNull=function(a,c){var b="Sys.ArgumentNullException: "+(c?c:Sys.Res.argumentNull);if(a)b+="\n"+String.format(Sys.Res.paramName,a);var d=Error.create(b,{name:"Sys.ArgumentNullException",paramName:a});d.popStackFrame();return d};Error.argumentOutOfRange=function(c,a,d){var b="Sys.ArgumentOutOfRangeException: "+(d?d:Sys.Res.argumentOutOfRange);if(c)b+="\n"+String.format(Sys.Res.paramName,c);if(typeof a!=="undefined"&&a!==null)b+="\n"+String.format(Sys.Res.actualValue,a);var e=Error.create(b,{name:"Sys.ArgumentOutOfRangeException",paramName:c,actualValue:a});e.popStackFrame();return e};Error.argumentType=function(d,c,b,e){var a="Sys.ArgumentTypeException: ";if(e)a+=e;else if(c&&b)a+=String.format(Sys.Res.argumentTypeWithTypes,c.getName(),b.getName());else a+=Sys.Res.argumentType;if(d)a+="\n"+String.format(Sys.Res.paramName,d);var f=Error.create(a,{name:"Sys.ArgumentTypeException",paramName:d,actualType:c,expectedType:b});f.popStackFrame();return f};Error.argumentUndefined=function(a,c){var b="Sys.ArgumentUndefinedException: "+(c?c:Sys.Res.argumentUndefined);if(a)b+="\n"+String.format(Sys.Res.paramName,a);var d=Error.create(b,{name:"Sys.ArgumentUndefinedException",paramName:a});d.popStackFrame();return d};Error.format=function(a){var c="Sys.FormatException: "+(a?a:Sys.Res.format),b=Error.create(c,{name:"Sys.FormatException"});b.popStackFrame();return b};Error.invalidOperation=function(a){var c="Sys.InvalidOperationException: "+(a?a:Sys.Res.invalidOperation),b=Error.create(c,{name:"Sys.InvalidOperationException"});b.popStackFrame();return b};Error.notImplemented=function(a){var c="Sys.NotImplementedException: "+(a?a:Sys.Res.notImplemented),b=Error.create(c,{name:"Sys.NotImplementedException"});b.popStackFrame();return b};Error.parameterCount=function(a){var c="Sys.ParameterCountException: "+(a?a:Sys.Res.parameterCount),b=Error.create(c,{name:"Sys.ParameterCountException"});b.popStackFrame();return b};Error.prototype.popStackFrame=function(){if(typeof this.stack==="undefined"||this.stack===null||typeof this.fileName==="undefined"||this.fileName===null||typeof this.lineNumber==="undefined"||this.lineNumber===null)return;var a=this.stack.split("\n"),c=a[0],e=this.fileName+":"+this.lineNumber;while(typeof c!=="undefined"&&c!==null&&c.indexOf(e)===-1){a.shift();c=a[0]}var d=a[1];if(typeof d==="undefined"||d===null)return;var b=d.match(/@(.*):(\d+)$/);if(typeof b==="undefined"||b===null)return;this.fileName=b[1];this.lineNumber=parseInt(b[2]);a.shift();this.stack=a.join("\n")};Object.__typeName="Object";Object.__class=true;Object.getType=function(b){var a=b.constructor;if(!a||typeof a!=="function"||!a.__typeName||a.__typeName==="Object")return Object;return a};Object.getTypeName=function(a){return Object.getType(a).getName()};String.__typeName="String";String.__class=true;String.prototype.endsWith=function(a){return this.substr(this.length-a.length)===a};String.prototype.startsWith=function(a){return this.substr(0,a.length)===a};String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")};String.prototype.trimEnd=function(){return this.replace(/\s+$/,"")};String.prototype.trimStart=function(){return this.replace(/^\s+/,"")};String.format=function(){return String._toFormattedString(false,arguments)};String.localeFormat=function(){return String._toFormattedString(true,arguments)};String._toFormattedString=function(l,j){var c="",e=j[0];for(var a=0;true;){var f=e.indexOf("{",a),d=e.indexOf("}",a);if(f<0&&d<0){c+=e.slice(a);break}if(d>0&&(d<f||f<0)){c+=e.slice(a,d+1);a=d+2;continue}c+=e.slice(a,f);a=f+1;if(e.charAt(a)==="{"){c+="{";a++;continue}if(d<0)break;var h=e.substring(a,d),g=h.indexOf(":"),k=parseInt(g<0?h:h.substring(0,g),10)+1,i=g<0?"":h.substring(g+1),b=j[k];if(typeof b==="undefined"||b===null)b="";if(b.toFormattedString)c+=b.toFormattedString(i);else if(l&&b.localeFormat)c+=b.localeFormat(i);else if(b.format)c+=b.format(i);else c+=b.toString();a=d+1}return c};Boolean.__typeName="Boolean";Boolean.__class=true;Boolean.parse=function(b){var a=b.trim().toLowerCase();if(a==="false")return false;if(a==="true")return true};Date.__typeName="Date";Date.__class=true;Date._appendPreOrPostMatch=function(e,b){var d=0,a=false;for(var c=0,g=e.length;c<g;c++){var f=e.charAt(c);switch(f){case "'":if(a)b.append("'");else d++;a=false;break;case "\\":if(a)b.append("\\");a=!a;break;default:b.append(f);a=false}}return d};Date._expandFormat=function(a,b){if(!b)b="F";if(b.length===1)switch(b){case "d":return a.ShortDatePattern;case "D":return a.LongDatePattern;case "t":return a.ShortTimePattern;case "T":return a.LongTimePattern;case "F":return a.FullDateTimePattern;case "M":case "m":return a.MonthDayPattern;case "s":return a.SortableDateTimePattern;case "Y":case "y":return a.YearMonthPattern;default:throw Error.format(Sys.Res.formatInvalidString)}return b};Date._expandYear=function(c,a){if(a<100){var b=(new Date).getFullYear();a+=b-b%100;if(a>c.Calendar.TwoDigitYearMax)return a-100}return a};Date._getParseRegExp=function(b,e){if(!b._parseRegExp)b._parseRegExp={};else if(b._parseRegExp[e])return b._parseRegExp[e];var c=Date._expandFormat(b,e);c=c.replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g,"\\\\$1");var a=new Sys.StringBuilder("^"),j=[],f=0,i=0,h=Date._getTokenRegExp(),d;while((d=h.exec(c))!==null){var l=c.slice(f,d.index);f=h.lastIndex;i+=Date._appendPreOrPostMatch(l,a);if(i%2===1){a.append(d[0]);continue}switch(d[0]){case "dddd":case "ddd":case "MMMM":case "MMM":a.append("(\\D+)");break;case "tt":case "t":a.append("(\\D*)");break;case "yyyy":a.append("(\\d{4})");break;case "fff":a.append("(\\d{3})");break;case "ff":a.append("(\\d{2})");break;case "f":a.append("(\\d)");break;case "dd":case "d":case "MM":case "M":case "yy":case "y":case "HH":case "H":case "hh":case "h":case "mm":case "m":case "ss":case "s":a.append("(\\d\\d?)");break;case "zzz":a.append("([+-]?\\d\\d?:\\d{2})");break;case "zz":case "z":a.append("([+-]?\\d\\d?)")}Array.add(j,d[0])}Date._appendPreOrPostMatch(c.slice(f),a);a.append("$");var k=a.toString().replace(/\s+/g,"\\s+"),g={"regExp":k,"groups":j};b._parseRegExp[e]=g;return g};Date._getTokenRegExp=function(){return /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g};Date.parseLocale=function(a){return Date._parse(a,Sys.CultureInfo.CurrentCulture,arguments)};Date.parseInvariant=function(a){return Date._parse(a,Sys.CultureInfo.InvariantCulture,arguments)};Date._parse=function(g,c,h){var e=false;for(var a=1,i=h.length;a<i;a++){var f=h[a];if(f){e=true;var b=Date._parseExact(g,f,c);if(b)return b}}if(!e){var d=c._getDateTimeFormats();for(var a=0,i=d.length;a<i;a++){var b=Date._parseExact(g,d[a],c);if(b)return b}}return null};Date._parseExact=function(s,y,j){s=s.trim();var m=j.dateTimeFormat,v=Date._getParseRegExp(m,y),x=(new RegExp(v.regExp)).exec(s);if(x===null)return null;var w=v.groups,f=null,c=null,h=null,g=null,d=0,n=0,o=0,e=0,k=null,r=false;for(var p=0,z=w.length;p<z;p++){var a=x[p+1];if(a)switch(w[p]){case "dd":case "d":h=parseInt(a,10);if(h<1||h>31)return null;break;case "MMMM":c=j._getMonthIndex(a);if(c<0||c>11)return null;break;case "MMM":c=j._getAbbrMonthIndex(a);if(c<0||c>11)return null;break;case "M":case "MM":var c=parseInt(a,10)-1;if(c<0||c>11)return null;break;case "y":case "yy":f=Date._expandYear(m,parseInt(a,10));if(f<0||f>9999)return null;break;case "yyyy":f=parseInt(a,10);if(f<0||f>9999)return null;break;case "h":case "hh":d=parseInt(a,10);if(d===12)d=0;if(d<0||d>11)return null;break;case "H":case "HH":d=parseInt(a,10);if(d<0||d>23)return null;break;case "m":case "mm":n=parseInt(a,10);if(n<0||n>59)return null;break;case "s":case "ss":o=parseInt(a,10);if(o<0||o>59)return null;break;case "tt":case "t":var u=a.toUpperCase();r=u===m.PMDesignator.toUpperCase();if(!r&&u!==m.AMDesignator.toUpperCase())return null;break;case "f":e=parseInt(a,10)*100;if(e<0||e>999)return null;break;case "ff":e=parseInt(a,10)*10;if(e<0||e>999)return null;break;case "fff":e=parseInt(a,10);if(e<0||e>999)return null;break;case "dddd":g=j._getDayIndex(a);if(g<0||g>6)return null;break;case "ddd":g=j._getAbbrDayIndex(a);if(g<0||g>6)return null;break;case "zzz":var q=a.split(/:/);if(q.length!==2)return null;var i=parseInt(q[0],10);if(i<-12||i>13)return null;var l=parseInt(q[1],10);if(l<0||l>59)return null;k=i*60+(a.startsWith("-")?-l:l);break;case "z":case "zz":var i=parseInt(a,10);if(i<-12||i>13)return null;k=i*60}}var b=new Date;if(f===null)f=b.getFullYear();if(c===null)c=b.getMonth();if(h===null)h=b.getDate();b.setFullYear(f,c,h);if(b.getDate()!==h)return null;if(g!==null&&b.getDay()!==g)return null;if(r&&d<12)d+=12;b.setHours(d,n,o,e);if(k!==null){var t=b.getMinutes()-(k+b.getTimezoneOffset());b.setHours(b.getHours()+parseInt(t/60,10),t%60)}return b};Date.prototype.format=function(a){return this._toFormattedString(a,Sys.CultureInfo.InvariantCulture)};Date.prototype.localeFormat=function(a){return this._toFormattedString(a,Sys.CultureInfo.CurrentCulture)};Date.prototype._toFormattedString=function(e,h){if(!e||e.length===0||e==="i")if(h&&h.name.length>0)return this.toLocaleString();else return this.toString();var d=h.dateTimeFormat;e=Date._expandFormat(d,e);var a=new Sys.StringBuilder,b;function c(a){if(a<10)return "0"+a;return a.toString()}function g(a){if(a<10)return "00"+a;if(a<100)return "0"+a;return a.toString()}var j=0,i=Date._getTokenRegExp();for(;true;){var l=i.lastIndex,f=i.exec(e),k=e.slice(l,f?f.index:e.length);j+=Date._appendPreOrPostMatch(k,a);if(!f)break;if(j%2===1){a.append(f[0]);continue}switch(f[0]){case "dddd":a.append(d.DayNames[this.getDay()]);break;case "ddd":a.append(d.AbbreviatedDayNames[this.getDay()]);break;case "dd":a.append(c(this.getDate()));break;case "d":a.append(this.getDate());break;case "MMMM":a.append(d.MonthNames[this.getMonth()]);break;case "MMM":a.append(d.AbbreviatedMonthNames[this.getMonth()]);break;case "MM":a.append(c(this.getMonth()+1));break;case "M":a.append(this.getMonth()+1);break;case "yyyy":a.append(this.getFullYear());break;case "yy":a.append(c(this.getFullYear()%100));break;case "y":a.append(this.getFullYear()%100);break;case "hh":b=this.getHours()%12;if(b===0)b=12;a.append(c(b));break;case "h":b=this.getHours()%12;if(b===0)b=12;a.append(b);break;case "HH":a.append(c(this.getHours()));break;case "H":a.append(this.getHours());break;case "mm":a.append(c(this.getMinutes()));break;case "m":a.append(this.getMinutes());break;case "ss":a.append(c(this.getSeconds()));break;case "s":a.append(this.getSeconds());break;case "tt":a.append(this.getHours()<12?d.AMDesignator:d.PMDesignator);break;case "t":a.append((this.getHours()<12?d.AMDesignator:d.PMDesignator).charAt(0));break;case "f":a.append(g(this.getMilliseconds()).charAt(0));break;case "ff":a.append(g(this.getMilliseconds()).substr(0,2));break;case "fff":a.append(g(this.getMilliseconds()));break;case "z":b=this.getTimezoneOffset()/60;a.append((b<=0?"+":"-")+Math.floor(Math.abs(b)));break;case "zz":b=this.getTimezoneOffset()/60;a.append((b<=0?"+":"-")+c(Math.floor(Math.abs(b))));break;case "zzz":b=this.getTimezoneOffset()/60;a.append((b<=0?"+":"-")+c(Math.floor(Math.abs(b)))+d.TimeSeparator+c(Math.abs(this.getTimezoneOffset()%60)))}}return a.toString()};Number.__typeName="Number";Number.__class=true;Number.parseLocale=function(a){return Number._parse(a,Sys.CultureInfo.CurrentCulture)};Number.parseInvariant=function(a){return Number._parse(a,Sys.CultureInfo.InvariantCulture)};Number._parse=function(b,o){b=b.trim();if(b.match(/^[+-]?infinity$/i))return parseFloat(b);if(b.match(/^0x[a-f0-9]+$/i))return parseInt(b);var a=o.numberFormat,g=Number._parseNumberNegativePattern(b,a,a.NumberNegativePattern),h=g[0],e=g[1];if(h===""&&a.NumberNegativePattern!==1){g=Number._parseNumberNegativePattern(b,a,1);h=g[0];e=g[1]}if(h==="")h="+";var j,d,f=e.indexOf("e");if(f<0)f=e.indexOf("E");if(f<0){d=e;j=null}else{d=e.substr(0,f);j=e.substr(f+1)}var c,k,m=d.indexOf(a.NumberDecimalSeparator);if(m<0){c=d;k=null}else{c=d.substr(0,m);k=d.substr(m+a.NumberDecimalSeparator.length)}c=c.split(a.NumberGroupSeparator).join("");var n=a.NumberGroupSeparator.replace(/\u00A0/g," ");if(a.NumberGroupSeparator!==n)c=c.split(n).join("");var l=h+c;if(k!==null)l+="."+k;if(j!==null){var i=Number._parseNumberNegativePattern(j,a,1);if(i[0]==="")i[0]="+";l+="e"+i[0]+i[1]}if(l.match(/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/))return parseFloat(l);return Number.NaN};Number._parseNumberNegativePattern=function(a,d,e){var b=d.NegativeSign,c=d.PositiveSign;switch(e){case 4:b=" "+b;c=" "+c;case 3:if(a.endsWith(b))return ["-",a.substr(0,a.length-b.length)];else if(a.endsWith(c))return ["+",a.substr(0,a.length-c.length)];break;case 2:b+=" ";c+=" ";case 1:if(a.startsWith(b))return ["-",a.substr(b.length)];else if(a.startsWith(c))return ["+",a.substr(c.length)];break;case 0:if(a.startsWith("(")&&a.endsWith(")"))return ["-",a.substr(1,a.length-2)]}return ["",a]};Number.prototype.format=function(a){return this._toFormattedString(a,Sys.CultureInfo.InvariantCulture)};Number.prototype.localeFormat=function(a){return this._toFormattedString(a,Sys.CultureInfo.CurrentCulture)};Number.prototype._toFormattedString=function(d,j){if(!d||d.length===0||d==="i")if(j&&j.name.length>0)return this.toLocaleString();else return this.toString();var o=["n %","n%","%n"],n=["-n %","-n%","-%n"],p=["(n)","-n","- n","n-","n -"],m=["$n","n$","$ n","n $"],l=["($n)","-$n","$-n","$n-","(n$)","-n$","n-$","n$-","-n $","-$ n","n $-","$ n-","$ -n","n- $","($ n)","(n $)"];function g(a,c,d){for(var b=a.length;b<c;b++)a=d?"0"+a:a+"0";return a}function i(j,i,l,n,p){var h=l[0],k=1,o=Math.pow(10,i),m=Math.round(j*o)/o;if(!isFinite(m))m=j;j=m;var b=j.toString(),a="",c,e=b.split(/e/i);b=e[0];c=e.length>1?parseInt(e[1]):0;e=b.split(".");b=e[0];a=e.length>1?e[1]:"";var q;if(c>0){a=g(a,c,false);b+=a.slice(0,c);a=a.substr(c)}else if(c<0){c=-c;b=g(b,c+1,true);a=b.slice(-c,b.length)+a;b=b.slice(0,-c)}if(i>0){if(a.length>i)a=a.slice(0,i);else a=g(a,i,false);a=p+a}else a="";var d=b.length-1,f="";while(d>=0){if(h===0||h>d)if(f.length>0)return b.slice(0,d+1)+n+f+a;else return b.slice(0,d+1)+a;if(f.length>0)f=b.slice(d-h+1,d+1)+n+f;else f=b.slice(d-h+1,d+1);d-=h;if(k<l.length){h=l[k];k++}}return b.slice(0,d+1)+n+f+a}var a=j.numberFormat,e=Math.abs(this);if(!d)d="D";var b=-1;if(d.length>1)b=parseInt(d.slice(1),10);var c;switch(d.charAt(0)){case "d":case "D":c="n";if(b!==-1)e=g(""+e,b,true);if(this<0)e=-e;break;case "c":case "C":if(this<0)c=l[a.CurrencyNegativePattern];else c=m[a.CurrencyPositivePattern];if(b===-1)b=a.CurrencyDecimalDigits;e=i(Math.abs(this),b,a.CurrencyGroupSizes,a.CurrencyGroupSeparator,a.CurrencyDecimalSeparator);break;case "n":case "N":if(this<0)c=p[a.NumberNegativePattern];else c="n";if(b===-1)b=a.NumberDecimalDigits;e=i(Math.abs(this),b,a.NumberGroupSizes,a.NumberGroupSeparator,a.NumberDecimalSeparator);break;case "p":case "P":if(this<0)c=n[a.PercentNegativePattern];else c=o[a.PercentPositivePattern];if(b===-1)b=a.PercentDecimalDigits;e=i(Math.abs(this)*100,b,a.PercentGroupSizes,a.PercentGroupSeparator,a.PercentDecimalSeparator);break;default:throw Error.format(Sys.Res.formatBadFormatSpecifier)}var k=/n|\$|-|%/g,f="";for(;true;){var q=k.lastIndex,h=k.exec(c);f+=c.slice(q,h?h.index:c.length);if(!h)break;switch(h[0]){case "n":f+=e;break;case "$":f+=a.CurrencySymbol;break;case "-":f+=a.NegativeSign;break;case "%":f+=a.PercentSymbol}}return f};RegExp.__typeName="RegExp";RegExp.__class=true;Array.__typeName="Array";Array.__class=true;Array.add=Array.enqueue=function(a,b){a[a.length]=b};Array.addRange=function(a,b){a.push.apply(a,b)};Array.clear=function(a){a.length=0};Array.clone=function(a){if(a.length===1)return [a[0]];else return Array.apply(null,a)};Array.contains=function(a,b){return Array.indexOf(a,b)>=0};Array.dequeue=function(a){return a.shift()};Array.forEach=function(b,e,d){for(var a=0,f=b.length;a<f;a++){var c=b[a];if(typeof c!=="undefined")e.call(d,c,a,b)}};Array.indexOf=function(d,e,a){if(typeof e==="undefined")return -1;var c=d.length;if(c!==0){a=a-0;if(isNaN(a))a=0;else{if(isFinite(a))a=a-a%1;if(a<0)a=Math.max(0,c+a)}for(var b=a;b<c;b++)if(typeof d[b]!=="undefined"&&d[b]===e)return b}return -1};Array.insert=function(a,b,c){a.splice(b,0,c)};Array.parse=function(value){if(!value)return [];return eval(value)};Array.remove=function(b,c){var a=Array.indexOf(b,c);if(a>=0)b.splice(a,1);return a>=0};Array.removeAt=function(a,b){a.splice(b,1)};if(!window)this.window=this;window.Type=Function;Type.prototype.callBaseMethod=function(a,d,b){var c=this.getBaseMethod(a,d);if(!b)return c.apply(a);else return c.apply(a,b)};Type.prototype.getBaseMethod=function(d,c){var b=this.getBaseType();if(b){var a=b.prototype[c];return a instanceof Function?a:null}return null};Type.prototype.getBaseType=function(){return typeof this.__baseType==="undefined"?null:this.__baseType};Type.prototype.getInterfaces=function(){var a=[],b=this;while(b){var c=b.__interfaces;if(c)for(var d=0,f=c.length;d<f;d++){var e=c[d];if(!Array.contains(a,e))a[a.length]=e}b=b.__baseType}return a};Type.prototype.getName=function(){return typeof this.__typeName==="undefined"?"":this.__typeName};Type.prototype.implementsInterface=function(d){this.resolveInheritance();var c=d.getName(),a=this.__interfaceCache;if(a){var e=a[c];if(typeof e!=="undefined")return e}else a=this.__interfaceCache={};var b=this;while(b){var f=b.__interfaces;if(f)if(Array.indexOf(f,d)!==-1)return a[c]=true;b=b.__baseType}return a[c]=false};Type.prototype.inheritsFrom=function(b){this.resolveInheritance();var a=this.__baseType;while(a){if(a===b)return true;a=a.__baseType}return false};Type.prototype.initializeBase=function(a,b){this.resolveInheritance();if(this.__baseType)if(!b)this.__baseType.apply(a);else this.__baseType.apply(a,b);return a};Type.prototype.isImplementedBy=function(a){if(typeof a==="undefined"||a===null)return false;var b=Object.getType(a);return !!(b.implementsInterface&&b.implementsInterface(this))};Type.prototype.isInstanceOfType=function(b){if(typeof b==="undefined"||b===null)return false;if(b instanceof this)return true;var a=Object.getType(b);return !!(a===this)||a.inheritsFrom&&a.inheritsFrom(this)||a.implementsInterface&&a.implementsInterface(this)};Type.prototype.registerClass=function(c,b,d){this.prototype.constructor=this;this.__typeName=c;this.__class=true;if(b){this.__baseType=b;this.__basePrototypePending=true}Sys.__upperCaseTypes[c.toUpperCase()]=this;if(d){this.__interfaces=[];for(var a=2,f=arguments.length;a<f;a++){var e=arguments[a];this.__interfaces.push(e)}}return this};Type.prototype.registerInterface=function(a){Sys.__upperCaseTypes[a.toUpperCase()]=this;this.prototype.constructor=this;this.__typeName=a;this.__interface=true;return this};Type.prototype.resolveInheritance=function(){if(this.__basePrototypePending){var b=this.__baseType;b.resolveInheritance();for(var a in b.prototype){var c=b.prototype[a];if(!this.prototype[a])this.prototype[a]=c}delete this.__basePrototypePending}};Type.getRootNamespaces=function(){return Array.clone(Sys.__rootNamespaces)};Type.isClass=function(a){if(typeof a==="undefined"||a===null)return false;return !!a.__class};Type.isInterface=function(a){if(typeof a==="undefined"||a===null)return false;return !!a.__interface};Type.isNamespace=function(a){if(typeof a==="undefined"||a===null)return false;return !!a.__namespace};Type.parse=function(typeName,ns){var fn;if(ns){fn=Sys.__upperCaseTypes[ns.getName().toUpperCase()+"."+typeName.toUpperCase()];return fn||null}if(!typeName)return null;if(!Type.__htClasses)Type.__htClasses={};fn=Type.__htClasses[typeName];if(!fn){fn=eval(typeName);Type.__htClasses[typeName]=fn}return fn};Type.registerNamespace=function(f){var d=window,c=f.split(".");for(var b=0;b<c.length;b++){var e=c[b],a=d[e];if(!a){a=d[e]={__namespace:true,__typeName:c.slice(0,b+1).join(".")};if(b===0)Sys.__rootNamespaces[Sys.__rootNamespaces.length]=a;a.getName=function(){return this.__typeName}}d=a}};window.Sys={__namespace:true,__typeName:"Sys",getName:function(){return "Sys"},__upperCaseTypes:{}};Sys.__rootNamespaces=[Sys];Sys.IDisposable=function(){};Sys.IDisposable.prototype={};Sys.IDisposable.registerInterface("Sys.IDisposable");Sys.StringBuilder=function(a){this._parts=typeof a!=="undefined"&&a!==null&&a!==""?[a.toString()]:[];this._value={};this._len=0};Sys.StringBuilder.prototype={append:function(a){this._parts[this._parts.length]=a},appendLine:function(a){this._parts[this._parts.length]=typeof a==="undefined"||a===null||a===""?"\r\n":a+"\r\n"},clear:function(){this._parts=[];this._value={};this._len=0},isEmpty:function(){if(this._parts.length===0)return true;return this.toString()===""},toString:function(a){a=a||"";var b=this._parts;if(this._len!==b.length){this._value={};this._len=b.length}var d=this._value;if(typeof d[a]==="undefined"){if(a!=="")for(var c=0;c<b.length;)if(typeof b[c]==="undefined"||b[c]===""||b[c]===null)b.splice(c,1);else c++;d[a]=this._parts.join(a)}return d[a]}};Sys.StringBuilder.registerClass("Sys.StringBuilder");if(!window.XMLHttpRequest)window.XMLHttpRequest=function(){var b=["Msxml2.XMLHTTP.3.0","Msxml2.XMLHTTP"];for(var a=0,c=b.length;a<c;a++)try{return new ActiveXObject(b[a])}catch(d){}return null};Sys.Browser={};Sys.Browser.InternetExplorer={};Sys.Browser.Firefox={};Sys.Browser.Safari={};Sys.Browser.Opera={};Sys.Browser.agent=null;Sys.Browser.hasDebuggerStatement=false;Sys.Browser.name=navigator.appName;Sys.Browser.version=parseFloat(navigator.appVersion);Sys.Browser.documentMode=0;if(navigator.userAgent.indexOf(" MSIE ")>-1){Sys.Browser.agent=Sys.Browser.InternetExplorer;Sys.Browser.version=parseFloat(navigator.userAgent.match(/MSIE (\d+\.\d+)/)[1]);if(Sys.Browser.version>=8)if(document.documentMode>=7)Sys.Browser.documentMode=document.documentMode;Sys.Browser.hasDebuggerStatement=true}else if(navigator.userAgent.indexOf(" Firefox/")>-1){Sys.Browser.agent=Sys.Browser.Firefox;Sys.Browser.version=parseFloat(navigator.userAgent.match(/Firefox\/(\d+\.\d+)/)[1]);Sys.Browser.name="Firefox";Sys.Browser.hasDebuggerStatement=true}else if(navigator.userAgent.indexOf(" AppleWebKit/")>-1){Sys.Browser.agent=Sys.Browser.Safari;Sys.Browser.version=parseFloat(navigator.userAgent.match(/AppleWebKit\/(\d+(\.\d+)?)/)[1]);Sys.Browser.name="Safari"}else if(navigator.userAgent.indexOf("Opera/")>-1)Sys.Browser.agent=Sys.Browser.Opera;Type.registerNamespace("Sys.UI");Sys._Debug=function(){};Sys._Debug.prototype={_appendConsole:function(a){if(typeof Debug!=="undefined"&&Debug.writeln)Debug.writeln(a);if(window.console&&window.console.log)window.console.log(a);if(window.opera)window.opera.postError(a);if(window.debugService)window.debugService.trace(a)},_appendTrace:function(b){var a=document.getElementById("TraceConsole");if(a&&a.tagName.toUpperCase()==="TEXTAREA")a.value+=b+"\n"},assert:function(c,a,b){if(!c){a=b&&this.assert.caller?String.format(Sys.Res.assertFailedCaller,a,this.assert.caller):String.format(Sys.Res.assertFailed,a);if(confirm(String.format(Sys.Res.breakIntoDebugger,a)))this.fail(a)}},clearTrace:function(){var a=document.getElementById("TraceConsole");if(a&&a.tagName.toUpperCase()==="TEXTAREA")a.value=""},fail:function(message){this._appendConsole(message);if(Sys.Browser.hasDebuggerStatement)eval("debugger")},trace:function(a){this._appendConsole(a);this._appendTrace(a)},traceDump:function(a,b){var c=this._traceDump(a,b,true)},_traceDump:function(a,c,f,b,d){c=c?c:"traceDump";b=b?b:"";if(a===null){this.trace(b+c+": null");return}switch(typeof a){case "undefined":this.trace(b+c+": Undefined");break;case "number":case "string":case "boolean":this.trace(b+c+": "+a);break;default:if(Date.isInstanceOfType(a)||RegExp.isInstanceOfType(a)){this.trace(b+c+": "+a.toString());break}if(!d)d=[];else if(Array.contains(d,a)){this.trace(b+c+": ...");return}Array.add(d,a);if(a==window||a===document||window.HTMLElement&&a instanceof HTMLElement||typeof a.nodeName==="string"){var k=a.tagName?a.tagName:"DomElement";if(a.id)k+=" - "+a.id;this.trace(b+c+" {"+k+"}")}else{var i=Object.getTypeName(a);this.trace(b+c+(typeof i==="string"?" {"+i+"}":""));if(b===""||f){b+="    ";var e,j,l,g,h;if(Array.isInstanceOfType(a)){j=a.length;for(e=0;e<j;e++)this._traceDump(a[e],"["+e+"]",f,b,d)}else for(g in a){h=a[g];if(!Function.isInstanceOfType(h))this._traceDump(h,g,f,b,d)}}}Array.remove(d,a)}}};Sys._Debug.registerClass("Sys._Debug");Sys.Debug=new Sys._Debug;Sys.Debug.isDebug=false;function Sys$Enum$parse(c,e){var a,b,i;if(e){a=this.__lowerCaseValues;if(!a){this.__lowerCaseValues=a={};var g=this.prototype;for(var f in g)a[f.toLowerCase()]=g[f]}}else a=this.prototype;if(!this.__flags){i=e?c.toLowerCase():c;b=a[i.trim()];if(typeof b!=="number")throw Error.argument("value",String.format(Sys.Res.enumInvalidValue,c,this.__typeName));return b}else{var h=(e?c.toLowerCase():c).split(","),j=0;for(var d=h.length-1;d>=0;d--){var k=h[d].trim();b=a[k];if(typeof b!=="number")throw Error.argument("value",String.format(Sys.Res.enumInvalidValue,c.split(",")[d].trim(),this.__typeName));j|=b}return j}}function Sys$Enum$toString(c){if(typeof c==="undefined"||c===null)return this.__string;var d=this.prototype,a;if(!this.__flags||c===0){for(a in d)if(d[a]===c)return a}else{var b=this.__sortedValues;if(!b){b=[];for(a in d)b[b.length]={key:a,value:d[a]};b.sort(function(a,b){return a.value-b.value});this.__sortedValues=b}var e=[],g=c;for(a=b.length-1;a>=0;a--){var h=b[a],f=h.value;if(f===0)continue;if((f&c)===f){e[e.length]=h.key;g-=f;if(g===0)break}}if(e.length&&g===0)return e.reverse().join(", ")}return ""}Type.prototype.registerEnum=function(b,c){Sys.__upperCaseTypes[b.toUpperCase()]=this;for(var a in this.prototype)this[a]=this.prototype[a];this.__typeName=b;this.parse=Sys$Enum$parse;this.__string=this.toString();this.toString=Sys$Enum$toString;this.__flags=c;this.__enum=true};Type.isEnum=function(a){if(typeof a==="undefined"||a===null)return false;return !!a.__enum};Type.isFlags=function(a){if(typeof a==="undefined"||a===null)return false;return !!a.__flags};Sys.EventHandlerList=function(){this._list={}};Sys.EventHandlerList.prototype={addHandler:function(b,a){Array.add(this._getEvent(b,true),a)},removeHandler:function(c,b){var a=this._getEvent(c);if(!a)return;Array.remove(a,b)},getHandler:function(b){var a=this._getEvent(b);if(!a||a.length===0)return null;a=Array.clone(a);return function(c,d){for(var b=0,e=a.length;b<e;b++)a[b](c,d)}},_getEvent:function(a,b){if(!this._list[a]){if(!b)return null;this._list[a]=[]}return this._list[a]}};Sys.EventHandlerList.registerClass("Sys.EventHandlerList");Sys.EventArgs=function(){};Sys.EventArgs.registerClass("Sys.EventArgs");Sys.EventArgs.Empty=new Sys.EventArgs;Sys.CancelEventArgs=function(){Sys.CancelEventArgs.initializeBase(this);this._cancel=false};Sys.CancelEventArgs.prototype={get_cancel:function(){return this._cancel},set_cancel:function(a){this._cancel=a}};Sys.CancelEventArgs.registerClass("Sys.CancelEventArgs",Sys.EventArgs);Sys.INotifyPropertyChange=function(){};Sys.INotifyPropertyChange.prototype={};Sys.INotifyPropertyChange.registerInterface("Sys.INotifyPropertyChange");Sys.PropertyChangedEventArgs=function(a){Sys.PropertyChangedEventArgs.initializeBase(this);this._propertyName=a};Sys.PropertyChangedEventArgs.prototype={get_propertyName:function(){return this._propertyName}};Sys.PropertyChangedEventArgs.registerClass("Sys.PropertyChangedEventArgs",Sys.EventArgs);Sys.INotifyDisposing=function(){};Sys.INotifyDisposing.prototype={};Sys.INotifyDisposing.registerInterface("Sys.INotifyDisposing");Sys.Component=function(){if(Sys.Application)Sys.Application.registerDisposableObject(this)};Sys.Component.prototype={_id:null,_initialized:false,_updating:false,get_events:function(){if(!this._events)this._events=new Sys.EventHandlerList;return this._events},get_id:function(){return this._id},set_id:function(a){this._id=a},get_isInitialized:function(){return this._initialized},get_isUpdating:function(){return this._updating},add_disposing:function(a){this.get_events().addHandler("disposing",a)},remove_disposing:function(a){this.get_events().removeHandler("disposing",a)},add_propertyChanged:function(a){this.get_events().addHandler("propertyChanged",a)},remove_propertyChanged:function(a){this.get_events().removeHandler("propertyChanged",a)},beginUpdate:function(){this._updating=true},dispose:function(){if(this._events){var a=this._events.getHandler("disposing");if(a)a(this,Sys.EventArgs.Empty)}delete this._events;Sys.Application.unregisterDisposableObject(this);Sys.Application.removeComponent(this)},endUpdate:function(){this._updating=false;if(!this._initialized)this.initialize();this.updated()},initialize:function(){this._initialized=true},raisePropertyChanged:function(b){if(!this._events)return;var a=this._events.getHandler("propertyChanged");if(a)a(this,new Sys.PropertyChangedEventArgs(b))},updated:function(){}};Sys.Component.registerClass("Sys.Component",null,Sys.IDisposable,Sys.INotifyPropertyChange,Sys.INotifyDisposing);function Sys$Component$_setProperties(a,i){var d,j=Object.getType(a),e=j===Object||j===Sys.UI.DomElement,h=Sys.Component.isInstanceOfType(a)&&!a.get_isUpdating();if(h)a.beginUpdate();for(var c in i){var b=i[c],f=e?null:a["get_"+c];if(e||typeof f!=="function"){var k=a[c];if(!b||typeof b!=="object"||e&&!k)a[c]=b;else Sys$Component$_setProperties(k,b)}else{var l=a["set_"+c];if(typeof l==="function")l.apply(a,[b]);else if(b instanceof Array){d=f.apply(a);for(var g=0,m=d.length,n=b.length;g<n;g++,m++)d[m]=b[g]}else if(typeof b==="object"&&Object.getType(b)===Object){d=f.apply(a);Sys$Component$_setProperties(d,b)}}}if(h)a.endUpdate()}function Sys$Component$_setReferences(c,b){for(var a in b){var e=c["set_"+a],d=$find(b[a]);e.apply(c,[d])}}var $create=Sys.Component.create=function(h,f,d,c,g){var a=g?new h(g):new h,b=Sys.Application,i=b.get_isCreatingComponents();a.beginUpdate();if(f)Sys$Component$_setProperties(a,f);if(d)for(var e in d)a["add_"+e](d[e]);if(a.get_id())b.addComponent(a);if(i){b._createdComponents[b._createdComponents.length]=a;if(c)b._addComponentToSecondPass(a,c);else a.endUpdate()}else{if(c)Sys$Component$_setReferences(a,c);a.endUpdate()}return a};Sys.UI.MouseButton=function(){throw Error.notImplemented()};Sys.UI.MouseButton.prototype={leftButton:0,middleButton:1,rightButton:2};Sys.UI.MouseButton.registerEnum("Sys.UI.MouseButton");Sys.UI.Key=function(){throw Error.notImplemented()};Sys.UI.Key.prototype={backspace:8,tab:9,enter:13,esc:27,space:32,pageUp:33,pageDown:34,end:35,home:36,left:37,up:38,right:39,down:40,del:127};Sys.UI.Key.registerEnum("Sys.UI.Key");Sys.UI.Point=function(a,b){this.x=Math.round(a);this.y=Math.round(b)};Sys.UI.Point.registerClass("Sys.UI.Point");Sys.UI.Bounds=function(c,d,b,a){this.x=c;this.y=d;this.height=a;this.width=b};Sys.UI.Bounds.registerClass("Sys.UI.Bounds");Sys.UI.DomEvent=function(e){var a=e,b=this.type=a.type.toLowerCase();this.rawEvent=a;this.altKey=a.altKey;if(typeof a.button!=="undefined")this.button=typeof a.which!=="undefined"?a.button:a.button===4?Sys.UI.MouseButton.middleButton:a.button===2?Sys.UI.MouseButton.rightButton:Sys.UI.MouseButton.leftButton;if(b==="keypress")this.charCode=a.charCode||a.keyCode;else if(a.keyCode&&a.keyCode===46)this.keyCode=127;else this.keyCode=a.keyCode;this.clientX=a.clientX;this.clientY=a.clientY;this.ctrlKey=a.ctrlKey;this.target=a.target?a.target:a.srcElement;if(!b.startsWith("key"))if(typeof a.offsetX!=="undefined"&&typeof a.offsetY!=="undefined"){this.offsetX=a.offsetX;this.offsetY=a.offsetY}else if(this.target&&this.target.nodeType!==3&&typeof a.clientX==="number"){var c=Sys.UI.DomElement.getLocation(this.target),d=Sys.UI.DomElement._getWindow(this.target);this.offsetX=(d.pageXOffset||0)+a.clientX-c.x;this.offsetY=(d.pageYOffset||0)+a.clientY-c.y}this.screenX=a.screenX;this.screenY=a.screenY;this.shiftKey=a.shiftKey};Sys.UI.DomEvent.prototype={preventDefault:function(){if(this.rawEvent.preventDefault)this.rawEvent.preventDefault();else if(window.event)this.rawEvent.returnValue=false},stopPropagation:function(){if(this.rawEvent.stopPropagation)this.rawEvent.stopPropagation();else if(window.event)this.rawEvent.cancelBubble=true}};Sys.UI.DomEvent.registerClass("Sys.UI.DomEvent");var $addHandler=Sys.UI.DomEvent.addHandler=function(a,d,e){if(!a._events)a._events={};var c=a._events[d];if(!c)a._events[d]=c=[];var b;if(a.addEventListener){b=function(b){return e.call(a,new Sys.UI.DomEvent(b))};a.addEventListener(d,b,false)}else if(a.attachEvent){b=function(){var b={};try{b=Sys.UI.DomElement._getWindow(a).event}catch(c){}return e.call(a,new Sys.UI.DomEvent(b))};a.attachEvent("on"+d,b)}c[c.length]={handler:e,browserHandler:b}},$addHandlers=Sys.UI.DomEvent.addHandlers=function(e,d,c){for(var b in d){var a=d[b];if(c)a=Function.createDelegate(c,a);$addHandler(e,b,a)}},$clearHandlers=Sys.UI.DomEvent.clearHandlers=function(a){if(a._events){var e=a._events;for(var b in e){var d=e[b];for(var c=d.length-1;c>=0;c--)$removeHandler(a,b,d[c].handler)}a._events=null}},$removeHandler=Sys.UI.DomEvent.removeHandler=function(a,e,f){var d=null,c=a._events[e];for(var b=0,g=c.length;b<g;b++)if(c[b].handler===f){d=c[b].browserHandler;break}if(a.removeEventListener)a.removeEventListener(e,d,false);else if(a.detachEvent)a.detachEvent("on"+e,d);c.splice(b,1)};Sys.UI.DomElement=function(){};Sys.UI.DomElement.registerClass("Sys.UI.DomElement");Sys.UI.DomElement.addCssClass=function(a,b){if(!Sys.UI.DomElement.containsCssClass(a,b))if(a.className==="")a.className=b;else a.className+=" "+b};Sys.UI.DomElement.containsCssClass=function(b,a){return Array.contains(b.className.split(" "),a)};Sys.UI.DomElement.getBounds=function(a){var b=Sys.UI.DomElement.getLocation(a);return new Sys.UI.Bounds(b.x,b.y,a.offsetWidth||0,a.offsetHeight||0)};var $get=Sys.UI.DomElement.getElementById=function(f,e){if(!e)return document.getElementById(f);if(e.getElementById)return e.getElementById(f);var c=[],d=e.childNodes;for(var b=0;b<d.length;b++){var a=d[b];if(a.nodeType==1)c[c.length]=a}while(c.length){a=c.shift();if(a.id==f)return a;d=a.childNodes;for(b=0;b<d.length;b++){a=d[b];if(a.nodeType==1)c[c.length]=a}}return null};switch(Sys.Browser.agent){case Sys.Browser.InternetExplorer:Sys.UI.DomElement.getLocation=function(a){if(a.self||a.nodeType===9)return new Sys.UI.Point(0,0);var b=a.getBoundingClientRect();if(!b)return new Sys.UI.Point(0,0);var d=a.ownerDocument.documentElement,e=b.left-2+d.scrollLeft,f=b.top-2+d.scrollTop;try{var c=a.ownerDocument.parentWindow.frameElement||null;if(c){var g=c.frameBorder==="0"||c.frameBorder==="no"?2:0;e+=g;f+=g}}catch(h){}return new Sys.UI.Point(e,f)};break;case Sys.Browser.Safari:Sys.UI.DomElement.getLocation=function(c){if(c.window&&c.window===c||c.nodeType===9)return new Sys.UI.Point(0,0);var f=0,g=0,j=null,e=null,b;for(var a=c;a;j=a,(e=b,a=a.offsetParent)){b=Sys.UI.DomElement._getCurrentStyle(a);var d=a.tagName?a.tagName.toUpperCase():null;if((a.offsetLeft||a.offsetTop)&&(d!=="BODY"||(!e||e.position!=="absolute"))){f+=a.offsetLeft;g+=a.offsetTop}}b=Sys.UI.DomElement._getCurrentStyle(c);var h=b?b.position:null;if(!h||h!=="absolute")for(var a=c.parentNode;a;a=a.parentNode){d=a.tagName?a.tagName.toUpperCase():null;if(d!=="BODY"&&d!=="HTML"&&(a.scrollLeft||a.scrollTop)){f-=a.scrollLeft||0;g-=a.scrollTop||0}b=Sys.UI.DomElement._getCurrentStyle(a);var i=b?b.position:null;if(i&&i==="absolute")break}return new Sys.UI.Point(f,g)};break;case Sys.Browser.Opera:Sys.UI.DomElement.getLocation=function(b){if(b.window&&b.window===b||b.nodeType===9)return new Sys.UI.Point(0,0);var d=0,e=0,i=null;for(var a=b;a;i=a,a=a.offsetParent){var f=a.tagName;d+=a.offsetLeft||0;e+=a.offsetTop||0}var g=b.style.position,c=g&&g!=="static";for(var a=b.parentNode;a;a=a.parentNode){f=a.tagName?a.tagName.toUpperCase():null;if(f!=="BODY"&&f!=="HTML"&&(a.scrollLeft||a.scrollTop)&&(c&&(a.style.overflow==="scroll"||a.style.overflow==="auto"))){d-=a.scrollLeft||0;e-=a.scrollTop||0}var h=a&&a.style?a.style.position:null;c=c||h&&h!=="static"}return new Sys.UI.Point(d,e)};break;default:Sys.UI.DomElement.getLocation=function(d){if(d.window&&d.window===d||d.nodeType===9)return new Sys.UI.Point(0,0);var e=0,f=0,i=null,g=null,b=null;for(var a=d;a;i=a,(g=b,a=a.offsetParent)){var c=a.tagName?a.tagName.toUpperCase():null;b=Sys.UI.DomElement._getCurrentStyle(a);if((a.offsetLeft||a.offsetTop)&&!(c==="BODY"&&(!g||g.position!=="absolute"))){e+=a.offsetLeft;f+=a.offsetTop}if(i!==null&&b){if(c!=="TABLE"&&c!=="TD"&&c!=="HTML"){e+=parseInt(b.borderLeftWidth)||0;f+=parseInt(b.borderTopWidth)||0}if(c==="TABLE"&&(b.position==="relative"||b.position==="absolute")){e+=parseInt(b.marginLeft)||0;f+=parseInt(b.marginTop)||0}}}b=Sys.UI.DomElement._getCurrentStyle(d);var h=b?b.position:null;if(!h||h!=="absolute")for(var a=d.parentNode;a;a=a.parentNode){c=a.tagName?a.tagName.toUpperCase():null;if(c!=="BODY"&&c!=="HTML"&&(a.scrollLeft||a.scrollTop)){e-=a.scrollLeft||0;f-=a.scrollTop||0;b=Sys.UI.DomElement._getCurrentStyle(a);if(b){e+=parseInt(b.borderLeftWidth)||0;f+=parseInt(b.borderTopWidth)||0}}}return new Sys.UI.Point(e,f)}}Sys.UI.DomElement.removeCssClass=function(d,c){var a=" "+d.className+" ",b=a.indexOf(" "+c+" ");if(b>=0)d.className=(a.substr(0,b)+" "+a.substring(b+c.length+1,a.length)).trim()};Sys.UI.DomElement.setLocation=function(b,c,d){var a=b.style;a.position="absolute";a.left=c+"px";a.top=d+"px"};Sys.UI.DomElement.toggleCssClass=function(b,a){if(Sys.UI.DomElement.containsCssClass(b,a))Sys.UI.DomElement.removeCssClass(b,a);else Sys.UI.DomElement.addCssClass(b,a)};Sys.UI.DomElement.getVisibilityMode=function(a){return a._visibilityMode===Sys.UI.VisibilityMode.hide?Sys.UI.VisibilityMode.hide:Sys.UI.VisibilityMode.collapse};Sys.UI.DomElement.setVisibilityMode=function(a,b){Sys.UI.DomElement._ensureOldDisplayMode(a);if(a._visibilityMode!==b){a._visibilityMode=b;if(Sys.UI.DomElement.getVisible(a)===false)if(a._visibilityMode===Sys.UI.VisibilityMode.hide)a.style.display=a._oldDisplayMode;else a.style.display="none";a._visibilityMode=b}};Sys.UI.DomElement.getVisible=function(b){var a=b.currentStyle||Sys.UI.DomElement._getCurrentStyle(b);if(!a)return true;return a.visibility!=="hidden"&&a.display!=="none"};Sys.UI.DomElement.setVisible=function(a,b){if(b!==Sys.UI.DomElement.getVisible(a)){Sys.UI.DomElement._ensureOldDisplayMode(a);a.style.visibility=b?"visible":"hidden";if(b||a._visibilityMode===Sys.UI.VisibilityMode.hide)a.style.display=a._oldDisplayMode;else a.style.display="none"}};Sys.UI.DomElement._ensureOldDisplayMode=function(a){if(!a._oldDisplayMode){var b=a.currentStyle||Sys.UI.DomElement._getCurrentStyle(a);a._oldDisplayMode=b?b.display:null;if(!a._oldDisplayMode||a._oldDisplayMode==="none")switch(a.tagName.toUpperCase()){case "DIV":case "P":case "ADDRESS":case "BLOCKQUOTE":case "BODY":case "COL":case "COLGROUP":case "DD":case "DL":case "DT":case "FIELDSET":case "FORM":case "H1":case "H2":case "H3":case "H4":case "H5":case "H6":case "HR":case "IFRAME":case "LEGEND":case "OL":case "PRE":case "TABLE":case "TD":case "TH":case "TR":case "UL":a._oldDisplayMode="block";break;case "LI":a._oldDisplayMode="list-item";break;default:a._oldDisplayMode="inline"}}};Sys.UI.DomElement._getWindow=function(a){var b=a.ownerDocument||a.document||a;return b.defaultView||b.parentWindow};Sys.UI.DomElement._getCurrentStyle=function(a){if(a.nodeType===3)return null;var c=Sys.UI.DomElement._getWindow(a);if(a.documentElement)a=a.documentElement;var b=c&&a!==c&&c.getComputedStyle?c.getComputedStyle(a,null):a.currentStyle||a.style;if(!b&&Sys.Browser.agent===Sys.Browser.Safari&&a.style){var g=a.style.display,f=a.style.position;a.style.position="absolute";a.style.display="block";var e=c.getComputedStyle(a,null);a.style.display=g;a.style.position=f;b={};for(var d in e)b[d]=e[d];b.display="none"}return b};Sys.IContainer=function(){};Sys.IContainer.prototype={};Sys.IContainer.registerInterface("Sys.IContainer");Sys._ScriptLoader=function(){this._scriptsToLoad=null;this._sessions=[];this._scriptLoadedDelegate=Function.createDelegate(this,this._scriptLoadedHandler)};Sys._ScriptLoader.prototype={dispose:function(){this._stopSession();this._loading=false;if(this._events)delete this._events;this._sessions=null;this._currentSession=null;this._scriptLoadedDelegate=null},loadScripts:function(d,b,c,a){var e={allScriptsLoadedCallback:b,scriptLoadFailedCallback:c,scriptLoadTimeoutCallback:a,scriptsToLoad:this._scriptsToLoad,scriptTimeout:d};this._scriptsToLoad=null;this._sessions[this._sessions.length]=e;if(!this._loading)this._nextSession()},notifyScriptLoaded:function(){if(!this._loading)return;this._currentTask._notified++;if(Sys.Browser.agent===Sys.Browser.Safari)if(this._currentTask._notified===1)window.setTimeout(Function.createDelegate(this,function(){this._scriptLoadedHandler(this._currentTask.get_scriptElement(),true)}),0)},queueCustomScriptTag:function(a){if(!this._scriptsToLoad)this._scriptsToLoad=[];Array.add(this._scriptsToLoad,a)},queueScriptBlock:function(a){if(!this._scriptsToLoad)this._scriptsToLoad=[];Array.add(this._scriptsToLoad,{text:a})},queueScriptReference:function(a){if(!this._scriptsToLoad)this._scriptsToLoad=[];Array.add(this._scriptsToLoad,{src:a})},_createScriptElement:function(c){var a=document.createElement("script");a.type="text/javascript";for(var b in c)a[b]=c[b];return a},_loadScriptsInternal:function(){var b=this._currentSession;if(b.scriptsToLoad&&b.scriptsToLoad.length>0){var c=Array.dequeue(b.scriptsToLoad),a=this._createScriptElement(c);if(a.text&&Sys.Browser.agent===Sys.Browser.Safari){a.innerHTML=a.text;delete a.text}if(typeof c.src==="string"){this._currentTask=new Sys._ScriptLoaderTask(a,this._scriptLoadedDelegate);this._currentTask.execute()}else{document.getElementsByTagName("head")[0].appendChild(a);Sys._ScriptLoader._clearScript(a);this._loadScriptsInternal()}}else{this._stopSession();var d=b.allScriptsLoadedCallback;if(d)d(this);this._nextSession()}},_nextSession:function(){if(this._sessions.length===0){this._loading=false;this._currentSession=null;return}this._loading=true;var a=Array.dequeue(this._sessions);this._currentSession=a;if(a.scriptTimeout>0)this._timeoutCookie=window.setTimeout(Function.createDelegate(this,this._scriptLoadTimeoutHandler),a.scriptTimeout*1000);this._loadScriptsInternal()},_raiseError:function(a){var c=this._currentSession.scriptLoadFailedCallback,b=this._currentTask.get_scriptElement();this._stopSession();if(c){c(this,b,a);this._nextSession()}else{this._loading=false;throw Sys._ScriptLoader._errorScriptLoadFailed(b.src,a)}},_scriptLoadedHandler:function(a,b){if(b&&this._currentTask._notified)if(this._currentTask._notified>1)this._raiseError(true);else{Array.add(Sys._ScriptLoader._getLoadedScripts(),a.src);this._currentTask.dispose();this._currentTask=null;this._loadScriptsInternal()}else this._raiseError(false)},_scriptLoadTimeoutHandler:function(){var a=this._currentSession.scriptLoadTimeoutCallback;this._stopSession();if(a)a(this);this._nextSession()},_stopSession:function(){if(this._timeoutCookie){window.clearTimeout(this._timeoutCookie);this._timeoutCookie=null}if(this._currentTask){this._currentTask.dispose();this._currentTask=null}}};Sys._ScriptLoader.registerClass("Sys._ScriptLoader",null,Sys.IDisposable);Sys._ScriptLoader.getInstance=function(){var a=Sys._ScriptLoader._activeInstance;if(!a)a=Sys._ScriptLoader._activeInstance=new Sys._ScriptLoader;return a};Sys._ScriptLoader.isScriptLoaded=function(b){var a=document.createElement("script");a.src=b;return Array.contains(Sys._ScriptLoader._getLoadedScripts(),a.src)};Sys._ScriptLoader.readLoadedScripts=function(){if(!Sys._ScriptLoader._referencedScripts){var b=Sys._ScriptLoader._referencedScripts=[],c=document.getElementsByTagName("script");for(i=c.length-1;i>=0;i--){var d=c[i],a=d.src;if(a.length)if(!Array.contains(b,a))Array.add(b,a)}}};Sys._ScriptLoader._clearScript=function(a){if(!Sys.Debug.isDebug)a.parentNode.removeChild(a)};Sys._ScriptLoader._errorScriptLoadFailed=function(b,d){var a;if(d)a=Sys.Res.scriptLoadMultipleCallbacks;else a=Sys.Res.scriptLoadFailed;var e="Sys.ScriptLoadFailedException: "+String.format(a,b),c=Error.create(e,{name:"Sys.ScriptLoadFailedException","scriptUrl":b});c.popStackFrame();return c};Sys._ScriptLoader._getLoadedScripts=function(){if(!Sys._ScriptLoader._referencedScripts){Sys._ScriptLoader._referencedScripts=[];Sys._ScriptLoader.readLoadedScripts()}return Sys._ScriptLoader._referencedScripts};Sys._ScriptLoaderTask=function(b,a){this._scriptElement=b;this._completedCallback=a;this._notified=0};Sys._ScriptLoaderTask.prototype={get_scriptElement:function(){return this._scriptElement},dispose:function(){if(this._disposed)return;this._disposed=true;this._removeScriptElementHandlers();Sys._ScriptLoader._clearScript(this._scriptElement);this._scriptElement=null},execute:function(){this._addScriptElementHandlers();document.getElementsByTagName("head")[0].appendChild(this._scriptElement)},_addScriptElementHandlers:function(){this._scriptLoadDelegate=Function.createDelegate(this,this._scriptLoadHandler);if(Sys.Browser.agent!==Sys.Browser.InternetExplorer){this._scriptElement.readyState="loaded";$addHandler(this._scriptElement,"load",this._scriptLoadDelegate)}else $addHandler(this._scriptElement,"readystatechange",this._scriptLoadDelegate);if(this._scriptElement.addEventListener){this._scriptErrorDelegate=Function.createDelegate(this,this._scriptErrorHandler);this._scriptElement.addEventListener("error",this._scriptErrorDelegate,false)}},_removeScriptElementHandlers:function(){if(this._scriptLoadDelegate){var a=this.get_scriptElement();if(Sys.Browser.agent!==Sys.Browser.InternetExplorer)$removeHandler(a,"load",this._scriptLoadDelegate);else $removeHandler(a,"readystatechange",this._scriptLoadDelegate);if(this._scriptErrorDelegate){this._scriptElement.removeEventListener("error",this._scriptErrorDelegate,false);this._scriptErrorDelegate=null}this._scriptLoadDelegate=null}},_scriptErrorHandler:function(){if(this._disposed)return;this._completedCallback(this.get_scriptElement(),false)},_scriptLoadHandler:function(){if(this._disposed)return;var a=this.get_scriptElement();if(a.readyState!=="loaded"&&a.readyState!=="complete")return;var b=this;window.setTimeout(function(){b._completedCallback(a,true)},0)}};Sys._ScriptLoaderTask.registerClass("Sys._ScriptLoaderTask",null,Sys.IDisposable);Sys.ApplicationLoadEventArgs=function(b,a){Sys.ApplicationLoadEventArgs.initializeBase(this);this._components=b;this._isPartialLoad=a};Sys.ApplicationLoadEventArgs.prototype={get_components:function(){return this._components},get_isPartialLoad:function(){return this._isPartialLoad}};Sys.ApplicationLoadEventArgs.registerClass("Sys.ApplicationLoadEventArgs",Sys.EventArgs);Sys.HistoryEventArgs=function(a){Sys.HistoryEventArgs.initializeBase(this);this._state=a};Sys.HistoryEventArgs.prototype={get_state:function(){return this._state}};Sys.HistoryEventArgs.registerClass("Sys.HistoryEventArgs",Sys.EventArgs);Sys._Application=function(){Sys._Application.initializeBase(this);this._disposableObjects=[];this._components={};this._createdComponents=[];this._secondPassComponents=[];this._appLoadHandler=null;this._beginRequestHandler=null;this._clientId=null;this._currentEntry="";this._endRequestHandler=null;this._history=null;this._enableHistory=false;this._historyFrame=null;this._historyInitialized=false;this._historyInitialLength=0;this._historyLength=0;this._historyPointIsNew=false;this._ignoreTimer=false;this._initialState=null;this._state={};this._timerCookie=0;this._timerHandler=null;this._uniqueId=null;this._unloadHandlerDelegate=Function.createDelegate(this,this._unloadHandler);this._loadHandlerDelegate=Function.createDelegate(this,this._loadHandler);Sys.UI.DomEvent.addHandler(window,"unload",this._unloadHandlerDelegate);Sys.UI.DomEvent.addHandler(window,"load",this._loadHandlerDelegate)};Sys._Application.prototype={_creatingComponents:false,_disposing:false,get_isCreatingComponents:function(){return this._creatingComponents},get_stateString:function(){var a=window.location.hash;if(this._isSafari2()){var b=this._getHistory();if(b)a=b[window.history.length-this._historyInitialLength]}if(a.length>0&&a.charAt(0)==="#")a=a.substring(1);if(Sys.Browser.agent===Sys.Browser.Firefox)a=this._serializeState(this._deserializeState(a,true));return a},get_enableHistory:function(){return this._enableHistory},set_enableHistory:function(a){this._enableHistory=a},add_init:function(a){if(this._initialized)a(this,Sys.EventArgs.Empty);else this.get_events().addHandler("init",a)},remove_init:function(a){this.get_events().removeHandler("init",a)},add_load:function(a){this.get_events().addHandler("load",a)},remove_load:function(a){this.get_events().removeHandler("load",a)},add_navigate:function(a){this.get_events().addHandler("navigate",a)},remove_navigate:function(a){this.get_events().removeHandler("navigate",a)},add_unload:function(a){this.get_events().addHandler("unload",a)},remove_unload:function(a){this.get_events().removeHandler("unload",a)},addComponent:function(a){this._components[a.get_id()]=a},addHistoryPoint:function(c,f){this._ensureHistory();var b=this._state;for(var a in c){var d=c[a];if(d===null){if(typeof b[a]!=="undefined")delete b[a]}else b[a]=d}var e=this._serializeState(b);this._historyPointIsNew=true;this._setState(e,f);this._raiseNavigate()},beginCreateComponents:function(){this._creatingComponents=true},dispose:function(){if(!this._disposing){this._disposing=true;if(this._timerCookie){window.clearTimeout(this._timerCookie);delete this._timerCookie}if(this._endRequestHandler){Sys.WebForms.PageRequestManager.getInstance().remove_endRequest(this._endRequestHandler);delete this._endRequestHandler}if(this._beginRequestHandler){Sys.WebForms.PageRequestManager.getInstance().remove_beginRequest(this._beginRequestHandler);delete this._beginRequestHandler}if(window.pageUnload)window.pageUnload(this,Sys.EventArgs.Empty);var c=this.get_events().getHandler("unload");if(c)c(this,Sys.EventArgs.Empty);var b=Array.clone(this._disposableObjects);for(var a=0,e=b.length;a<e;a++)b[a].dispose();Array.clear(this._disposableObjects);Sys.UI.DomEvent.removeHandler(window,"unload",this._unloadHandlerDelegate);if(this._loadHandlerDelegate){Sys.UI.DomEvent.removeHandler(window,"load",this._loadHandlerDelegate);this._loadHandlerDelegate=null}var d=Sys._ScriptLoader.getInstance();if(d)d.dispose();Sys._Application.callBaseMethod(this,"dispose")}},endCreateComponents:function(){var b=this._secondPassComponents;for(var a=0,d=b.length;a<d;a++){var c=b[a].component;Sys$Component$_setReferences(c,b[a].references);c.endUpdate()}this._secondPassComponents=[];this._creatingComponents=false},findComponent:function(b,a){return a?Sys.IContainer.isInstanceOfType(a)?a.findComponent(b):a[b]||null:Sys.Application._components[b]||null},getComponents:function(){var a=[],b=this._components;for(var c in b)a[a.length]=b[c];return a},initialize:function(){if(!this._initialized&&!this._initializing){this._initializing=true;var a,g,d=this;function b(){if(!d._initialized)d._doInitialize()}var c=function(){Sys.UI.DomEvent.removeHandler(window,"load",c);b()};Sys.UI.DomEvent.addHandler(window,"load",c);if(document.addEventListener)try{document.addEventListener("DOMContentLoaded",a=function(){document.removeEventListener("DOMContentLoaded",a,false);b()},false)}catch(h){}else if(document.attachEvent)if(window==window.top&&document.documentElement.doScroll){var f,e=document.createElement("div");a=function(){try{e.doScroll("left")}catch(c){f=window.setTimeout(a,0);return}e=null;b()};a()}else document.attachEvent("onreadystatechange",a=function(){if(document.readyState==="complete"){document.detachEvent("onreadystatechange",a);b()}})}},notifyScriptLoaded:function(){var a=Sys._ScriptLoader.getInstance();if(a)a.notifyScriptLoaded()},registerDisposableObject:function(a){if(!this._disposing)this._disposableObjects[this._disposableObjects.length]=a},raiseLoad:function(){var b=this.get_events().getHandler("load"),a=new Sys.ApplicationLoadEventArgs(Array.clone(this._createdComponents),!this._initializing);if(b)b(this,a);if(window.pageLoad)window.pageLoad(this,a);this._createdComponents=[]},removeComponent:function(b){var a=b.get_id();if(a)delete this._components[a]},setServerId:function(a,b){this._clientId=a;this._uniqueId=b},setServerState:function(a){this._ensureHistory();this._state.__s=a;this._updateHiddenField(a)},unregisterDisposableObject:function(a){if(!this._disposing)Array.remove(this._disposableObjects,a)},_addComponentToSecondPass:function(b,a){this._secondPassComponents[this._secondPassComponents.length]={component:b,references:a}},_deserializeState:function(a,i){var e={};a=a||"";var b=a.indexOf("&&");if(b!==-1&&b+2<a.length){e.__s=a.substr(b+2);a=a.substr(0,b)}var g=a.split("&");for(var f=0,k=g.length;f<k;f++){var d=g[f],c=d.indexOf("=");if(c!==-1&&c+1<d.length){var j=d.substr(0,c),h=d.substr(c+1);e[j]=i?h:decodeURIComponent(h)}}return e},_doInitialize:function(){Sys._Application.callBaseMethod(this,"initialize");var b=this.get_events().getHandler("init");if(b){this.beginCreateComponents();b(this,Sys.EventArgs.Empty);this.endCreateComponents()}if(Sys.WebForms){this._beginRequestHandler=Function.createDelegate(this,this._onPageRequestManagerBeginRequest);Sys.WebForms.PageRequestManager.getInstance().add_beginRequest(this._beginRequestHandler);this._endRequestHandler=Function.createDelegate(this,this._onPageRequestManagerEndRequest);Sys.WebForms.PageRequestManager.getInstance().add_endRequest(this._endRequestHandler)}var a=this.get_stateString();if(a!==this._currentEntry)this._navigate(a);this.raiseLoad();this._initializing=false},_enableHistoryInScriptManager:function(){this._enableHistory=true},_ensureHistory:function(){if(!this._historyInitialized&&this._enableHistory){if(Sys.Browser.agent===Sys.Browser.InternetExplorer&&Sys.Browser.documentMode<8){this._historyFrame=document.getElementById("__historyFrame");this._ignoreIFrame=true}if(this._isSafari2()){var a=document.getElementById("__history");this._setHistory([window.location.hash]);this._historyInitialLength=window.history.length}this._timerHandler=Function.createDelegate(this,this._onIdle);this._timerCookie=window.setTimeout(this._timerHandler,100);try{this._initialState=this._deserializeState(this.get_stateString())}catch(b){}this._historyInitialized=true}},_getHistory:function(){var a=document.getElementById("__history");if(!a)return "";var b=a.value;return b?Sys.Serialization.JavaScriptSerializer.deserialize(b,true):""},_isSafari2:function(){return Sys.Browser.agent===Sys.Browser.Safari&&Sys.Browser.version<=419.3},_loadHandler:function(){if(this._loadHandlerDelegate){Sys.UI.DomEvent.removeHandler(window,"load",this._loadHandlerDelegate);this._loadHandlerDelegate=null}this.initialize()},_navigate:function(c){this._ensureHistory();var b=this._deserializeState(c);if(this._uniqueId){var d=this._state.__s||"",a=b.__s||"";if(a!==d){this._updateHiddenField(a);__doPostBack(this._uniqueId,a);this._state=b;return}}this._setState(c);this._state=b;this._raiseNavigate()},_onIdle:function(){delete this._timerCookie;var a=this.get_stateString();if(a!==this._currentEntry){if(!this._ignoreTimer){this._historyPointIsNew=false;this._navigate(a);this._historyLength=window.history.length}}else this._ignoreTimer=false;this._timerCookie=window.setTimeout(this._timerHandler,100)},_onIFrameLoad:function(a){this._ensureHistory();if(!this._ignoreIFrame){this._historyPointIsNew=false;this._navigate(a)}this._ignoreIFrame=false},_onPageRequestManagerBeginRequest:function(){this._ignoreTimer=true},_onPageRequestManagerEndRequest:function(e,d){var b=d.get_dataItems()[this._clientId],a=document.getElementById("__EVENTTARGET");if(a&&a.value===this._uniqueId)a.value="";if(typeof b!=="undefined"){this.setServerState(b);this._historyPointIsNew=true}else this._ignoreTimer=false;var c=this._serializeState(this._state);if(c!==this._currentEntry){this._ignoreTimer=true;this._setState(c);this._raiseNavigate()}},_raiseNavigate:function(){var c=this.get_events().getHandler("navigate"),b={};for(var a in this._state)if(a!=="__s")b[a]=this._state[a];var d=new Sys.HistoryEventArgs(b);if(c)c(this,d)},_serializeState:function(d){var b=[];for(var a in d){var e=d[a];if(a==="__s")var c=e;else b[b.length]=a+"="+encodeURIComponent(e)}return b.join("&")+(c?"&&"+c:"")},_setHistory:function(b){var a=document.getElementById("__history");if(a)a.value=Sys.Serialization.JavaScriptSerializer.serialize(b)},_setState:function(a,c){a=a||"";if(a!==this._currentEntry){if(window.theForm){var e=window.theForm.action,f=e.indexOf("#");window.theForm.action=(f!==-1?e.substring(0,f):e)+"#"+a}if(this._historyFrame&&this._historyPointIsNew){this._ignoreIFrame=true;this._historyPointIsNew=false;var d=this._historyFrame.contentWindow.document;d.open("javascript:'<html></html>'");d.write("<html><head><title>"+(c||document.title)+"</title><scri"+'pt type="text/javascript">parent.Sys.Application._onIFrameLoad(\''+a+"');</scri"+"pt></head><body></body></html>");d.close()}this._ignoreTimer=false;var h=this.get_stateString();this._currentEntry=a;if(a!==h){if(this._isSafari2()){var g=this._getHistory();g[window.history.length-this._historyInitialLength+1]=a;this._setHistory(g);this._historyLength=window.history.length+1;var b=document.createElement("form");b.method="get";b.action="#"+a;document.appendChild(b);b.submit();document.removeChild(b)}else window.location.hash=a;if(typeof c!=="undefined"&&c!==null)document.title=c}}},_unloadHandler:function(){this.dispose()},_updateHiddenField:function(b){if(this._clientId){var a=document.getElementById(this._clientId);if(a)a.value=b}}};Sys._Application.registerClass("Sys._Application",Sys.Component,Sys.IContainer);Sys.Application=new Sys._Application;var $find=Sys.Application.findComponent;Type.registerNamespace("Sys.Net");Sys.Net.WebRequestExecutor=function(){this._webRequest=null;this._resultObject=null};Sys.Net.WebRequestExecutor.prototype={get_webRequest:function(){return this._webRequest},_set_webRequest:function(a){this._webRequest=a},get_started:function(){throw Error.notImplemented()},get_responseAvailable:function(){throw Error.notImplemented()},get_timedOut:function(){throw Error.notImplemented()},get_aborted:function(){throw Error.notImplemented()},get_responseData:function(){throw Error.notImplemented()},get_statusCode:function(){throw Error.notImplemented()},get_statusText:function(){throw Error.notImplemented()},get_xml:function(){throw Error.notImplemented()},get_object:function(){if(!this._resultObject)this._resultObject=Sys.Serialization.JavaScriptSerializer.deserialize(this.get_responseData());return this._resultObject},executeRequest:function(){throw Error.notImplemented()},abort:function(){throw Error.notImplemented()},getResponseHeader:function(){throw Error.notImplemented()},getAllResponseHeaders:function(){throw Error.notImplemented()}};Sys.Net.WebRequestExecutor.registerClass("Sys.Net.WebRequestExecutor");Sys.Net.XMLDOM=function(d){if(!window.DOMParser){var c=["Msxml2.DOMDocument.3.0","Msxml2.DOMDocument"];for(var b=0,f=c.length;b<f;b++)try{var a=new ActiveXObject(c[b]);a.async=false;a.loadXML(d);a.setProperty("SelectionLanguage","XPath");return a}catch(g){}}else try{var e=new window.DOMParser;return e.parseFromString(d,"text/xml")}catch(g){}return null};Sys.Net.XMLHttpExecutor=function(){Sys.Net.XMLHttpExecutor.initializeBase(this);var a=this;this._xmlHttpRequest=null;this._webRequest=null;this._responseAvailable=false;this._timedOut=false;this._timer=null;this._aborted=false;this._started=false;this._onReadyStateChange=function(){if(a._xmlHttpRequest.readyState===4){try{if(typeof a._xmlHttpRequest.status==="undefined")return}catch(b){return}a._clearTimer();a._responseAvailable=true;try{a._webRequest.completed(Sys.EventArgs.Empty)}finally{if(a._xmlHttpRequest!=null){a._xmlHttpRequest.onreadystatechange=Function.emptyMethod;a._xmlHttpRequest=null}}}};this._clearTimer=function(){if(a._timer!=null){window.clearTimeout(a._timer);a._timer=null}};this._onTimeout=function(){if(!a._responseAvailable){a._clearTimer();a._timedOut=true;a._xmlHttpRequest.onreadystatechange=Function.emptyMethod;a._xmlHttpRequest.abort();a._webRequest.completed(Sys.EventArgs.Empty);a._xmlHttpRequest=null}}};Sys.Net.XMLHttpExecutor.prototype={get_timedOut:function(){return this._timedOut},get_started:function(){return this._started},get_responseAvailable:function(){return this._responseAvailable},get_aborted:function(){return this._aborted},executeRequest:function(){this._webRequest=this.get_webRequest();var c=this._webRequest.get_body(),a=this._webRequest.get_headers();this._xmlHttpRequest=new XMLHttpRequest;this._xmlHttpRequest.onreadystatechange=this._onReadyStateChange;var e=this._webRequest.get_httpVerb();this._xmlHttpRequest.open(e,this._webRequest.getResolvedUrl(),true);if(a)for(var b in a){var f=a[b];if(typeof f!=="function")this._xmlHttpRequest.setRequestHeader(b,f)}if(e.toLowerCase()==="post"){if(a===null||!a["Content-Type"])this._xmlHttpRequest.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=utf-8");if(!c)c=""}var d=this._webRequest.get_timeout();if(d>0)this._timer=window.setTimeout(Function.createDelegate(this,this._onTimeout),d);this._xmlHttpRequest.send(c);this._started=true},getResponseHeader:function(b){var a;try{a=this._xmlHttpRequest.getResponseHeader(b)}catch(c){}if(!a)a="";return a},getAllResponseHeaders:function(){return this._xmlHttpRequest.getAllResponseHeaders()},get_responseData:function(){return this._xmlHttpRequest.responseText},get_statusCode:function(){var a=0;try{a=this._xmlHttpRequest.status}catch(b){}return a},get_statusText:function(){return this._xmlHttpRequest.statusText},get_xml:function(){var a=this._xmlHttpRequest.responseXML;if(!a||!a.documentElement){a=Sys.Net.XMLDOM(this._xmlHttpRequest.responseText);if(!a||!a.documentElement)return null}else if(navigator.userAgent.indexOf("MSIE")!==-1&&typeof a.setProperty!="undefined")a.setProperty("SelectionLanguage","XPath");if(a.documentElement.namespaceURI==="http://www.mozilla.org/newlayout/xml/parsererror.xml"&&a.documentElement.tagName==="parsererror")return null;if(a.documentElement.firstChild&&a.documentElement.firstChild.tagName==="parsererror")return null;return a},abort:function(){if(this._aborted||this._responseAvailable||this._timedOut)return;this._aborted=true;this._clearTimer();if(this._xmlHttpRequest&&!this._responseAvailable){this._xmlHttpRequest.onreadystatechange=Function.emptyMethod;this._xmlHttpRequest.abort();this._xmlHttpRequest=null;this._webRequest.completed(Sys.EventArgs.Empty)}}};Sys.Net.XMLHttpExecutor.registerClass("Sys.Net.XMLHttpExecutor",Sys.Net.WebRequestExecutor);Sys.Net._WebRequestManager=function(){this._defaultTimeout=0;this._defaultExecutorType="Sys.Net.XMLHttpExecutor"};Sys.Net._WebRequestManager.prototype={add_invokingRequest:function(a){this._get_eventHandlerList().addHandler("invokingRequest",a)},remove_invokingRequest:function(a){this._get_eventHandlerList().removeHandler("invokingRequest",a)},add_completedRequest:function(a){this._get_eventHandlerList().addHandler("completedRequest",a)},remove_completedRequest:function(a){this._get_eventHandlerList().removeHandler("completedRequest",a)},_get_eventHandlerList:function(){if(!this._events)this._events=new Sys.EventHandlerList;return this._events},get_defaultTimeout:function(){return this._defaultTimeout},set_defaultTimeout:function(a){this._defaultTimeout=a},get_defaultExecutorType:function(){return this._defaultExecutorType},set_defaultExecutorType:function(a){this._defaultExecutorType=a},executeRequest:function(webRequest){var executor=webRequest.get_executor();if(!executor){var failed=false;try{var executorType=eval(this._defaultExecutorType);executor=new executorType}catch(a){failed=true}webRequest.set_executor(executor)}if(executor.get_aborted())return;var evArgs=new Sys.Net.NetworkRequestEventArgs(webRequest),handler=this._get_eventHandlerList().getHandler("invokingRequest");if(handler)handler(this,evArgs);if(!evArgs.get_cancel())executor.executeRequest()}};Sys.Net._WebRequestManager.registerClass("Sys.Net._WebRequestManager");Sys.Net.WebRequestManager=new Sys.Net._WebRequestManager;Sys.Net.NetworkRequestEventArgs=function(a){Sys.Net.NetworkRequestEventArgs.initializeBase(this);this._webRequest=a};Sys.Net.NetworkRequestEventArgs.prototype={get_webRequest:function(){return this._webRequest}};Sys.Net.NetworkRequestEventArgs.registerClass("Sys.Net.NetworkRequestEventArgs",Sys.CancelEventArgs);Sys.Net.WebRequest=function(){this._url="";this._headers={};this._body=null;this._userContext=null;this._httpVerb=null;this._executor=null;this._invokeCalled=false;this._timeout=0};Sys.Net.WebRequest.prototype={add_completed:function(a){this._get_eventHandlerList().addHandler("completed",a)},remove_completed:function(a){this._get_eventHandlerList().removeHandler("completed",a)},completed:function(b){var a=Sys.Net.WebRequestManager._get_eventHandlerList().getHandler("completedRequest");if(a)a(this._executor,b);a=this._get_eventHandlerList().getHandler("completed");if(a)a(this._executor,b)},_get_eventHandlerList:function(){if(!this._events)this._events=new Sys.EventHandlerList;return this._events},get_url:function(){return this._url},set_url:function(a){this._url=a},get_headers:function(){return this._headers},get_httpVerb:function(){if(this._httpVerb===null){if(this._body===null)return "GET";return "POST"}return this._httpVerb},set_httpVerb:function(a){this._httpVerb=a},get_body:function(){return this._body},set_body:function(a){this._body=a},get_userContext:function(){return this._userContext},set_userContext:function(a){this._userContext=a},get_executor:function(){return this._executor},set_executor:function(a){this._executor=a;this._executor._set_webRequest(this)},get_timeout:function(){if(this._timeout===0)return Sys.Net.WebRequestManager.get_defaultTimeout();return this._timeout},set_timeout:function(a){this._timeout=a},getResolvedUrl:function(){return Sys.Net.WebRequest._resolveUrl(this._url)},invoke:function(){Sys.Net.WebRequestManager.executeRequest(this);this._invokeCalled=true}};Sys.Net.WebRequest._resolveUrl=function(b,a){if(b&&b.indexOf("://")!==-1)return b;if(!a||a.length===0){var d=document.getElementsByTagName("base")[0];if(d&&d.href&&d.href.length>0)a=d.href;else a=document.URL}var c=a.indexOf("?");if(c!==-1)a=a.substr(0,c);c=a.indexOf("#");if(c!==-1)a=a.substr(0,c);a=a.substr(0,a.lastIndexOf("/")+1);if(!b||b.length===0)return a;if(b.charAt(0)==="/"){var e=a.indexOf("://"),g=a.indexOf("/",e+3);return a.substr(0,g)+b}else{var f=a.lastIndexOf("/");return a.substr(0,f+1)+b}};Sys.Net.WebRequest._createQueryString=function(d,b){if(!b)b=encodeURIComponent;var a=new Sys.StringBuilder,f=0;for(var c in d){var e=d[c];if(typeof e==="function")continue;var g=Sys.Serialization.JavaScriptSerializer.serialize(e);if(f!==0)a.append("&");a.append(c);a.append("=");a.append(b(g));f++}return a.toString()};Sys.Net.WebRequest._createUrl=function(a,b){if(!b)return a;var d=Sys.Net.WebRequest._createQueryString(b);if(d.length>0){var c="?";if(a&&a.indexOf("?")!==-1)c="&";return a+c+d}else return a};Sys.Net.WebRequest.registerClass("Sys.Net.WebRequest");Sys.Net.WebServiceProxy=function(){};Sys.Net.WebServiceProxy.prototype={get_timeout:function(){return this._timeout},set_timeout:function(a){if(a<0)throw Error.argumentOutOfRange("value",a,Sys.Res.invalidTimeout);this._timeout=a},get_defaultUserContext:function(){return this._userContext},set_defaultUserContext:function(a){this._userContext=a},get_defaultSucceededCallback:function(){return this._succeeded},set_defaultSucceededCallback:function(a){this._succeeded=a},get_defaultFailedCallback:function(){return this._failed},set_defaultFailedCallback:function(a){this._failed=a},get_path:function(){return this._path},set_path:function(a){this._path=a},_invoke:function(d,e,g,f,c,b,a){if(c===null||typeof c==="undefined")c=this.get_defaultSucceededCallback();if(b===null||typeof b==="undefined")b=this.get_defaultFailedCallback();if(a===null||typeof a==="undefined")a=this.get_defaultUserContext();return Sys.Net.WebServiceProxy.invoke(d,e,g,f,c,b,a,this.get_timeout())}};Sys.Net.WebServiceProxy.registerClass("Sys.Net.WebServiceProxy");Sys.Net.WebServiceProxy.invoke=function(k,a,j,d,i,c,f,h){var b=new Sys.Net.WebRequest;b.get_headers()["Content-Type"]="application/json; charset=utf-8";if(!d)d={};var g=d;if(!j||!g)g={};b.set_url(Sys.Net.WebRequest._createUrl(k+"/"+encodeURIComponent(a),g));var e=null;if(!j){e=Sys.Serialization.JavaScriptSerializer.serialize(d);if(e==="{}")e=""}b.set_body(e);b.add_completed(l);if(h&&h>0)b.set_timeout(h);b.invoke();function l(d){if(d.get_responseAvailable()){var g=d.get_statusCode(),b=null;try{var e=d.getResponseHeader("Content-Type");if(e.startsWith("application/json"))b=d.get_object();else if(e.startsWith("text/xml"))b=d.get_xml();else b=d.get_responseData()}catch(m){}var k=d.getResponseHeader("jsonerror"),h=k==="true";if(h){if(b)b=new Sys.Net.WebServiceError(false,b.Message,b.StackTrace,b.ExceptionType)}else if(e.startsWith("application/json"))b=b.d;if(g<200||g>=300||h){if(c){if(!b||!h)b=new Sys.Net.WebServiceError(false,String.format(Sys.Res.webServiceFailedNoMsg,a),"","");b._statusCode=g;c(b,f,a)}}else if(i)i(b,f,a)}else{var j;if(d.get_timedOut())j=String.format(Sys.Res.webServiceTimedOut,a);else j=String.format(Sys.Res.webServiceFailedNoMsg,a);if(c)c(new Sys.Net.WebServiceError(d.get_timedOut(),j,"",""),f,a)}}return b};Sys.Net.WebServiceProxy._generateTypedConstructor=function(a){return function(b){if(b)for(var c in b)this[c]=b[c];this.__type=a}};Sys.Net.WebServiceError=function(c,d,b,a){this._timedOut=c;this._message=d;this._stackTrace=b;this._exceptionType=a;this._statusCode=-1};Sys.Net.WebServiceError.prototype={get_timedOut:function(){return this._timedOut},get_statusCode:function(){return this._statusCode},get_message:function(){return this._message},get_stackTrace:function(){return this._stackTrace},get_exceptionType:function(){return this._exceptionType}};Sys.Net.WebServiceError.registerClass("Sys.Net.WebServiceError");Type.registerNamespace("Sys.Services");Sys.Services._ProfileService=function(){Sys.Services._ProfileService.initializeBase(this);this.properties={}};Sys.Services._ProfileService.DefaultWebServicePath="";Sys.Services._ProfileService.prototype={_defaultLoadCompletedCallback:null,_defaultSaveCompletedCallback:null,_path:"",_timeout:0,get_defaultLoadCompletedCallback:function(){return this._defaultLoadCompletedCallback},set_defaultLoadCompletedCallback:function(a){this._defaultLoadCompletedCallback=a},get_defaultSaveCompletedCallback:function(){return this._defaultSaveCompletedCallback},set_defaultSaveCompletedCallback:function(a){this._defaultSaveCompletedCallback=a},get_path:function(){return this._path||""},load:function(c,d,e,f){var b,a;if(!c){a="GetAllPropertiesForCurrentUser";b={authenticatedUserOnly:false}}else{a="GetPropertiesForCurrentUser";b={properties:this._clonePropertyNames(c),authenticatedUserOnly:false}}this._invoke(this._get_path(),a,false,b,Function.createDelegate(this,this._onLoadComplete),Function.createDelegate(this,this._onLoadFailed),[d,e,f])},save:function(d,b,c,e){var a=this._flattenProperties(d,this.properties);this._invoke(this._get_path(),"SetPropertiesForCurrentUser",false,{values:a.value,authenticatedUserOnly:false},Function.createDelegate(this,this._onSaveComplete),Function.createDelegate(this,this._onSaveFailed),[b,c,e,a.count])},_clonePropertyNames:function(e){var c=[],d={};for(var b=0;b<e.length;b++){var a=e[b];if(!d[a]){Array.add(c,a);d[a]=true}}return c},_flattenProperties:function(a,i,j){var b={},e,d,g=0;if(a&&a.length===0)return {value:b,count:0};for(var c in i){e=i[c];d=j?j+"."+c:c;if(Sys.Services.ProfileGroup.isInstanceOfType(e)){var k=this._flattenProperties(a,e,d),h=k.value;g+=k.count;for(var f in h){var l=h[f];b[f]=l}}else if(!a||Array.indexOf(a,d)!==-1){b[d]=e;g++}}return {value:b,count:g}},_get_path:function(){var a=this.get_path();if(!a.length)a=Sys.Services._ProfileService.DefaultWebServicePath;if(!a||!a.length)throw Error.invalidOperation(Sys.Res.servicePathNotSet);return a},_onLoadComplete:function(a,e,g){if(typeof a!=="object")throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType,g,"Object"));var c=this._unflattenProperties(a);for(var b in c)this.properties[b]=c[b];var d=e[0]||this.get_defaultLoadCompletedCallback()||this.get_defaultSucceededCallback();if(d){var f=e[2]||this.get_defaultUserContext();d(a.length,f,"Sys.Services.ProfileService.load")}},_onLoadFailed:function(d,b){var a=b[1]||this.get_defaultFailedCallback();if(a){var c=b[2]||this.get_defaultUserContext();a(d,c,"Sys.Services.ProfileService.load")}},_onSaveComplete:function(a,b,f){var c=b[3];if(a!==null)if(a instanceof Array)c-=a.length;else if(typeof a==="number")c=a;else throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType,f,"Array"));var d=b[0]||this.get_defaultSaveCompletedCallback()||this.get_defaultSucceededCallback();if(d){var e=b[2]||this.get_defaultUserContext();d(c,e,"Sys.Services.ProfileService.save")}},_onSaveFailed:function(d,b){var a=b[1]||this.get_defaultFailedCallback();if(a){var c=b[2]||this.get_defaultUserContext();a(d,c,"Sys.Services.ProfileService.save")}},_unflattenProperties:function(e){var c={},d,f,h=0;for(var a in e){h++;f=e[a];d=a.indexOf(".");if(d!==-1){var g=a.substr(0,d);a=a.substr(d+1);var b=c[g];if(!b||!Sys.Services.ProfileGroup.isInstanceOfType(b)){b=new Sys.Services.ProfileGroup;c[g]=b}b[a]=f}else c[a]=f}e.length=h;return c}};Sys.Services._ProfileService.registerClass("Sys.Services._ProfileService",Sys.Net.WebServiceProxy);Sys.Services.ProfileService=new Sys.Services._ProfileService;Sys.Services.ProfileGroup=function(a){if(a)for(var b in a)this[b]=a[b]};Sys.Services.ProfileGroup.registerClass("Sys.Services.ProfileGroup");Sys.Services._AuthenticationService=function(){Sys.Services._AuthenticationService.initializeBase(this)};Sys.Services._AuthenticationService.DefaultWebServicePath="";Sys.Services._AuthenticationService.prototype={_defaultLoginCompletedCallback:null,_defaultLogoutCompletedCallback:null,_path:"",_timeout:0,_authenticated:false,get_defaultLoginCompletedCallback:function(){return this._defaultLoginCompletedCallback},set_defaultLoginCompletedCallback:function(a){this._defaultLoginCompletedCallback=a},get_defaultLogoutCompletedCallback:function(){return this._defaultLogoutCompletedCallback},set_defaultLogoutCompletedCallback:function(a){this._defaultLogoutCompletedCallback=a},get_isLoggedIn:function(){return this._authenticated},get_path:function(){return this._path||""},login:function(c,b,a,h,f,d,e,g){this._invoke(this._get_path(),"Login",false,{userName:c,password:b,createPersistentCookie:a},Function.createDelegate(this,this._onLoginComplete),Function.createDelegate(this,this._onLoginFailed),[c,b,a,h,f,d,e,g])},logout:function(c,a,b,d){this._invoke(this._get_path(),"Logout",false,{},Function.createDelegate(this,this._onLogoutComplete),Function.createDelegate(this,this._onLogoutFailed),[c,a,b,d])},_get_path:function(){var a=this.get_path();if(!a.length)a=Sys.Services._AuthenticationService.DefaultWebServicePath;if(!a||!a.length)throw Error.invalidOperation(Sys.Res.servicePathNotSet);return a},_onLoginComplete:function(e,c,f){if(typeof e!=="boolean")throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType,f,"Boolean"));var b=c[4],d=c[7]||this.get_defaultUserContext(),a=c[5]||this.get_defaultLoginCompletedCallback()||this.get_defaultSucceededCallback();if(e){this._authenticated=true;if(a)a(true,d,"Sys.Services.AuthenticationService.login");if(typeof b!=="undefined"&&b!==null)window.location.href=b}else if(a)a(false,d,"Sys.Services.AuthenticationService.login")},_onLoginFailed:function(d,b){var a=b[6]||this.get_defaultFailedCallback();if(a){var c=b[7]||this.get_defaultUserContext();a(d,c,"Sys.Services.AuthenticationService.login")}},_onLogoutComplete:function(f,a,e){if(f!==null)throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType,e,"null"));var b=a[0],d=a[3]||this.get_defaultUserContext(),c=a[1]||this.get_defaultLogoutCompletedCallback()||this.get_defaultSucceededCallback();this._authenticated=false;if(c)c(null,d,"Sys.Services.AuthenticationService.logout");if(!b)window.location.reload();else window.location.href=b},_onLogoutFailed:function(c,b){var a=b[2]||this.get_defaultFailedCallback();if(a)a(c,b[3],"Sys.Services.AuthenticationService.logout")},_setAuthenticated:function(a){this._authenticated=a}};Sys.Services._AuthenticationService.registerClass("Sys.Services._AuthenticationService",Sys.Net.WebServiceProxy);Sys.Services.AuthenticationService=new Sys.Services._AuthenticationService;Sys.Services._RoleService=function(){Sys.Services._RoleService.initializeBase(this);this._roles=[]};Sys.Services._RoleService.DefaultWebServicePath="";Sys.Services._RoleService.prototype={_defaultLoadCompletedCallback:null,_rolesIndex:null,_timeout:0,_path:"",get_defaultLoadCompletedCallback:function(){return this._defaultLoadCompletedCallback},set_defaultLoadCompletedCallback:function(a){this._defaultLoadCompletedCallback=a},get_path:function(){return this._path||""},get_roles:function(){return Array.clone(this._roles)},isUserInRole:function(a){var b=this._get_rolesIndex()[a.trim().toLowerCase()];return !!b},load:function(a,b,c){Sys.Net.WebServiceProxy.invoke(this._get_path(),"GetRolesForCurrentUser",false,{},Function.createDelegate(this,this._onLoadComplete),Function.createDelegate(this,this._onLoadFailed),[a,b,c],this.get_timeout())},_get_path:function(){var a=this.get_path();if(!a||!a.length)a=Sys.Services._RoleService.DefaultWebServicePath;if(!a||!a.length)throw Error.invalidOperation(Sys.Res.servicePathNotSet);return a},_get_rolesIndex:function(){if(!this._rolesIndex){var b={};for(var a=0;a<this._roles.length;a++)b[this._roles[a].toLowerCase()]=true;this._rolesIndex=b}return this._rolesIndex},_onLoadComplete:function(a,c,f){if(a&&!(a instanceof Array))throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType,f,"Array"));this._roles=a;this._rolesIndex=null;var b=c[0]||this.get_defaultLoadCompletedCallback()||this.get_defaultSucceededCallback();if(b){var e=c[2]||this.get_defaultUserContext(),d=Array.clone(a);b(d,e,"Sys.Services.RoleService.load")}},_onLoadFailed:function(d,b){var a=b[1]||this.get_defaultFailedCallback();if(a){var c=b[2]||this.get_defaultUserContext();a(d,c,"Sys.Services.RoleService.load")}}};Sys.Services._RoleService.registerClass("Sys.Services._RoleService",Sys.Net.WebServiceProxy);Sys.Services.RoleService=new Sys.Services._RoleService;Type.registerNamespace("Sys.Serialization");Sys.Serialization.JavaScriptSerializer=function(){};Sys.Serialization.JavaScriptSerializer.registerClass("Sys.Serialization.JavaScriptSerializer");Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs=[];Sys.Serialization.JavaScriptSerializer._charsToEscape=[];Sys.Serialization.JavaScriptSerializer._dateRegEx=new RegExp('(^|[^\\\\])\\"\\\\/Date\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\+|-)[0-9]{4})?\\)\\\\/\\"',"g");Sys.Serialization.JavaScriptSerializer._escapeChars={};Sys.Serialization.JavaScriptSerializer._escapeRegEx=new RegExp('["\\\\\\x00-\\x1F]',"i");Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal=new RegExp('["\\\\\\x00-\\x1F]',"g");Sys.Serialization.JavaScriptSerializer._jsonRegEx=new RegExp("[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]","g");Sys.Serialization.JavaScriptSerializer._jsonStringRegEx=new RegExp('"(\\\\.|[^"\\\\])*"',"g");Sys.Serialization.JavaScriptSerializer._serverTypeFieldName="__type";Sys.Serialization.JavaScriptSerializer._init=function(){var c=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000b","\\f","\\r","\\u000e","\\u000f","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001a","\\u001b","\\u001c","\\u001d","\\u001e","\\u001f"];Sys.Serialization.JavaScriptSerializer._charsToEscape[0]="\\";Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs["\\"]=new RegExp("\\\\","g");Sys.Serialization.JavaScriptSerializer._escapeChars["\\"]="\\\\";Sys.Serialization.JavaScriptSerializer._charsToEscape[1]='"';Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['"']=new RegExp('"',"g");Sys.Serialization.JavaScriptSerializer._escapeChars['"']='\\"';for(var a=0;a<32;a++){var b=String.fromCharCode(a);Sys.Serialization.JavaScriptSerializer._charsToEscape[a+2]=b;Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[b]=new RegExp(b,"g");Sys.Serialization.JavaScriptSerializer._escapeChars[b]=c[a]}};Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder=function(b,a){a.append(b.toString())};Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder=function(a,b){if(isFinite(a))b.append(String(a));else throw Error.invalidOperation(Sys.Res.cannotSerializeNonFiniteNumbers)};Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder=function(a,c){c.append('"');if(Sys.Serialization.JavaScriptSerializer._escapeRegEx.test(a)){if(Sys.Serialization.JavaScriptSerializer._charsToEscape.length===0)Sys.Serialization.JavaScriptSerializer._init();if(a.length<128)a=a.replace(Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal,function(a){return Sys.Serialization.JavaScriptSerializer._escapeChars[a]});else for(var d=0;d<34;d++){var b=Sys.Serialization.JavaScriptSerializer._charsToEscape[d];if(a.indexOf(b)!==-1)if(Sys.Browser.agent===Sys.Browser.Opera||Sys.Browser.agent===Sys.Browser.FireFox)a=a.split(b).join(Sys.Serialization.JavaScriptSerializer._escapeChars[b]);else a=a.replace(Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[b],Sys.Serialization.JavaScriptSerializer._escapeChars[b])}}c.append(a);c.append('"')};Sys.Serialization.JavaScriptSerializer._serializeWithBuilder=function(b,a,i,g){var c;switch(typeof b){case "object":if(b)if(Number.isInstanceOfType(b))Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(b,a);else if(Boolean.isInstanceOfType(b))Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(b,a);else if(String.isInstanceOfType(b))Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(b,a);else if(Array.isInstanceOfType(b)){a.append("[");for(c=0;c<b.length;++c){if(c>0)a.append(",");Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(b[c],a,false,g)}a.append("]")}else{if(Date.isInstanceOfType(b)){a.append('"\\/Date(');a.append(b.getTime());a.append(')\\/"');break}var d=[],f=0;for(var e in b){if(e.startsWith("$"))continue;if(e===Sys.Serialization.JavaScriptSerializer._serverTypeFieldName&&f!==0){d[f++]=d[0];d[0]=e}else d[f++]=e}if(i)d.sort();a.append("{");var j=false;for(c=0;c<f;c++){var h=b[d[c]];if(typeof h!=="undefined"&&typeof h!=="function"){if(j)a.append(",");else j=true;Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(d[c],a,i,g);a.append(":");Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(h,a,i,g)}}a.append("}")}else a.append("null");break;case "number":Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(b,a);break;case "string":Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(b,a);break;case "boolean":Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(b,a);break;default:a.append("null")}};Sys.Serialization.JavaScriptSerializer.serialize=function(b){var a=new Sys.StringBuilder;Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(b,a,false);return a.toString()};Sys.Serialization.JavaScriptSerializer.deserialize=function(data,secure){if(data.length===0)throw Error.argument("data",Sys.Res.cannotDeserializeEmptyString);try{var exp=data.replace(Sys.Serialization.JavaScriptSerializer._dateRegEx,"$1new Date($2)");if(secure&&Sys.Serialization.JavaScriptSerializer._jsonRegEx.test(exp.replace(Sys.Serialization.JavaScriptSerializer._jsonStringRegEx,"")))throw null;return eval("("+exp+")")}catch(a){throw Error.argument("data",Sys.Res.cannotDeserializeInvalidJson)}};Sys.CultureInfo=function(c,b,a){this.name=c;this.numberFormat=b;this.dateTimeFormat=a};Sys.CultureInfo.prototype={_getDateTimeFormats:function(){if(!this._dateTimeFormats){var a=this.dateTimeFormat;this._dateTimeFormats=[a.MonthDayPattern,a.YearMonthPattern,a.ShortDatePattern,a.ShortTimePattern,a.LongDatePattern,a.LongTimePattern,a.FullDateTimePattern,a.RFC1123Pattern,a.SortableDateTimePattern,a.UniversalSortableDateTimePattern]}return this._dateTimeFormats},_getMonthIndex:function(a){if(!this._upperMonths)this._upperMonths=this._toUpperArray(this.dateTimeFormat.MonthNames);return Array.indexOf(this._upperMonths,this._toUpper(a))},_getAbbrMonthIndex:function(a){if(!this._upperAbbrMonths)this._upperAbbrMonths=this._toUpperArray(this.dateTimeFormat.AbbreviatedMonthNames);return Array.indexOf(this._upperAbbrMonths,this._toUpper(a))},_getDayIndex:function(a){if(!this._upperDays)this._upperDays=this._toUpperArray(this.dateTimeFormat.DayNames);return Array.indexOf(this._upperDays,this._toUpper(a))},_getAbbrDayIndex:function(a){if(!this._upperAbbrDays)this._upperAbbrDays=this._toUpperArray(this.dateTimeFormat.AbbreviatedDayNames);return Array.indexOf(this._upperAbbrDays,this._toUpper(a))},_toUpperArray:function(c){var b=[];for(var a=0,d=c.length;a<d;a++)b[a]=this._toUpper(c[a]);return b},_toUpper:function(a){return a.split("\u00a0").join(" ").toUpperCase()}};Sys.CultureInfo._parse=function(b){var a=Sys.Serialization.JavaScriptSerializer.deserialize(b);return new Sys.CultureInfo(a.name,a.numberFormat,a.dateTimeFormat)};Sys.CultureInfo.registerClass("Sys.CultureInfo");Sys.CultureInfo.InvariantCulture=Sys.CultureInfo._parse('{"name":"","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":true,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"\u00a4","NaNSymbol":"NaN","CurrencyNegativePattern":0,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"\u2030","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"@-62135568000000@","MaxSupportedDateTime":"@253402300799999@","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":true},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, dd MMMM yyyy HH:mm:ss","LongDatePattern":"dddd, dd MMMM yyyy","LongTimePattern":"HH:mm:ss","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'","ShortDatePattern":"MM/dd/yyyy","ShortTimePattern":"HH:mm","SortableDateTimePattern":"yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'","YearMonthPattern":"yyyy MMMM","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":true,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]}}');if(typeof __cultureInfo==="undefined")var __cultureInfo='{"name":"en-US","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":false,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"$","NaNSymbol":"NaN","CurrencyNegativePattern":0,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"\u2030","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"@-62135568000000@","MaxSupportedDateTime":"@253402300799999@","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":false},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, MMMM dd, yyyy h:mm:ss tt","LongDatePattern":"dddd, MMMM dd, yyyy","LongTimePattern":"h:mm:ss tt","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'","ShortDatePattern":"M/d/yyyy","ShortTimePattern":"h:mm tt","SortableDateTimePattern":"yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'","YearMonthPattern":"MMMM, yyyy","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":false,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]}}';Sys.CultureInfo.CurrentCulture=Sys.CultureInfo._parse(__cultureInfo);delete __cultureInfo;Sys.UI.Behavior=function(b){Sys.UI.Behavior.initializeBase(this);this._element=b;var a=b._behaviors;if(!a)b._behaviors=[this];else a[a.length]=this};Sys.UI.Behavior.prototype={_name:null,get_element:function(){return this._element},get_id:function(){var a=Sys.UI.Behavior.callBaseMethod(this,"get_id");if(a)return a;if(!this._element||!this._element.id)return "";return this._element.id+"$"+this.get_name()},get_name:function(){if(this._name)return this._name;var a=Object.getTypeName(this),b=a.lastIndexOf(".");if(b!=-1)a=a.substr(b+1);if(!this.get_isInitialized())this._name=a;return a},set_name:function(a){this._name=a},initialize:function(){Sys.UI.Behavior.callBaseMethod(this,"initialize");var a=this.get_name();if(a)this._element[a]=this},dispose:function(){Sys.UI.Behavior.callBaseMethod(this,"dispose");if(this._element){var a=this.get_name();if(a)this._element[a]=null;Array.remove(this._element._behaviors,this);delete this._element}}};Sys.UI.Behavior.registerClass("Sys.UI.Behavior",Sys.Component);Sys.UI.Behavior.getBehaviorByName=function(b,c){var a=b[c];return a&&Sys.UI.Behavior.isInstanceOfType(a)?a:null};Sys.UI.Behavior.getBehaviors=function(a){if(!a._behaviors)return [];return Array.clone(a._behaviors)};Sys.UI.Behavior.getBehaviorsByType=function(d,e){var a=d._behaviors,c=[];if(a)for(var b=0,f=a.length;b<f;b++)if(e.isInstanceOfType(a[b]))c[c.length]=a[b];return c};Sys.UI.VisibilityMode=function(){throw Error.notImplemented()};Sys.UI.VisibilityMode.prototype={hide:0,collapse:1};Sys.UI.VisibilityMode.registerEnum("Sys.UI.VisibilityMode");Sys.UI.Control=function(a){Sys.UI.Control.initializeBase(this);this._element=a;a.control=this};Sys.UI.Control.prototype={_parent:null,_visibilityMode:Sys.UI.VisibilityMode.hide,get_element:function(){return this._element},get_id:function(){if(!this._element)return "";return this._element.id},set_id:function(){throw Error.invalidOperation(Sys.Res.cantSetId)},get_parent:function(){if(this._parent)return this._parent;if(!this._element)return null;var a=this._element.parentNode;while(a){if(a.control)return a.control;a=a.parentNode}return null},set_parent:function(a){this._parent=a},get_visibilityMode:function(){return Sys.UI.DomElement.getVisibilityMode(this._element)},set_visibilityMode:function(a){Sys.UI.DomElement.setVisibilityMode(this._element,a)},get_visible:function(){return Sys.UI.DomElement.getVisible(this._element)},set_visible:function(a){Sys.UI.DomElement.setVisible(this._element,a)},addCssClass:function(a){Sys.UI.DomElement.addCssClass(this._element,a)},dispose:function(){Sys.UI.Control.callBaseMethod(this,"dispose");if(this._element){this._element.control=undefined;delete this._element}if(this._parent)delete this._parent},onBubbleEvent:function(){return false},raiseBubbleEvent:function(b,c){var a=this.get_parent();while(a){if(a.onBubbleEvent(b,c))return;a=a.get_parent()}},removeCssClass:function(a){Sys.UI.DomElement.removeCssClass(this._element,a)},toggleCssClass:function(a){Sys.UI.DomElement.toggleCssClass(this._element,a)}};Sys.UI.Control.registerClass("Sys.UI.Control",Sys.Component);
Function._validateParameter = function Function$_validateParameter(param, expectedParam, paramName) {
Function._validateParameterCount = function Function$_validateParameterCount(params, expectedParams) {
Function._validateParameterType = function Function$_validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName) {
Function._validateParams = function Function$_validateParams(params, expectedParams) {
Function.createCallback = function Function$createCallback(method, context) {
Function.createDelegate = function Function$createDelegate(instance, method) {
Function.emptyFunction = Function.emptyMethod = function Function$emptyMethod() {
funcTypes
fValue must be a valid string representation for an array. It must start with a '[' and end with a ']'.
FWhether non-breaking spaces should be rendered between pager controls.
FX20Assembly
FX35Assembly
FXAssembly
gCould not find a property or field called '{0}' on the data context type '{1}' of LinqDataSource '{2}'.
gEnables ScriptManager to add client-side globalization information to the page for the current culture.
genClass
GenerateAdd
GenerateAsynchronousMethods
GenerateBinding
GenerateClientTypeProxies
GenerateCode
GenerateCodeAndConfiguration
GenerateCodeFromDataServiceMapFile
GenerateCodeFromServiceMapFile
GenerateConditional
GenerateConstructor
GenerateConversion
generatedCode
GeneratedCodeAttribute
generatedContracts
GeneratedContractType
GenerateEnumTypeProxies
GenerateEqual
GenerateEquals
GenerateFields
GenerateGetHashCode
GenerateGreaterThan
GenerateGreaterThanEqual
GenerateInitializationScript
GenerateInternalTypes
GenerateLessThan
GenerateLessThanEqual
GenerateMessageContracts
GenerateMethods
GenerateNotEqual
GenerateOrderByClause
GenerateProperties
GeneratePrototype
GenerateProxy
GenerateRegisterClass
GenerateScriptTypeAttribute
GenerateSerializableTypes
GenerateServiceContractType
GenerateServiceEndpoint
GenerateStaticInstance
GenerateStaticMethodCall
GenerateStaticMethods
GenerateStringConcat
GenerateSubtract
GenerateTypeDeclaration
GenerateWebMethodProxy
GenerateWhereClauseAndEscapeParameterKeys
generationError
generationErrors
generatorErrors
generatorState
GeneratorState
generic
get_AbsoluteUri
get_AccessKey
get_ActualTypeAnnotationName
get_Address
get_AddScriptTags
get_AffectedRows
get_AllKeys
get_AllowAnonymousAccess
get_AllowCustomErrorsRedirect
get_AllowServerPaging
get_AlternatingItemTemplate
get_AlwaysLoadBeforeUI
get_Annotation
get_AnonymousID
get_AppDomainAppVirtualPath
get_AppLevelCompilationSection
get_ApplicationName
get_ApplicationPhysicalPath
get_ApplicationServiceManager_Path
get_AppRelativeCurrentExecutionFilePath
get_AppRelativeTemplateSourceDirectory
get_AppRelativeVirtualPath
get_AppService_Disabled
get_AppService_MultiplePaths
get_AppService_RequiredSSL
get_AppService_UnknownProfileProperty
get_AppSettings
get_ArgumentMustBeCurrentUser
get_ArgumentMustBeNull
get_Arguments
get_Assembly
get_AssemblyName
get_AssemblyQualifiedName
get_AssociatedUpdatePanelID
get_AsyncPostBackErrorMessage
get_AsyncPostBackSourceElementID
get_AsyncPostBackTimeout
get_AsyncPostBackTrigger_CannotFindEvent
get_AsyncPostBackTrigger_EventName
get_AsyncPostBackTrigger_InvalidEvent
get_AttributeName
get_AttributeNotRecognized
get_Attributes
get_AttributeType
get_Authenticated
get_AuthenticationCookies
get_AuthenticationIsComplete
get_AuthenticationService
get_AuthenticationServiceEnabled
get_AuthenticationType
get_AutoGenerateOrderByClause
get_AutoGenerateWhereClause
get_AutoPage
get_AutoSort
get_BackColor
get_BaseType
get_BaseTypeName
get_Behaviors
get_BinaryContent
get_Binding
get_BindingCollection
get_Bindings
get_Body
get_BorderColor
get_BorderStyle
get_BorderWidth
get_BoundFieldValues
get_Browser
get_Buffer
get_BufferOutput
get_ButtonCount
get_ButtonCssClass
get_ButtonType
get_Cache
get_CacheControl
get_CachedMetadata
get_CacheDuration
get_Cancel
get_CancelMode
get_CanDelete
get_CanInsert
get_CanPage
get_CanRetrieveTotalRowCount
get_CanSeek
get_CanSort
get_CanUpdate
get_Captures
get_Category
get_Category_Sorting
get_CausesValidation
get_Chars
get_Charset
get_ChildControls
get_ChildNodes
get_ChildrenAsTriggers
get_Client
get_ClientID
get_ClientNavigateHandler
get_ClientOptions
get_ClientScript
get_ClientService_BadJsonResponse
get_ClientSupportsFocus
get_ClientTypeDictionary
get_ClientTypeNameDictionary
get_ClientTypes
get_ClientUrlResolver
get_ClrNamespace
get_CodeBase
get_CodeGenerationOptions
get_CollectionMappingList
get_CombinedHash32
get_CombinedHashString
get_CommandArgument
get_CommandName
get_CommandSource
get_Common_ArgumentInvalidType
get_Common_GreaterThanOrEqualToZero
get_Common_GreaterThanOrEqualToZeroAndLessThanOrEqualToOne
get_Common_NullOrEmpty
get_Common_PageCannotBeNull
get_Common_ScriptManagerRequired
get_CompositeScript
get_CompositeScriptReference_Scripts
get_Configuration
get_ConfigurationName
get_ConnectionString
get_ConnectionStrings
get_ContainingControl
get_Content
get_ContentBuffer
get_ContentEncoding
get_ContentModel
get_ContentTemplate
get_ContentTemplateContainer
get_ContentType
get_Context
get_ContextType
get_ContextTypeName
get_Contract
get_ContractCollection
get_ContractType
get_Control
get_ControlId
get_ControlID
get_Controls
get_ConvertEmptyStringToNull
get_Converters
get_ConvertersCollection_NotJavaScriptConverter
get_ConvertersCollection_UnknownType
get_CookieIsSet
get_CookieNames
get_Cookies
get_CookieValues
get_Count
get_CssClass
get_Culture
get_CultureInfo
get_CultureName
get_Current
get_CurrentCulture
get_CurrentDomain
get_CurrentEncoding
get_CurrentPageLabelCssClass
get_CurrentPrincipal
get_CurrentThread
get_CurrentUICulture
get_CustomAttributes
get_CustomCredential
get_CustomErrorsSection
get_Database
get_DataBoundControlHelper_NoNamingContainer
get_DataItem
get_DataItemIndex
get_DataKey
get_DataKeyNames
get_DataKeyNamesInternal
get_DataKeys
get_DataKeysArrayList
get_DataMembers
get_DataPager
get_DataPager_ControlIsntPageable
get_DataPager_Fields
get_DataPager_NoNamingContainer
get_DataPager_NoPageableItemContainer
get_DataPager_PageableItemContainerNotFound
get_DataPager_PagedControlID
get_DataPager_PagePropertiesCannotBeSet
get_DataPager_PageSize
get_DataPager_QueryStringField
get_DataPagerField_Visible
get_DataSource
get_DataSourceCount
get_DataSourceID
get_DateTimeFormat
get_Day
get_Debug
get_DeclaringType
get_Default
get_DefaultRedirect
get_DefaultValue
get_DeleteParameters
get_DeploymentSection
get_DeploymentSectionRetail
get_Description
get_DesignMode
get_Dialect
get_Direction
get_DisplayAfter
get_DisplayIndex
get_DisplayName
get_DocumentElement
get_DynamicControlBase_ConvertEmptyStringToNull
get_DynamicControlBase_DataField
get_DynamicControlBase_DataFormatString
get_DynamicControlBase_HtmlEncode
get_DynamicControlBase_NullDisplayText
get_DynamicControlBase_UIHint
get_DynamicControlBase_ValidationGroup
get_DynamicFilterRepeater_DynamicFilterContainerId
get_DynamicLayout
get_DynamicNavigatorDataSource_NoAccessibleTablesFound
get_DynamicNavigatorDataSource_NoModelsRegistered
get_DynamicNavigatorDataSource_NoTablesInModels
get_EcmaScriptVersion
get_EditIndex
get_EditItem
get_EditItemTemplate
get_EffectiveScriptMode
get_Element
get_ElementID
get_ElementIDInternal
get_ElementName
get_ElementType
get_EmptyDataTemplate
get_EmptyItemTemplate
get_EmptyPageUrl
get_EnableCaching
get_EnableCompression
get_Enabled
get_EnableDataBinding
get_EnableDelete
get_EnableEventValidation
get_EnableHistory
get_EnableInsert
get_EnableLegacyRendering
get_EnableModelValidation
get_EnableNextPage
get_EnableObjectTracking
get_EnablePageMethods
get_EnablePartialRendering
get_EnablePasswordReset
get_EnablePasswordRetrieval
get_EnablePreviousPage
get_EnableScriptGlobalization
get_EnableScriptLocalization
get_EnableSecureHistoryState
get_EnableSession
get_EnableUpdate
get_Encode
get_EndpointCollection
get_EndpointMap
get_EntitySetName
get_EnumerationValueAnnotationName
get_EnumTypeDictionary
get_EnumTypes
get_ErrorGeneratorState
get_ErrorInLoading
get_Errors
get_EventHandler
get_EventHandlerType
get_EventName
get_Events
get_Exception
get_ExceptionHandled
get_ExcludedTypeList
get_Expires
get_ExpiresAbsolute
get_Expression
get_ExpressionParser_AmbiguousConstructorInvocation
get_ExpressionParser_AmbiguousIndexerInvocation
get_ExpressionParser_AmbiguousMethodInvocation
get_ExpressionParser_ArgsIncompatibleWithLambda
get_ExpressionParser_BothTypesConvertToOther
get_ExpressionParser_CannotConvertValue
get_ExpressionParser_CannotIndexMultipleDimensionalArray
get_ExpressionParser_CloseBracketOrCommaExpected
get_ExpressionParser_CloseParenOrCommaExpected
get_ExpressionParser_CloseParenOrOperatorExpected
get_ExpressionParser_ColonExpected
get_ExpressionParser_DigitExpected
get_ExpressionParser_DotOrOpenParenExpected
get_ExpressionParser_DuplicateIdentifier
get_ExpressionParser_ExpressionExpected
get_ExpressionParser_ExpressionTypeMismatch
get_ExpressionParser_FirstExprMustBeBool
get_ExpressionParser_IdentifierExpected
get_ExpressionParser_IifRequiresThreeArgs
get_ExpressionParser_IncompatibleOperand
get_ExpressionParser_IncompatibleOperands
get_ExpressionParser_InvalidCharacter
get_ExpressionParser_InvalidCharacterLiteral
get_ExpressionParser_InvalidIndex
get_ExpressionParser_InvalidIntegerLiteral
get_ExpressionParser_InvalidRealLiteral
get_ExpressionParser_MethodIsVoid
get_ExpressionParser_MethodsAreInaccessible
get_ExpressionParser_MissingAsClause
get_ExpressionParser_NeitherTypeConvertsToOther
get_ExpressionParser_NoApplicableAggregate
get_ExpressionParser_NoApplicableIndexer
get_ExpressionParser_NoApplicableMethod
get_ExpressionParser_NoItInScope
get_ExpressionParser_NoMatchingConstructor
get_ExpressionParser_OpenBracketExpected
get_ExpressionParser_OpenParenExpected
get_ExpressionParser_SyntaxError
get_ExpressionParser_TokenExpected
get_ExpressionParser_TypeHasNoNullableForm
get_ExpressionParser_UnknownIdentifier
get_ExpressionParser_UnknownPropertyOrField
get_ExpressionParser_UnterminatedStringLiteral
get_ExtenderControl_TargetControlDifferentUpdatePanel
get_ExtenderControl_TargetControlID
get_ExtenderControl_TargetControlIDEmpty
get_ExtenderControl_TargetControlIDInvalid
get_ExtenderControls
get_Extensions
get_Facets
get_FailedProperties
get_FailedSettingsList
get_Faults
get_Fields
get_FieldType
get_FileExtension
get_FileName
get_FilePath
get_Files
get_FileType
get_Filter
get_FilterRepeater_TableName
get_First
get_FirstChild
get_FirstPageImageUrl
get_FirstPageText
get_Font
get_ForeColor
get_Form
get_FormAction
get_FullName
get_GenerateAsynchronousMethods
get_GenerateInternalTypes
get_GenerateMessageContracts
get_GenerateSerializableTypes
get_GlobalAssemblyCache
get_GroupBy
get_GroupByParameters
get_GroupItemCount
get_GroupPlaceholderID
get_Groups
get_GroupSeparatorTemplate
get_GroupTemplate
get_Handler
get_HasAttributes
get_HasAuthenticationServiceManager
get_HasLoadProperties
get_HasProfileServiceManager
get_HasRoleServiceManager
get_HasValue
get_Header
get_HeaderEncoding
get_Headers
get_Height
get_HiddenFields
get_Host
get_Hour
get_HttpMethod
get_ID
get_Identity
get_Ignore
get_IgnoreScriptPath
get_IgnoreSpecified
get_ImportErrors
get_ImportXmlTypes
get_Index
get_Initialized
get_InitialValue
get_InlineScript
get_InnerException
get_InnerExceptions
get_InnerText
get_InnerWriter
get_Input
get_InputStream
get_InsertItem
get_InsertItemPosition
get_InsertItemTemplate
get_InsertParameters
get_Instance
get_Interval
get_InvariantCulture
get_InvariantInfo
get_IPage
get_IsAbsoluteUri
get_IsAbstract
get_IsAnonymous
get_IsArray
get_IsAuthenticated
get_IsBoundUsingDataSourceID
get_IsBufferValid
get_IsByRef
get_IsClientConnected
get_IsCustomErrorEnabled
get_IsDebug
get_IsDebuggingEnabled
get_IsDirty
get_IsEmpty
get_IsEmptyElement
get_IsEnum
get_IsExistingFile
get_IsGenericType
get_IsGenericTypeDefinition
get_IsInAsyncPostBack
get_IsInPartialRendering
get_IsInterface
get_IsJsonSerialized
get_IsLastPage
get_IsMergeResult
get_IsMergeResultSpecified
get_IsNavigating
get_IsNestedPublic
get_IsNewContext
get_IsOffline
get_IsOut
get_IsPersistent
get_IsPostBack
get_IsPrimaryKey
get_IsPrimitive
get_IsPublic
get_IsReadOnly
get_IsRequestBeingRedirected
get_IsReusable
get_IsSecureConnection
get_IsSerializable
get_IsServerPagingEnabled
get_IsStatic
get_IsStaticReference
get_IsSynchronized
get_IsTrackingViewState
get_IsULong
get_IsValid
get_IsValueType
get_IsVersion
get_IsViewStateEnabled
get_IsWarning
get_Item
get_ItemIndex
get_ItemPlaceholderID
get_Items
get_ItemSeparatorTemplate
get_ItemTemplate
get_ItemType
get_JavaScriptSerializer
get_JScriptVersion
get_JSON_ArrayTypeNotSupported
get_JSON_BadEscape
get_JSON_CannotConvertObjectToType
get_JSON_CannotCreateListType
get_JSON_CircularReference
get_JSON_DepthLimitExceeded
get_JSON_DeserializerTypeMismatch
get_JSON_DictionaryTypeNotSupported
get_JSON_ExpectedOpenBrace
get_JSON_IllegalPrimitive
get_JSON_InvalidArrayEnd
get_JSON_InvalidArrayExpectComma
get_JSON_InvalidArrayExtraComma
get_JSON_InvalidArrayStart
get_JSON_InvalidEnumType
get_JSON_InvalidMaxJsonLength
get_JSON_InvalidMemberName
get_JSON_InvalidObject
get_JSON_InvalidRecursionLimit
get_JSON_MaxJsonLengthExceeded
get_JSON_NoConstructor
get_JSON_StringNotQuoted
get_JSON_UnterminatedString
get_JSON_ValueTypeCannotBeNull
get_JsonSerialization
get_KeepInEditMode
get_KeepInInsertMode
get_Key
get_Keys
get_KnownContracts
get_KnownTypes
get_LastLoggedInDateUtc
get_LastLoggedInUserName
get_LastPageImageUrl
get_LastPageText
get_LayoutTemplate
get_Length
get_LineNumber
get_LinePosition
get_LinqDataSource_AutoGenerateOrderByClause
get_LinqDataSource_AutoGenerateWhereClause
get_LinqDataSource_AutoPage
get_LinqDataSource_AutoSort
get_LinqDataSource_ContextCreated
get_LinqDataSource_ContextCreating
get_LinqDataSource_ContextDisposing
get_LinqDataSource_ContextTypeName
get_LinqDataSource_Deleted
get_LinqDataSource_DeleteParameters
get_LinqDataSource_Deleting
get_LinqDataSource_Description
get_LinqDataSource_DisplayName
get_LinqDataSource_EnableDelete
get_LinqDataSource_EnableInsert
get_LinqDataSource_EnableObjectTracking
get_LinqDataSource_EnableUpdate
get_LinqDataSource_GroupBy
get_LinqDataSource_GroupByParameters
get_LinqDataSource_Inserted
get_LinqDataSource_Inserting
get_LinqDataSource_InsertParameters
get_LinqDataSource_InvalidViewName
get_LinqDataSource_OrderBy
get_LinqDataSource_OrderByParameters
get_LinqDataSource_OrderGroupsBy
get_LinqDataSource_OrderGroupsByParameters
get_LinqDataSource_Select
get_LinqDataSource_Selected
get_LinqDataSource_Selecting
get_LinqDataSource_SelectParameters
get_LinqDataSource_StoreOriginalValuesInViewState
get_LinqDataSource_TableName
get_LinqDataSource_Updated
get_LinqDataSource_UpdateParameters
get_LinqDataSource_Updating
get_LinqDataSource_Where
get_LinqDataSource_WhereParameters
get_LinqDataSourceValidationException_ValidationFailed
get_LinqDataSourceView_CannotConvertType
get_LinqDataSourceView_ContextTypeNameChanged
get_LinqDataSourceView_ContextTypeNameNotFound
get_LinqDataSourceView_ContextTypeNameNotSpecified
get_LinqDataSourceView_DeleteNotSupported
get_LinqDataSourceView_EnableObjectTrackingChanged
get_LinqDataSourceView_GroupByNotSupportedOnEdit
get_LinqDataSourceView_InsertNotSupported
get_LinqDataSourceView_InsertRequiresValues
get_LinqDataSourceView_InvalidContextType
get_LinqDataSourceView_InvalidOrderByFieldName
get_LinqDataSourceView_InvalidParameterName
get_LinqDataSourceView_InvalidTablePropertyType
get_LinqDataSourceView_OrderByAlreadySpecified
get_LinqDataSourceView_OrderGroupsByRequiresGroupBy
get_LinqDataSourceView_OriginalValuesNotFound
get_LinqDataSourceView_PagingNotHandled
get_LinqDataSourceView_ParametersMustBeNamed
get_LinqDataSourceView_SelectNewNotSupportedOnEdit
get_LinqDataSourceView_TableCannotBeStatic
get_LinqDataSourceView_TableNameChanged
get_LinqDataSourceView_TableNameNotFound
get_LinqDataSourceView_TableNameNotSpecified
get_LinqDataSourceView_UpdateNotSupported
get_LinqDataSourceView_ValidationFailed
get_LinqDataSourceView_WhereAlreadySpecified
get_ListView_AlternatingItemTemplate
get_ListView_ContainerNameMustNotBeEmpty
get_ListView_ConvertEmptyStringToNull
get_ListView_DataKeyNames
get_ListView_DataKeyNamesMustBeSpecified
get_ListView_DataKeys
get_ListView_DataSourceDoesntSupportPaging
get_ListView_DataSourceMustBeCollectionWhenNotDataBinding
get_ListView_EditIndex
get_ListView_EditItem
get_ListView_EditItemTemplate
get_ListView_EmptyDataTemplate
get_ListView_EmptyItemTemplate
get_ListView_EnableDataBoundControlManager
get_ListView_EnableModelValidation
get_ListView_GroupContainerID
get_ListView_GroupItemCount
get_ListView_GroupItemCountNoGroupTemplate
get_ListView_GroupSeparatorTemplate
get_ListView_GroupTemplate
get_ListView_InsertItem
get_ListView_InsertItemPosition
get_ListView_InsertItemTemplate
get_ListView_InsertTemplateRequired
get_ListView_InvalidCancel
get_ListView_InvalidDelete
get_ListView_InvalidEdit
get_ListView_InvalidInsert
get_ListView_InvalidSelect
get_ListView_InvalidUpdate
get_ListView_ItemPlaceholderID
get_ListView_Items
get_ListView_ItemSeparatorTemplate
get_ListView_ItemsNotDataItems
get_ListView_ItemTemplate
get_ListView_ItemTemplateRequired
get_ListView_LayoutTemplate
get_ListView_Missing_VirtualItemCount
get_ListView_NeedICollectionOrTotalRowCount
get_ListView_NoGroupPlaceholder
get_ListView_NoInsertItem
get_ListView_NoItemPlaceholder
get_ListView_NullView
get_ListView_OnItemCanceling
get_ListView_OnItemCommand
get_ListView_OnItemCreated
get_ListView_OnItemDataBound
get_ListView_OnItemDeleted
get_ListView_OnItemDeleting
get_ListView_OnItemEditing
get_ListView_OnItemInserted
get_ListView_OnItemInserting
get_ListView_OnItemUpdated
get_ListView_OnItemUpdating
get_ListView_OnLayoutCreated
get_ListView_OnPagePropertiesChanged
get_ListView_OnPagePropertiesChanging
get_ListView_OnSelectedIndexChanged
get_ListView_OnSelectedIndexChanging
get_ListView_OnSorted
get_ListView_OnSorting
get_ListView_SelectedIndex
get_ListView_SelectedItemTemplate
get_ListView_SortDirection
get_ListView_SortExpression
get_ListView_StyleNotSupported
get_ListView_StylePropertiesNotSupported
get_ListView_UnhandledEvent
get_ListViewPagedDataSource_CannotGetCount
get_ListViewPagedDataSource_EnumeratorMoveNextNotCalled
get_LoadErrors
get_LoadProperties
get_LoadRoles
get_LoadScriptsBeforeUI
get_LocalName
get_LocalPath
get_Location
get_MajorVersion
get_ManagedThreadId
get_ManifestModule
get_Mapping
get_Markup
get_MaximumRows
get_MaxInvalidPasswordAttempts
get_MaxJsonDeserializerMembers
get_MaxJsonLength
get_MaxJsonLimit
get_MaxOccurs
get_MaxOccursString
get_Member
get_MemberAccessor
get_Members
get_Message
get_MessageName
get_Messages
get_Metadata
get_MetadataDiscoveryDocument
get_MetadataFile
get_MetadataFormatError
get_MetadataList
get_MetadataServiceDescription
get_MetadataSourceList
get_MetadataXmlDocument
get_MetadataXmlSchema
get_Method
get_MethodDatas
get_MethodInfo
get_MethodName
get_MinRequiredNonAlphanumericCharacters
get_MinRequiredPasswordLength
get_Minute
get_ModuleVersionId
get_Month
get_Name
get_NamedPermissionSet
get_Names
get_Namespace
get_NamespaceMappingList
get_NamespaceMappings
get_Namespaces
get_NamespaceURI
get_NameTable
get_NamingContainer
get_NavigateEvent
get_NewDataObject
get_NewEditIndex
get_NewLine
get_NewMaximumRows
get_NewObject
get_NewSelectedIndex
get_NewStartRowIndex
get_NewValues
get_NextPageImageUrl
get_NextPageText
get_NextPreviousButtonCssClass
get_NextPreviousPagerField_ButtonCssClass
get_NextPreviousPagerField_ButtonType
get_NextPreviousPagerField_FirstPageImageUrl
get_NextPreviousPagerField_FirstPageText
get_NextPreviousPagerField_LastPageImageUrl
get_NextPreviousPagerField_LastPageText
get_NextPreviousPagerField_NextPageImageUrl
get_NextPreviousPagerField_NextPageText
get_NextPreviousPagerField_PreviousPageImageUrl
get_NextPreviousPagerField_PreviousPageText
get_NextPreviousPagerField_RenderDisabledButtonsAsLabels
get_NextPreviousPagerField_RenderNonBreakingSpacesBetweenControls
get_NextPreviousPagerField_ShowFirstPageButton
get_NextPreviousPagerField_ShowLastPageButton
get_NextPreviousPagerField_ShowNextPageButton
get_NextPreviousPagerField_ShowPreviousPageButton
get_NextPrevPagerField_DefaultFirstPageText
get_NextPrevPagerField_DefaultLastPageText
get_NextPrevPagerField_DefaultNextPageText
get_NextPrevPagerField_DefaultPreviousPageText
get_NextSibling
get_NodeType
get_NotifyScriptLoaded
get_Now
get_NumberFormat
get_NumericButtonCssClass
get_NumericPagerField_ButtonCount
get_NumericPagerField_ButtonType
get_NumericPagerField_CurrentPageLabelCssClass
get_NumericPagerField_DefaultNextPageText
get_NumericPagerField_DefaultPreviousPageText
get_NumericPagerField_NextPageImageUrl
get_NumericPagerField_NextPageText
get_NumericPagerField_NextPreviousButtonCssClass
get_NumericPagerField_NumericButtonCssClass
get_NumericPagerField_PreviousPageImageUrl
get_NumericPagerField_PreviousPageText
get_NumericPagerField_RenderNonBreakingSpacesBetweenControls
get_ObjectInstance
get_OldValues
get_Operation
get_Operations
get_Options
get_OrderBy
get_OrderByParameters
get_OrderGroupsBy
get_OrderGroupsByParameters
get_Ordinal
get_OrdinalIgnoreCase
get_OriginalDataObject
get_OriginalObject
get_OriginalString
get_OutAttribute
get_Output
get_OutputStream
get_Owner
get_Page
get_PagedControlID
get_Pager
get_PageRequestManager
get_PageRequestManager_RegisterDataItemInNonAsyncRequest
get_PageRequestManager_RegisterDataItemTwice
get_PagerField
get_PagerFieldCollection_InvalidType
get_PagerFieldCollection_InvalidTypeIndex
get_PagerTemplate
get_PageSize
get_ParameterDataDictionary
get_ParameterDatas
get_ParameterInfo
get_ParameterName
get_Parameters
get_ParameterType
get_Parent
get_ParentUpdatePanel
get_ParseException_ParseExceptionFormat
get_ParseWrites
get_Particle
get_Parts
get_Password
get_PasswordAttemptWindow
get_PasswordFormat
get_PasswordHash
get_PasswordSalt
get_PasswordStrengthRegularExpression
get_Path
get_PathAndQuery
get_PathInfo
get_PerformSubstitution
get_Ports
get_PortType
get_PortTypes
get_Position
get_PreviousPageImageUrl
get_PreviousPageText
get_Profile
get_ProfileAllowedGet
get_ProfileAllowedSet
get_ProfileService
get_ProfileServiceEnabled
get_ProfileServiceManager_LoadProperitesWithNonDefaultPath
get_ProfileServiceManager_LoadProperties
get_ProgressTemplate
get_Properties
get_Property
get_PropertyName
get_PropertyType
get_PropertyValue
get_PropertyValues
get_Protocol
get_Provider
get_ProviderName
get_Providers
get_Proxies
get_ProxyGeneratedContractTypes
get_ProxyGenerationErrors
get_ProxyGenerator_UnsupportedType
get_ProxyHelper_BadStatusCode
get_QualifiedName
get_QueryString
get_QueryStringField
get_QueryStringHandled
get_QueryStringValue
get_ReadAccessProperties
get_Reader
get_ReadMethods
get_RecursionLimit
get_RedirectLocation
get_ReferenceAllAssemblies
get_ReferencedAssemblies
get_ReferencedAssemblyList
get_ReferencedCollectionTypes
get_ReferencedDataContractTypeList
get_ReferencedTypes
get_ReferenceGroup_AppendLinePosition
get_ReferenceGroup_DataContractExcludedAndIncluded
get_ReferenceGroup_DuplicatedSchemaItems
get_ReferenceGroup_DuplicatedSchemaItemsIgnored
get_ReferenceGroup_EmptyAddress
get_ReferenceGroup_EmptyProtocol
get_ReferenceGroup_FailedToGenerateCode
get_ReferenceGroup_FailedToLoadAssembly
get_ReferenceGroup_FieldDefinedDifferentlyInDuplicatedMessage
get_ReferenceGroup_FieldDefinedInOneOfDuplicatedMessage
get_ReferenceGroup_InvalidFileName
get_ReferenceGroup_InvalidSourceId
get_ReferenceGroup_OperationDefinedDifferently
get_ReferenceGroup_OperationDefinedInOneOfDuplicatedServiceContract
get_ReferenceGroup_ServiceContractMappingMissMatch
get_ReferenceGroup_SharedTypeMustBePublic
get_ReferenceGroup_TwoExternalFilesWithSameName
get_RegisterDispose
get_RememberMe
get_RenderDisabledButtonsAsLabels
get_RenderMode
get_RenderNonBreakingSpacesBetweenControls
get_Request
get_RequiresDataBinding
get_RequiresQuestionAndAnswer
get_RequiresSession
get_RequireSSL
get_RequiresUniqueEmail
get_RequiresUpdate
get_ResourceManager
get_ResourceUICultures
get_Response
get_ResponseFormat
get_Result
get_Retail
get_RetrievalUrl
get_RetrieveTotalRowCount
get_ReturnType
get_ReturnValue
get_Roles
get_RolesCachedDateUtc
get_RoleService
get_RoleService_RoleProviderNotFound
get_RoleService_RolesFeatureNotEnabled
get_RoleServiceEnabled
get_RoleServiceManager_LoadRoles
get_RoleServiceManager_LoadRolesWithNonDefaultPath
get_RowType
get_SchemaImporterExtensions
get_Schemas
get_Script
get_ScriptArrays
get_ScriptBlocks
get_ScriptControlDescriptor_IDNotSettable
get_ScriptControlManager
get_ScriptControlManager_ExtenderControlNotRegistered
get_ScriptControlManager_NoTargetControlTypes
get_ScriptControlManager_RegisterExtenderControlTooEarly
get_ScriptControlManager_RegisterExtenderControlTooLate
get_ScriptControlManager_RegisterScriptControlTooEarly
get_ScriptControlManager_RegisterScriptControlTooLate
get_ScriptControlManager_ScriptControlNotRegistered
get_ScriptControlManager_TargetControlTypeInvalid
get_ScriptControls
get_ScriptDisposes
get_ScriptExpandos
get_ScriptHiddenFields
get_Scripting
get_ScriptManager
get_ScriptManager_AllowCustomErrorsRedirect
get_ScriptManager_AsyncPostBackError
get_ScriptManager_AsyncPostBackErrorMessage
get_ScriptManager_AsyncPostBackNotInPartialRenderingMode
get_ScriptManager_AsyncPostBackTimeout
get_ScriptManager_AuthenticationService
get_ScriptManager_CannotAddHistoryPointOutsideOfAsyncPostBack
get_ScriptManager_CannotAddHistoryPointWithHistoryDisabled
get_ScriptManager_CannotChangeEnableHistory
get_ScriptManager_CannotChangeEnablePartialRendering
get_ScriptManager_CannotChangeEnableScriptGlobalization
get_ScriptManager_CannotChangeSupportsPartialRendering
get_ScriptManager_CannotRegisterBothPostBacks
get_ScriptManager_CannotRegisterScriptInMultipleCompositeReferences
get_ScriptManager_CannotSetSupportsPartialRenderingWhenDisabled
get_ScriptManager_ClientNavigateHandler
get_ScriptManager_CompositeScript
get_ScriptManager_EmptyPageUrl
get_ScriptManager_EnableHistory
get_ScriptManager_EnablePageMethods
get_ScriptManager_EnablePartialRendering
get_ScriptManager_EnableScriptGlobalization
get_ScriptManager_EnableScriptLocalization
get_ScriptManager_EnableSecureHistoryState
get_ScriptManager_FrameworkFailedToLoad
get_ScriptManager_InvalidControlRegistration
get_ScriptManager_LoadScriptsBeforeUI
get_ScriptManager_Navigate
get_ScriptManager_OnlyOneScriptManager
get_ScriptManager_PageUntitled
get_ScriptManager_ProfileService
get_ScriptManager_ResolveCompositeScriptReference
get_ScriptManager_ResolveScriptReference
get_ScriptManager_RoleService
get_ScriptManager_ScriptMode
get_ScriptManager_ScriptPath
get_ScriptManager_Scripts
get_ScriptManager_Services
get_ScriptManager_UpdatePanelNotRegistered
get_ScriptMode
get_ScriptName
get_ScriptPath
get_ScriptReference_Assembly
get_ScriptReference_AssemblyRequiresName
get_ScriptReference_IgnoreScriptPath
get_ScriptReference_InvalidReleaseScriptName
get_ScriptReference_InvalidReleaseScriptPath
get_ScriptReference_Name
get_ScriptReference_NameAndPathCannotBeEmpty
get_ScriptReference_NotifyScriptLoaded
get_ScriptReference_Path
get_ScriptReference_ResourceUICultures
get_ScriptReference_ScriptMode
get_ScriptRegistration
get_ScriptRegistrationManager_ControlNotOnPage
get_ScriptRegistrationManager_InvalidChars
get_ScriptRegistrationManager_NoCloseTag
get_ScriptRegistrationManager_NoTags
get_ScriptResourceAbsolutePath
get_ScriptResourceAllowNonJsFiles
get_ScriptResourceHandler
get_ScriptResourceHandler_AssemblyNotFileBased
get_ScriptResourceHandler_DuplicateScriptResources
get_ScriptResourceHandler_InvalidRequest
get_ScriptResourceHandler_ResourceUrlLongerThan1024Characters
get_ScriptResourceHandler_TypeNameMismatch
get_ScriptResourceHandler_UnknownResource
get_ScriptResourceName
get_Scripts
get_ScriptStartupBlocks
get_ScriptSubmitStatements
get_ScriptType
get_ScriptTypeId
get_Second
get_SectionGroups
get_Sections
get_Segments
get_Select
get_SelectArguments
get_SelectedDataKey
get_SelectedIndex
get_SelectedItemTemplate
get_SelectedPersistedDataKey
get_SelectedValue
get_SelectNew
get_SelectNewParameters
get_SelectParameters
get_SerializeAs
get_SerializedValue
get_Serializer
get_Server
get_ServiceContractMappingList
get_ServiceDescription
get_ServiceDescriptionDialect
get_ServiceMapSchemaSet
get_ServiceReference_InlineScript
get_ServiceReference_Path
get_ServiceReference_PathCannotBeEmpty
get_Services
get_ServiceUri
get_ServiceUriNotFound
get_SettingsCacheIsMoreFresh
get_SettingsNames
get_SettingsNeedReset
get_SettingsStoredAs
get_SettingsValues
get_Severity
get_ShowFirstPageButton
get_ShowLastPageButton
get_ShowNextPageButton
get_ShowPreviousPageButton
get_SiteName
get_SkipAuthorization
get_SortDirection
get_SortDirectionInternal
get_SortExpression
get_SortExpressionInternal
get_SourceId
get_SourceIdSpecified
get_SourceUri
get_SourceUrl
get_SqlHelper_SqlEverywhereNotInstalled
get_StackTrace
get_StartRowIndex
get_State
get_StateFormatter
get_Status
get_StatusCode
get_StatusDescription
get_StoreOriginalValuesInViewState
get_StringRepresentation
get_SubStatusCode
get_Success
get_SupportedTypes
get_SupportsCallback
get_SupportsPartialRendering
get_SuppressContent
get_SyncRoot
get_TabIndex
get_Table
get_TableName
get_TagKey
get_TargetCompileUnit
get_TargetConfiguration
get_TargetControlID
get_TargetControlType
get_TargetNamespace
get_TemplatePagerField_OnPagerCommand
get_TemplatePagerField_PagerTemplate
get_TemplatePagerField_UnhandledEvent
get_Ticks
get_Timer_IntervalMustBeGreaterThanZero
get_Timer_TimerEnable
get_Timer_TimerInterval
get_Timer_TimerTick
get_Title
get_ToolTip
get_TotalRowCount
get_Triggers
get_TrySkipIisCustomErrors
get_Type
get_TypeData
get_TypedSerializers
get_TypeId
get_TypeName
get_TypeNamespace
get_TypeResolver
get_Types
get_UnhandledExceptionEventLogMessage
get_Unicode
get_UniqueID
get_UpdateCheck
get_UpdateMode
get_UpdatePanel_CannotModifyControlCollection
get_UpdatePanel_CannotSetContentTemplate
get_UpdatePanel_ChildrenAsTriggers
get_UpdatePanel_ChildrenTriggersAndUpdateAlways
get_UpdatePanel_RenderMode
get_UpdatePanel_SetPartialRenderingModeCalledOnce
get_UpdatePanel_Triggers
get_UpdatePanel_UpdateConditional
get_UpdatePanel_UpdateMode
get_UpdatePanel_UpdateTooLate
get_UpdatePanelControlTrigger_ControlID
get_UpdatePanelControlTrigger_ControlNotFound
get_UpdatePanelControlTrigger_NoControlID
get_UpdatePanelMaxScriptLength
get_UpdateParameters
get_UpdateProgress_AssociatedUpdatePanelID
get_UpdateProgress_DisplayAfter
get_UpdateProgress_DisplayAfterInvalid
get_UpdateProgress_DynamicLayout
get_UpdateProgress_NoUpdatePanel
get_UpdateProgress_ProgressTemplate
get_UpdateProgress_TemplateRequired
get_Url
get_UseGet
get_UseHttpGet
get_User
get_UserAgent
get_UserAppDataPath
get_UserIsNotAuthenticated
get_UserName
get_UseSerializerForFaults
get_UseSerializerForFaultsSpecified
get_UseXmlResponse
get_UtcNow
get_UTF8
get_ValidationGroup
get_Value
get_Values
get_VaryByParams
get_Version
get_View
get_ViewState
get_VirtualDirectories
get_VirtualPath
get_VirtualPathProvider
get_VirtualPaths
get_Visible
get_W3CDomVersion
get_WebResource
get_WebResourceUtil_AssemblyDoesNotContainDebugWebResource
get_WebResourceUtil_AssemblyDoesNotContainEmbeddedResource
get_WebResourceUtil_AssemblyDoesNotContainReleaseWebResource
get_WebService_Error
get_WebService_InvalidGenerateScriptType
get_WebService_InvalidInlineVirtualPath
get_WebService_InvalidVerbRequest
get_WebService_InvalidWebServiceCall
get_WebService_InvalidXmlReturnType
get_WebService_MissingArg
get_WebService_NoScriptServiceAttribute
get_WebService_NoWebServiceData
get_WebService_NoWebServiceDataInlineScript
get_WebService_RedirectError
get_WebService_UnknownWebMethod
get_WebServiceErrorEventCode
get_WebServices
get_Where
get_WhereParameters
get_Width
get_Wrapped
get_WrappedSpecified
get_WriteAccessProperties
get_WriteMethods
get_Writer
get_WsdlDocuments
get_XmlSchemaDialect
get_XmlSerializeString
get_Year
get_Zip
GetAddMethod
GetAllPropertiesForCurrentUser
GetAllRoles
GetAllUpdatePanelIDs
GetAllUsers
GetAppClientData
GetAppDomainAppVirtualPath
GetApplicationService
GetArrayRank
GetAssembly
GetAssemblyFileVersion
GetAssemblyInfo
GetAssemblyInfoInternal
GetAssemblyModifiedTime
GetAssemblyNeutralCulture
GetAsyncPostBackControlIDs
GetAttribute
GetBoxedValue
GetBytes
GetCachedBuildDependencySet
GetCacheDependency
GetCacheKey
GetChildUpdatePanelIDs
GetClientCultureScriptBlock
GetClientProxyScript
GetClientTypeFromServerType
GetClientTypeName
GetClientTypeNamespace
GetCompiledType
GetComponents
GetConfigurationSection
GetConnection
GetConnectionString
GetConstructor
GetConstructors
GetContract
GetControlIDsFromList
GetControlRegistrationException
GetConverter
GetCookie
GetCookieFromDB
GetCookiesFromIECache
GetCookiesFromResponse
GetCredentials
GetCredsFromUI
GetCultureInfo
GetCurrent
GetCurrentUser
GetCustomAttributes
GetCustomErrorsSectionWithAssert
GetData
GetDataObjectType
GetDebugFromConfig
GetDebugName
GetDebugPath
GetDebugString
GetDefaultConnectionString
GetDefaultExtension
GetDefaultFileName
GetDefaultMembers
GetDirectory
GetDirectoryName
GetDirectoryNames
GetDynamicClass
GetElementKey
GetElementType
GetEmptyPageUrl
GetEnumerator
GetEvent
GetExtension
GetField
GetFields
GetFile
GetFileHash
GetFileName
GetFullDBFileName
GetFuncType
GetGeneratedNamespace
GetGenericArguments
GetGenericTypeDefinition
GetGetMethod
GetHandler
GetHashCode
GetHttpCode
GetHttpCodeForException
GetIdentifier
GetILGenerator
GetInlineClientProxyScript
GetInlineScript
GetInnerText
GetInstance
GetInterfaces
GetInvalidFileNameChars
GetIsCacheMoreFresh
GetItemIndex
GetItemProperties
GetJsonState
GetKey
GetKnownTypes
GetKnownTypes1System.Web.ApplicationServices.KnownTypesProvider
GetLanguageFromExtension
GetLastError
GetLastUserNameFromOffileStore
GetLastWriteTime
GetListName
GetLocalizedString
GetManifestResourceStream
GetMapFileReader
GetMetadataFileFullPath
GetMetadataSourceUrl
GetMethod
GetMethodData
GetMethods
GetName
GetNamedItem
GetNames
GetNeedToReset
GetNextNonEmptyChar
GetNonNullableType
GetNumberOfUsersOnline
GetNumericTypeKind
GetObject
GetObjectData
GetOrderedParameterValues
GetOriginalEntityState
GetOriginalValues
GetParameters
GetParameterValues
GetPartialDBFileName
GetPassword
GetPath
GetPathWithName
GetPathWithoutName
GetPostBackControlIDs
GetPostBackEventReference
GetPreparedContainerInfo
GetPreviousVersion
GetProfile
GetProfileForCurrentUser
GetProfilePropertiesMetadata
GetProperties
GetPropertiesForCurrentUser
GetPropertiesMetadata
GetProperty
GetPropertyMetadata
GetPropertyValue
GetPropertyValues
GetPropertyValuesCore
GetPropertyValuesFromSQL
GetPropertyValuesFromWeb
GetPropertyValuesFromWebCore
GetProxyPath
GetProxyTypeName
GetPublicKeyToken
GetQueryStringNavigateUrl
GetRawParams
GetRawParamsFromGetRequest
GetRawParamsFromPostRequest
GetReferencedAssemblies
GetRefreshingUpdatePanelIDs
GetRegisteredArrayDeclarations
GetRegisteredClientScriptBlocks
GetRegisteredDisposeScripts
GetRegisteredExpandoAttributes
GetRegisteredHiddenFields
GetRegisteredOnSubmitStatements
GetRegisteredStartupScripts
GetRequestStream
GetResourceManager
GetResourceName
GetResourceSet
GetResponse
GetResponseStream
GetResponseString
GetRetailFromConfig
GetRoleProvider
GetRolesForCurrentUser
GetRolesForUser
GetRolesForUserCore
GetRolesFromDBForUser
GetSchemaItemName
GetSchemaPropertyNameInXml
GetSchemaPropertyNameInXmlHelper
GetSchemaTypeName
GetScript
GetScriptDescriptors
GetScriptFromWebResourceInternal
GetScriptPath
GetScriptPathCached
GetScriptReferences
GetScriptResourceHandler
GetScriptResourceUrl
GetScriptResourceUrlImpl
GetSection
GetSectionGroup
GetSecureStringFromString
GetSerializedParameters
GetSerializer
GetService
GetServicePath
GetServiceUri
GetSetMethod
GetSettingsProperty
GetSortedAttributeArray
GetSqlCeConnection
GetSqlCeType
GetStateString
GetStaticMethod
GetStatusDescription
GetString
GetStringFromSecureString
GetTable
GetTableMemberInfo
GetTableMetaDataMembers
GetTagValue
GetTargetControlTypes
GetTargetControlTypesInternal
GetToolConfig
GetType
GetTypeCode
GetTypeFromHandle
GetTypeName
GetTypes
GetTypeStringRepresentation
GetUnderlyingType
GetUnicodeCategory
GetUnsupportedTypes
GetUpdatePanelIDsFromList
GetUrl
GetUrlFromName
GetUrlFromPath
GetUser
GetUserClientData
GetUserName
GetUserNameByEmail
GetUsersInRole
GetUserStoreForAssembly
GetValue
GetValueOrDefault
GetValues
GetView
GetViewNames
GetVirtualDirectory
GetWebApplicationSection
GetWebRefDirectoryVirtualPath
GetWebResourceUrl
GetWebResourceUrlInternal
GetWebServiceData
GetWebServiceTypeData
GetXsiType
GListViewItems that have type DataItem must be of type ListViewDataItem.
GreaterThan
GreaterThanEqual
GreaterThanOrEqual
Group
group
GroupBy
groupByParameters
GroupByParameters
groupByValues
GroupCollection
GroupItemCount
groupPlaceholder
GroupPlaceholderID
GroupSeparatorTemplate
GroupTemplate
gtc("
GThe ControlID property must be set on the trigger in UpdatePanel '{0}'.
GThe type '{0}' cannot be used in type sharing because it is not public.
GZipStream
h_gegmg
H'{0}' is invalid file name.  Absolute or relative path is not supported.
HandleCancel
HandleDelete
HandleDeleteCallback
HandleEdit
HandleEvent
HandleInsert
HandleInsertCallback
HandleProxyGenerationErrors
handler
Handler must be a function.
Handler not found.
HandlerWrapper
HandlerWrapperWithSession
HandleSelect
HandleSort
HandleUpdate
HandleUpdateCallback
HasAttributes
HasAuthenticationServiceManager
HashAlgorithm
hashCode
HashCodeCombiner
Hashtable
HasLoadProperties
HasProfileServiceManager
HasRoleServiceManager
HasTriggered
HCollection of parameters used in the projection during the Select query.
Header
HeaderEncoding
Headers
HeaderUtility
Height
hEvent raised after the context is created unless a query result is specified during the Selecting event.
HexParser
hfe\[Z
hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
hidden
hiddenField
hiddenFieldInitialValue
hiddenFieldName
HiddenFields
HiddenFieldToken
hiddenFieldValue
historyCannotAddHistoryPointWithHistoryDisabled
historyCannotEnableHistory
HistoryEventArgs
historyInvalidHistorySettingCombination
historyMissingFrame
historyMissingHiddenInput
HistoryStartup
honorCookieExpiry
HostingEnvironment
hSystem.Web.Extensions.Design, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
hThe EnableScriptGlobalization property cannot be changed during async postbacks or after the Init event.
hThe message contract '{0}' is defined in both '{1}' and '{2}', but only one contains message part '{3}'.
hThe Update method can only be called on UpdatePanel with ID '{0}' when UpdateMode is set to Conditional.
HThe URL of the image of the last page button if the ButtonType is Image.
HThe URL of the image of the next page button if the ButtonType is Image.
HtmlAttributeEncode
HtmlDecode
HtmlEncode
HtmlForm
HtmlFormWrapper
HtmlHead
HtmlTable
HtmlTableCell
HtmlTableRow
HtmlTextWriter
HtmlTextWriterAttribute
HtmlTextWriterStyle
HtmlTextWriterTag
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
http://schemas.datacontract.org/2004/07/
http://schemas.microsoft.com/2003/10/Serialization/
http://schemas.microsoft.com/ado/2007/06/edmx
http://schemas.microsoft.com/ws/2005/01/WSDL/Extensions/ContractInheritance
http://schemas.xmlsoap.org/disco/
http://schemas.xmlsoap.org/ws/2004/08/addressing
http://schemas.xmlsoap.org/ws/2004/09/mex
http://schemas.xmlsoap.org/ws/2004/09/policy
http://schemas.xmlsoap.org/wsdl/
http://www.w3.org/2001/XMLSchema
http://www.w3.org/ns/ws-policy
http://www.w3.org/XML/1998/namespace
HttpApplication
HttpBinding
HttpBrowserCapabilities
HttpBrowserCapabilitiesBase
HttpCacheability
HttpCachePolicy
HttpCachePolicyBase
HttpCachePolicyWrapper
HttpCacheVaryByParams
HttpCapabilitiesBase
httpCode
HttpContext
HttpContextBase
HttpContextWrapper
HttpCookie
HttpCookieCollection
HttpException
HttpOnly
HttpRequest
HttpRequestBase
HttpRequestWrapper
HttpResponse
httpResponse
HttpResponseBase
HttpResponseInternalBase
HttpResponseInternalWrapper
HttpResponseSubstitutionCallback
HttpRuntime
HttpServerUtility
HttpServerUtilityBase
HttpServerUtilityWrapper
HttpStatusCode
HttpUtility
HttpWebRequest
HttpWebResponse
HttpWorkerRequest
HTwo components with the same id '{0}' can't be added to the application.
HybridDictionary
HyperLink
-I^W8OooN
IAddSignatures
IApplicationSettingsProvider
IArithmeticSignatures
IAsyncResult
IAttributeAccessor
IBindableTemplate
IButtonControl
IClientFormsAuthenticationCredentialsProvider
IClientScriptManager
IClientUrlResolver
ICollection
ICollection`1
IComparer
IComparer`1
ICompilationSection
ICompositeControlDesignerAccessor
IContractGeneratorReferenceTypeLoader
IControl
IConvertible
ICustomAttributeProvider
ICustomErrorsSection
id1_ReferenceGroup
id10_Extensions
id10_MetadataFile
id11_ExtensionFile
id11_Extensions
id12_ExtensionFile
id12_FileName
id13_FileName
id13_Name
id14_MetadataType
id14_Name
id15_Ignore
id15_MetadataType
id16_Ignore
id16_IsMergeResult
id17_IsMergeResult
id17_SourceId
id18_SourceId
id18_SourceUrl
id19_Address
id19_SourceUrl
id2_Item
id20_Address
id20_Protocol
id21_Protocol
id22_GenerateAsynchronousMethods
id23_EnableDataBinding
id24_ExcludedTypes
id25_ExcludedType
id26_ImportXmlTypes
id27_GenerateInternalTypes
id28_GenerateMessageContracts
id29_NamespaceMappings
id3_DataSvcMapFile
id3_SvcMapFile
id30_NamespaceMapping
id31_CollectionMappings
id32_CollectionMapping
id33_GenerateSerializableTypes
id34_Serializer
id35_UseSerializerForFaults
id36_Wrapped
id37_ReferenceAllAssemblies
id38_ReferencedAssemblies
id39_ReferencedAssembly
id4_ID
id40_ReferencedDataContractTypes
id41_ReferencedDataContractType
id42_ServiceContractMappings
id43_ServiceContractMapping
id44_ContractMapping
id45_TargetNamespace
id46_TypeName
id47_ReferencedType
id48_AssemblyName
id49_ReferencedCollectionType
id5_Item
id50_Category
id51_ClrNamespace
id6_ClientOptions
id6_MetadataSources
id7_MetadataSource
id7_MetadataSources
id8_Metadata
id8_MetadataSource
id9_Metadata
id9_MetadataFile
IDataItemContainer
IDataSource
Identifier
Identifier expected
Identity
identity
IDeploymentSection
IDictionary
IDictionary`2
IDictionaryEnumerator
IDisposable
IDReferencePropertyAttribute
IDynamicDataSource
IDynamicQueryable
IDynamicValidatorException
IEnumerable
IEnumerable`1
IEnumerableSignatures
IEnumerator
IEnumerator`1
IEqualityComparer
IEqualityComparer`1
IEqualitySignatures
IEquatable`1
iEvent raised before the context is created unless a query result is specified during the Selecting event.
IExtenderControl
if (!window) this.window = this;
if (!window.XMLHttpRequest) {
if ((this.get_enabled()) && (stopped)){
if (navigator.userAgent.indexOf(' MSIE ') > -1) {
if (Sys.WebForms && Sys.WebForms.PageRequestManager) {
if (Sys.WebForms && Sys.WebForms.PageRequestManager){
if (this._pageRequestManager !== null ) {
if (this._pageRequestManager !== null ){
if (typeof(
if (typeof(__cultureInfo) === 'undefined') {
if (typeof(Sys) === 'undefined') throw new Error('
If a data source does not return ICollection and cannot return the total row count, it cannot be used by the {0} to implement server-side paging.
if(typeof(Sys)!=='undefined')Sys.Application.notifyScriptLoaded();
IFires when a field is sorted in the ListView, after the sort is complete.
If-Modified-Since
IFormatProvider
ignorablePropertyTypes
Ignore
IgnoreScriptPath
IgnoreSpecified
IHtmlForm
IHttpAsyncHandler
IHttpHandler
IHttpHandlerFactory
IHttpModule
IIdentity
ILGenerator
ILinqToSql
IList
IList`1
ILogicalSignatures
Image
ImageButton
imageUrl
ImportActualType
ImportAllBindings
ImportAllContracts
ImportAllEndpoints
ImportAnnotation
ImportContract
ImportEndpoint
ImportEnum
importer
ImportErrors
importErrors
ImportExtensionServiceProvider
ImportOptions
ImportWCFModel
ImportXmlTypes
INamingContainer
includeChildrenAsTriggersPrefix
includePrimaryKey
includeQuotes
IncompatibleOperandsError
InControlTree
index
Index
indexBounds
IndexOf
IndexOfAny
Indicates whether the UpdatePanel will refresh on every asynchronous postback or only as the result of a specific action, such as a call to UpdatePanel.Update().
INegationSignatures
InformationalVersion
Inherit
Inherited
InitCallbacks
InitComplete
Initialize
InitializeCachePolicy
InitialValue
InitIDs
InitKnownTypes
InitWebServiceEnumData
Inline
InlineScript
inlineScript
innerException
InnerExceptions
innerExceptions
InnerExceptions
INonBindingContainer
INotSignatures
input
inputParameters
Insert
INSERT INTO ApplicationProperties(PropertyName, PropertyValue) VALUES (N'LastLoggedInDate', @Date)
INSERT INTO ApplicationProperties(PropertyName, PropertyValue) VALUES (N'LastLoggedInUserName', @UserName)
INSERT INTO Roles(UserName, RoleName) VALUES(@UserName, @RoleName)
INSERT INTO Settings (PropertyName, PropertyStoredAs, PropertyValue) VALUES  (@PropName, 'I', @PropValue)
INSERT INTO Settings (PropertyName, PropertyStoredAs, PropertyValue) VALUES (@PropName, 'B', @PropVal)
INSERT INTO Settings (PropertyName, PropertyStoredAs, PropertyValue) VALUES (@PropName, 'N', '')
INSERT INTO Settings (PropertyName, PropertyStoredAs, PropertyValue) VALUES (@PropName, 'S', @PropVal)
INSERT INTO UserProperties (PropertyName, PropertyValue) VALUES (@PropName, @PropValue)
INSERT INTO UserProperties (PropertyName, PropertyValue) VALUES(@RolesCachedDate, @Date)
INSERT INTO UserProperties(PropertyName, PropertyValue) VALUES (@PasswordHashName, @PasswordHashValue)
INSERT INTO UserProperties(PropertyName, PropertyValue) VALUES (@PasswordSaltName, @PasswordSaltValue)
InsertDataObject
Inserted
Inserting
InsertItem
InsertItemPosition
InsertItemTemplate
InsertNewItem
InsertOnSubmit
InsertParameters
insertPosition
Instance
instance
InstanceContextMode
InstantiateEmptyDataTemplate
InstantiateEmptyItemTemplate
InstantiateGroupSeparatorTemplate
InstantiateGroupTemplate
InstantiateIn
InstantiateInsertItemTemplate
InstantiateItemSeparatorTemplate
InstantiateItemTemplate
Int16
Int32
Int64
IntegerLiteral
IntegerValidator
InternalName
InternalsVisibleToAttribute
InternetGetCookieW
InternetSetCookieW
Interval
interval
Interval
IntPtr
Invalid integer literal '{0}'
Invalid JSON primitive: {0}.
'Invalid object passed in, '{' expected.
Invalid real literal '{0}'
invalidExecutorType
invalidHttpVerb
invalidNameSpace
invalidOperation
InvalidOperationException
invalidTimeout
InvocationExpression
Invoke
invokeCalledTwice
InvokeMember
InvokeMethod
IOperationBehavior
IOrderedDictionary
IPage
IPageableItemContainer
'IPageableItemContainer '{0}' not found.
IPersistedSelector
IPolicyImportExtension
IPostBackDataHandler
IPostBackEventHandler
IPrincipal
IQueryable
IQueryable`1
IQueryProvider
IRelationalSignatures
IRequiresSessionState
IsAnyTypeGenerated
IsApplicable
IsAppRelativePath
isApproved
IsArrayListCompatible
IsAsmxUri
IsAssignableFrom
IsAsyncPostBackRequest
IsAuthenticated
isAuthenticated
IsBetterThan
IsBrowser
IsBufferValid
IsBuiltInHiddenField
IsCacheMoreFresh
IsClientConnected
IsClientInstantiatableType
IsClientProxyDebugRequest
IsClientProxyRequest
IsCompatibleWith
IsCompressionEnabled
IsControlRegistrationActive
IScriptControl
IScriptManager
IScriptManagerInternal
IScriptResourceHandler
IsCurrentUserInRole
IsDataSet
IsDBNull
IsDebug
isDebug
isDebuggingEnabled
IsDebuggingEnabled
IsDefined
IsDefinedInCodeAttributeCollection
IsDigit
IsEncodingInAcceptList
IsEnumType
ISerializable
IServiceProvider
IsExistingFile
IsFromSystemWebExtensions
IsGenericDictionary
IsIdentifierPart
IsIdentifierStart
IsInAsyncPostBack
IsInPartialRendering
IsInRole
Isinst
IsInstanceOfType
isItem
IsJsonSerialized
isJsonSerialized
IsKey
IsLastPage
IsLetterOrDigit
IsLocalFileName
IsLoggedIn
IsMatch
IsMergeResult
IsMergeResultSpecified
IsNavigating
IsNewContext
IsNextElementArray
IsNextElementDateTime
IsNextElementObject
IsNextElementString
IsNonNullableValueType
isNullable
IsNullableType
IsNullOrEmpty
IsNumericType
IsOffline
IsolatedStorageFile
IsolatedStorageFileStream
IsPageType
ISpecifies whether the field value is HTML-encoded before it is displayed.
IsPersistedProperty
IsPersistent
isPersistent
IsPostBack
IsPredefinedType
IsReadOnly
IsRelativeUrl
IsRequestBeingRedirected
IsRequired
IsRestMethodCall
IsRestRequest
IsReusable
IsScriptResourceRequest
IsServerPagingEnabled
IsSignedIntegralType
IsSoapAsmxPort
IsSpecialConnectionString
IsStartElement
IsStatic
IsStaticReference
IsSubclassOf
IsSynchronized
IStateFormatter
IStateManager
IsTrackingViewState
IsTypeShareable
ISubtractSignatures
IsULong
isULong
IsUnsignedIntegralType
IsUserInRole
IsValid
IsValidStart
IsVBCodeDomProvider
IsVolatile
IsWarning
isWarning
isWCF
IsWCFServiceType
IsWebServiceType
IsWhiteSpace
IsXmlnsAttribute
ITable
ItemCanceling
ItemCommand
ItemCountViewStateKey
ItemCreated
ItemDataBound
ItemDeleted
ItemDeleting
ItemEditing
itemIndex
ItemIndex
ItemInserted
ItemInserting
itemPlaceholder
ItemPlaceholderID
ITemplate
Items
items
ItemSeparatorTemplate
ItemTemplate
itemType
ItemType
itemTypeName
ItemUpdated
ItemUpdating
itemValues
iThe TableName property of LinqDataSource '{0}' cannot be changed after the data context has been created.
IThe URL of the image of the first page button if the ButtonType is Image.
itType
ITypeDescriptorContext
ITypedList
IUpdatePanel
IWcfReferenceReceiveContextInformation
IWsdlImportExtension
jA behavior with name '{0}' already exists or it is the name of an existing property on the target element.
JavaScript
JavaScriptConverter
JavaScriptObjectDeserializer
JavaScriptSerializer
JavaScriptString
JavaScriptTypeResolver
jCan't add a handler for the error event using this method. Please set the window.onerror property instead.
JSON_ArrayTypeNotSupported
JSON_BadEscape
JSON_CannotConvertObjectToType
JSON_CannotCreateListType
JSON_CircularReference
JSON_DepthLimitExceeded
JSON_DeserializerTypeMismatch
JSON_DictionaryTypeNotSupported
JSON_ExpectedOpenBrace
JSON_IllegalPrimitive
JSON_InvalidArrayEnd
JSON_InvalidArrayExpectComma
JSON_InvalidArrayExtraComma
JSON_InvalidArrayStart
JSON_InvalidEnumType
JSON_InvalidMaxJsonLength
JSON_InvalidMemberName
JSON_InvalidObject
JSON_InvalidRecursionLimit
JSON_MaxJsonLengthExceeded
JSON_NoConstructor
JSON_StringNotQuoted
JSON_UnterminatedString
JSON_ValueTypeCannotBeNull
jsonerror
jsonSerialization
JsonSerialization
jsonSerialization
JSpecifies profile properties that should be rendered inline with the page.
JSpecifies whether the field value should be converted to a null reference.
KCannot compute Count for a data source that does not implement ICollection.
KCannot set enableHistory to false when ScriptManager.EnableHistory is true.
KeepInEditMode
KeepInInsertMode
keyArray
KeyCollection
KeyedByTypeCollection`1
KeysCollection
keySelector
KeyValuePair`2
keywordIif
keywordIt
keywordNew
keywords
kFor the history feature to work in Safari 2, the page must have a hidden input element with id '__history'.
KIndicates the type of scripts to load when more than one type is available.
knownItemTable
knownTypeAttributeTarget
knownTypes
KnownTypesProvider
kSpecifies if the script resource loader should automatically append a script loaded notification statement.
KSpecifies the algorithm for choosing between the debug and release scripts.
KSpecifies the name of the data field to which the DynamicControl will bind.
KThe EnablePartialRendering property cannot be changed after the Init event.
l(l]lql
l/lyl
LA circular reference was detected while serializing an object of type '{0}'.
Label
Lambda
lambda
LambdaExpression
LAn extender can't be in a different UpdatePanel than the control it extends.
LanguageOption
LastIndexOf
LastIndexOfAny
LastItem
LastLoggedInDateUtc
LastLoggedInUserName
LastPageImageUrl
LastPageText
Layout
LayoutCreated
LayoutKind
LayoutTemplate
Ldarg_0
Ldarg_1
Ldc_I4_0
Ldc_I4_1
Ldfld
Ldloc
LegalCopyright
length
LengthEncodeDelimiter
LessGreater
LessThan
LessThanEqual
LessThanOrEqual
Level
LFires when an item is selected in the ListView, before the item is selected.
LineNumber
LinePosition
LinkButton
LinqDataSource
LinqDataSource '{0}' only supports a single view named '{1}'. You may also leave the view name empty for the default view to be chosen.
LinqDataSource.ico
LinqDataSource_AutoGenerateOrderByClause
LinqDataSource_AutoGenerateWhereClause
LinqDataSource_AutoPage
LinqDataSource_AutoSort
LinqDataSource_ContextCreated
LinqDataSource_ContextCreating
LinqDataSource_ContextDisposing
LinqDataSource_ContextTypeName
LinqDataSource_Deleted
LinqDataSource_DeleteParameters
LinqDataSource_Deleting
LinqDataSource_Description
LinqDataSource_DisplayName
LinqDataSource_EnableDelete
LinqDataSource_EnableInsert
LinqDataSource_EnableObjectTracking
LinqDataSource_EnableUpdate
LinqDataSource_GroupBy
LinqDataSource_GroupByParameters
LinqDataSource_Inserted
LinqDataSource_Inserting
LinqDataSource_InsertParameters
LinqDataSource_InvalidViewName
LinqDataSource_OrderBy
LinqDataSource_OrderByParameters
LinqDataSource_OrderGroupsBy
LinqDataSource_OrderGroupsByParameters
LinqDataSource_Select
LinqDataSource_Selected
LinqDataSource_Selecting
LinqDataSource_SelectParameters
LinqDataSource_StoreOriginalValuesInViewState
-LinqDataSource_StoreOriginalValuesInViewState
LinqDataSource_TableName
LinqDataSource_Updated
LinqDataSource_UpdateParameters
LinqDataSource_Updating
LinqDataSource_Where
LinqDataSource_WhereParameters
LinqDataSourceAutoGeneratedWhere
LinqDataSourceContextData
LinqDataSourceContextEventArgs
LinqDataSourceDeleteEventArgs
LinqDataSourceDisposeEventArgs
LinqDataSourceEditData
LinqDataSourceHelper
LinqDataSourceInsertEventArgs
LinqDataSourceSelectEventArgs
LinqDataSourceStatusEventArgs
LinqDataSourceUpdateEventArgs
LinqDataSourceValidationException
LinqDataSourceValidationException_ValidationFailed
LinqDataSourceView
LinqDataSourceView_CannotConvertType
LinqDataSourceView_ContextTypeNameChanged
LinqDataSourceView_ContextTypeNameNotFound
LinqDataSourceView_ContextTypeNameNotSpecified
LinqDataSourceView_DeleteNotSupported
LinqDataSourceView_EnableObjectTrackingChanged
LinqDataSourceView_GroupByNotSupportedOnEdit
LinqDataSourceView_InsertNotSupported
LinqDataSourceView_InsertRequiresValues
LinqDataSourceView_InvalidContextType
LinqDataSourceView_InvalidOrderByFieldName
LinqDataSourceView_InvalidParameterName
LinqDataSourceView_InvalidTablePropertyType
LinqDataSourceView_OrderByAlreadySpecified
LinqDataSourceView_OrderGroupsByRequiresGroupBy
LinqDataSourceView_OriginalValuesNotFound
LinqDataSourceView_PagingNotHandled
LinqDataSourceView_ParametersMustBeNamed
LinqDataSourceView_SelectNewNotSupportedOnEdit
LinqDataSourceView_TableCannotBeStatic
LinqDataSourceView_TableNameChanged
LinqDataSourceView_TableNameNotFound
LinqDataSourceView_TableNameNotSpecified
LinqDataSourceView_UpdateNotSupported
LinqDataSourceView_ValidationFailed
LinqDataSourceView_WhereAlreadySpecified
linqToSql
LinqToSqlWrapper
List`1
listAccessors
ListDictionary
ListView
ListView '{0}' has a GroupItemCount specified on it but no GroupTemplate. A GroupTemplate must be present for ListView to render groups.
ListView with id '{0}' must have a data source that either implements ICollection or can perform data source paging if AllowPaging is true.
ListView.ico
ListView_AlternatingItemTemplate
ListView_ContainerNameMustNotBeEmpty
ListView_ConvertEmptyStringToNull
ListView_DataKeyNames
ListView_DataKeyNamesMustBeSpecified
ListView_DataKeys
ListView_DataSourceDoesntSupportPaging
ListView_DataSourceMustBeCollectionWhenNotDataBinding
ListView_EditIndex
ListView_EditItem
ListView_EditItemTemplate
ListView_EmptyDataTemplate
ListView_EmptyItemTemplate
ListView_EnableDataBoundControlManager
ListView_EnableModelValidation
ListView_GroupContainerID
ListView_GroupItemCount
ListView_GroupItemCountNoGroupTemplate
ListView_GroupPlaceholderID
ListView_GroupSeparatorTemplate
ListView_GroupTemplate
ListView_InsertItem
ListView_InsertItemPosition
ListView_InsertItemTemplate
ListView_InsertTemplateRequired
ListView_InvalidCancel
ListView_InvalidDelete
ListView_InvalidEdit
ListView_InvalidInsert
ListView_InvalidSelect
ListView_InvalidUpdate
ListView_ItemPlaceholderID
ListView_Items
ListView_ItemSeparatorTemplate
ListView_ItemsNotDataItems
ListView_ItemTemplate
ListView_ItemTemplateRequired
ListView_LayoutTemplate
ListView_Missing_VirtualItemCount
ListView_NeedICollectionOrTotalRowCount
ListView_NoGroupPlaceholder
ListView_NoInsertItem
ListView_NoItemPlaceholder
ListView_NullView
ListView_OnItemCanceling
ListView_OnItemCommand
ListView_OnItemCreated
ListView_OnItemDataBound
ListView_OnItemDeleted
ListView_OnItemDeleting
ListView_OnItemEditing
ListView_OnItemInserted
ListView_OnItemInserting
ListView_OnItemUpdated
ListView_OnItemUpdating
ListView_OnLayoutCreated
ListView_OnPagePropertiesChanged
ListView_OnPagePropertiesChanging
ListView_OnSelectedIndexChanged
ListView_OnSelectedIndexChanging
ListView_OnSorted
ListView_OnSorting
ListView_SelectedIndex
ListView_SelectedItemTemplate
ListView_SortDirection
ListView_SortExpression
ListView_StyleNotSupported
ListView_StylePropertiesNotSupported
ListView_UnhandledEvent
ListViewCancelEventArgs
ListViewCancelMode
ListViewCommandEventArgs
ListViewContainer
ListViewDataItem
ListViewDeletedEventArgs
ListViewDeleteEventArgs
ListViewEditEventArgs
ListViewInsertedEventArgs
ListViewInsertEventArgs
ListViewItem
ListViewItemEventArgs
ListViewItemType
ListViewPagedDataSource
ListViewPagedDataSource_CannotGetCount
ListViewPagedDataSource_EnumeratorMoveNextNotCalled
ListViewSelectEventArgs
ListViewSortEventArgs
ListViewTableCell
ListViewTableRow
ListViewUpdatedEventArgs
ListViewUpdateEventArgs
LiteralControl
literals
LoadAllAssemblies
LoadAssembly
LoadComplete
LoadCompleteEventHandler
LoadContent
LoadContentFromTextReader
LoadControlState
LoadDataKeysState
loadedAssemblies
loadedProperties
loadErrors
LoadErrors
LoadExtensionFile
LoadHint
LoadHistoryState
loadingErrors
LoadMapFile
LoadMetadata
LoadMetadataContent
LoadMetadataFile
LoadPolicyImportExtensions
LoadPostData
LoadProperties
LoadReferenedAssemblies
loadRoles
LoadRoles
LoadScriptsBeforeUI
LoadSharedCollectionTypes
LoadSharedDataContractTypes
LoadType
LoadViewState
LoadWsdlImportExtensions
LocalBuilder
LocalizableAttribute
localName
location
LockCookie
LogException
Login
LoginInternal
Logout
LScript resource handler can only serve resources from file-based assemblies.
lSystem.Resources.ResourceReader, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet
LThe URL of the image of the previous page button if the ButtonType is Image.
LYou must call MoveNext on IEnumerator before accessing the Current property.
LZ2+L
m m1mLmTm`mkm
m_Address
m_AssemblyName
m_BinaryContent
m_CachedMetadata
m_Category
m_ClientOptions
m_ClrNamespace
m_CollectionMappingList
m_ConfigurationName
m_ContentBuffer
m_ContractType
m_EnableDataBinding
m_ErrorGeneratorState
m_ErrorInLoading
m_ExcludedTypeList
m_ExtensionFileList
m_FileName
m_GenerateAsynchronousMethods
m_GenerateInternalTypes
m_GenerateMessageContracts
m_GenerateSerializableTypes
m_Ignore
m_ImportXmlTypes
m_IsExistingFile
m_IsMergeResult
m_IsWarning
m_LineNumber
m_LinePosition
m_Message
m_MetadataDiscoveryDocument
m_MetadataFile
m_MetadataFormatError
m_MetadataList
m_MetadataServiceDescription
m_MetadataSourceList
m_MetadataType
m_MetadataXmlDocument
m_MetadataXmlSchema
m_Name
m_NamespaceMappingList
m_Protocol
m_ReferenceAllAssemblies
m_ReferencedAssemblyList
m_ReferencedDataContractTypeList
m_Serializer
m_ServiceContractMappingList
m_ServiceMapSchemaSet
m_SourceId
m_SourceUrl
m_TargetNamespace
m_TypeName
m_UseSerializerForFaults
m_UseSerializerForFaultsSpecified
m_Wrapped
m_WrappedSpecified
MA ProgressTemplate must be specified on UpdateProgress control with ID '{0}'.
MakeGenericMethod
MakeGenericType
MakePeriodTerminatedNamespacePrefix
MakeReadOnly
MakeValidTypeNameFromString
mapFile
mapFilePath
MapPath
MarkLabel
Marshal
Match
MatchCollection
MatchCollectionItemDelegate`1
MatchCollections
Matches
MatchMessageParts
MatchMessages
MatchOperationMessages
MatchOperations
MatchPortTypes
MatchXmlQualifiedNames
MaxIdentifierLength
maximumRows
MaximumRows
maximumRows
MaxInvalidPasswordAttempts
MaxJsonDeserializerMembers
maxJsonLength
MaxJsonLength
maxJsonLength
MaxJsonLimit
MCancel can only be called from the currently-edited record or an insert item.
MCollection of parameters used for the Where operator during the Select query.
member
Member '{0}' on the data context type '{1}' of LinqDataSource '{2}' is not a valid table. For Insert, Update and Delete the table must not be a static member.
MemberAssignment
MemberBinding
MemberDescriptor
MemberExpression
MemberFilter
MemberInfo
MemberInit
MemberInitExpression
MemberIsStatic
memberName
Membership
MembershipCreateStatus
MembershipPasswordFormat
MembershipProvider
MembershipProviderCollection
MembershipUser
MembershipUserCollection
MembershipValidate
MemberTypes
MemoryStream
MergablePropertyAttribute
MergeDictionaries
MergeMetadata
MergeProperties
MergeSchemas
MergeServiceUrls
message
Message
message1
message2
MessageBodyDescription
MessageCollection
MessageDescription
MessageDescriptionCollection
MessagePart
MessagePartCollection
MessagePartComparer
MessagePartDescription
MessagePartDescriptionCollection
messages
MetaAccessor
Metadata
metadata
metadataCollection
MetadataContent
MetadataConversionError
MetadataDiscoveryDocument
MetadataElement
MetadataExchange
MetadataFile
metadataFile
MetadataFile
MetadataFile,System.Web.Compilation.WCFModel.MetadataFile
metadataFormatError
MetadataFormatError
MetadataImporter
metadataItem
MetadataList
metadataList
MetaDataMember
MetadataSection
MetadataServiceDescription
MetadataSet
MetadataSource
MetadataSource.System.Web.Compilation.WCFModel.MetadataSource
MetadataSourceList
MetadataSources
MetadataSourcesT
MetadataT
MetadataType
MetadataXmlDocument
MetadataXmlSchema
MetaModel
MetaTable
MetaType
Method
method
'Method {0} has already been registered.
MethodAttributes
MethodBase
MethodBuilder
MethodCallExpression
MethodData
methodData
MethodDatas
MethodInfo
methodInfo
methodName
MethodName
methodNotFound
methodRegisteredTwice
methods
Microsoft
Microsoft Corporation
Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VisualStudio, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VisualStudio.Web, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VisualStudio.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
Microsoft.Web.Design.Client, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
MicrosoftAjax.debug.js
MicrosoftAjax.debug.js,System.Web.Resources.ScriptLibrary.Res.debug
MicrosoftAjax.js
MicrosoftAjax.js&System.Web.Resources.ScriptLibrary.Res
MicrosoftAjaxDataService.debug.js
MicrosoftAjaxDataService.js
MicrosoftAjaxTimer.debug.js
MicrosoftAjaxTimer.js
MicrosoftAjaxWebForms.debug.js
MicrosoftAjaxWebForms.debug.js5System.Web.Resources.ScriptLibrary.WebForms.Res.debug
MicrosoftAjaxWebForms.js
MicrosoftAjaxWebForms.js/System.Web.Resources.ScriptLibrary.WebForms.Res
MicrosoftJScript
MicrosoftPublicKey
MicrosoftPublicKeyFull
MicrosoftPublicKeyToken
MicrosoftVisualStudio
MicrosoftVisualStudioWeb
MicrosoftVisualStudioWindowsForms
MicrosoftVSDesigner
MicrosoftVSDesignerMobile
MicrosoftWebDesign
MIndicates whether custom error redirects will occur during an async postback.
MinimumEcmaScriptVersion
MinimumW3CDomVersion
MinLength
MinRequiredNonAlphanumericCharacters
MinRequiredPasswordLength
Minus
MissingManifestResourceException
MissingMethodException
mLinqDataSource '{0}' does not support the OrderGroupsBy property when the GroupsBy property has not been set.
Module
module
Module
ModuleBuilder
Modulo
Monitor
MoveNext
MovePrev
MoveToContent
MoveToElement
MoveToNextAttribute
mscoree.dll
Mscorlib
mscorlib
mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
MThe SupportsPartialRendering property cannot be changed after the Init event.
MThe TargetControlID of '{0}' is not valid. The value cannot be null or empty.
mThis event is raised to allow customization of the error message sent to the client during an async postback.
MulticastDelegate
Multiply
MYkXk#
n6nQnmn
name1
name2
NamedItem
NamedPermissionSet
NameObjectCollectionBase
Names
names
Namespace
Namespace,urn:schemas-microsoft-com:xml-dataservicemapT
Namespace+urn:schemas-microsoft-com:xml-wcfservicemapT
namespaceContainsObject
Namespace'http://asp.net/ApplicationServices/v200
Namespace'http://asp.net/ApplicationServices/v200TU
NamespaceMapping
NamespaceMapping0System.Web.Compilation.WCFModel.NamespaceMapping
NamespaceMappingList
NamespaceMappings
NamespaceMappingsF
NamespaceUri
NamespaceUri15
NameValueCollection
nAn InsertItemTemplate must be defined on ListView '{0}' if InsertItemPosition is set to FirstItem or LastItem.
Navigate
NavigateEvent
needType
NeeedToDoReset
Negate
NeutralResourcesLanguageAttribute
neutralSet
new Date(
newCollection
newDataObject
NewDataObject
newEditIndex
NewEditIndex
NewExpression
newField
NewGuid
newList
NewMaximumRows
NewObject
newObject
newPassword
newPasswordAnswer
newPasswordQuestion
newProperties
newSelectedIndex
NewSelectedIndex
NewStartRowIndex
newValue
newValues
NewValues
NextChar
NextPageImageUrl
NextPageText
NextPreviousButtonCssClass
NextPreviousPagerField
NextPreviousPagerField_ButtonCssClass
NextPreviousPagerField_ButtonType
NextPreviousPagerField_FirstPageImageUrl
NextPreviousPagerField_FirstPageText
NextPreviousPagerField_LastPageImageUrl
'NextPreviousPagerField_LastPageImageUrl
NextPreviousPagerField_LastPageText
NextPreviousPagerField_NextPageImageUrl
'NextPreviousPagerField_NextPageImageUrl
NextPreviousPagerField_NextPageText
NextPreviousPagerField_PreviousPageImageUrl
NextPreviousPagerField_PreviousPageText
'NextPreviousPagerField_PreviousPageText
NextPreviousPagerField_RenderDisabledButtonsAsLabels
NextPreviousPagerField_RenderNonBreakingSpacesBetweenControls
NextPreviousPagerField_ShowFirstPageButton
NextPreviousPagerField_ShowLastPageButton
NextPreviousPagerField_ShowNextPageButton
NextPreviousPagerField_ShowPreviousPageButton
-NextPreviousPagerField_ShowPreviousPageButton
NextPrevPagerField_DefaultFirstPageText
'NextPrevPagerField_DefaultFirstPageText
NextPrevPagerField_DefaultLastPageText
NextPrevPagerField_DefaultNextPageText
NextPrevPagerField_DefaultPreviousPageText
NextToken
No IPageableItemContainer was found. Verify that either the DataPager is inside an IPageableItemContainer or PagedControlID is set to the control ID of an IPageableItemContainer.
No 'it' is in scope
No web service found at: {0}.
No web service found at: {0}. This error can occur if a ServiceReference to a WCF service has InlineScript set to 'true'. For WCF services InlineScript should be 'false'.
NonVisualControlAttribute
nosniff
notAMethod
notAnInterface
notATypeName
NotEqual
NotifyParentPropertyAttribute
NotifyScriptLoaded
notifyScriptLoaded
notImplemented
NotImplementedException
NotSupportedException
NSort expression used to sort the data source to which the ListView is binding.
NThe type names for the debug and release versions of resource {0} don't match.
Nullable`1
Nullable<{0}>
nullLiteral
nullWebRequest
Number
Number.__class = true;
Number.__typeName = 'Number';
Number._parse = function Number$_parse(value, cultureInfo) {
Number._parseNumberNegativePattern = function Number$_parseNumberNegativePattern(value, numFormat, numberNegativePattern) {
Number.parseInvariant = function Number$parseInvariant(value) {
Number.parseLocale = function Number$parseLocale(value) {
Number.prototype._toFormattedString = function Number$_toFormattedString(format, cultureInfo) {
Number.prototype.format = function Number$format(format) {
Number.prototype.localeFormat = function Number$localeFormat(format) {
numberFormat
NumberFormatInfo
NumberStyles
NumericButtonCssClass
NumericPagerField
NumericPagerField_ButtonCount
NumericPagerField_ButtonType
NumericPagerField_CurrentPageLabelCssClass
NumericPagerField_DefaultNextPageText
NumericPagerField_DefaultPreviousPageText
NumericPagerField_NextPageImageUrl
NumericPagerField_NextPageText
NumericPagerField_NextPreviousButtonCssClass
NumericPagerField_NumericButtonCssClass
'NumericPagerField_NumericButtonCssClass
NumericPagerField_PreviousPageImageUrl
NumericPagerField_PreviousPageText
NumericPagerField_RenderNonBreakingSpacesBetweenControls
NWhether disabled pager links should be rendered as labels rather than buttons.
o/oDo_odo
O`f ;fg
o<K:K+)
object
Object
Object is not a DataPagerField.
Object.__class = true;
Object.__typeName = 'Object';
Object.getType = function Object$getType(instance) {
Object.getTypeName = function Object$getTypeName(instance) {
ObjectConverter
ObjectDisposedException
ObjectInstance
ObjectReference
objectsInUse
objectToSerialize
OccursUnbounded
OCollection of parameters used for the GroupBy operator during the Select query.
OCollection of parameters used for the OrderBy operator during the Select query.
OComponents must be initialized before they are added to the Application object.
offset
OfType
oIndicates whether postbacks coming from the UpdatePanel's child controls will cause the UpdatePanel to refresh.
oldDataObject
oldList
oldPassword
oldValues
OldValues
OMore than one ScriptResourceAttribute points to script '{0}' in assembly '{1}'.
OnAsyncPostBackError
OnAuthenticating
OnBubbleEvent
OnClearComplete
OnContextCreated
OnContextCreating
OnContextDisposing
OnCreatingCookie
OnDataBinding
OnDataSourceViewChanged
OnDeleted
OnDeleting
OnEvent
OnException
OnFieldChanged
OnFieldsChanged
OnInit
OnInsertComplete
OnInserted
OnInserting
OnItemCanceling
OnItemCommand
OnItemCreated
OnItemDataBound
OnItemDeleted
OnItemDeleting
OnItemEditing
OnItemInserted
OnItemInserting
OnItemUpdated
OnItemUpdating
OnLayoutCreated
OnLoad
OnPageError
OnPageInitComplete
OnPagePreRender
OnPagePreRenderComplete
OnPagePropertiesChanged
OnPagePropertiesChanging
OnPagerCommand
OnPostAcquireRequestState
OnPreRender
OnRemoveComplete
OnResolveCompositeScriptReference
OnResolveScriptReference
OnSelected
OnSelectedIndexChanged
OnSelectedIndexChanging
OnSelecting
OnSelectingProvider
OnSorted
OnSorting
onSubmit
OnSubmitStatement
OnSubmitToken
onSuccess,onFailed,userContext
OnTick
OnTotalRowCountAvailable
OnUnload
OnUpdated
OnUpdating
OnUserValidated
OnValidate
OnValidatingProperties
op_Addition
op_Equality
op_GreaterThan
op_GreaterThanOrEqual
op_Inequality
op_LessThan
oPage cannot be null. Please ensure that this operation is being performed in the context of an ASP.NET request.
OPage properties cannot be set because no IPageableItemContainer has been found.
OpCode
OpCodes
OpenBracket
openConn
OpenMappedWebConfiguration
OpenParen
OpenText
operation
Operation
OperationCollection
OperationComparer
OperationContractAttribute
OperationDescription
OperationDescriptionCollection
OperationFault
OperationFaultCollection
OperationFaultComparer
OperationInput
OperationMessage
OperationMessageCollection
OperationOutput
operationX
operationY
opName
options
OqPMR
Order
OrderBy
OrderByDescending
orderByOrderedValues
orderByParameters
OrderByParameters
OrderedDictionary
OrderedDictionary`2
OrderedDictionaryStateHelper
OrderGroupsBy
orderGroupsByParameters
OrderGroupsByParameters
orderGroupsByValues
ordering
OrElse
originalArgs
originalCollection
OriginalDataObject
originalFactory
OriginalFilename
originalHandler
originalItem
originalNamespace
originalObject
OriginalObject
originalValue
OriginalValueMatches
oThe ContextTypeName property of LinqDataSource '{0}' cannot be changed after the data context has been created.
oThe TableName property of LinqDataSource '{0}' must specify a table property or field on the data context type.
oThe template used in the GroupTemplate when the number of remaining data items is less than the GroupItemCount.
oThe type '{0}' is listed as a shared data contract type, but is also listed in the type sharing exclusion list.
other
oType '{0}' is not supported for serialization/deserialization of a dictionary, keys must be strings or objects.
OutAttribute
outAttribute
outerContainer
Output
output
OutputEmptyPage
owner
Owner
owner
p*r]U
p*rAQ
pA comma-delimited string of valid UI cultures supported by the path. ResourceUICultures is only valid with Path.
PA control with ID '{0}' could not be found for the trigger in UpdatePanel '{1}'.
PADPADP
PADPADP 
PADPADPg
PADPADPn&C
PADPADPpQD
PADPADPZ|
pageAlwaysActive
PageClientProxyGenerator
pageControl
PagedControlID
PageEventArgs
pageIndex
PageIsValidAfterModelException
pageMethods
PageMethods
PageMethods.prototype = 
pageNumber
PagePropertiesChanged
PagePropertiesChanging
PagePropertiesChangingEventArgs
pager
Pager
PagerCommand
pageRedirect
PageRedirectToken
PageRequestManager
PageRequestManager_RegisterDataItemInNonAsyncRequest
PageRequestManager_RegisterDataItemTwice
pagerField
PagerField
PagerFieldCollection_InvalidType
PagerFieldCollection_InvalidTypeIndex
PagerTemplate
pageSize
PageSize
PageStatePersister
pageTitle
PageTitleToken
PageWrapper
Paging
Pair`2
panelsToRefreshIDs
param
ParamArrayAttribute
Parameter
Parameter count mismatch.
Parameter name: {0}
ParameterCollection
parameterCount
parameterData
ParameterDataDictionary
ParameterDatas
ParameterExpression
ParameterInfo
ParameterModifier
ParameterName
Parameters
parameters
ParameterType
parameterValues
paramName
paramNames
paramType
paramValue
paramValues
parentUpdatePanel
ParentUpdatePanel
Parse
ParseAdditive
ParseAggregate
ParseArgumentList
ParseArguments
ParseChildrenAttribute
ParseComparison
ParseElementAccess
ParseEnum
ParseError
ParseException
ParseException_ParseExceptionFormat
ParseExpression
ParseIdentifier
ParseIif
ParseIntegerLiteral
ParseIt
ParseLambda
ParseLambdaInvocation
ParseLogicalAnd
ParseLogicalOr
ParseMemberAccess
ParseMultiplicative
ParseNew
ParseNumber
ParseOrdering
ParseParenExpression
ParsePrimary
ParsePrimaryStart
ParseProfilePropertyList
ParseQueryString
ParseRealLiteral
ParserHtmlTextWriter
ParserState
ParserStringWriter
ParseString
ParseStringLiteral
ParseTypeAccess
ParseUnary
ParseWrites
partX
partY
password
Password
passwordAnswer
PasswordAttemptWindow
PasswordFormat
PasswordHash
PasswordHash_
passwordQuestion
PasswordSalt
PasswordSalt_
PasswordStrengthRegularExpression
PatchConfigurationName
PatchConfigurationNameInServiceContractAttribute
PatchOutParametersInVB
PatchTypeDeclaration
Path cannot be empty.
path1
path2
pathInfo
pathOrName
PathTooLongException
pathTranslated
pdatePanelControlTrigger
Percent
PerformDataBinding
PerformSelect
PerformSubstitution
PermissionSet
PermissionSetAttribute
PermitOnly
PersistChildrenAttribute
PersistenceMode
PersistenceModeAttribute
PFires when an item is selected in the ListView, after the selection is complete.
placeholderIndex
policy
Policy
policyImportExtensions
PolicyReference
PolicyURIs
PortCollection
portName
PortType
portType1
portType2
PortTypeCollection
portTypes
position
Position
PostBack
PostBack: 
postBackControlIDs
PostBackControlIDsToken
PostBackOptions
PostBackTrigger
postCollection
postDataKey
predefinedTypes
predicate
Prefix
PrepareNewHistoryPoint
PrepareResponseCache
PrepareResponseNoCache
PreRender
PreRenderComplete
PreSendRequestHeadersHandler
Previous
PreviousPageImageUrl
PreviousPageText
PRM_CannotRegisterTwice
PRM_MissingPanel>
PRM_ParserError
PRM_ParserErrorDetails
PRM_ServerError
PRM_TimeoutError
PRM_UnknownToken
ProcessClientType
ProcessClientTypes
ProcessFocus
ProcessIncludeAttributes
ProcessKnownTypes
ProcessParameters
ProcessRequest
ProcessRequestInternal
ProcessScriptRegistration
ProcessTypeData
ProcessUpdatePanels
ProcessValues
ProductName
ProductVersion
profile
Profile_JSON_AppService.axd
ProfileAllowedGet
ProfileAllowedSet
ProfileBase
profileGroups
ProfilePropertyMetadata
ProfileService
profileService
ProfileServiceEnabled
ProfileServiceManager
ProfileServiceManager_LoadProperitesWithNonDefaultPath
ProfileServiceManager_LoadProperties
ProgressTemplate
PromoteExpression
promptCount
properties
Properties
property
Property
propertyAttributes
PropertyAttributes
PropertyBuilder
propertyCollection
PropertyDescriptor
PropertyDescriptorCollection
PropertyInfo
propertyInfo
PropertyName
propertyNotAnArray
propertyNotWritable
propertyNullOrUndefined
propertyUndefined
propertyValue
propertyValueCollection
propVal
protocol
Protocol
Protocol must be specified.
ProvideImportExtensionsWithContextInformation
Provider
provider
ProviderBase
ProviderCollection
ProviderException
ProviderName
providerName
providerUserKey
Proxies
proxies
proxy
proxyCodeUnit
ProxyGeneratedContractTypes
proxyGeneratedContractTypes
ProxyGenerationError
proxyGenerationErrors
ProxyGenerationErrors
ProxyGenerator
ProxyGenerator_UnsupportedType
ProxyHelper
ProxyHelper_BadStatusCode
proxyNamespace
proxyOptions
ProxySerializerType
pSystem.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3auSystem.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
pThe global {0} ('{1}') has been defined in both '{2}' and '{3}'. The difference between them ('{4}') is ignored.
PThe Update method can only be called on UpdatePanel with ID '{0}' before Render.
PtrToStringBSTR
PWhether page validation will be performed after validation is done in the model.
q;qEqIq\qjq|q
qExtender control '{0}' cannot extend '{1}'. Extender controls of type '{2}' cannot extend controls of type '{3}'.
qInsert can only be called on an insert item. Ensure only the InsertTemplate has a button with CommandName=Insert.
qQOC>.
QThe message part '{0}' in message contract '{1}' is different in '{2}' and '{3}'.
qThe service contract '{0}' is defined in both '{1}' and '{2}', but only one of them contains the operation '{3}'.
query
Queryable
queryString
QueryStringField
QueryStringHandled
QueryStringValue
Question
Quote
QuoteString
Raise
RaiseBubbleEvent
raiseEvent
RaiseNavigate
RaisePostBackEvent
RaisePostDataChangedEvent
RandomNumberGenerator
rAssembly '{0}' contains a Web resource with name '{1}', but does not contain an embedded resource with name '{1}'.
rawParams
rawResourceName
RbmmmmdD
Read11_ExtensionFile
Read12_MetadataType
Read13_MetadataFile
Read14_MetadataSource
Read15_SvcMapFile
Read16_ReferenceGroup
Read2_ReferencedType
Read3_ExtensionFile
Read3_NamespaceMapping
Read4_CollectionCategory
Read4_MetadataType
Read5_MetadataFile
Read5_ReferencedCollectionType
Read6_MetadataSource
Read6_ProxySerializerType
Read7_DataSvcMapFile
Read7_ReferencedAssembly
Read8_ContractMapping
Read8_ReferenceGroup
Read9_ClientOptions
readAccessProperties
ReadAccessProperties
readAccessProperties
ReadAllBytes
ReadContentAsString
ReadElementString
ReadEndElement
Reader
reader
ReaderWriterLock
ReadExtensionFile
ReadHiddenFieldIdAttribute
ReadHiddenFieldIdValue
ReadHiddenFieldNameValue
ReadHiddenFieldValueAttribute
ReadHiddenFieldValueValue
readIntoMemory
ReadMetadataFile
ReadMethods
readMethods
ReadNull
ReadOnlyCollection`1
ReadStartElement
ReadStringArray
ReadToEnd
Ready
realEnum
RealLiteral
ReceiveImportContextInformation
RecreateChildControls
RecursionLimit
recursionLimit
RecursionLimit exceeded.
Redirect
RedirectLocation
reference
Reference.config
ReferenceAllAssemblies
ReferenceComparer
ReferencedAssemblies
ReferencedAssembliesJ
ReferencedAssembly
ReferencedAssembly2System.Web.Compilation.WCFModel.ReferencedAssembly
ReferencedAssemblyList
ReferencedCollectionType
ReferencedDataContractType
ReferencedDataContractType.System.Web.Compilation.WCFModel.ReferencedType
ReferencedDataContractTypeList
ReferencedDataContractTypes
ReferencedDataContractTypesN
referenceDisplayName
ReferencedType
ReferenceEquals
ReferenceGroup
ReferenceGroup)
ReferenceGroup_AppendLinePosition
ReferenceGroup_DataContractExcludedAndIncluded
ReferenceGroup_DuplicatedSchemaItems
ReferenceGroup_DuplicatedSchemaItemsIgnored
ReferenceGroup_EmptyAddress
ReferenceGroup_EmptyProtocol
ReferenceGroup_FailedToGenerateCode
ReferenceGroup_FailedToLoadAssembly
ReferenceGroup_FieldDefinedDifferentlyInDuplicatedMessage
ReferenceGroup_FieldDefinedInOneOfDuplicatedMessage
ReferenceGroup_InvalidFileName
ReferenceGroup_InvalidSourceId
ReferenceGroup_OperationDefinedDifferently
ReferenceGroup_OperationDefinedInOneOfDuplicatedServiceContract
ReferenceGroup_ServiceContractMappingMissMatch
ReferenceGroup_SharedTypeMustBePublic
ReferenceGroup_TwoExternalFilesWithSameName
ReferenceMatchesDefinition
referenceNotFound
referenceValues
ReflectionPermissionAttribute
Refresh
RefreshMode
Regex
RegexOptions
RegExp.__class = true;
RegExp.__typeName = 'RegExp';
Register
RegisterArrayDeclaration
RegisterAsyncPostBackControl
RegisterClientScriptBlock
RegisterClientScriptBlockInternal
RegisterClientScriptInclude
RegisterClientScriptIncludeInternal
RegisterClientScriptResource
RegisterConverters
RegisterDataItem
RegisterDispose
RegisterDisposeForDescriptor
RegisteredArrayDeclaration
RegisteredDisposeScript
RegisteredExpandoAttribute
RegisteredHiddenField
RegisteredScript
RegisteredScriptType
RegisterExpandoAttribute
RegisterExtenderControl
RegisterFocusScript
RegisterForValidateUserEvent
RegisterGlobalizationScriptBlock
RegisterHiddenField
RegisterNamespace
RegisterOnSubmitStatement
RegisterPanel
RegisterPostBackControl
RegisterProxy
RegisterRequiresControlState
RegisterRequiresViewStateEncryption
RegisterScriptControl
RegisterScriptDescriptors
RegisterScripts
RegisterScriptsForScriptDescriptors
RegisterServices
RegisterStartupScript
RegisterStartupScriptInternal
RegisterUniqueScripts
RegisterUpdatePanel
RegisterWithScriptManager
relativeUrl
Release
ReleaseContext
ReleaseHandler
releaseName
releaseNeutralSet
releasePath
ReleaseReaderLock
releaseResourceInfo
releaseResourceManager
releaseResourceName
ReleaseSelectContexts
Reload
RememberMe
rememberMe
rememberMeInt
Remove
remove_AsyncPostBackError
remove_Authenticating
remove_ContextCreated
remove_ContextCreating
remove_ContextDisposing
remove_CreatingCookie
remove_Deleted
remove_Deleting
remove_Error
remove_Exception
remove_FieldChanged
remove_FieldsChanged
remove_InitComplete
remove_Inserted
remove_Inserting
remove_ItemCanceling
remove_ItemCommand
remove_ItemCreated
remove_ItemDataBound
remove_ItemDeleted
remove_ItemDeleting
remove_ItemEditing
remove_ItemInserted
remove_ItemInserting
remove_ItemUpdated
remove_ItemUpdating
remove_LayoutCreated
remove_LoadComplete
remove_Navigate
remove_PagePropertiesChanged
remove_PagePropertiesChanging
remove_PagerCommand
remove_PreRender
remove_PreRenderComplete
remove_ResolveCompositeScriptReference
remove_ResolveScriptReference
remove_Selected
remove_SelectedIndexChanged
remove_SelectedIndexChanging
remove_Selecting
remove_SelectingProvider
remove_SettingsSaved
remove_Sorted
remove_Sorting
remove_Tick
remove_TotalRowCountAvailable
remove_Updated
remove_Updating
remove_UserValidated
remove_ValidatingProperties
remove_ValidationEventHandler
RemoveAt
RemoveDuplicatedSchemaItems
RemoveDuplicates
RemoveExtension
RemoveFromLists
RemoveHandler
RemoveItem
RemoveItems
RemoveRolesFromDB
RemoveTrailingSlash
RemoveUsersFromRoles
rEnables the composition of individual script references into one to minimize the number of requests to the server.
Render
RenderActiveArrayDeclarations
RenderActiveExpandos
RenderActiveHiddenFields
RenderActiveScriptBlocks
RenderActiveScriptDisposes
RenderActiveScripts
RenderActiveSubmitStatements
RenderBeginTag
RenderChildren
RenderClientScriptBlock
RenderContents
RenderControl
RenderDataItems
RenderDisabledButtonsAsLabels
RenderEndTag
RenderFormCallback
RenderMethod
renderMethod
RenderMode
RenderNonBreakingSpacesBetweenControls
RenderPageCallback
RenderPageRequestManagerScript
RenderProfileProperties
RenderUpdatePanelIDsFromList
Replace
ReplaceExtension
replacementNamespace
ReplaceMessageWithObject
ReplaceNamespace
ReportMessageDefinedDifferently
ReportOperationDefinedDifferently
ReportUniqueMessagePart
ReportUniqueOperation
Request
request
requestType
RequirementsMode
RequiresQuestionAndAnswer
RequiresSession
RequireSSL
requireSSL
RequiresUniqueEmail
RequiresUpdate
Reset
ResetCache
ResetDataObject
ResetPassword
ResolveClientUrl
ResolveCompositeScriptReference
ResolveCompositeScriptReferenceEvent
resolver
ResolveScriptReference
ResolveScriptReferenceEvent
ResolveType
ResolveTypeId
ResolveUrl
ResourceCategoryAttribute
resourceCulture
ResourceDefaultValueAttribute
ResourceDescriptionAttribute
ResourceDisplayNameAttribute
resourceInfo
resourceMan
ResourceManager
resourceManager
resourceName
ResourceSet
resourceType
ResourceUICultures
Response
response
ResponseFormat
RestClientProxyHandler
RestHandler
RestHandlerFactory
RestHandlerWithSession
restriction
Result
result
resultType
Retail
retColl
return 
return this._invoke(this._get_path(), 
ReturnType
returnType
RevalidateUser
right
RNGCryptoServiceProvider
Role_JSON_AppService.axd
RoleExists
roleName
roleNames
RoleProvider
RoleProviderCollection
Roles
RolesCachedDate_
RolesCachedDateUtc
RoleService
roleService
RoleService
RoleService_RoleProviderNotFound
RoleService_RolesFeatureNotEnabled
RoleServiceEnabled
RoleServiceManager
RoleServiceManager_LoadRoles
RoleServiceManager_LoadRolesWithNonDefaultPath
Rollback
rootSequence
r'rIrOrZr
RuntimeCompatibilityAttribute
RuntimeHelpers
RuntimeScriptResourceHandler
RuntimeTypeHandle
RValue is not the name of the type being registered or the name is a reserved word.
rwLock
s)sFsbsxs
s_emptyTypeArray
s_enableCaching
s_enableCompression
s_sectionLoaded
S}WAXAY
S64.07
SatelliteContractVersionAttribute
SaveControlState
SaveDataKeysState
savedState
SaveParametersViewState
savePasswordHashLocally
SaveViewState
SByte
Schema
schema
Schema
schema
Schema
Schema.DataServiceMapSchema.xsd
Schema.ServiceMapSchema.xsd
schemaList
SchemaMerger
SchemaNamespace
Schemas
SchemaTopLevelItemType
schemaTopLevelItemTypes
script
Script
script
Script control '{0}' is not a registered script control. Script controls must be registered using RegisterScriptControl() before calling RegisterScriptDescriptors().
ScriptArrays
ScriptBehaviorDescriptor
scriptBlock
ScriptBlocks
ScriptBlockToken
ScriptComponentDescriptor
ScriptContentNoTags
ScriptContentWithTags
ScriptControl
scriptControl
ScriptControlDescriptor
ScriptControlDescriptor_IDNotSettable
ScriptControlManager
ScriptControlManager_ExtenderControlNotRegistered
ScriptControlManager_NoTargetControlTypes
ScriptControlManager_RegisterExtenderControlTooEarly
ScriptControlManager_RegisterExtenderControlTooLate
ScriptControlManager_RegisterScriptControlTooEarly
ScriptControlManager_RegisterScriptControlTooLate
ScriptControlManager_ScriptControlNotRegistered
ScriptControlManager_TargetControlTypeInvalid
ScriptControls
ScriptDataItem
ScriptDataItemCollection
ScriptDescriptor
scriptDescriptors
scriptDispose
ScriptDisposes
ScriptDisposeToken
ScriptExpandos
ScriptExpression
ScriptHandlerFactory
ScriptHiddenFields
ScriptIgnoreAttribute
scriptIndex
scripting
Scripting
scripting
ScriptingAuthenticationServiceSection
ScriptingJsonSerializationSection
ScriptingProfileServiceSection
ScriptingRoleServiceSection
ScriptingScriptResourceHandlerSection
ScriptingSectionGroup
ScriptingWebServicesSectionGroup
ScriptKey
scriptLoadFailed
scriptLoadFailedDebug
scriptLoadFailedNoHead
scriptLoadMultipleCallbacks
ScriptManager
scriptManager
ScriptManager_AllowCustomErrorsRedirect
'ScriptManager_AllowCustomErrorsRedirect
ScriptManager_AsyncPostBackError
ScriptManager_AsyncPostBackErrorMessage
'ScriptManager_AsyncPostBackErrorMessage
ScriptManager_AsyncPostBackNotInPartialRenderingMode
ScriptManager_AsyncPostBackTimeout
ScriptManager_AuthenticationService
ScriptManager_CannotAddHistoryPointOutsideOfAsyncPostBack
ScriptManager_CannotAddHistoryPointWithHistoryDisabled
ScriptManager_CannotChangeEnableHistory
ScriptManager_CannotChangeEnablePartialRendering
ScriptManager_CannotChangeEnableScriptGlobalization
ScriptManager_CannotChangeSupportsPartialRendering
ScriptManager_CannotRegisterBothPostBacks
ScriptManager_CannotRegisterScriptInMultipleCompositeReferences
ScriptManager_CannotSetSupportsPartialRenderingWhenDisabled
ScriptManager_ClientNavigateHandler
ScriptManager_CompositeScript
ScriptManager_EmptyPageUrl
ScriptManager_EnableHistory
ScriptManager_EnablePageMethods
ScriptManager_EnablePartialRendering
ScriptManager_EnableScriptGlobalization
'ScriptManager_EnableScriptGlobalization
ScriptManager_EnableScriptLocalization
ScriptManager_EnableSecureHistoryState
ScriptManager_FrameworkFailedToLoad
ScriptManager_InvalidControlRegistration
ScriptManager_LoadScriptsBeforeUI
ScriptManager_Navigate
ScriptManager_OnlyOneScriptManager
ScriptManager_PageUntitled
ScriptManager_ProfileService
ScriptManager_ResolveCompositeScriptReference
-ScriptManager_ResolveCompositeScriptReference
ScriptManager_ResolveScriptReference
ScriptManager_RoleService
ScriptManager_ScriptMode
ScriptManager_ScriptPath
ScriptManager_Scripts
ScriptManager_Services
ScriptManager_UpdatePanelNotRegistered
scriptManagerControl
ScriptManagerProxy
ScriptMethodAttribute
scriptMethodAttribute
ScriptMode
ScriptModule
scriptName
ScriptName
scriptName
scriptPath
ScriptPath
ScriptReference
ScriptReference_Assembly
ScriptReference_AssemblyRequiresName
ScriptReference_IgnoreScriptPath
ScriptReference_InvalidReleaseScriptName
ScriptReference_InvalidReleaseScriptPath
ScriptReference_Name
ScriptReference_NameAndPathCannotBeEmpty
ScriptReference_NotifyScriptLoaded
ScriptReference_Path
ScriptReference_ResourceUICultures
ScriptReference_ScriptMode
ScriptReferenceBase
ScriptReferenceCollection
ScriptReferenceEventArgs
scriptReferences
ScriptRegistration
ScriptRegistrationManager
ScriptRegistrationManager_ControlNotOnPage
ScriptRegistrationManager_InvalidChars
ScriptRegistrationManager_NoCloseTag
ScriptRegistrationManager_NoTags
scriptRegistrations
ScriptResource
ScriptResourceAbsolutePath
ScriptResourceAllowNonJsFiles
ScriptResourceAttribute
scriptResourceHandler
ScriptResourceHandler
scriptResourceHandler
ScriptResourceHandler_AssemblyNotFileBased
ScriptResourceHandler_DuplicateScriptResources
ScriptResourceHandler_InvalidRequest
ScriptResourceHandler_ResourceUrlLongerThan1024Characters
ScriptResourceHandler_TypeNameMismatch
ScriptResourceHandler_UnknownResource
ScriptResourceInfo
ScriptResourceName
scriptResourceName
Scripts
scripts
ScriptServiceAttribute
scriptStartupBlock
ScriptStartupBlocks
ScriptStartupBlockToken
ScriptSubmitStatements
ScriptTagRegex
scriptType
ScriptType
ScriptTypeId
searchNamingContainers
Second
second
securePass
SecureString
SecureStringToBSTR
SecurityAction
SecurityCriticalAttribute
SecurityException
SecurityPermissionAttribute
SecurityTreatAsSafeAttribute
Select
SELECT PropertyName, PropertyStoredAs, PropertyValue FROM Settings
SELECT PropertyValue FROM ApplicationProperties WHERE PropertyName = N'LastLoggedInUserName'
SELECT PropertyValue FROM Settings WHERE PropertyName = @PropName AND PropertyStoredAs='I'
SELECT PropertyValue FROM UserProperties WHERE PropertyName = @PasswordHashName
SELECT PropertyValue FROM UserProperties WHERE PropertyName = @PasswordSaltName
SELECT PropertyValue FROM UserProperties WHERE PropertyName = @PropName
SELECT PropertyValue FROM UserProperties WHERE PropertyName = @RolesCachedDate
SELECT RoleName FROM Roles WHERE UserName = @UserName ORDER BY RoleName
SelectCallback
Selected
SelectedDataKey
SelectedIndex
SelectedIndexChanged
SelectedIndexChanging
SelectedItemTemplate
SelectedPersistedDataKey
SelectedValue
selectEventArgs
Selecting
selecting
Selecting
SelectingProvider
SelectingProviderEventArgs
SelectNew
SelectNewParameters
selectNewValues
Selector
selector
selectParameters
SelectParameters
SelectParametersChangedEventHandler
selectResult
SelfAndBaseClasses
SelfAndBaseTypes
sender
SerializableAttribute
serializationFormat
SerializationFormat
SerializationInfo
SerializationNamespace
Serialize
SerializeAs
SerializeBoolean
SerializeCustomObject
serialized
SerializeDateTime
SerializeDictionary
SerializeDictionaryKeyValue
SerializeEnumerable
SerializeGuid
SerializeInternal
Serializer
serializer
SerializeString
SerializeUri
SerializeValue
SerializeValueInternal
SError status code returned by the Web Service: {0}. Error details from service: {1}
Server
serverState
ServerTypeFieldName
serverUri
service
Service
service
ServiceBehaviorAttribute
ServiceCollection
ServiceContractAttribute
ServiceContractGenerationOptions
ServiceContractGenerator
ServiceContractMapping
ServiceContractMapping/System.Web.Compilation.WCFModel.ContractMapping
ServiceContractMappingList
ServiceContractMappings
ServiceContractMappingsK
serviceDescription
ServiceDescription
ServiceDescriptionCollection
ServiceDescriptionFormatExtensionCollection
ServiceEndpoint
ServiceEndpointCollection
serviceEndpointList
serviceEndpointToChannelEndpointElementMap
ServiceHost
ServiceHostFactory
ServiceKnownTypeAttribute
ServiceMapSchemaSet
ServiceModelSectionGroup
servicePathNotSet
serviceProvider
serviceProviderForImportExtensions
ServiceReference
ServiceReference_InlineScript
ServiceReference_Path
ServiceReference_PathCannotBeEmpty
ServiceReferenceCollection
serviceReferenceExtensionFileContents
Services
ServicesUtilities
serviceType
serviceUri
ServiceUri
ServiceUriNotFound
serviceUrl
set_AccessKey
set_Address
set_AllowAnonymousAccess
set_AllowAutoRedirect
set_AllowCustomErrorsRedirect
set_AllowServerPaging
set_AlternateText
set_AlternatingItemTemplate
set_AlwaysLoadBeforeUI
set_ApplicationName
set_Assembly
set_AssemblyName
set_AssociatedUpdatePanelID
set_AsyncPostBackErrorMessage
set_AsyncPostBackTimeout
set_Authenticated
set_AuthenticationIsComplete
set_AutoGenerateOrderByClause
set_AutoGenerateWhereClause
set_AutoPage
set_AutoSort
set_BackColor
set_BorderColor
set_BorderStyle
set_BorderWidth
set_Buffer
set_BufferOutput
set_ButtonCount
set_ButtonCssClass
set_ButtonType
set_CacheControl
set_Capacity
set_Category
set_CausesValidation
set_Charset
set_ChildControlsCreated
set_ChildrenAsTriggers
set_ClientNavigateHandler
set_ClientOptions
set_ClientTypeDictionary
set_ClientUrlResolver
set_ClrNamespace
set_CodeGenerationOptions
set_CodeProvider
set_CommandArgument
set_CommandName
set_CommandText
set_ConfigurationName
set_ContainingControl
set_ContentBuffer
set_ContentEncoding
set_ContentLength
set_ContentTemplate
set_ContentType
set_Context
set_ContextType
set_ContextTypeName
set_Contract
set_ContractType
set_ControlID
set_ConvertEmptyStringToNull
set_CookieContainer
set_CookieIsSet
set_CookieNames
set_CookieValues
set_CssClass
set_Culture
set_CultureInfo
set_CurrentPageLabelCssClass
set_CurrentPrincipal
set_CurrentUICulture
set_DataItem
set_DataKey
set_DataKeyNames
set_DataSource
set_DefaultValue
set_DescriptionValue
set_Deserialized
set_DisplayAfter
set_DisplayNameValue
set_DynamicLayout
set_EditIndex
set_EditItemTemplate
set_EmptyDataTemplate
set_EmptyItemTemplate
set_EmptyPageUrl
set_EnableCaching
set_EnableCompression
set_Enabled
set_EnableDataBinding
set_EnableDelete
set_EnableHistory
set_EnableInsert
set_EnableModelValidation
set_EnableObjectTracking
set_EnablePageMethods
set_EnablePartialRendering
set_EnableScriptGlobalization
set_EnableScriptLocalization
set_EnableSecureHistoryState
set_EnableUpdate
set_EntitySetName
set_EnumTypeDictionary
set_ErrorInLoading
set_EventName
set_ExceptionHandled
set_Expires
set_ExpiresAbsolute
set_FileName
set_FileType
set_Filter
set_FirstPageImageUrl
set_FirstPageText
set_ForeColor
set_GenerateAsynchronousMethods
set_GenerateInternal
set_GenerateInternalTypes
set_GenerateMessageContracts
set_GenerateSerializable
set_GenerateSerializableTypes
set_GroupBy
set_GroupItemCount
set_GroupPlaceholderID
set_GroupSeparatorTemplate
set_GroupTemplate
set_HeaderEncoding
set_Height
set_ID
set_Ignore
set_IgnoreParams
set_IgnoreScriptPath
set_IgnoreSpecified
set_ImageUrl
set_ImportXmlType
set_ImportXmlTypes
set_InlineScript
set_InsertItemPosition
set_InsertItemTemplate
set_Interval
set_IsDebug
set_IsDirty
set_IsExistingFile
set_IsMergeResult
set_IsMergeResultSpecified
set_IsNewContext
set_IsOffline
set_IsReadOnly
set_IsStaticReference
set_Item
set_ItemPlaceholderID
set_ItemSeparatorTemplate
set_ItemTemplate
set_KeepInEditMode
set_KeepInInsertMode
set_LastLoggedInDateUtc
set_LastLoggedInUserName
set_LastPageImageUrl
set_LastPageText
set_LayoutTemplate
set_LoadProperties
set_LoadRoles
set_LoadScriptsBeforeUI
set_MaximumRows
set_MaxJsonLength
set_Method
set_Name
set_NavigateUrl
set_NewDataObject
set_NewMaximumRows
set_NewSelectedIndex
set_NewStartRowIndex
set_NextPageImageUrl
set_NextPageText
set_NextPreviousButtonCssClass
set_NotifyScriptLoaded
set_NumericButtonCssClass
set_ObjectInstance
set_ObjectTrackingEnabled
set_Options
set_OrderBy
set_OrderGroupsBy
set_OriginalDataObject
set_PagedControlID
set_PagerTemplate
set_PageSize
set_ParseWrites
set_Password
set_PasswordHash
set_PasswordSalt
set_Path
set_PerformSubstitution
set_Position
set_PreviousPageImageUrl
set_PreviousPageText
set_ProgressTemplate
set_PropertyName
set_PropertyValue
set_Protocol
set_ProviderName
set_QueryStringField
set_QueryStringHandled
set_ReadAccessProperties
set_RecursionLimit
set_RedirectLocation
set_ReferenceAllAssemblies
set_RegisterDispose
set_RememberMe
set_RenderDisabledButtonsAsLabels
set_RenderMode
set_RenderNonBreakingSpacesBetweenControls
set_RequiresDataBinding
set_RequireSSL
set_ResourceUICultures
set_ResponseFormat
set_Result
set_RetrievalUrl
set_RetrieveTotalRowCount
set_Roles
set_RolesCachedDateUtc
set_Schemas
set_ScriptMode
set_ScriptName
set_ScriptPath
set_ScriptTypeId
set_Select
set_SelectedIndex
set_SelectedItemTemplate
set_SelectedPersistedDataKey
set_SelectNew
set_SerializeAs
set_SerializedValue
set_Serializer
set_ServiceUri
set_SettingsCacheIsMoreFresh
set_SettingsNames
set_SettingsNeedReset
set_SettingsStoredAs
set_SettingsValues
set_ShowFirstPageButton
set_ShowLastPageButton
set_ShowNextPageButton
set_ShowPreviousPageButton
set_SkipAuthorization
set_SortDirection
set_SortDirectionInternal
set_SortExpression
set_SortExpressionInternal
set_SourceId
set_SourceIdSpecified
set_SourceUri
set_SourceUrl
set_StartRowIndex
set_Status
set_StatusCode
set_StatusDescription
set_StoreOriginalValuesInViewState
set_SubStatusCode
set_SupportsPartialRendering
set_SuppressContent
set_TabIndex
set_Table
set_TableName
set_TargetControlID
set_TargetNamespace
set_Text
set_Title
set_ToolTip
set_TotalRowCount
set_Transaction
set_TrySkipIisCustomErrors
set_Type
set_TypeName
set_UpdateMode
set_UseDefaultCredentials
set_UseHttpGet
set_UseMessageFormat
set_UserName
set_UseSerializerForFaults
set_ValidationFlags
set_ValidationType
set_Value
set_Version
set_View
set_Visible
set_WebReferenceOptions
set_Where
set_Width
set_Wrapped
set_WrappedFlag
set_WriteAccessProperties
set_XmlSerializeString
SetAsyncPostBackMode
SetAttribute
SetAuthCookie
SetCacheability
SetCookie
setCookie
Set-Cookie
SetDataObjectProperties
SetDataPager
SetDirty
SetDirtyObject
setExecutorAfterActive
SetExpires
SetFocus
SetFocusInternal
SetGetMethod
SetIsCacheMoreFresh
SetItem
SetKeys
SetLastModified
SetLoadErrors
SetMaxAge
SetNeedToReset
SetNewValues
SetNoServerCaching
SetOldValues
SetOmitVaryStar
SetOwner
SetPageProperties
SetPageTitle
SetProfile
SetPropertiesForCurrentUser
SetPropertyValues
SetPropertyValuesCore
SetPropertyValuesSQL
SetPropertyValuesWeb
SetPropertyValuesWebCore
SetPublicKeyToken
SetRemainingValuesToDefault
SetRenderMethodDelegate
SetRequiresDataBindingIfInitialized
SetScriptResourceHandler
SetSetMethod
SetSlidingExpiration
SetStateValue
SetTagValue
SetTextPos
SettingsAttributeDictionary
SettingsBase
SettingsCacheIsMoreFresh
SettingsClassType
SettingsContext
SettingsNames
SettingsNeedReset
SettingsProperty
SettingsPropertyCollection
SettingsPropertyNotFoundException
SettingsPropertyValue
SettingsPropertyValueCollection
SettingsPropertyWrongTypeException
SettingsProvider
SettingsSaved
SettingsSavedEventArgs
SettingsSerializeAs
SettingsStoredAs
SettingsValues
SetValidUntilExpires
SetValue
SetValues
Shared assembly '{0}' could not be loaded. If this is a referenced project, please make sure that you have built the project first.
SharedLibPublicKey
SharedLibPublicKeyFull
SharedLibPublicKeyToken
short
ShouldIgnoreSchemaProperty
ShouldSkipAuthorization
ShouldUseDebugScript
ShowFirstPageButton
ShowLastPageButton
ShowNextPageButton
ShowPreviousPageButton
Signature
signatures
SignOut
simpleType
SimpleTypeResolver
simpleTypeRestriction
Single
SingleChildControlCollection
Slash
sLinqDataSource '{0}' does not support the Select property when the Delete, Insert or Update operations are enabled.
Soap12AddressBinding
SoapAddressBinding
SortDirection
sortDirection
SortDirectionInternal
Sorted
SortedList`2
SortExpression
sortExpression
SortExpressionInternal
Sorting
source
SOURCE_ID_NOT_SPECIFIED
SourceId
sourceId
SourceId
SourceIdSpecified
SourceUrl
Specifies whether to store original data values in ViewState.  This property is used for conflict detection during Update and Delete operations.
Split
SqlCeConnection
SqlCeEngine
SqlCeParameter
SqlConnection
SqlHelper
SqlHelper_SqlEverywhereNotInstalled
SqlParameter
sqlProvider
stack
StackTrace
start
StartRowIndex
startRowIndex
StartsWith
State
state
StateBag
stateFieldNameInvalid
StateManagedCollection
stateMustBeStringDictionary
StatePersister
staticAccess
status
Status
statusCode
StatusCode
StatusDescription
Stfld
SThe maximum number of page number buttons that can be displayed by the pager field.
sThe specified .datasvcmap file at '{0}' has more than one metadata file in it. That is not supported by the system.
Stloc
stopped = true;
StoreCookie
StoreCookieInDB
storedAs
StoreHashedPasswordInDB
StoreIsOffline
StoreKnownTypes
StoreLastUserNameInOffileStore
storeOriginalValues
StoreOriginalValues
StoreOriginalValuesInViewState
StoreRolesForCurrentUser
Stream
StreamingContext
StreamReader
StreamWriter
string
String
string
String.__class = true;
String.__typeName = 'String';
String._toFormattedString = function String$_toFormattedString(useLocale, args) {
String.format = function String$format(format, args) {
String.localeFormat = function String$localeFormat(format, args) {
String.prototype.endsWith = function String$endsWith(suffix) {
String.prototype.startsWith = function String$startsWith(prefix) {
String.prototype.trim = function String$trim() {
String.prototype.trimEnd = function String$trimEnd() {
String.prototype.trimStart = function String$trimStart() {
StringArrayConverter
StringBuilder
StringBuilderCapacity
StringCollection
StringComparer
StringComparison
StringFileInfo
stringFormatBraceMismatch
stringFormatInvalid
StringLiteral
StringLocalName
StringReader
StringRepresentation
StringSplitOptions
StringValidator
StringValidatorAttribute
StringWriter
StrongTypeParameters
StructLayoutAttribute
Style
SubmitChanges
SubStatusCode
Substring
Subtract
succeededCallback, failedCallback, userContext
SupportedTypes
SupportsEventValidationAttribute
SupportsPartialRendering
SuppressContent
SuppressFinalize
SvcMapExtension
svcMapFile
SvcMapFile
svcMapFile
SvcMapFileLoader
SvcMapFileSerializer
switch(Sys.Browser.agent) {
SwitchWriter
symbols
Synchronized
SyncRoot
Syntax error
Syntax error '{0}'
Sys.__registeredTypes = {};
Sys.__rootNamespaces = [Sys];
Sys._Application = function Sys$_Application() {
Sys._Application.prototype = {
Sys._Application.registerClass('Sys._Application', Sys.Component, Sys.IContainer);
Sys._Debug = function Sys$_Debug() {
Sys._Debug.prototype = {
Sys._Debug.registerClass('Sys._Debug');
Sys._ScriptLoader = function Sys$_ScriptLoader() {
Sys._ScriptLoader._clearScript = function Sys$_ScriptLoader$_clearScript(scriptElement) {
Sys._ScriptLoader._errorScriptLoadFailed = function Sys$_ScriptLoader$_errorScriptLoadFailed(scriptUrl, multipleCallbacks) {
Sys._ScriptLoader._getLoadedScripts = function Sys$_ScriptLoader$_getLoadedScripts() {
Sys._ScriptLoader.getInstance = function Sys$_ScriptLoader$getInstance() {
Sys._ScriptLoader.isScriptLoaded = function Sys$_ScriptLoader$isScriptLoaded(scriptSrc) {
Sys._ScriptLoader.prototype = {
Sys._ScriptLoader.readLoadedScripts = function Sys$_ScriptLoader$readLoadedScripts() {
Sys._ScriptLoader.registerClass('Sys._ScriptLoader', null, Sys.IDisposable);
Sys._ScriptLoaderTask = function Sys$_ScriptLoaderTask(scriptElement, completedCallback) {
Sys._ScriptLoaderTask.prototype = {
Sys._ScriptLoaderTask.registerClass("Sys._ScriptLoaderTask", null, Sys.IDisposable);
Sys.Application = new Sys._Application();
Sys.Application._enableHistoryInScriptManager();
Sys.Application.add_init(function() {
Sys.Application.initialize();
Sys.Application.setServerId(
Sys.ApplicationLoadEventArgs = function Sys$ApplicationLoadEventArgs(components, isPartialLoad) {
Sys.ApplicationLoadEventArgs.prototype = {
Sys.ApplicationLoadEventArgs.registerClass('Sys.ApplicationLoadEventArgs', Sys.EventArgs);
Sys.Browser = {};
Sys.Browser.agent = null;
Sys.Browser.documentMode = 0;
Sys.Browser.Firefox = {};
Sys.Browser.hasDebuggerStatement = false;
Sys.Browser.InternetExplorer = {};
Sys.Browser.name = navigator.appName;
Sys.Browser.Opera = {};
Sys.Browser.Safari = {};
Sys.Browser.version = parseFloat(navigator.appVersion);
Sys.CancelEventArgs = function Sys$CancelEventArgs() {
Sys.CancelEventArgs.prototype = {
Sys.CancelEventArgs.registerClass('Sys.CancelEventArgs', Sys.EventArgs);
Sys.Component = function Sys$Component() {
Sys.Component.prototype = {
Sys.Component.registerClass('Sys.Component', null, Sys.IDisposable, Sys.INotifyPropertyChange, Sys.INotifyDisposing);
Sys.CultureInfo = function Sys$CultureInfo(name, numberFormat, dateTimeFormat) {
Sys.CultureInfo._parse = function Sys$CultureInfo$_parse(value) {
Sys.CultureInfo.CurrentCulture = Sys.CultureInfo._parse(__cultureInfo);
Sys.CultureInfo.InvariantCulture = Sys.CultureInfo._parse('{"name":"","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":true,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"\u00A4","NaNSymbol":"NaN","CurrencyNegativePattern":0,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"\u2030","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"@-62135568000000@","MaxSupportedDateTime":"@253402300799999@","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":true},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, dd MMMM yyyy HH:mm:ss","LongDatePattern":"dddd, dd MMMM yyyy","LongTimePattern":"HH:mm:ss","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'","ShortDatePattern":"MM/dd/yyyy","ShortTimePattern":"HH:mm","SortableDateTimePattern":"yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'","YearMonthPattern":"yyyy MMMM","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":true,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]}}');
Sys.CultureInfo.prototype = {
Sys.CultureInfo.registerClass('Sys.CultureInfo');
Sys.Debug = new Sys._Debug();
Sys.EventArgs = function Sys$EventArgs() {
Sys.EventArgs.Empty = new Sys.EventArgs();
Sys.EventArgs.registerClass('Sys.EventArgs');
Sys.EventHandlerList = function Sys$EventHandlerList() {
Sys.EventHandlerList.prototype = {
Sys.EventHandlerList.registerClass('Sys.EventHandlerList');
Sys.HistoryEventArgs = function Sys$HistoryEventArgs(state) {
Sys.HistoryEventArgs.prototype = {
Sys.HistoryEventArgs.registerClass('Sys.HistoryEventArgs', Sys.EventArgs);
Sys.IContainer = function Sys$IContainer() {
Sys.IContainer.prototype = {
Sys.IContainer.registerInterface("Sys.IContainer");
Sys.IDisposable = function Sys$IDisposable() {
Sys.IDisposable.prototype = {
Sys.IDisposable.registerInterface('Sys.IDisposable');
Sys.INotifyDisposing = function Sys$INotifyDisposing() {
Sys.INotifyDisposing.prototype = {
Sys.INotifyDisposing.registerInterface("Sys.INotifyDisposing");
Sys.INotifyPropertyChange = function Sys$INotifyPropertyChange() {
Sys.INotifyPropertyChange.prototype = {
Sys.INotifyPropertyChange.registerInterface('Sys.INotifyPropertyChange');
Sys.Net._WebRequestManager = function Sys$Net$_WebRequestManager() {
Sys.Net._WebRequestManager.prototype = {
Sys.Net._WebRequestManager.registerClass('Sys.Net._WebRequestManager');
Sys.Net.NetworkRequestEventArgs = function Sys$Net$NetworkRequestEventArgs(webRequest) {
Sys.Net.NetworkRequestEventArgs.prototype = {
Sys.Net.NetworkRequestEventArgs.registerClass('Sys.Net.NetworkRequestEventArgs', Sys.CancelEventArgs);
Sys.Net.WebRequest = function Sys$Net$WebRequest() {
Sys.Net.WebRequest._createQueryString = function Sys$Net$WebRequest$_createQueryString(queryString, encodeMethod) {
Sys.Net.WebRequest._createUrl = function Sys$Net$WebRequest$_createUrl(url, queryString) {
Sys.Net.WebRequest._resolveUrl = function Sys$Net$WebRequest$_resolveUrl(url, baseUrl) {
Sys.Net.WebRequest.prototype = {
Sys.Net.WebRequest.registerClass('Sys.Net.WebRequest');
Sys.Net.WebRequestExecutor = function Sys$Net$WebRequestExecutor() {
Sys.Net.WebRequestExecutor.prototype = {
Sys.Net.WebRequestExecutor.registerClass('Sys.Net.WebRequestExecutor');
Sys.Net.WebRequestManager = new Sys.Net._WebRequestManager();
Sys.Net.WebServiceError = function Sys$Net$WebServiceError(timedOut, message, stackTrace, exceptionType) {
Sys.Net.WebServiceError.prototype = {
Sys.Net.WebServiceError.registerClass('Sys.Net.WebServiceError');
Sys.Net.WebServiceProxy = function Sys$Net$WebServiceProxy() {
Sys.Net.WebServiceProxy._createFailedError = function Sys$Net$WebServiceProxy$_createFailedError(methodName, errorMessage) {
Sys.Net.WebServiceProxy._defaultFailedCallback = function Sys$Net$WebServiceProxy$_defaultFailedCallback(err, methodName) {
Sys.Net.WebServiceProxy._generateTypedConstructor = function Sys$Net$WebServiceProxy$_generateTypedConstructor(type) {
Sys.Net.WebServiceProxy.invoke = function Sys$Net$WebServiceProxy$invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext, timeout) {
Sys.Net.WebServiceProxy.prototype = {
Sys.Net.WebServiceProxy.registerClass('Sys.Net.WebServiceProxy');
Sys.Net.XMLDOM = function Sys$Net$XMLDOM(markup) {
Sys.Net.XMLHttpExecutor = function Sys$Net$XMLHttpExecutor() {
Sys.Net.XMLHttpExecutor.prototype = {
Sys.Net.XMLHttpExecutor.registerClass('Sys.Net.XMLHttpExecutor', Sys.Net.WebRequestExecutor);
Sys.PropertyChangedEventArgs = function Sys$PropertyChangedEventArgs(propertyName) {
Sys.PropertyChangedEventArgs.prototype = {
Sys.PropertyChangedEventArgs.registerClass('Sys.PropertyChangedEventArgs', Sys.EventArgs);
Sys.Res
Sys.Serialization.JavaScriptSerializer = function Sys$Serialization$JavaScriptSerializer() {
Sys.Serialization.JavaScriptSerializer._charsToEscape = [];
Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs = [];
Sys.Serialization.JavaScriptSerializer._dateRegEx = new RegExp('(^|[^\\\\])\\"\\\\/Date\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\+|-)[0-9]{4})?\\)\\\\/\\"', 'g');
Sys.Serialization.JavaScriptSerializer._escapeChars = {};
Sys.Serialization.JavaScriptSerializer._escapeRegEx = new RegExp('["\\\\\\x00-\\x1F]', 'i');
Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal = new RegExp('["\\\\\\x00-\\x1F]', 'g');
Sys.Serialization.JavaScriptSerializer._init = function Sys$Serialization$JavaScriptSerializer$_init() {
Sys.Serialization.JavaScriptSerializer._jsonRegEx = new RegExp('[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]', 'g');
Sys.Serialization.JavaScriptSerializer._jsonStringRegEx = new RegExp('"(\\\\.|[^"\\\\])*"', 'g');
Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeBooleanWithBuilder(object, stringBuilder) {
Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeNumberWithBuilder(object, stringBuilder) {
Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeStringWithBuilder(string, stringBuilder) {
Sys.Serialization.JavaScriptSerializer._serializeWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeWithBuilder(object, stringBuilder, sort, prevObjects) {
Sys.Serialization.JavaScriptSerializer._serverTypeFieldName = '__type';
Sys.Serialization.JavaScriptSerializer.deserialize = function Sys$Serialization$JavaScriptSerializer$deserialize(data, secure) {
Sys.Serialization.JavaScriptSerializer.registerClass('Sys.Serialization.JavaScriptSerializer');
Sys.Serialization.JavaScriptSerializer.serialize = function Sys$Serialization$JavaScriptSerializer$serialize(object) {
Sys.Services._AuthenticationService = function Sys$Services$_AuthenticationService() {
Sys.Services._AuthenticationService.DefaultWebServicePath = '
Sys.Services._AuthenticationService.DefaultWebServicePath = '';
Sys.Services._AuthenticationService.prototype = {
Sys.Services._AuthenticationService.registerClass('Sys.Services._AuthenticationService', Sys.Net.WebServiceProxy);
Sys.Services._ProfileService = function Sys$Services$_ProfileService() {
Sys.Services._ProfileService.DefaultWebServicePath = '
Sys.Services._ProfileService.DefaultWebServicePath = '';
Sys.Services._ProfileService.prototype = {
Sys.Services._ProfileService.registerClass('Sys.Services._ProfileService', Sys.Net.WebServiceProxy);
Sys.Services._RoleService = function Sys$Services$_RoleService() {
Sys.Services._RoleService.DefaultWebServicePath = '
Sys.Services._RoleService.DefaultWebServicePath = '';
Sys.Services._RoleService.prototype = {
Sys.Services._RoleService.registerClass('Sys.Services._RoleService', Sys.Net.WebServiceProxy);
Sys.Services.AuthenticationService = new Sys.Services._AuthenticationService();
Sys.Services.AuthenticationService._setAuthenticated(true);
Sys.Services.AuthenticationService.set_path('
Sys.Services.ProfileGroup = function Sys$Services$ProfileGroup(properties) {
Sys.Services.ProfileGroup.registerClass('Sys.Services.ProfileGroup');
Sys.Services.ProfileService = new Sys.Services._ProfileService();
Sys.Services.ProfileService.properties = Sys.Serialization.JavaScriptSerializer.deserialize('
Sys.Services.ProfileService.properties.
Sys.Services.ProfileService.set_path('
Sys.Services.RoleService = new Sys.Services._RoleService();
Sys.Services.RoleService._roles = Sys.Serialization.JavaScriptSerializer.deserialize('
Sys.Services.RoleService.set_path('
Sys.StringBuilder = function Sys$StringBuilder(initialText) {
Sys.StringBuilder.prototype = {
Sys.StringBuilder.registerClass('Sys.StringBuilder');
Sys.UI._Timer
Sys.UI._Timer = function Sys$UI$_Timer(element) {
Sys.UI._Timer.prototype = {
Sys.UI._Timer.registerClass('Sys.UI._Timer', Sys.UI.Control);
Sys.UI._Timer=function(a){Sys.UI._Timer.initializeBase(this,[a]);this._interval=60000;this._enabled=true;this._postbackPending=false;this._raiseTickDelegate=null;this._endRequestHandlerDelegate=null;this._timer=null;this._pageRequestManager=null;this._uniqueID=null};Sys.UI._Timer.prototype={get_enabled:function(){return this._enabled},set_enabled:function(a){this._enabled=a},get_interval:function(){return this._interval},set_interval:function(a){this._interval=a},get_uniqueID:function(){return this._uniqueID},set_uniqueID:function(a){this._uniqueID=a},dispose:function(){this._stopTimer();if(this._pageRequestManager!==null)this._pageRequestManager.remove_endRequest(this._endRequestHandlerDelegate);Sys.UI._Timer.callBaseMethod(this,"dispose")},_doPostback:function(){__doPostBack(this.get_uniqueID(),"")},_handleEndRequest:function(c,b){var a=b.get_dataItems()[this.get_id()];if(a)this._update(a[0],a[1]);if(this._postbackPending===true&&this._pageRequestManager!==null&&this._pageRequestManager.get_isInAsyncPostBack()===false){this._postbackPending=false;this._doPostback()}},initialize:function(){Sys.UI._Timer.callBaseMethod(this,"initialize");this._raiseTickDelegate=Function.createDelegate(this,this._raiseTick);this._endRequestHandlerDelegate=Function.createDelegate(this,this._handleEndRequest);if(Sys.WebForms&&Sys.WebForms.PageRequestManager)this._pageRequestManager=Sys.WebForms.PageRequestManager.getInstance();if(this._pageRequestManager!==null)this._pageRequestManager.add_endRequest(this._endRequestHandlerDelegate);if(this.get_enabled())this._startTimer()},_raiseTick:function(){this._startTimer();if(this._pageRequestManager===null||!this._pageRequestManager.get_isInAsyncPostBack()){this._doPostback();this._postbackPending=false}else this._postbackPending=true},_startTimer:function(){this._timer=window.setTimeout(Function.createDelegate(this,this._raiseTick),this.get_interval())},_stopTimer:function(){if(this._timer!==null){window.clearTimeout(this._timer);this._timer=null}},_update:function(c,b){var a=!this.get_enabled(),d=this.get_interval()!==b;if(!a&&(!c||d)){this._stopTimer();a=true}this.set_enabled(c);this.set_interval(b);if(this.get_enabled()&&a)this._startTimer()}};Sys.UI._Timer.registerClass("Sys.UI._Timer",Sys.UI.Control);
Sys.UI._UpdateProgress
Sys.UI._UpdateProgress = function Sys$UI$_UpdateProgress(element) {
Sys.UI._UpdateProgress.prototype = {
Sys.UI._UpdateProgress.registerClass('Sys.UI._UpdateProgress', Sys.UI.Control);
Sys.UI.Behavior = function Sys$UI$Behavior(element) {
Sys.UI.Behavior.getBehaviorByName = function Sys$UI$Behavior$getBehaviorByName(element, name) {
Sys.UI.Behavior.getBehaviors = function Sys$UI$Behavior$getBehaviors(element) {
Sys.UI.Behavior.getBehaviorsByType = function Sys$UI$Behavior$getBehaviorsByType(element, type) {
Sys.UI.Behavior.prototype = {
Sys.UI.Behavior.registerClass('Sys.UI.Behavior', Sys.Component);
Sys.UI.Bounds = function Sys$UI$Bounds(x, y, width, height) {
Sys.UI.Bounds.registerClass('Sys.UI.Bounds');
Sys.UI.Control = function Sys$UI$Control(element) {
Sys.UI.Control.prototype = {
Sys.UI.Control.registerClass('Sys.UI.Control', Sys.Component);
Sys.UI.DomElement = function Sys$UI$DomElement() {
Sys.UI.DomElement._ensureOldDisplayMode = function Sys$UI$DomElement$_ensureOldDisplayMode(element) {
Sys.UI.DomElement._getCurrentStyle = function Sys$UI$DomElement$_getCurrentStyle(element) {
Sys.UI.DomElement._getWindow = function Sys$UI$DomElement$_getWindow(element) {
Sys.UI.DomElement.addCssClass = function Sys$UI$DomElement$addCssClass(element, className) {
Sys.UI.DomElement.containsCssClass = function Sys$UI$DomElement$containsCssClass(element, className) {
Sys.UI.DomElement.getBounds = function Sys$UI$DomElement$getBounds(element) {
Sys.UI.DomElement.getVisibilityMode = function Sys$UI$DomElement$getVisibilityMode(element) {
Sys.UI.DomElement.getVisible = function Sys$UI$DomElement$getVisible(element) {
Sys.UI.DomElement.registerClass('Sys.UI.DomElement');
Sys.UI.DomElement.removeCssClass = function Sys$UI$DomElement$removeCssClass(element, className) {
Sys.UI.DomElement.setLocation = function Sys$UI$DomElement$setLocation(element, x, y) {
Sys.UI.DomElement.setVisibilityMode = function Sys$UI$DomElement$setVisibilityMode(element, value) {
Sys.UI.DomElement.setVisible = function Sys$UI$DomElement$setVisible(element, value) {
Sys.UI.DomElement.toggleCssClass = function Sys$UI$DomElement$toggleCssClass(element, className) {
Sys.UI.DomEvent = function Sys$UI$DomEvent(eventObject) {
Sys.UI.DomEvent._ensureDomNode = function Sys$UI$DomEvent$_ensureDomNode(element) {
Sys.UI.DomEvent.prototype = {
Sys.UI.DomEvent.registerClass('Sys.UI.DomEvent');
Sys.UI.Key = function Sys$UI$Key() {
Sys.UI.Key.prototype = {
Sys.UI.Key.registerEnum("Sys.UI.Key");
Sys.UI.MouseButton = function Sys$UI$MouseButton() {
Sys.UI.MouseButton.prototype = {
Sys.UI.MouseButton.registerEnum("Sys.UI.MouseButton");
Sys.UI.Point = function Sys$UI$Point(x, y) {
Sys.UI.Point.registerClass('Sys.UI.Point');
Sys.UI.VisibilityMode = function Sys$UI$VisibilityMode() {
Sys.UI.VisibilityMode.prototype = {
Sys.UI.VisibilityMode.registerEnum("Sys.UI.VisibilityMode");
Sys.WebForms.BeginRequestEventArgs = function Sys$WebForms$BeginRequestEventArgs(request, postBackElement) {
Sys.WebForms.BeginRequestEventArgs.prototype = {
Sys.WebForms.BeginRequestEventArgs.registerClass('Sys.WebForms.BeginRequestEventArgs', Sys.EventArgs);
Sys.WebForms.EndRequestEventArgs = function Sys$WebForms$EndRequestEventArgs(error, dataItems, response) {
Sys.WebForms.EndRequestEventArgs.prototype = {
Sys.WebForms.EndRequestEventArgs.registerClass('Sys.WebForms.EndRequestEventArgs', Sys.EventArgs);
Sys.WebForms.InitializeRequestEventArgs = function Sys$WebForms$InitializeRequestEventArgs(request, postBackElement) {
Sys.WebForms.InitializeRequestEventArgs.prototype = {
Sys.WebForms.InitializeRequestEventArgs.registerClass('Sys.WebForms.InitializeRequestEventArgs', Sys.CancelEventArgs);
Sys.WebForms.PageLoadedEventArgs = function Sys$WebForms$PageLoadedEventArgs(panelsUpdated, panelsCreated, dataItems) {
Sys.WebForms.PageLoadedEventArgs.prototype = {
Sys.WebForms.PageLoadedEventArgs.registerClass('Sys.WebForms.PageLoadedEventArgs', Sys.EventArgs);
Sys.WebForms.PageLoadingEventArgs = function Sys$WebForms$PageLoadingEventArgs(panelsUpdating, panelsDeleting, dataItems) {
Sys.WebForms.PageLoadingEventArgs.prototype = {
Sys.WebForms.PageLoadingEventArgs.registerClass('Sys.WebForms.PageLoadingEventArgs', Sys.EventArgs);
Sys.WebForms.PageRequestManager = function Sys$WebForms$PageRequestManager() {
Sys.WebForms.PageRequestManager._addArrayElement = function Sys$WebForms$PageRequestManager$_addArrayElement(arrayName) {
Sys.WebForms.PageRequestManager._initialize = function Sys$WebForms$PageRequestManager$_initialize(scriptManagerID, formElement) {
Sys.WebForms.PageRequestManager._initialize('
Sys.WebForms.PageRequestManager.getInstance = function Sys$WebForms$PageRequestManager$getInstance() {
Sys.WebForms.PageRequestManager.getInstance()._registerDisposeScript(
Sys.WebForms.PageRequestManager.getInstance()._updateControls([
Sys.WebForms.PageRequestManager.prototype = {
Sys.WebForms.PageRequestManager.registerClass('Sys.WebForms.PageRequestManager');
Sys.WebForms.Res
System
System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.CodeDom
System.CodeDom.Compiler
System.Collections
System.Collections.Generic
System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly
System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator
System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor>.GetEnumerator
System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference>.GetEnumerator
System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Current
System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_Current
System.Collections.Generic.IEnumerator<System.Type>.Current
System.Collections.Generic.IEnumerator<System.Type>.get_Current
System.Collections.Generic.IEnumerator<System.Web.UI.ScriptDescriptor>.Current
System.Collections.Generic.IEnumerator<System.Web.UI.ScriptDescriptor>.get_Current
System.Collections.Generic.IEnumerator<System.Web.UI.ScriptReference>.Current
System.Collections.Generic.IEnumerator<System.Web.UI.ScriptReference>.get_Current
System.Collections.IEnumerable.GetEnumerator
System.Collections.IEnumerator.Current
System.Collections.IEnumerator.get_Current
System.Collections.IEnumerator.Reset
System.Collections.IEqualityComparer.Equals
System.Collections.IEqualityComparer.GetHashCode
System.Collections.ObjectModel
System.Collections.Specialized
System.ComponentModel
System.ComponentModel.DataAnnotations, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Configuration
System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Configuration.ConfigurationPermissionAttribute, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Configuration.Provider
System.Core
System.Data
System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Data.Common
System.Data.Design
System.Data.Entity
System.Data.Linq
System.Data.Linq.Mapping
System.Data.Metadata.Edm
System.Data.OracleClient, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Data.Services.Client
System.Data.Services.Design
System.Data.SqlClient
System.Data.SqlServerCe.
System.Deployment, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Design
System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Diagnostics
System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Drawing
System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.EnterpriseServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Globalization
System.IDisposable.Dispose
System.IO
System.IO.Compression
System.IO.IsolatedStorage
System.Linq
System.Linq.Expressions
System.Management, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Messaging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Net
System.Reflection
System.Reflection.Emit
System.Resources
System.Runtime.CompilerServices
System.Runtime.InteropServices
System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Runtime.Serialization
System.Runtime.Serialization.Formatters.Soap, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Security
System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Security.Cryptography
System.Security.Permissions
System.Security.Permissions.PermissionSetAttribute, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security.Permissions.ReflectionPermissionAttribute, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security.Permissions.SecurityPermissionFlag, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Security.Principal
System.ServiceModel
System.ServiceModel.Activation
System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.ServiceModel.Channels
System.ServiceModel.Configuration
System.ServiceModel.Description
System.ServiceModel.Description.IWsdlImportExtension.BeforeImport
System.ServiceModel.Description.IWsdlImportExtension.ImportContract
System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint
System.ServiceModel.InstanceContextMode, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.ServiceModel.Web
System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Text
System.Text.RegularExpressions
System.Threading
System.Web
System.Web,
System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.Abstractions
System.Web.Abstractions,
System.Web.Abstractions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.ApplicationServices
System.Web.Caching
System.Web.ClientServices
System.Web.ClientServices.Providers
System.Web.Compilation
System.Web.Compilation.WCFModel
System.Web.Compilation.WCFModel.ClientOptions.ProxySerializerType
System.Web.Compilation.WCFModel.DataSvcMapFile:urn:schemas-microsoft-com:xml-dataservicemap:ReferenceGroup:True:
System.Web.Compilation.WCFModel.IContractGeneratorReferenceTypeLoader.LoadAllAssemblies
System.Web.Compilation.WCFModel.IContractGeneratorReferenceTypeLoader.LoadAssembly
System.Web.Compilation.WCFModel.IContractGeneratorReferenceTypeLoader.LoadType
System.Web.Compilation.WCFModel.MetadataFile.MetadataType
System.Web.Compilation.WCFModel.ReferencedCollectionType.CollectionCategory
System.Web.Compilation.WCFModel.Schema.DataServiceMapSchema.xsd
System.Web.Compilation.WCFModel.Schema.ServiceMapSchema.xsd
System.Web.Compilation.WCFModel.SvcMapFile:urn:schemas-microsoft-com:xml-wcfservicemap:ReferenceGroup:True:
System.Web.Compilation.XmlSerializer
System.Web.Compilation.XmlSerializerDataSvc
System.Web.Configuration
System.Web.DynamicData
System.Web.DynamicData, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.DynamicData.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.DynamicData.IDynamicDataSource.add_Exception
System.Web.DynamicData.IDynamicDataSource.ContextType
System.Web.DynamicData.IDynamicDataSource.EntitySetName
System.Web.DynamicData.IDynamicDataSource.Exception
System.Web.DynamicData.IDynamicDataSource.get_ContextType
System.Web.DynamicData.IDynamicDataSource.get_EntitySetName
System.Web.DynamicData.IDynamicDataSource.remove_Exception
System.Web.DynamicData.IDynamicDataSource.set_ContextType
System.Web.DynamicData.IDynamicDataSource.set_EntitySetName
System.Web.Entity.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Web.Extensions
System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.Extensions.ClientServices.ClientData
System.Web.Extensions.ClientServices.ClientData\
System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.Extensions.dll
System.Web.Extensions.pdb
System.Web.Extensions.Util
system.web.extensions/scripting/scriptResourceHandler
system.web.extensions/scripting/webServices/authenticationService
system.web.extensions/scripting/webServices/jsonSerialization
system.web.extensions/scripting/webServices/profileService
system.web.extensions/scripting/webServices/roleService
System.Web.Globalization
System.Web.Handlers
System.Web.Handlers.IScriptResourceHandler.GetEmptyPageUrl
System.Web.Handlers.IScriptResourceHandler.GetScriptResourceUrl
System.Web.Hosting
System.Web.IHttpHandler.get_IsReusable
System.Web.IHttpHandler.IsReusable
System.Web.IHttpHandler.ProcessRequest
System.Web.IHttpModule.Dispose
System.Web.IHttpModule.Init
System.Web.Management
System.Web.Mobile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.Profile
System.Web.Query.Dynamic
System.Web.RegularExpressions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.Resources
System.Web.Resources.AtlasWeb
System.Web.Resources.AtlasWeb.resources
System.Web.Resources.ScriptLibrary.Res.debug.resources
System.Web.Resources.ScriptLibrary.Res.resources
System.Web.Resources.ScriptLibrary.WebForms.Res.debug.resources
System.Web.Resources.ScriptLibrary.WebForms.Res.resources
System.Web.Resources.ScriptManager.bmp
System.Web.Resources.ScriptManagerProxy.bmp
System.Web.Resources.Timer.bmp
System.Web.Resources.UpdatePanel.bmp
System.Web.Resources.UpdateProgress.bmp
System.Web.Resources.WCFModelStrings
System.Web.Resources.WCFModelStrings.resources
System.Web.Routing, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.Script.Serialization
System.Web.Script.Services
System.Web.Script.Services.WebServiceData:
System.Web.Security
System.Web.Services
System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.Services.Description
System.Web.Services.Discovery
System.Web.Services.Protocols
System.Web.SessionState
System.Web.UI
System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35uSystem.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.UI.Design.ExtenderControlDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.ExtenderControlToolboxItem, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.PostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.ScriptManagerDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.ScriptManagerProxyDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35uSystem.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.UI.Design.UpdateProgressDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3auSystem.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.UI.Design.WebControls.DataPagerDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35uSystem.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
System.Web.UI.HtmlControls
System.Web.UI.IAttributeAccessor.GetAttribute
System.Web.UI.IAttributeAccessor.SetAttribute
System.Web.UI.IClientScriptManager.GetPostBackEventReference
System.Web.UI.IClientScriptManager.GetWebResourceUrl
System.Web.UI.IClientScriptManager.RegisterClientScriptBlock
System.Web.UI.IClientScriptManager.RegisterClientScriptInclude
System.Web.UI.IClientScriptManager.RegisterStartupScript
System.Web.UI.IClientUrlResolver.AppRelativeTemplateSourceDirectory
System.Web.UI.IClientUrlResolver.get_AppRelativeTemplateSourceDirectory
System.Web.UI.IClientUrlResolver.ResolveClientUrl
System.Web.UI.IControl.Context
System.Web.UI.IControl.DesignMode
System.Web.UI.IControl.get_Context
System.Web.UI.IControl.get_DesignMode
System.Web.UI.ICustomErrorsSection.DefaultRedirect
System.Web.UI.ICustomErrorsSection.Errors
System.Web.UI.ICustomErrorsSection.get_DefaultRedirect
System.Web.UI.ICustomErrorsSection.get_Errors
System.Web.UI.IExtenderControl.GetScriptDescriptors
System.Web.UI.IExtenderControl.GetScriptReferences
System.Web.UI.IHtmlForm.ClientID
System.Web.UI.IHtmlForm.get_ClientID
System.Web.UI.IHtmlForm.get_Method
System.Web.UI.IHtmlForm.Method
System.Web.UI.IHtmlForm.RenderControl
System.Web.UI.IHtmlForm.SetRenderMethodDelegate
System.Web.UI.IPage.add_Error
System.Web.UI.IPage.add_InitComplete
System.Web.UI.IPage.add_LoadComplete
System.Web.UI.IPage.add_PreRender
System.Web.UI.IPage.add_PreRenderComplete
System.Web.UI.IPage.AppRelativeVirtualPath
System.Web.UI.IPage.ClientScript
System.Web.UI.IPage.EnableEventValidation
System.Web.UI.IPage.Error
System.Web.UI.IPage.Form
System.Web.UI.IPage.get_AppRelativeVirtualPath
System.Web.UI.IPage.get_ClientScript
System.Web.UI.IPage.get_EnableEventValidation
System.Web.UI.IPage.get_Form
System.Web.UI.IPage.get_Header
System.Web.UI.IPage.get_IsPostBack
System.Web.UI.IPage.get_IsValid
System.Web.UI.IPage.get_Items
System.Web.UI.IPage.get_Request
System.Web.UI.IPage.get_Response
System.Web.UI.IPage.get_Server
System.Web.UI.IPage.get_Title
System.Web.UI.IPage.Header
System.Web.UI.IPage.InitComplete
System.Web.UI.IPage.IsPostBack
System.Web.UI.IPage.IsValid
System.Web.UI.IPage.Items
System.Web.UI.IPage.LoadComplete
System.Web.UI.IPage.PreRender
System.Web.UI.IPage.PreRenderComplete
System.Web.UI.IPage.RegisterRequiresViewStateEncryption
System.Web.UI.IPage.remove_Error
System.Web.UI.IPage.remove_InitComplete
System.Web.UI.IPage.remove_LoadComplete
System.Web.UI.IPage.remove_PreRender
System.Web.UI.IPage.remove_PreRenderComplete
System.Web.UI.IPage.Request
System.Web.UI.IPage.Response
System.Web.UI.IPage.Server
System.Web.UI.IPage.SetFocus
System.Web.UI.IPage.SetRenderMethodDelegate
System.Web.UI.IPage.Title
System.Web.UI.IPage.Validate
System.Web.UI.IPage.VerifyRenderingInServerForm
System.Web.UI.IPostBackDataHandler.LoadPostData
System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
System.Web.UI.IScriptControl.GetScriptDescriptors
System.Web.UI.IScriptControl.GetScriptReferences
System.Web.UI.IScriptManager.RegisterArrayDeclaration
System.Web.UI.IScriptManager.RegisterClientScriptBlock
System.Web.UI.IScriptManager.RegisterClientScriptInclude
System.Web.UI.IScriptManager.RegisterClientScriptResource
System.Web.UI.IScriptManager.RegisterDispose
System.Web.UI.IScriptManager.RegisterExpandoAttribute
System.Web.UI.IScriptManager.RegisterHiddenField
System.Web.UI.IScriptManager.RegisterOnSubmitStatement
System.Web.UI.IScriptManager.RegisterPostBackControl
System.Web.UI.IScriptManager.RegisterStartupScript
System.Web.UI.IScriptManager.SetFocusInternal
System.Web.UI.IScriptManagerInternal.RegisterProxy
System.Web.UI.IScriptManagerInternal.RegisterUpdatePanel
System.Web.UI.IScriptManagerInternal.UnregisterUpdatePanel
System.Web.UI.IStateManager.get_IsTrackingViewState
System.Web.UI.IStateManager.IsTrackingViewState
System.Web.UI.IStateManager.LoadViewState
System.Web.UI.IStateManager.SaveViewState
System.Web.UI.IStateManager.TrackViewState
System.Web.UI.PageRequestManager:AsyncPostBackError
System.Web.UI.PageRequestManager:AsyncPostBackErrorHttpCode
System.Web.UI.PageRequestManager:AsyncPostBackErrorMessage
System.Web.UI.ScriptMode
System.Web.UI.UpdatePanel
System.Web.UI.WebControls
System.Web.UI.WebControls.DataPager.ico
System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls
System.Web.UI.WebControls.IPageableItemContainer.add_TotalRowCountAvailable
System.Web.UI.WebControls.IPageableItemContainer.get_MaximumRows
System.Web.UI.WebControls.IPageableItemContainer.get_StartRowIndex
System.Web.UI.WebControls.IPageableItemContainer.MaximumRows
System.Web.UI.WebControls.IPageableItemContainer.remove_TotalRowCountAvailable
System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties
System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex
System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable
System.Web.UI.WebControls.IPersistedSelector.DataKey
System.Web.UI.WebControls.IPersistedSelector.get_DataKey
System.Web.UI.WebControls.IPersistedSelector.set_DataKey
System.Web.UI.WebControls.LinqDataSource.ico
System.Web.UI.WebControls.ListView.ico
System.Web.Util
system.web/compilation
system.web/customErrors
system.web/deployment
System.Windows.Forms
System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Xml
System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Xml.Schema
System.Xml.Serialization
SystemComponentModelDataAnnotations
SystemConfiguration
SystemConfigurationInstall
SystemData
SystemDataOracleClient
SystemDeployment
SystemDesign
SystemDirectoryServices
SystemDrawing
SystemDrawingDesign
SystemEnterpriseServices
SystemManagement
SystemMessaging
SystemRuntimeRemoting
SystemRuntimeSerializationFormattersSoap
SystemSecurity
SystemServiceProcess
SystemWeb
SystemWebAbstractions
SystemWebDynamicData
SystemWebDynamicDataDesign
SystemWebEntityDesign
SystemWebExtensions
SystemWebExtensionsContainsWebResource
SystemWebExtensionsDesign
SystemWebExtensionsSectionGroup
SystemWebMobile
SystemWebRegularExpressions
SystemWebRouting
SystemWebServices
SystemWindowsForms
SystemXml
t_ReaderCount
t=x=@~@C
t>vLvVvpv
TA script reference cannot be included multiple times in composite script references.
TabIndex
Table
table
Table`1
TableName
tableType
TagKey
tagName
TagPrefixAttribute
tagValue
target
TargetCompileUnit
targetCompileUnit
TargetConfiguration
targetConfiguration
targetControl
TargetControlID
targetControlType
TargetControlType
targetControlType
TargetControlTypeAttribute
TargetControlTypeCache
targetFrameworkVersion
TargetInvocationException
TargetNamespace
targetNamespace
TargetNamespace
TemplateContainerAttribute
TemplateControl
TemplateInstance
TemplateInstanceAttribute
TemplatePagerField
TemplatePagerField_OnPagerCommand
TemplatePagerField_PagerTemplate
TemplatePagerField_UnhandledEvent
text/javascript
text/plain
text/xml
text1
text2
TExtenderControl
textLen
textPos
TextReader
TextWriter
TFirst
The '{0}' event on associated control '{1}' for the trigger in UpdatePanel '{2}' does not match the standard event handler signature.
The control with ID '{0}' requires a ScriptManager on the page. The ScriptManager must appear before any controls that need it.
The Controls property of UpdatePanel with ID '{0}' cannot be modified directly. To change the contents of the UpdatePanel modify the child controls of the ContentTemplateContainer property.
The data context used by LinqDataSource '{0}' must extend DataContext when the Delete, Insert or Update operations are enabled.
The DataPager control '{0}' does not have a naming container.  Ensure that the DataPager is added to the page before calling DataBind.
The error message to be sent to the client when an unhandled exception occurs on the server. The property can be set declaratively in the page markup or during the ScriptManager's AsyncPostBackError event. If the value is empty the exception's message will be used.
The event that the trigger will hook up to determine whether to refresh the UpdatePanel. If the property is not set then the UpdatePanel will be refreshed only if the postback was initiated by the target control.
The expression passed to the OrderBy operator used for ordering groups after a GroupBy has been performed during the Select query.
The format string is invalid.
The 'ID' property on ScriptControlDescriptor is not settable. The client ID of a script control is always equal to its element ID.
'The interval must be greater than zero.
The message received from the server could not be parsed. Common causes for this error are when the response is modified by calls to Response.Write(), response filters, HttpModules, or server trace is enabled.
The name of the web resource.
The operation '{0}' in service contract '{1}' is different in '{2}' and '{3}'. Check the input, output and fault messages of the operation.
The page is performing an async postback but the ScriptManager.SupportsPartialRendering property is set to false. Ensure that the property is set to true during an async postback.
The path "{0}" is not supported. When InlineScript=true, the path should be a relative path pointing to the same web application as the current page.
The path to the script.
-The path to the web service has not been set.
The resource URL cannot be longer than 1024 characters. If using a CompositeScriptReference, reduce the number of ScriptReferences it contains, or combine them into a single static file and set the Path property to the location of it.
The script '{0}' failed to load. Check for:
The script tag registered for type '{0}' and key '{1}' has invalid characters outside of the script tags: {2}. Only properly formatted script tags can be registered.
The server method '{0}' failed.
The server request timed out.
The template used for items.
The type '{0}' in the service contract mapping has different TargetNamespace('{1}') and Name('{2}') than the TargetNamespace('{3}') and Name('{4}') in the service reference file.
The URL of an empty page that will be used to manage history on Internet Explorer. The script manager uses a built-in, resource-based page if this property is unspecified.
ThemeableAttribute
ThenBy
ThenByDescending
this._beginRequestHandlerDelegate = Function.createDelegate(this, this._handleBeginRequest);
this._endRequestHandlerDelegate = Function.createDelegate(this, this._handleEndRequest);
this._endRequestHandlerDelegate = Function.createDelegate(this,this._handleEndRequest);
this._failed = null;
this._postbackPending = false;
this._raiseTickDelegate = Function.createDelegate(this,this._raiseTick);
this._startDelegate = Function.createDelegate(this, this._startRequest);
this._stopTimer();
this._succeeded = null;
this._timeout = 0;
this._userContext = null;
this.set_enabled(enabled);
this.set_interval(interval);
ThisAssembly
Thread
Throw404
ThrowIfMaxJsonDeserializerMembersExceeded
throwOnError
throwOnPopulatedRole
ThrowUnknownResource
TickEventKey
ticks
Timer
Timer_IntervalMustBeGreaterThanZero
Timer_TimerEnable
Timer_TimerInterval
Timer_TimerTick
TimeSpan
Title
title
tLinqDataSource '{0}' does not support the GroupBy property when the Delete, Insert or Update operations are enabled.
ToAbsolute
ToArray
ToBase64String
ToBoolean
ToByteArray
ToCharArray
ToFileTimeUtc
ToInt32
ToInt64
token
Token
tokenBytes
TokenId
TokenIdentifierIs
ToList
TOOL_CONFIG_ITEM_NAME
ToolboxBitmapAttribute
ToolboxItemAttribute
ToolboxItemFilterAttribute
ToolboxItemFilterType
toolConfiguration
ToolTip
TopLevelElement
topLevelSettings
ToString
totalRecords
TotalRowCount
totalRowCount
TotalRowCountAvailable
ToUInt64
ToUniversalTime
TrackParametersViewState
TrackViewState
Translation
TransmitFile
Triggers
trueLiteral
TryConvertObjectToType
TryCreate
TryGetValue
TryParse
TrySkipIisCustomErrors
tryToUseLastLoggedInUser
TScriptControl
TSecond
t't?tEtStYttt
tThe EnableObjectTracking property of LinqDataSource '{0}' cannot be changed after the data context has been created.
TThe name for parameter '{0}' on LinqDataSource '{1}' is not a valid identifier name.
TU{System.ServiceModel.ConcurrencyMode, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
Tuple
TUrSystem.Web.AspNetHostingPermissionLevel, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
TValue
Type {0} has already been registered. The type may be defined multiple times or the script file that defines it may have already been loaded. A possible cause is a change of settings during a partial update.
Type '{0}' has no nullable form
Type {0} is not supported.
Type index is out of bounds.
Type.__fullyQualifiedIdentifierRegExp = new RegExp("^[^.0-9 \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]([^ \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]*[^. \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\])?$", "i");
Type.__identifierRegExp = new RegExp("^[^.0-9 \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\][^. \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]*$", "i");
Type.getRootNamespaces = function Type$getRootNamespaces() {
Type.isClass = function Type$isClass(type) {
Type.isEnum = function Type$isEnum(type) {
Type.isFlags = function Type$isFlags(type) {
Type.isInterface = function Type$isInterface(type) {
Type.isNamespace = function Type$isNamespace(object) {
Type.parse = function Type$parse(typeName, ns) {
Type.prototype.callBaseMethod = function Type$callBaseMethod(instance, name, baseArguments) {
Type.prototype.getBaseMethod = function Type$getBaseMethod(instance, name) {
Type.prototype.getBaseType = function Type$getBaseType() {
Type.prototype.getInterfaces = function Type$getInterfaces() {
Type.prototype.getName = function Type$getName() {
Type.prototype.implementsInterface = function Type$implementsInterface(interfaceType) {
Type.prototype.inheritsFrom = function Type$inheritsFrom(parentType) {
Type.prototype.initializeBase = function Type$initializeBase(instance, baseArguments) {
Type.prototype.isImplementedBy = function Type$isImplementedBy(instance) {
Type.prototype.isInstanceOfType = function Type$isInstanceOfType(instance) {
Type.prototype.registerClass = function Type$registerClass(typeName, baseType, interfaceTypes) {
Type.prototype.registerEnum = function Type$registerEnum(name, flags) {
Type.prototype.registerInterface = function Type$registerInterface(typeName) {
Type.prototype.resolveInheritance = function Type$resolveInheritance() {
Type.registerNamespace = function Type$registerNamespace(namespacePath) {
Type.registerNamespace('
Type.registerNamespace("Sys.WebForms");Sys.WebForms.BeginRequestEventArgs=function(b,a){Sys.WebForms.BeginRequestEventArgs.initializeBase(this);this._request=b;this._postBackElement=a};Sys.WebForms.BeginRequestEventArgs.prototype={get_postBackElement:function(){return this._postBackElement},get_request:function(){return this._request}};Sys.WebForms.BeginRequestEventArgs.registerClass("Sys.WebForms.BeginRequestEventArgs",Sys.EventArgs);Sys.WebForms.EndRequestEventArgs=function(c,a,b){Sys.WebForms.EndRequestEventArgs.initializeBase(this);this._errorHandled=false;this._error=c;this._dataItems=a||{};this._response=b};Sys.WebForms.EndRequestEventArgs.prototype={get_dataItems:function(){return this._dataItems},get_error:function(){return this._error},get_errorHandled:function(){return this._errorHandled},set_errorHandled:function(a){this._errorHandled=a},get_response:function(){return this._response}};Sys.WebForms.EndRequestEventArgs.registerClass("Sys.WebForms.EndRequestEventArgs",Sys.EventArgs);Sys.WebForms.InitializeRequestEventArgs=function(b,a){Sys.WebForms.InitializeRequestEventArgs.initializeBase(this);this._request=b;this._postBackElement=a};Sys.WebForms.InitializeRequestEventArgs.prototype={get_postBackElement:function(){return this._postBackElement},get_request:function(){return this._request}};Sys.WebForms.InitializeRequestEventArgs.registerClass("Sys.WebForms.InitializeRequestEventArgs",Sys.CancelEventArgs);Sys.WebForms.PageLoadedEventArgs=function(b,a,c){Sys.WebForms.PageLoadedEventArgs.initializeBase(this);this._panelsUpdated=b;this._panelsCreated=a;this._dataItems=c||{}};Sys.WebForms.PageLoadedEventArgs.prototype={get_dataItems:function(){return this._dataItems},get_panelsCreated:function(){return this._panelsCreated},get_panelsUpdated:function(){return this._panelsUpdated}};Sys.WebForms.PageLoadedEventArgs.registerClass("Sys.WebForms.PageLoadedEventArgs",Sys.EventArgs);Sys.WebForms.PageLoadingEventArgs=function(b,a,c){Sys.WebForms.PageLoadingEventArgs.initializeBase(this);this._panelsUpdating=b;this._panelsDeleting=a;this._dataItems=c||{}};Sys.WebForms.PageLoadingEventArgs.prototype={get_dataItems:function(){return this._dataItems},get_panelsDeleting:function(){return this._panelsDeleting},get_panelsUpdating:function(){return this._panelsUpdating}};Sys.WebForms.PageLoadingEventArgs.registerClass("Sys.WebForms.PageLoadingEventArgs",Sys.EventArgs);Sys.WebForms.PageRequestManager=function(){this._form=null;this._activeDefaultButton=null;this._activeDefaultButtonClicked=false;this._updatePanelIDs=null;this._updatePanelClientIDs=null;this._updatePanelHasChildrenAsTriggers=null;this._asyncPostBackControlIDs=null;this._asyncPostBackControlClientIDs=null;this._postBackControlIDs=null;this._postBackControlClientIDs=null;this._scriptManagerID=null;this._pageLoadedHandler=null;this._additionalInput=null;this._onsubmit=null;this._onSubmitStatements=[];this._originalDoPostBack=null;this._originalDoPostBackWithOptions=null;this._originalFireDefaultButton=null;this._originalDoCallback=null;this._isCrossPost=false;this._postBackSettings=null;this._request=null;this._onFormSubmitHandler=null;this._onFormElementClickHandler=null;this._onWindowUnloadHandler=null;this._asyncPostBackTimeout=null;this._controlIDToFocus=null;this._scrollPosition=null;this._processingRequest=false;this._scriptDisposes={};this._transientFields=["__VIEWSTATEENCRYPTED","__VIEWSTATEFIELDCOUNT"]};Sys.WebForms.PageRequestManager.prototype={_get_eventHandlerList:function(){if(!this._events)this._events=new Sys.EventHandlerList;return this._events},get_isInAsyncPostBack:function(){return this._request!==null},add_beginRequest:function(a){this._get_eventHandlerList().addHandler("beginRequest",a)},remove_beginRequest:function(a){this._get_eventHandlerList().removeHandler("beginRequest",a)},add_endRequest:function(a){this._get_eventHandlerList().addHandler("endRequest",a)},remove_endRequest:function(a){this._get_eventHandlerList().removeHandler("endRequest",a)},add_initializeRequest:function(a){this._get_eventHandlerList().addHandler("initializeRequest",a)},remove_initializeRequest:function(a){this._get_eventHandlerList().removeHandler("initializeRequest",a)},add_pageLoaded:function(a){this._get_eventHandlerList().addHandler("pageLoaded",a)},remove_pageLoaded:function(a){this._get_eventHandlerList().removeHandler("pageLoaded",a)},add_pageLoading:function(a){this._get_eventHandlerList().addHandler("pageLoading",a)},remove_pageLoading:function(a){this._get_eventHandlerList().removeHandler("pageLoading",a)},abortPostBack:function(){if(!this._processingRequest&&this._request){this._request.get_executor().abort();this._request=null}},_cancelPendingCallbacks:function(){for(var a=0,e=window.__pendingCallbacks.length;a<e;a++){var c=window.__pendingCallbacks[a];if(c){if(!c.async)window.__synchronousCallBackIndex=-1;window.__pendingCallbacks[a]=null;var d="__CALLBACKFRAME"+a,b=document.getElementById(d);if(b)b.parentNode.removeChild(b)}}},_commitControls:function(a,b){if(a){this._updatePanelIDs=a.updatePanelIDs;this._updatePanelClientIDs=a.updatePanelClientIDs;this._updatePanelHasChildrenAsTriggers=a.updatePanelHasChildrenAsTriggers;this._asyncPostBackControlIDs=a.asyncPostBackControlIDs;this._asyncPostBackControlClientIDs=a.asyncPostBackControlClientIDs;this._postBackControlIDs=a.postBackControlIDs;this._postBackControlClientIDs=a.postBackControlClientIDs}if(typeof b!=="undefined"&&b!==null)this._asyncPostBackTimeout=b*1000},_createHiddenField:function(c,d){var b,a=document.getElementById(c);if(a)if(!a._isContained)a.parentNode.removeChild(a);else b=a.parentNode;if(!b){b=document.createElement("span");b.style.cssText="display:none !important";this._form.appendChild(b)}b.innerHTML="<input type='hidden' />";a=b.childNodes[0];a._isContained=true;a.id=a.name=c;a.value=d},_createPageRequestManagerTimeoutError:function(){var b="Sys.WebForms.PageRequestManagerTimeoutException: "+Sys.WebForms.Res.PRM_TimeoutError,a=Error.create(b,{name:"Sys.WebForms.PageRequestManagerTimeoutException"});a.popStackFrame();return a},_createPageRequestManagerServerError:function(a,d){var c="Sys.WebForms.PageRequestManagerServerErrorException: "+(d||String.format(Sys.WebForms.Res.PRM_ServerError,a)),b=Error.create(c,{name:"Sys.WebForms.PageRequestManagerServerErrorException",httpStatusCode:a});b.popStackFrame();return b},_createPageRequestManagerParserError:function(b){var c="Sys.WebForms.PageRequestManagerParserErrorException: "+String.format(Sys.WebForms.Res.PRM_ParserError,b),a=Error.create(c,{name:"Sys.WebForms.PageRequestManagerParserErrorException"});a.popStackFrame();return a},_createPostBackSettings:function(c,b,a){return {async:c,panelID:b,sourceElement:a}},_convertToClientIDs:function(a,d,c){if(a)for(var b=0,e=a.length;b<e;b++){Array.add(d,a[b]);Array.add(c,this._uniqueIDToClientID(a[b]))}},_destroyTree:function(f){if(f.nodeType===1){var d=f.childNodes;for(var b=d.length-1;b>=0;b--){var a=d[b];if(a.nodeType===1){if(a.dispose&&typeof a.dispose==="function")a.dispose();else if(a.control&&typeof a.control.dispose==="function")a.control.dispose();var e=Sys.UI.Behavior.getBehaviors(a);for(var c=e.length-1;c>=0;c--)e[c].dispose();this._destroyTree(a)}}}},dispose:function(){if(this._form){Sys.UI.DomEvent.removeHandler(this._form,"submit",this._onFormSubmitHandler);Sys.UI.DomEvent.removeHandler(this._form,"click",this._onFormElementClickHandler);Sys.UI.DomEvent.removeHandler(window,"unload",this._onWindowUnloadHandler);Sys.UI.DomEvent.removeHandler(window,"load",this._pageLoadedHandler)}if(this._originalDoPostBack){window.__doPostBack=this._originalDoPostBack;this._originalDoPostBack=null}if(this._originalDoPostBackWithOptions){window.WebForm_DoPostBackWithOptions=this._originalDoPostBackWithOptions;this._originalDoPostBackWithOptions=null}if(this._originalFireDefaultButton){window.WebForm_FireDefaultButton=this._originalFireDefaultButton;this._originalFireDefaultButton=null}if(this._originalDoCallback){window.WebForm_DoCallback=this._originalDoCallback;this._originalDoCallback=null}this._form=null;this._updatePanelIDs=null;this._updatePanelClientIDs=null;this._asyncPostBackControlIDs=null;this._asyncPostBackControlClientIDs=null;this._postBackControlIDs=null;this._postBackControlClientIDs=null;this._asyncPostBackTimeout=null;this._scrollPosition=null},_doCallback:function(d,b,c,f,a,e){if(!this.get_isInAsyncPostBack())this._originalDoCallback(d,b,c,f,a,e)},_doPostBack:function(a,e){this._additionalInput=null;var b=this._form;if(a===null||typeof a==="undefined"||this._isCrossPost){this._postBackSettings=this._createPostBackSettings(false,null,null);this._isCrossPost=false}else{var f=this._uniqueIDToClientID(a),d=document.getElementById(f);if(!d)if(Array.contains(this._asyncPostBackControlIDs,a))this._postBackSettings=this._createPostBackSettings(true,this._scriptManagerID+"|"+a,null);else if(Array.contains(this._postBackControlIDs,a))this._postBackSettings=this._createPostBackSettings(false,null,null);else{var c=this._findNearestElement(a);if(c)this._postBackSettings=this._getPostBackSettings(c,a);else this._postBackSettings=this._createPostBackSettings(false,null,null)}else this._postBackSettings=this._getPostBackSettings(d,a)}if(!this._postBackSettings.async){b.onsubmit=this._onsubmit;this._originalDoPostBack(a,e);b.onsubmit=null;return}b.__EVENTTARGET.value=a;b.__EVENTARGUMENT.value=e;this._onFormSubmit()},_doPostBackWithOptions:function(a){this._isCrossPost=a&&a.actionUrl;this._originalDoPostBackWithOptions(a)},_elementContains:function(b,a){while(a){if(a===b)return true;a=a.parentNode}return false},_endPostBack:function(a,d,f){if(this._request===d.get_webRequest()){this._processingRequest=false;this._additionalInput=null;this._request=null}var e=this._get_eventHandlerList().getHandler("endRequest"),b=false;if(e){var c=new Sys.WebForms.EndRequestEventArgs(a,f?f.dataItems:{},d);e(this,c);b=c.get_errorHandled()}if(a&&!b)throw a},_findNearestElement:function(a){while(a.length>0){var d=this._uniqueIDToClientID(a),c=document.getElementById(d);if(c)return c;var b=a.lastIndexOf("$");if(b===-1)return null;a=a.substring(0,b)}return null},_findText:function(b,a){var c=Math.max(0,a-20),d=Math.min(b.length,a+20);return b.substring(c,d)},_fireDefaultButton:function(a,d){if(a.keyCode===13){var c=a.srcElement||a.target;if(!c||c.tagName.toLowerCase()!=="textarea"){var b=document.getElementById(d);if(b&&typeof b.click!=="undefined"){this._activeDefaultButton=b;this._activeDefaultButtonClicked=false;try{b.click()}finally{this._activeDefaultButton=null}a.cancelBubble=true;if(typeof a.stopPropagation==="function")a.stopPropagation();return false}}}return true},_getPageLoadedEventArgs:function(j,e){var i=[],h=[],d=e?e.updatePanelData:null,c,g,b;if(!d){c=this._updatePanelIDs;g=null;b=null}else{c=d.updatePanelIDs;g=d.childUpdatePanelIDs;b=d.panelsToRefreshIDs}var a,f;if(b)for(a=0,f=b.length;a<f;a++)Array.add(i,document.getElementById(this._uniqueIDToClientID(b[a])));for(a=0,f=c.length;a<f;a++)if(j||Array.indexOf(g,c[a])!==-1)Array.add(h,document.getElementById(this._uniqueIDToClientID(c[a])));return new Sys.WebForms.PageLoadedEventArgs(i,h,e?e.dataItems:{})},_getPageLoadingEventArgs:function(h){var g=[],f=[],c=h.updatePanelData,b=c.oldUpdatePanelIDs,j=c.updatePanelIDs,i=c.childUpdatePanelIDs,e=c.panelsToRefreshIDs,a,d;for(a=0,d=e.length;a<d;a++)Array.add(g,document.getElementById(this._uniqueIDToClientID(e[a])));for(a=0,d=b.length;a<d;a++)if(Array.indexOf(e,b[a])===-1&&(Array.indexOf(j,b[a])===-1||Array.indexOf(i,b[a])>-1))Array.add(f,document.getElementById(this._uniqueIDToClientID(b[a])));return new Sys.WebForms.PageLoadingEventArgs(g,f,h.dataItems)},_getPostBackSettings:function(a,c){var d=a,b=null;while(a){if(a.id){if(!b&&Array.contains(this._asyncPostBackControlClientIDs,a.id))b=this._createPostBackSettings(true,this._scriptManagerID+"|"+c,d);else if(!b&&Array.contains(this._postBackControlClientIDs,a.id))return this._createPostBackSettings(false,null,null);else{var e=Array.indexOf(this._updatePanelClientIDs,a.id);if(e!==-1)if(this._updatePanelHasChildrenAsTriggers[e])return this._createPostBackSettings(true,this._updatePanelIDs[e]+"|"+c,d);else return this._createPostBackSettings(true,this._scriptManagerID+"|"+c,d)}if(!b&&this._matchesParentIDInList(a.id,this._asyncPostBackControlClientIDs))b=this._createPostBackSettings(true,this._scriptManagerID+"|"+c,d);else if(!b&&this._matchesParentIDInList(a.id,this._postBackControlClientIDs))return this._createPostBackSettings(false,null,null)}a=a.parentNode}if(!b)return this._createPostBackSettings(false,null,null);else return b},_getScrollPosition:function(){var a=document.documentElement;if(a&&(this._validPosition(a.scrollLeft)||this._validPosition(a.scrollTop)))return {x:a.scrollLeft,y:a.scrollTop};else{a=document.body;if(a&&(this._validPosition(a.scrollLeft)||this._validPosition(a.scrollTop)))return {x:a.scrollLeft,y:a.scrollTop};else if(this._validPosition(window.pageXOffset)||this._validPosition(window.pageYOffset))return {x:window.pageXOffset,y:window.pageYOffset};else return {x:0,y:0}}},_initializeInternal:function(a,b){if(this._prmInitialized)throw Error.invalidOperation(Sys.WebForms.Res.PRM_CannotRegisterTwice);this._prmInitialized=true;this._scriptManagerID=a;this._form=b;this._onsubmit=this._form.onsubmit;this._form.onsubmit=null;this._onFormSubmitHandler=Function.createDelegate(this,this._onFormSubmit);this._onFormElementClickHandler=Function.createDelegate(this,this._onFormElementClick);this._onWindowUnloadHandler=Function.createDelegate(this,this._onWindowUnload);Sys.UI.DomEvent.addHandler(this._form,"submit",this._onFormSubmitHandler);Sys.UI.DomEvent.addHandler(this._form,"click",this._onFormElementClickHandler);Sys.UI.DomEvent.addHandler(window,"unload",this._onWindowUnloadHandler);this._originalDoPostBack=window.__doPostBack;if(this._originalDoPostBack)window.__doPostBack=Function.createDelegate(this,this._doPostBack);this._originalDoPostBackWithOptions=window.WebForm_DoPostBackWithOptions;if(this._originalDoPostBackWithOptions)window.WebForm_DoPostBackWithOptions=Function.createDelegate(this,this._doPostBackWithOptions);this._originalFireDefaultButton=window.WebForm_FireDefaultButton;if(this._originalFireDefaultButton)window.WebForm_FireDefaultButton=Function.createDelegate(this,this._fireDefaultButton);this._originalDoCallback=window.WebForm_DoCallback;if(this._originalDoCallback)window.WebForm_DoCallback=Function.createDelegate(this,this._doCallback);this._pageLoadedHandler=Function.createDelegate(this,this._pageLoadedInitialLoad);Sys.UI.DomEvent.addHandler(window,"load",this._pageLoadedHandler)},_matchesParentIDInList:function(c,b){for(var a=0,d=b.length;a<d;a++)if(c.startsWith(b[a]+"_"))return true;return false},_onFormElementActive:function(a,d,e){if(a.disabled)return;this._postBackSettings=this._getPostBackSettings(a,a.name);if(a.name){var b=a.tagName.toUpperCase();if(b==="INPUT"){var c=a.type;if(c==="submit")this._additionalInput=encodeURIComponent(a.name)+"="+encodeURIComponent(a.value);else if(c==="image")this._additionalInput=encodeURIComponent(a.name)+".x="+d+"&"+encodeURIComponent(a.name)+".y="+e}else if(b==="BUTTON"&&a.name.length!==0&&a.type==="submit")this._additionalInput=encodeURIComponent(a.name)+"="+encodeURIComponent(a.value)}},_onFormElementClick:function(a){this._activeDefaultButtonClicked=a.target===this._activeDefaultButton;this._onFormElementActive(a.target,a.offsetX,a.offsetY)},_onFormSubmit:function(h){var g=true,t=this._isCrossPost;this._isCrossPost=false;var e,s;if(this._onsubmit)g=this._onsubmit();if(g)for(e=0,s=this._onSubmitStatements.length;e<s;e++)if(!this._onSubmitStatements[e]()){g=false;break}if(!g){if(h)h.preventDefault();return}var n=this._form;if(t)return;if(this._activeDefaultButton&&!this._activeDefaultButtonClicked)this._onFormElementActive(this._activeDefaultButton,0,0);if(!this._postBackSettings.async)return;var a=new Sys.StringBuilder;a.append(encodeURIComponent(this._scriptManagerID)+"="+encodeURIComponent(this._postBackSettings.panelID)+"&");var v=n.elements.length;for(e=0;e<v;e++){var d=n.elements[e],f=d.name;if(typeof f==="undefined"||f===null||f.length===0||f===this._scriptManagerID)continue;var m=d.tagName.toUpperCase();if(m==="INPUT"){var k=d.type;if(k==="text"||k==="password"||k==="hidden"||(k==="checkbox"||k==="radio")&&d.checked){a.append(encodeURIComponent(f));a.append("=");a.append(encodeURIComponent(d.value));a.append("&")}}else if(m==="SELECT"){var u=d.options.length;for(var o=0;o<u;o++){var q=d.options[o];if(q.selected){a.append(encodeURIComponent(f));a.append("=");a.append(encodeURIComponent(q.value));a.append("&")}}}else if(m==="TEXTAREA"){a.append(encodeURIComponent(f));a.append("=");a.append(encodeURIComponent(d.value));a.append("&")}}a.append("__ASYNCPOST=true&");if(this._additionalInput){a.append(this._additionalInput);this._additionalInput=null}var c=new Sys.Net.WebRequest,b=n.action;if(Sys.Browser.agent===Sys.Browser.InternetExplorer){var p=b.indexOf("#");if(p!==-1)b=b.substr(0,p);var l=b.indexOf("?");if(l!==-1){var r=b.substr(0,l);if(r.indexOf("%")===-1)b=encodeURI(r)+b.substr(l)}else if(b.indexOf("%")===-1)b=encodeURI(b)}c.set_url(b);c.get_headers()["X-MicrosoftAjax"]="Delta=true";c.get_headers()["Cache-Control"]="no-cache";c.set_timeout(this._asyncPostBackTimeout);c.add_completed(Function.createDelegate(this,this._onFormSubmitCompleted));c.set_body(a.toString());var i,j=this._get_eventHandlerList().getHandler("initializeRequest");if(j){i=new Sys.WebForms.InitializeRequestEventArgs(c,this._postBackSettings.sourceElement);j(this,i);g=!i.get_cancel()}if(!g){if(h)h.preventDefault();return}this._scrollPosition=this._getScrollPosition();this.abortPostBack();j=this._get_eventHandlerList().getHandler("beginRequest");if(j){i=new Sys.WebForms.BeginRequestEventArgs(c,this._postBackSettings.sourceElement);j(this,i)}if(this._originalDoCallback)this._cancelPendingCallbacks();this._request=c;this._processingRequest=false;c.invoke();if(h)h.preventDefault()},_onFormSubmitCompleted:function(c){this._processingRequest=true;if(c.get_timedOut()){this._endPostBack(this._createPageRequestManagerTimeoutError(),c,null);return}if(c.get_aborted()){this._endPostBack(null,c,null);return}if(!this._request||c.get_webRequest()!==this._request)return;if(c.get_statusCode()!==200){this._endPostBack(this._createPageRequestManagerServerError(c.get_statusCode()),c,null);return}var a=this._parseDelta(c);if(!a)return;var b,e;if(a.asyncPostBackControlIDsNode&&a.postBackControlIDsNode&&a.updatePanelIDsNode&&a.panelsToRefreshNode&&a.childUpdatePanelIDsNode){var p=this._updatePanelIDs,h=a.childUpdatePanelIDsNode.content,n=h.length?h.split(","):[],l=this._splitNodeIntoArray(a.asyncPostBackControlIDsNode),m=this._splitNodeIntoArray(a.postBackControlIDsNode),o=this._splitNodeIntoArray(a.updatePanelIDsNode),g=this._splitNodeIntoArray(a.panelsToRefreshNode);for(b=0,e=g.length;b<e;b++){var i=this._uniqueIDToClientID(g[b]);if(!document.getElementById(i)){this._endPostBack(Error.invalidOperation(String.format(Sys.WebForms.Res.PRM_MissingPanel,i)),c,a);return}}var f=this._processUpdatePanelArrays(o,l,m);f.oldUpdatePanelIDs=p;f.childUpdatePanelIDs=n;f.panelsToRefreshIDs=g;a.updatePanelData=f}a.dataItems={};var d;for(b=0,e=a.dataItemNodes.length;b<e;b++){d=a.dataItemNodes[b];a.dataItems[d.id]=d.content}for(b=0,e=a.dataItemJsonNodes.length;b<e;b++){d=a.dataItemJsonNodes[b];a.dataItems[d.id]=Sys.Serialization.JavaScriptSerializer.deserialize(d.content)}var k=this._get_eventHandlerList().getHandler("pageLoading");if(k)k(this,this._getPageLoadingEventArgs(a));Sys._ScriptLoader.readLoadedScripts();Sys.Application.beginCreateComponents();var j=Sys._ScriptLoader.getInstance();this._queueScripts(j,a.scriptBlockNodes,true,false);this._processingRequest=true;j.loadScripts(0,Function.createDelegate(this,Function.createCallback(this._scriptIncludesLoadComplete,a)),Function.createDelegate(this,Function.createCallback(this._scriptIncludesLoadFailed,a)),null)},_onWindowUnload:function(){this.dispose()},_pageLoaded:function(a,c){var b=this._get_eventHandlerList().getHandler("pageLoaded");if(b)b(this,this._getPageLoadedEventArgs(a,c));if(!a)Sys.Application.raiseLoad()},_pageLoadedInitialLoad:function(){this._pageLoaded(true,null)},_parseDelta:function(g){var c=g.get_responseData(),d,h,D,E,C,b=0,e=null,i=[];while(b<c.length){d=c.indexOf("|",b);if(d===-1){e=this._findText(c,b);break}h=parseInt(c.substring(b,d),10);if(h%1!==0){e=this._findText(c,b);break}b=d+1;d=c.indexOf("|",b);if(d===-1){e=this._findText(c,b);break}D=c.substring(b,d);b=d+1;d=c.indexOf("|",b);if(d===-1){e=this._findText(c,b);break}E=c.substring(b,d);b=d+1;if(b+h>=c.length){e=this._findText(c,c.length);break}C=c.substr(b,h);b+=h;if(c.charAt(b)!=="|"){e=this._findText(c,b);break}b++;Array.add(i,{type:D,id:E,content:C})}if(e){this._endPostBack(this._createPageRequestManagerParserError(String.format(Sys.WebForms.Res.PRM_ParserErrorDetails,e)),g,null);return null}var w=[],u=[],o=[],v=[],r=[],B=[],z=[],y=[],t=[],q=[],k,n,s,l,m,p,x;for(var j=0,F=i.length;j<F;j++){var a=i[j];switch(a.type){case "updatePanel":Array.add(w,a);break;case "hiddenField":Array.add(u,a);break;case "arrayDeclaration":Array.add(o,a);break;case "scriptBlock":Array.add(v,a);break;case "scriptStartupBlock":Array.add(r,a);break;case "expando":Array.add(B,a);break;case "onSubmit":Array.add(z,a);break;case "asyncPostBackControlIDs":k=a;break;case "postBackControlIDs":n=a;break;case "updatePanelIDs":s=a;break;case "asyncPostBackTimeout":l=a;break;case "childUpdatePanelIDs":m=a;break;case "panelsToRefreshIDs":p=a;break;case "formAction":x=a;break;case "dataItem":Array.add(y,a);break;case "dataItemJson":Array.add(t,a);break;case "scriptDispose":Array.add(q,a);break;case "pageRedirect":if(Sys.Browser.agent===Sys.Browser.InternetExplorer){var f=document.createElement("a");f.style.display="none";f.attachEvent("onclick",A);f.href=a.content;this._form.parentNode.insertBefore(f,this._form);f.click();f.detachEvent("onclick",A);this._form.parentNode.removeChild(f);function A(a){a.cancelBubble=true}}else window.location.href=a.content;return;case "error":this._endPostBack(this._createPageRequestManagerServerError(Number.parseInvariant(a.id),a.content),g,null);return null;case "pageTitle":document.title=a.content;break;case "focus":this._controlIDToFocus=a.content;break;default:this._endPostBack(this._createPageRequestManagerParserError(String.format(Sys.WebForms.Res.PRM_UnknownToken,a.type)),g,null);return null}}return {executor:g,updatePanelNodes:w,hiddenFieldNodes:u,arrayDeclarationNodes:o,scriptBlockNodes:v,scriptStartupNodes:r,expandoNodes:B,onSubmitNodes:z,dataItemNodes:y,dataItemJsonNodes:t,scriptDisposeNodes:q,asyncPostBackControlIDsNode:k,postBackControlIDsNode:n,updatePanelIDsNode:s,asyncPostBackTimeoutNode:l,childUpdatePanelIDsNode:m,panelsToRefreshNode:p,formActionNode:x}},_processUpdatePanelArrays:function(e,l,n){var d,c,b;if(e){var f=e.length;d=new Array(f);c=new Array(f);b=new Array(f);for(var a=0;a<f;a++){var k=e[a].substr(1),m=e[a].charAt(0)==="t";b[a]=m;d[a]=k;c[a]=this._uniqueIDToClientID(k)}}else{d=[];c=[];b=[]}var i=[],g=[];this._convertToClientIDs(l,i,g);var j=[],h=[];this._convertToClientIDs(n,j,h);return {updatePanelIDs:d,updatePanelClientIDs:c,updatePanelHasChildrenAsTriggers:b,asyncPostBackControlIDs:i,asyncPostBackControlClientIDs:g,postBackControlIDs:j,postBackControlClientIDs:h}},_queueScripts:function(scriptLoader,scriptBlockNodes,queueIncludes,queueBlocks){for(var i=0,l=scriptBlockNodes.length;i<l;i++){var scriptBlockType=scriptBlockNodes[i].id;switch(scriptBlockType){case "ScriptContentNoTags":if(!queueBlocks)continue;scriptLoader.queueScriptBlock(scriptBlockNodes[i].content);break;case "ScriptContentWithTags":var scriptTagAttributes;eval("scriptTagAttributes = "+scriptBlockNodes[i].content);if(scriptTagAttributes.src){if(!queueIncludes||Sys._ScriptLoader.isScriptLoaded(scriptTagAttributes.src))continue}else if(!queueBlocks)continue;scriptLoader.queueCustomScriptTag(scriptTagAttributes);break;case "ScriptPath":if(!queueIncludes||Sys._ScriptLoader.isScriptLoaded(scriptBlockNodes[i].content))continue;scriptLoader.queueScriptReference(scriptBlockNodes[i].content)}}},_registerDisposeScript:function(a,b){if(!this._scriptDisposes[a])this._scriptDisposes[a]=[b];else Array.add(this._scriptDisposes[a],b)},_scriptIncludesLoadComplete:function(e,b){if(b.executor.get_webRequest()!==this._request)return;this._commitControls(b.updatePanelData,b.asyncPostBackTimeoutNode?b.asyncPostBackTimeoutNode.content:null);if(b.formActionNode)this._form.action=b.formActionNode.content;var a,d,c;for(a=0,d=b.updatePanelNodes.length;a<d;a++){c=b.updatePanelNodes[a];var j=document.getElementById(c.id);if(!j){this._endPostBack(Error.invalidOperation(String.format(Sys.WebForms.Res.PRM_MissingPanel,c.id)),b.executor,b);return}this._updatePanel(j,c.content)}for(a=0,d=b.scriptDisposeNodes.length;a<d;a++){c=b.scriptDisposeNodes[a];this._registerDisposeScript(c.id,c.content)}for(a=0,d=this._transientFields.length;a<d;a++){var g=document.getElementById(this._transientFields[a]);if(g){var k=g._isContained?g.parentNode:g;k.parentNode.removeChild(k)}}for(a=0,d=b.hiddenFieldNodes.length;a<d;a++){c=b.hiddenFieldNodes[a];this._createHiddenField(c.id,c.content)}if(b.scriptsFailed)throw Sys._ScriptLoader._errorScriptLoadFailed(b.scriptsFailed.src,b.scriptsFailed.multipleCallbacks);this._queueScripts(e,b.scriptBlockNodes,false,true);var i="";for(a=0,d=b.arrayDeclarationNodes.length;a<d;a++){c=b.arrayDeclarationNodes[a];i+="Sys.WebForms.PageRequestManager._addArrayElement('"+c.id+"', "+c.content+");\r\n"}var h="";for(a=0,d=b.expandoNodes.length;a<d;a++){c=b.expandoNodes[a];h+=c.id+" = "+c.content+"\r\n"}if(i.length)e.queueScriptBlock(i);if(h.length)e.queueScriptBlock(h);this._queueScripts(e,b.scriptStartupNodes,true,true);var f="";for(a=0,d=b.onSubmitNodes.length;a<d;a++){if(a===0)f="Array.add(Sys.WebForms.PageRequestManager.getInstance()._onSubmitStatements, function() {\r\n";f+=b.onSubmitNodes[a].content+"\r\n"}if(f.length){f+="\r\nreturn true;\r\n});\r\n";e.queueScriptBlock(f)}e.loadScripts(0,Function.createDelegate(this,Function.createCallback(this._scriptsLoadComplete,b)),null,null)},_scriptIncludesLoadFailed:function(d,c,b,a){a.scriptsFailed={src:c.src,multipleCallbacks:b};this._scriptIncludesLoadComplete(d,a)},_scriptsLoadComplete:function(f,c){var e=c.executor;if(window.__theFormPostData)window.__theFormPostData="";if(window.__theFormPostCollection)window.__theFormPostCollection=[];if(window.WebForm_InitCallback)window.WebForm_InitCallback();if(this._scrollPosition){if(window.scrollTo)window.scrollTo(this._scrollPosition.x,this._scrollPosition.y);this._scrollPosition=null}Sys.Application.endCreateComponents();this._pageLoaded(false,c);this._endPostBack(null,e,c);if(this._controlIDToFocus){var a,d;if(Sys.Browser.agent===Sys.Browser.InternetExplorer){var b=$get(this._controlIDToFocus);a=b;if(b&&!WebForm_CanFocus(b))a=WebForm_FindFirstFocusableChild(b);if(a&&typeof a.contentEditable!=="undefined"){d=a.contentEditable;a.contentEditable=false}else a=null}WebForm_AutoFocus(this._controlIDToFocus);if(a)a.contentEditable=d;this._controlIDToFocus=null}},_splitNodeIntoArray:function(b){var a=b.content,c=a.length?a.split(","):[];return c},_uniqueIDToClientID:function(a){return a.replace(/\$/g,"_")},_updateControls:function(d,a,c,b){this._commitControls(this._processUpdatePanelArrays(d,a,c),b)},_updatePanel:function(updatePanelElement,rendering){for(var updatePanelID in this._scriptDisposes)if(this._elementContains(updatePanelElement,document.getElementById(updatePanelID))){var disposeScripts=this._scriptDisposes[updatePanelID];for(var i=0,l=disposeScripts.length;i<l;i++)eval(disposeScripts[i]);delete this._scriptDisposes[updatePanelID]}this._destroyTree(updatePanelElement);updatePanelElement.innerHTML=rendering},_validPosition:function(a){return typeof a!=="undefined"&&a!==null&&a!==0}};Sys.WebForms.PageRequestManager.getInstance=function(){var a=Sys.WebForms.PageRequestManager._instance;if(!a)a=Sys.WebForms.PageRequestManager._instance=new Sys.WebForms.PageRequestManager;return a};Sys.WebForms.PageRequestManager._addArrayElement=function(a){if(!window[a])window[a]=[];for(var b=1,c=arguments.length;b<c;b++)Array.add(window[a],arguments[b])};Sys.WebForms.PageRequestManager._initialize=function(a,b){Sys.WebForms.PageRequestManager.getInstance()._initializeInternal(a,b)};Sys.WebForms.PageRequestManager.registerClass("Sys.WebForms.PageRequestManager");Sys.UI._UpdateProgress=function(a){Sys.UI._UpdateProgress.initializeBase(this,[a]);this._displayAfter=500;this._dynamicLayout=true;this._associatedUpdatePanelId=null;this._beginRequestHandlerDelegate=null;this._startDelegate=null;this._endRequestHandlerDelegate=null;this._pageRequestManager=null;this._timerCookie=null};Sys.UI._UpdateProgress.prototype={get_displayAfter:function(){return this._displayAfter},set_displayAfter:function(a){this._displayAfter=a},get_dynamicLayout:function(){return this._dynamicLayout},set_dynamicLayout:function(a){this._dynamicLayout=a},get_associatedUpdatePanelId:function(){return this._associatedUpdatePanelId},set_associatedUpdatePanelId:function(a){this._associatedUpdatePanelId=a},_clearTimeout:function(){if(this._timerCookie){window.clearTimeout(this._timerCookie);this._timerCookie=null}},_handleBeginRequest:function(d,c){var a=c.get_postBackElement(),b=!this._associatedUpdatePanelId;while(!b&&a){if(a.id&&this._associatedUpdatePanelId===a.id)b=true;a=a.parentNode}if(b)this._timerCookie=window.setTimeout(this._startDelegate,this._displayAfter)},_startRequest:function(){if(this._pageRequestManager.get_isInAsyncPostBack())if(this._dynamicLayout)this.get_element().style.display="block";else this.get_element().style.visibility="visible";this._timerCookie=null},_handleEndRequest:function(){if(this._dynamicLayout)this.get_element().style.display="none";else this.get_element().style.visibility="hidden";this._clearTimeout()},dispose:function(){if(this._beginRequestHandlerDelegate!==null){this._pageRequestManager.remove_beginRequest(this._beginRequestHandlerDelegate);this._pageRequestManager.remove_endRequest(this._endRequestHandlerDelegate);this._beginRequestHandlerDelegate=null;this._endRequestHandlerDelegate=null}this._clearTimeout();Sys.UI._UpdateProgress.callBaseMethod(this,"dispose")},initialize:function(){Sys.UI._UpdateProgress.callBaseMethod(this,"initialize");this._beginRequestHandlerDelegate=Function.createDelegate(this,this._handleBeginRequest);this._endRequestHandlerDelegate=Function.createDelegate(this,this._handleEndRequest);this._startDelegate=Function.createDelegate(this,this._startRequest);if(Sys.WebForms&&Sys.WebForms.PageRequestManager)this._pageRequestManager=Sys.WebForms.PageRequestManager.getInstance();if(this._pageRequestManager!==null){this._pageRequestManager.add_beginRequest(this._beginRequestHandlerDelegate);this._pageRequestManager.add_endRequest(this._endRequestHandlerDelegate)}}};Sys.UI._UpdateProgress.registerClass("Sys.UI._UpdateProgress",Sys.UI.Control);~
Type.registerNamespace('Sys.Net');
Type.registerNamespace('Sys.Serialization');
Type.registerNamespace('Sys.Services');
Type.registerNamespace('Sys.UI');
Type.registerNamespace('Sys.WebForms');
Type: '{0}' cannot be found.
typeArgs
TypeAttributes
TypeBuilder
TypeCode
TypeConverter
TypeConverterAttribute
typeData
TypeData
typedDataSetSchemaImporterExtension
TypedDataSetSchemaImporterExtensionFx35
TypeDescriptor
TypedSerializers
typedSerializers
TypeId
typeLoader
TypeLoadException
TypeName
typeName
TypeName
TypeNamespace
typeNamespace
typeQualifiedName
typeRegisteredTwice
TypeResolver
types
Types
typeShouldBeTypeOrString
U#System.Web.UI.UpdatePanelRenderMode
U#System.Web.UI.UpdatePanelUpdateMode
U,System.Web.UI.WebControls.InsertItemPosition
UCollection of parameters used for the OrderGroupsBy operator during the Select query.
UInt16
UInt32
UInt64
Unable to connect to the Microsoft SQL Everywhere Service using the specified connection string. Make sure that Microsoft SQL Server Everywhere is correctly installed on this computer.
UnaryExpression
UnauthorizedAccessException
unbounded
undefinedEvent
UnhandledExceptionEventLogMessage
UnicodeCategory
uniqueID
UniqueScript_
uniqueScripts
Unknown
Unknown identifier '{0}'
Unknown profile property '{0}'.
Unknown token: '{0}'.
Unknown web method {0}.
UnknownNode
UnlockUser
Unrecognized escape sequence.
UnregisterUpdatePanel
Unrestricted
UnsafeNativeMethods
unsignedByte
unsignedInt
unsignedLong
unsignedShort
unsupportedTypesInFramework30
Unterminated string literal
Unterminated string passed in.
Untitled Page
UnwrapNullableType
Update
UpdateCheck
Updated
UpdateDataObject
UpdateItem
UpdateMode
updatePanel
UpdatePanel
updatePanel
UpdatePanel_CannotModifyControlCollection
UpdatePanel_CannotSetContentTemplate
UpdatePanel_ChildrenAsTriggers
UpdatePanel_ChildrenTriggersAndUpdateAlways
UpdatePanel_RenderMode
UpdatePanel_SetPartialRenderingModeCalledOnce
UpdatePanel_Triggers
UpdatePanel_UpdateConditional
UpdatePanel_UpdateMode
UpdatePanel_UpdateTooLate
UpdatePanelControlTrigger_ControlID
UpdatePanelControlTrigger_ControlNotFound
UpdatePanelControlTrigger_NoControlID
updatePanelIDs
UpdatePanelIDsToken
UpdatePanelMaxScriptLength
UpdatePanelRenderMode
updatePanels
UpdatePanelsToRefreshToken
UpdatePanelToken
UpdatePanelTrigger
UpdatePanelTriggerCollection
UpdatePanelUpdateMode
UpdateParameters
UpdateProgress
UpdateProgress_AssociatedUpdatePanelID
UpdateProgress_DisplayAfter
UpdateProgress_DisplayAfterInvalid
UpdateProgress_DynamicLayout
UpdateProgress_NoUpdatePanel
UpdateProgress_ProgressTemplate
UpdateProgress_TemplateRequired
updateSaveTime
UpdateUser
UpdateValues
Updating
updatingUpdatePanels
Upgrade
UpgradeToWriterLock
UriComponents
UriFormat
UriKind
urlBase
UrlEncode
urlMustBeLessThan1024chars
UrlPath
UrlPathEncode
UrlPropertyAttribute
urn:schemas-microsoft-com:xml-dataservicemap
urn:schemas-microsoft-com:xml-dataservicemap:ExtensionFile
urn:schemas-microsoft-com:xml-dataservicemap:MetadataFile
urn:schemas-microsoft-com:xml-dataservicemap:MetadataSource
urn:schemas-microsoft-com:xml-dataservicemap:ReferenceGroup
urn:schemas-microsoft-com:xml-msdata
urn:schemas-microsoft-com:xml-wcfservicemap
urn:schemas-microsoft-com:xml-wcfservicemap:CollectionMapping
urn:schemas-microsoft-com:xml-wcfservicemap:ExcludedType
urn:schemas-microsoft-com:xml-wcfservicemap:ExtensionFile
urn:schemas-microsoft-com:xml-wcfservicemap:GenerateAsynchronousMethods, urn:schemas-microsoft-com:xml-wcfservicemap:EnableDataBinding, urn:schemas-microsoft-com:xml-wcfservicemap:ExcludedTypes, urn:schemas-microsoft-com:xml-wcfservicemap:ImportXmlTypes, urn:schemas-microsoft-com:xml-wcfservicemap:GenerateInternalTypes, urn:schemas-microsoft-com:xml-wcfservicemap:GenerateMessageContracts, urn:schemas-microsoft-com:xml-wcfservicemap:NamespaceMappings, urn:schemas-microsoft-com:xml-wcfservicemap:CollectionMappings, urn:schemas-microsoft-com:xml-wcfservicemap:GenerateSerializableTypes, urn:schemas-microsoft-com:xml-wcfservicemap:Serializer, urn:schemas-microsoft-com:xml-wcfservicemap:UseSerializerForFaults, urn:schemas-microsoft-com:xml-wcfservicemap:Wrapped, urn:schemas-microsoft-com:xml-wcfservicemap:ReferenceAllAssemblies, urn:schemas-microsoft-com:xml-wcfservicemap:ReferencedAssemblies, urn:schemas-microsoft-com:xml-wcfservicemap:ReferencedDataContractTypes, urn:schemas-microsoft-com:xml-wcfservicemap:ServiceContractMappings
urn:schemas-microsoft-com:xml-wcfservicemap:MetadataFile
urn:schemas-microsoft-com:xml-wcfservicemap:MetadataSource
urn:schemas-microsoft-com:xml-wcfservicemap:NamespaceMapping
urn:schemas-microsoft-com:xml-wcfservicemap:ReferencedAssembly
urn:schemas-microsoft-com:xml-wcfservicemap:ReferencedDataContractType
urn:schemas-microsoft-com:xml-wcfservicemap:ReferenceGroup
urn:schemas-microsoft-com:xml-wcfservicemap:ServiceContractMapping
UseGet
useHttpGet
UseHttpGet
useIsolatedStorage
useIsolatedStore
User_
UserIsNotAuthenticated
userIsOnline
username
userName
UserName
usernames
usernameToMatch
UserValidated
UserValidatedEventArgs
UseSerializerForFaults
UseSerializerForFaultsSpecified
useWFCService
UseXmlResponse
Using the GenerateScriptTypes attribute is not supported for types in the following categories: primitive types; DateTime; generic types taking more than one parameter; types implementing IEnumerable or IDictionary; interfaces; Abstract classes; classes without a public default constructor.
UsingIsolatedStorage
UsSystem.Web.UI.WebControls.ButtonType, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
uSystem.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3auSystem.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
UTF8Encoding
uThe template used when no data is returned from the data source. This template replaces the LayoutTemplate when used.
UvSystem.Web.UI.WebControls.SortDirection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
v2.0.50727
Validate
ValidateByCallingIsLoggedIn
ValidateContextType
ValidateDeleteSupported
ValidateDigit
ValidateEditSupported
ValidateInsertSupported
ValidateOrderByParameter
ValidateParameterName
ValidateSvcMapFile
ValidateTableType
ValidateToken
ValidateUpdateSupported
ValidateUser
ValidateUserByCallingLogin
ValidateUserCore
ValidateUserWithOfflineStore
ValidatingProperties
ValidatingPropertiesEventArgs
ValidationEventArgs
ValidationEventHandler
validationGroup
ValidationType
value
Value
Value cannot be null or empty.
Value cannot be null.
Value cannot be undefined.
Value is not a class.
Value is not a valid interface.
Value is not a valid type name.
Value must be a DOM element.
Value must be an integer.
Value must be of type '{0}'.
value__
value1
value2
ValueCollection
values
Values
values
ValueType
var $addHandler = Sys.UI.DomEvent.addHandler = function Sys$UI$DomEvent$addHandler(element, eventName, handler) {
var $addHandlers = Sys.UI.DomEvent.addHandlers = function Sys$UI$DomEvent$addHandlers(element, events, handlerOwner) {
var $clearHandlers = Sys.UI.DomEvent.clearHandlers = function Sys$UI$DomEvent$clearHandlers(element) {
var $create = Sys.Component.create = function Sys$Component$create(type, properties, events, references, element) {
var $find = Sys.Application.findComponent;
var $get = Sys.UI.DomElement.getElementById = function Sys$UI$DomElement$getElementById(id, element) {
var $removeHandler = Sys.UI.DomEvent.removeHandler = function Sys$UI$DomEvent$removeHandler(element, eventName, handler) {
var __cultureInfo = '
var gtc = Sys.Net.WebServiceProxy._generateTypedConstructor;
var PageMethods = 
VarFileInfo
VB_LANGUAGE_NAME
VerifyAssemblyContainsDebugWebResource
VerifyAssemblyContainsReleaseWebResource
VerifyGeneratedCodeAndHandleErrors
VerifyRenderingInServerForm
VerifyTargetControlType
Version
viewName
ViewState
VirtualDirectory
VirtualDirectoryMapping
VirtualDirectoryMappingCollection
VirtualFile
VirtualFileBase
VirtualFileReader
virtualPath
VirtualPathProvider
VirtualPathUtility
Visible
VJSharpCodeProvider
VJSharpCodeProvider, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
VolumeSeparatorChar
VS_VERSION_INFO
VSpecifies whether to automatically generate the Where clause from the WhereParameters.
VSWCFServiceContractGenerator
vSystem.Web.AspNetHostingPermissionAttribute, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
VThe attribute 'LoadProperties' can only be used when using the default ProfileService.
VThe ContextTypeName property of LinqDataSource '{0}' must specify a data context type.
VThe ID of the server control that will be replaced with instances of the ItemTemplate.
VThe TargetControlID of '{0}' is not valid. A control with ID '{1}' could not be found.
W<r;<#
WAn attempt was made to call the method '{0}' using a {1} request, which is not allowed.
wAn unknown error occurred while processing the request on the server. The status code returned from the server was: {0}
WCFBuildProvider
WCFModelStrings
WCFServiceClientProxyGenerator
WebBaseEvent
WebCategoryAttribute
WebConfigurationFileMap
WebConfigurationManager
WebControl
WebException
WebGetAttribute
WebHeaderCollection
WebMethodAttribute
webMethodAttribute
WebRefDirectoryName
WebReferenceOptions
webReferencesRootVirtualPath
WebRequest
WebRequestErrorEvent
WebResourceAttribute
WebResourceUtil
WebResourceUtil_AssemblyDoesNotContainDebugWebResource
WebResourceUtil_AssemblyDoesNotContainEmbeddedResource
WebResourceUtil_AssemblyDoesNotContainReleaseWebResource
WebResponse
WebService_Error
WebService_InvalidGenerateScriptType
WebService_InvalidInlineVirtualPath
WebService_InvalidVerbRequest
WebService_InvalidWebServiceCall
WebService_InvalidXmlReturnType
WebService_MissingArg
WebService_NoScriptServiceAttribute
WebService_NoWebServiceData
WebService_NoWebServiceDataInlineScript
WebService_RedirectError
WebService_UnknownWebMethod
WebServiceClientProxyGenerator
WebServiceData
webServiceData
WebServiceEnumData
WebServiceError
WebServiceErrorEvent
WebServiceErrorEventCode
webServiceFailed
webServiceFailedNoMsg
WebServiceHandlerFactory
webServiceInvalidJsonWrapper
webServiceInvalidReturnType
WebServiceMethodData
WebServiceParameterData
WebServices
webServices
webServiceTimedOut
WebServiceTypeData
When true, the server-side history state is hashed using the same settings as ViewState. When false, the server history state is a clear-text string dictionary that can be modified by the end user by modifying the url.
Where
WhereParameters
whereParameters
whereValues
WhiteSpaceTrimStringConverter
Width
window.Sys = {
window.Type = Function;
WindowsIdentity
WindowsPrincipal
wininet.dll
WLinqDataSource '{0}' does not support the Delete operation unless EnableDelete is true.
WLinqDataSource '{0}' does not support the Insert operation unless EnableInsert is true.
WLinqDataSource '{0}' does not support the Update operation unless EnableUpdate is true.
WrapNonExceptionThrows
Wrapped
WrappedOptions
WrappedSpecified
Write
Write11_ExtensionFile
Write12_MetadataType
Write13_MetadataFile
Write14_MetadataSource
Write15_SvcMapFile
Write16_ReferenceGroup
Write2_ReferencedType
Write3_ExtensionFile
Write3_NamespaceMapping
Write4_CollectionCategory
Write4_MetadataType
Write5_MetadataFile
Write5_ReferencedCollectionType
Write6_MetadataSource
Write6_ProxySerializerType
Write7_DataSvcMapFile
Write7_ReferencedAssembly
Write8_ContractMapping
Write8_ReferenceGroup
Write9_ClientOptions
writeAccessProperties
WriteAccessProperties
writeAccessProperties
WriteAttribute
WriteBeginTag
WriteElementString
WriteElementStringRaw
WriteEndElement
WriteExceptionJsonString
WriteFile
WriteLine
WriteMethods
writeMethods
WriteNotificationToStringBuilder
WriteNullTagLiteral
writer
Writer
WriteResource
WriteResources
WriteResourceToStringBuilder
WriteScript
WriteScriptWithTags
WriteStartDocument
WriteStartElement
WriteStringArray
WriteSubstitution
WriteValue
WriteXsiType
WSAddressing
WsdlContractConversionContext
WsdlContractInheritance
wsdlDocuments
WsdlEndpointConversionContext
wsdl-ex
wsdlFile
wsdlFiles
wsdlImporter
WsdlImporter
wsdlImportExtensions
WsdlInspector
WS-MetadataExchange
WSPolicy
WThe history state must be small enough to not make the url larger than 1024 characters.
WThe ID of the server control that will be replaced with instances of the GroupTemplate.
WThe script tag registered for type '{0}' and key '{1}' is missing a matching close tag.
wwwwu
X-Content-Type-Options
xCould not find UpdatePanel with ID '{0}'. If it is being updated dynamically then it must be inside another UpdatePanel.
X-MicrosoftAjax
XmlAnyAttributeAttribute
XmlAnyElementAttribute
XmlArrayAttribute
XmlArrayItemAttribute
XmlAttribute
XmlAttributeAttribute
XmlAttributeCollection
XmlConvert
XmlDocument
xmlElement
XmlElement
XmlElementAttribute
XmlEnumAttribute
XmlException
XmlIgnoreAttribute
XmlNamedNodeMap
XmlNameTable
XmlNode
XmlNodeList
XmlNodeType
XmlQualifiedName
XmlReader
xmlReader
XmlReaderSettings
XmlRootAttribute
XmlSchema
XmlSchemaAnnotated
XmlSchemaAnnotation
XmlSchemaAppInfo
XmlSchemaAttribute
XmlSchemaAttributeGroup
XmlSchemaComplexType
XmlSchemaContentModel
XmlSchemaElement
XmlSchemaEnumerationFacet
XmlSchemaException
XmlSchemaFacet
XmlSchemaGroup
XmlSchemaGroupBase
XmlSchemaObject
XmlSchemaObjectCollection
XmlSchemaObjectEnumerator
XmlSchemaParticle
xmlSchemas
XmlSchemas
XmlSchemaSequence
XmlSchemaSet
XmlSchemaSimpleType
XmlSchemaSimpleTypeContent
XmlSchemaSimpleTypeList
XmlSchemaSimpleTypeRestriction
XmlSchemaType
XmlSchemaValidationFlags
xmlSerializationAttributes
XmlSerializationReader
XmlSerializationReaderDataSvcMapFile
XmlSerializationReaderSvcMapFile
XmlSerializationWriter
XmlSerializationWriterDataSvcMapFile
XmlSerializationWriterSvcMapFile
XmlSerializeObjectToString
XmlSerializer
XmlSerializer1
XmlSerializerContract
XmlSerializerImplementation
XmlSerializerImportOptions
XmlSerializerMessageContractImporter
XmlSerializerNamespaces
XmlSerializeString
XmlSeverityType
XmlStrings
XmlText
XmlTextAttribute
XmlTextReader
XmlTextWriter
XmlWriter
-XrC&
XsdDataContractExporter
XsdDataContractImporter
xSpecifies an override for the table name used by the FilterRepeater. By default the table is inferred from the page URL.
XSystem.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
XThe timeout period in seconds for async postbacks. A value of zero indicates no timeout.
XTwo metadata items or extension items in the .svcmap file have the same file name '{0}'.
y<yfy
y3z<zlz
YThe data source '{0}' does not support server-side paging and it returned non-ICollection
YThe SupportsPartialRendering property cannot be set when EnablePartialRendering is false.
yTy]y
z*Bss
z*Jr-i
Z.(+t
ZCould not find the type specified in the ContextTypeName property of LinqDataSource '{0}'.
zEzxz
ZFVxi
ZSpecifies whether to automatically generate the OrderBy clause from the OrderByParameters.
zStyle properties are not supported on ListView.  Apply styling or CSS classes to the elements inside ListView's templates.
ZThis event is raised to allow modifications to script references before they are rendered.
