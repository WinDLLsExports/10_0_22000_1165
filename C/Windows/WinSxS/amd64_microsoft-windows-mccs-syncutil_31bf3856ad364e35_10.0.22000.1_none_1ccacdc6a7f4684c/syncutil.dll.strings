 A^_^
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A]A\_
 H3E H3E
 Microsoft Corporation. All rights reserved.
 Operating System
 Windows
!( ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwLower != ((ULONG_PTR) ((INT_PTR) -1 ))) && ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwUpper != ((ULONG_PTR) ((INT_PTR) -1 ))) )
!accessToken.empty() && !_IsCurrentTimePastExpirationTime(expirationTime)
!L$ L
!SecIsValidHandle(&info->sslCredentialHandle[(UINT)handleType])
!This program cannot be run in DOS mode.
!token.empty() && ((nullptr == pCurrentToken) || (token != pCurrentToken))
#$#$#DataStoresLock#$#$#
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%s %s
%s%s-%d/%u.%u.%u
%s%s%s-%d.txt
%s:%s
%s\%s
%s\%s-%d.txt
%s\Ping %s-%d.txt
%s\SKZ %s.txt
%s\WebAuth\%s
%x - %s
&client_secret=
&code=
&device_model=
&device_name=
&grant_type=authorization_code
&grant_type=refresh_token
&login_hint=
&redirect_uri=
&refresh_token=
&response_type=
&scope=
( ( 0x10a40000 | 31 ) ) == propertyValues[0].propid
( *pMutexHandle ) != 0
(!!parsed)
((&nameVar)->vt) == VT_BSTR
(((HRESULT)(_IsValidToken(currentToken, &valid))) >= 0) && (0 != valid)
(((HRESULT)(error)) < 0)
(((HRESULT)(hr)) >= 0)
(((HRESULT)(hr)) >= 0) && (info != 0)
(((HRESULT)(hr)) >= 0) && (info != nullptr)
(((HRESULT)(hr)) >= 0) || (((HRESULT)0x85050002) == hr)
(((NTSTATUS)(_ntStatus)) >= 0)
((*pPropNotEmptyFilterIndices)[i] >= 0) && ((*pPropNotEmptyFilterIndices)[i] < c_numGalContactPimProps)
((HRESULT)(50L) <= 0 ? ((HRESULT)(50L)) : ((HRESULT) (((50L) & 0x0000FFFF) | (7 << 16) | 0x80000000))) == hr
((HRESULT)0x80070057L)
((HRESULT)0x80070057L) != hr
(_itow_s((int)expirationTime, conversionBuffer, 10) == 0)
(0 != nSize)
(0 != ret)
(200 == httpStatus)
(A^_^[
(A_A^A]A\_^][
(accessorType == __uuidof(PopImapAccountAccessor)) || (accessorType == __uuidof(ExternalAccountAccessor)) || (accessorType == __uuidof(ActiveSyncAccountAccessor))
(caller: %p) 
(dwType == ( 4ul ))
(expirationTime == (double)((int)expirationTime))
(nullptr != pAuthTarget) && (L'\0' != *pAuthTarget)
(size > 0)
(StringFromGUID2(accountId, pEnd, (INT)[](size_t num) { INT out = 2147483647; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToInt(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\credutil.cpp", 580  ); } } while(0,0); return out; }(countCharsRemaining)) > 0)
(t$0H
(utl::wstring::npos != beginIndex)
*~*~*~*~*~*~*~*~*~*
*pEndToken == 0
*pEndToken == NULL
*ppszMultiByteStr == 0
*ppszMultiByteStr == NULL
*ppwszWideCharStr == 0
*ppwszWideCharStr == NULL
,D$xD
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.D$xH
.data
.data$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gehcont
.gfids
.giats
.hotmail.com
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.outlook.com
.pdata
.rdata
.rdata$brc
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata
::StringCchCatW(deviceTypeDefault, sizeof(*__countof_helper(deviceTypeDefault)), deviceTypeFamily)
::StringCchCopyW(pwszUserAgent, userAgentLength, userAgent.c_str())
;\$hu(
;|$0r
?access_token=
?client_id=
?terminate@@YAXXZ
@.data
@.didat
@.reloc
@8t$0uv
@8y(t
@A\_^[]
@A^_]
@A^_^
@A^_^[]
@A^A\_
@A__^[]
@A_A^_
@A_A^_^]
@A_A^A\_^
@A_A^A]_^[]
@A_A^A]A\_^]
@SUVWAVAWH
@SUVWAVH
@SVWATAUAVAWH
@SVWH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWAVAWH
@USWH
[%02d/%02d/%04d %02d:%02d:%02d.%03d] 
[%hs(%hs)]
[%hs]
\$ E3
\$ M+
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ UVWH
\$ VWAVH
\$ WH
\$(E3
\$0fD
\$hH+
\$PH;
\$XH+
\MailContactsCalendarSync\LiveDomainList.txt
__C_specific_handler
__CxxFrameHandler3
__CxxFrameHandler4
__dllonexit
_amsg_exit
_callnewh
_errno
_GetAADToken
_GetBackendType() == c_pExchangeServiceType
_i64tow_s
_initterm
_IsValidToken(accessToken.GetRawBuffer(nullptr))
_IsValidToken(refreshToken)
_itow_s
_lock
_onexit
_purecall
_statusTemp == 0L
_strnicmp
_TranslateNotFoundErrors(AwaitOperationResult( findAccountOperation.p, &webAccount))
_TranslateNotFoundErrors(AwaitOperationResult( findAccountProviderOperation.p, &webAccountProvider))
_TranslateNotFoundErrors(AwaitOperationResult( getDefaultSignInAccountResultOperation.p, &result))
_unlock
_vscwprintf
_vsnprintf
_vsnwprintf
_vsnwprintf_s
_wcsicmp
_wcstoui64
_wtoi
_XcptFilter
` UAVAWH
`.rdata
`A__^
`A_A^_^]
{5B04B775-356B-4AA0-AAF8-6491FFEA5614}
|$ E3
|$ UATAUAVAWH
|$ UH
|$(A^
|$(E3
|$@A_A^A]A\
|$`E3
|$8E3
|$HE3
|$PE3
|$PH+
<AfA99
--= Protocol logs for PARTNER='%S', CTRLLOG ID=0x%08X =--
=-= Build %d =-=
=-=-=-= Client Request =-=-=-  Timestamp: 
=-=-=-= Server Response =-=-=- Timestamp: 
0 != *pCustomerId
0 != hashValueSize
0 != m_activityRefCount
0 != ppResumeState
0 != pScopeMetadata
0 != pServerName
0 != pSyncPartner
0 != sessionScope
0 != wideCount
0 == (clientSecretSize % sizeof(WCHAR))
0 == sessionScope
0.w/X#
00000000-0000-0000-0000-000000000000
000000004011621F
040904B0
0A^_]
0A^_^
0A^_^[]
0A^_^][
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_]
0A_A^A\_^
0A_A^A]_^
0A_A^A]A\_
0A_A^A]A\_^]
0I9|$
0L == lResult
1.3.6.1.4.1.311.71.1.1
1.3.6.1.4.1.311.71.1.2
1.3.6.1.5.5.7.3.2
10.0.22000.1
10.0.22000.1 (WinBuild.160101.0800)
163.com
2UuwarE
3L9?t
3L97t
3P?v]
79|$8uAI
862726500644-mba83qqf9kq69c5mk9u5h2dn4iocdspq.apps.googleusercontent.com
9\$@t@H
9\$Pt
9|$ tv
9|$ u
9A98uCA9x
9D$Hu
9D$Lu
9E4u4H
9L$0H
A^_^[]
A^_^][
A_A\_^]
A_A^]
A_A^_
A_A^_[]
A_A^_^[]
A_A^_^]
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]_]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A0H9QPt
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
access_token
access_type=offline
accessor.CoCreateInstance(__uuidof(ActiveSyncAccountAccessor))
accessor.CoCreateInstance(__uuidof(PopImapAccountAccessor))
accessor.CoCreateInstance(m_accessorType)
account
account->get_WebAccountProvider(&provider)
accountAbsent
accountConfig.CoCreateInstance(__uuidof(ActiveSyncApp))
accountId.reserve(accountIdBufferLength)
accountInternal->get_Id(accountId.GetAddressOf())
accountInternal->get_Properties(&accountProperties)
accountInternal->get_Properties(&properties)
accountProperties->HasKey( HStringReference(AccountAutorityPropertyName).Get(), &hasAuthrority)
accountProperties->Lookup( HStringReference(AccountAutorityPropertyName).Get(), authority.GetAddressOf())
AcquireDataStoreLock
AcquireDataStoreLockEx
AcquireSRWLockExclusive
ActivateInstance( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_PPIDeviceCredentialReader).Get(), &reader)
ActivateInstance( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &listener)
ACTIVESYNC_DATASOURCE_EXCHANGE == accountType
ActiveSyncCredential
ActiveSyncCredentialDefaultUser
ActiveSyncCredentialSchema
ActiveSyncUnistoreLockTemplate
added.first != nullptr
AggregateAccountSyncStats
AggregateSessionSyncStats
AirSync:FolderSyncFlags
AirSync:IsSearchResult
AirSync:LongID
AirSync:ParentID
AirSync:ParentServerID
AirSync:PermanentDelete
AirSync:PermanentID
AirSync:SyncOptionsHash
AllowSMIMEEncryptionAlgorithmNegotiation
AllowSMIMESoftCerts
apidata.googleusercontent.com
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-downlevel-shlwapi-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-accesshlpr-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shell-shdirectory-l1-1-0.dll
APPID
Assert
ASync3dF[^
ATAVAWH
ATL$__a
ATL$__m
ATL$__z
Authority
authority
AuthUri
AwaitOperationResult( webTokenRequestResultOperation.p, &result)
backendType == c_pMSAServiceType
Basic
Basic %hs
BytesToDigits
bytesWritten == bytesToCommit
C H+E H
c UAVAWH
C ubI
caldav.calendar.yahoo.com
CalendarAgeFilter
callContext
CallContext:[%hs] 
carddav.address.yahoo.com
cbWrite == chunkSize
CEMAPI.dll
CertCompareCertificateName
CertFreeCertificateChain
CertFreeCertificateChainEngine
CertGetCertificateChain
CertGetCertificateContextProperty
CertGetEnhancedKeyUsage
CertGetNameStringW
charsConverted != 0
CHttpTransport_CreateInstance
client_id=
client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s
client_secret
clientSecret.reserve(clientSecretSize / sizeof(WCHAR))
ClientUnreadToReadCount
CloseDataStoreLock
CloseHandle
CloseHandle ( lockHandle )
CloseThreadpoolTimer
CLSID_MailSyncEngine == sds.engineID
CLSIDFromString
cNames
CoCreateInstance
CoCreateInstanceElevated
code=
CoGetObject
CoGetObject( monikerName.c_str(), &bindOptions, interfaceId, ppInstance)
CoInitializeEx
CommsService
CompanyName
CompareFileTime
componentId
componentName
CompressWhitespaceNW
consumers
Content-Type: application/x-www-form-urlencoded
convertedBufferSize != 0
ConvertVariantTimeToFileTime
ConvertVariantTimeToFileTime(0, &(lastSyncTimeAsDate.date), &lastSyncTime)
CoTaskMemAlloc
CoTaskMemFree
CoUninitialize
CoWaitForMultipleObjects
CreateAuthHandler
CreateDataStoreLock
CreateEventExW
CreateEventW
CreateFileW
CreateMutexExW
CreateMutexW
CreateSemaphoreExW
CreateSyncBufferedStream
CreateThreadpoolTimer
CreateWrapFileStm
credential.assign(password)
credential->get_Password(&securePassword)
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(c_defaultResource).Get(), tokenResult.GetAddressOf())
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(resource.get()).Get(), tokenResult.GetAddressOf())
CredUtil_UpdatePasswordForAccount
CredVaultDelete
CredVaultRead
CredVaultWrite
CRYPT32.dll
CryptAcquireContextW
CryptAcquireContextW( tlx::replace(provider), 0, 0, 1, 0xF0000000)
CryptBinaryToStringA
CryptBinaryToStringA( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptBinaryToStringW
CryptBinaryToStringW( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptCreateHash
CryptCreateHash( provider, ((4 << 13) | (0) | 4), 0, 0, tlx::replace(hash))
CryptDestroyHash
CryptGetHashParam
CryptGetHashParam( hash, 0x0002, hashValue, &hashValueSize, 0)
CryptGetHashParam( hash, 0x0004, (LPBYTE)&hashValueSize, &dwordSize, 0)
CryptHashData
CryptHashData(hash, (LPBYTE)pUserId, (DWORD)[](size_t num) { DWORD out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(ULongLongToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\asutil.cpp", 524 ); } } while(0,0); return out; }(userIdSize), 0)
CryptReleaseContext
CRYPTSP.dll
CryptStringToBinaryA
CryptStringToBinaryA( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
CryptStringToBinaryW
CryptStringToBinaryW( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
currentContextId
currentContextMessage
currentContextName
currRefreshTokenValid
customAuthParams.append(escapedUsername.c_str())
customAuthParams.append(idParams)
customAuthParams.append(L"&")
customAuthParams.append(L"access_type=offline")
customAuthParams.append(L"username=")
D$ E3
D$ fD
D$ L;
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
D$,D8%
d$@E3
D$@E3
D$@fD
D$@H;
D$@H+
D$`E3
D$`fD
D$`H;
D$0E3
D$0H;
D$8H;
D$8Hi
D$H9D$8r[3
D$HE3
D$hE3
D$HE3
D$hE3
D$HfD
D$hH;
D$HH;
D$hH;
D$HH;
D$hH;
D$HHi
D$PE3
D$pE3
D$PfD
D$pfD
D$PH;
D$pH;
D$PH;
D$pH;
D$PH;
D$pH;
d$PIc
D$xE3
D$XI;
D\$PH
D9|$(
D9}'t9
D9d$(|
D9d$`t
D9e`u@
D9K,~
D9KPt
D9o t
D9t$0vz
data.reserve((1024 * 60)+1)
DebugBreak
DefaultLogging
DefaultStoreDirty
DefaultWindowsLiveCid
DelayLoadFailureHook
DeleteAuthCertHash
DeleteCriticalSection
DeleteDataSource
DeletedMailCount
DeleteFileW
DeleteHttpTransport
DeleteInProgress
DeleteOAuthRefreshTokenForPartnership
DeletePwd
Device
device_id=
deviceFamily < 100
DeviceID
deviceID.valid()
deviceModel.assign(values)
deviceName.assign(values)
DeviceNeedsProvisioning
DeviceType
DisablePIIStripping
dj0yJmk9QzFFaHJsUnphMjlnJmQ9WVdrOVZUVk9iMWhCTXpZbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1lYw--
DllCanUnloadNow
DllGetClassObject
DMCfgUtils.dll
DoesServerSupportAutoMoveSentItem
Domain
Dt$83
DuplicateHandle
dwRC == 0L
dwSize == sizeof(DWORD)
E(=csm
E_INVALIDARG != hr
E8=csm
EASAccountId
EH=csm
Eh=csm
E'L;E/u
Elevation:Highest!new:%s
email
Email
EmailAgeFilter
emails
Enabled
EnabledDavFeatures
EnableInProcTracingForProvider
encodedCredentials.reserve(encodedSize)
Engine
EnterCriticalSection
en-US
error
Error
errorCode
EscapeURL
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
Ex=csm
EX=csm
Exception
Exchange
expirationTime
expires_in
expression
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
f&8).
f;3u=
f9<Bu
f9<Qu
f94Ou
fA9<@u
fA90t
fA94Cu
fA9Z*v$A
factory->ActivateInstance(&inspectable)
FAILED(error)
FailFast
failureCount
failureId
FailureTrigger
failureType
FallbackError
FALSE
fB9,Bu
fB9<Bu
fB94@u
fD;2u
fD;7t
fD9 t
fD9$Gu
fD9$Ju
fD9$yu
fD9$Zu
fD9(t
fD9,{u
fD9,su
fD9,xu
fD9,Zu
fD9.t6H
fD9.t'H
fD9<Ju
fD9<Xu
fD9<zu
fD94{u
fD94Zu
fD98t
fF9$Au
fF9$Bu
fF9$Fu
fF9$Gu
fF9,@u
fF9,Bu
fF9,xu
fF9<@u
fF9<Bu
fF9<Cu
fF9<Fu
fF94@u
fF94Bu
fF94Cu
fF94Fu
fF94xu
fG9<Fu
fG94Au
FileDescription
fileHandle != ((HANDLE)(LONG_PTR)-1)
fileName
filePos
FileTimeToSystemTime
FileVersion
FindErrorCode
FlushInProcTraceSession
Fonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourceinfo.cpp
FormatMessageW
FreeCredentialsHandle
FreeLibrary
FreeProws
FreeTransientObjectSecurityDescriptor
function
functionName
g_hServerReady != 0
GetAADToken
GetAccountSyncStats
GetAccountUsernameFromToken
GetActivationFactory( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_DeviceCredentialUtility).Get(), &credentialUtilities)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &tokenBroker)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebAuthenticationCoreManager).Get(), &webAuthCore)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebTokenRequest).Get(), &requestFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_WebAuthenticationBroker).Get(), &wabBrokerStatics)
GetAuthCertHash
GetAuthCertTargetAndUser
GetAuthority
GetBatterySaverWnfName
GetCurrentProcess
GetCurrentProcessId
GetCurrentSyncStats
GetCurrentSyncStatsForMessage
GetCurrentSyncStatsForStore
GetCurrentThread
GetCurrentThreadId
GetDefaultDeviceType
GetDefaultMsaWebAccountId
GetDefaultStoreDirty
GetDomainFromEmail
GetFileAttributesExW
GetFileSize
GetGalSearchResultsFolderAndPartnerGuidEx
GetGoldenPartnershipId
GetLastError
GetLocalTime
GetMeetingNotificationFromMessage
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetMonitorDisplayState
GetMsaCustomerId
GetMsgStoreFromMessage
GetOAuthAccessTokenForPartnership
GetOAuthHelperForAccount
GetOAuthHelperForProvider
GetOrCreateNullPowerDependencyCoordinatorManager
GetOutgoingMessageSizeLimit
GetPartnerGUID
GetProcAddress
GetProcessHeap
GetProductInfo
GetProviderUri
GetSessionSyncStats
GetSHA1HashOfString
GetSyncTargetName
GetSyncWorkOnBehalfTicket
GetSystemPowerStatus
GetSystemTime
GetSystemTimeAsFileTime
GetTickCount
GetTickCount64
GetTokenInformation
GetVersionExW
GetWebAccountId
GetWebAccountProvider
GetWebAccountProviderFromProviderId
GetWebTokenSilentlyEx
GetWebTokenTimedOut
Gmail
gmail.com
GO:#cR
GoldenPartnershipId
GoogleDefaultPadding
GoogleOAuthRedirectURI
GoogleOAuthTokenURI
GoogleOAuthURI
GoogleUserInfoURI
gvType == GUID_VALIDATION_GUID || gvType == GUID_VALIDATION_DATASOURCE
H!\$ 3
H!\$03
H!\$8E
H!\$8H!\$@E
H!\$8L
H!D$HH
H!ZIg\
H;A t
H;AXH
H;D$0u
H;D$8
H;t$8
H_^[]
H_^][
H+|$PH
H+QPH
H9?t^H
H9\$`t
H9>tsH
H9s t
H9wHsLH
HA_A^_^[]
HasNeverSyncedSuccessfully
HcD$$HcL$ H
HeapAlloc
HeapFree
hr == ((HRESULT)0L)
hr == ((HRESULT)0L) || 0 != rghObjects[1]
hr == ((HRESULT)0L) || hMutex != 0
hr == ((HRESULT)0x85050013)
hr == E_ACCOUNT_NOTFOUND
hr == S_OK
hr == S_OK || hMutex != 0
hr == S_OK || NULL != rghObjects[1]
hrDelete
hresult
HRESULT
hresult
HrGetOneProp
hrRewrite
HrSetOneProp
HTMLTruncation
http://
https%3A%2F%2Fmail.google.com
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcarddav
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email
https://
https://login.microsoft.com
https://outlook.office.com
icloud.com
IeRtUtil.dll
info != nullptr
InitializeCredVault
InitializeCriticalSection
InitializeCriticalSectionEx
InitializeMeContact
InitializeMsaStore
InitializeServerReadyEvents
InitializeSRWLock
InitializeSyncStatus
InitOnceBeginInitialize
InitOnceComplete
initWithWindow->Initialize(callerWindow)
InprocLogger.dll
InProcLogger.DLL
inspectable.As(&initWithWindow)
InternalName
InvalidateOAuthAccessTokenForPartnership
IPM.Schedule.Meeting.Canceled
IPM.Schedule.Meeting.Notification.Forward
IPM.Schedule.Meeting.Request
IPM.Schedule.Meeting.Resp.Neg
IPM.Schedule.Meeting.Resp.Pos
IPM.Schedule.Meeting.Resp.Tent
IsACOn
isalnum
IsDebuggerPresent
IsFirstSyncEver
IsMatchingClientCertificateEx
IsNotSupposedToSync
IsPwdSaved
IsScreenOn
IsValidAADAuthUri
it != m_objectMap.npos()
it == 0
jsonObject->GetNamedString( HStringReference(L"access_token").Get(), accessToken.GetAddressOf())
K@D9KPt
K@H91t
K0L;E
K9\$@tC
kD$@<
kD$p<A
kD$X<A
kernelbase.dll
KhH91t
konecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoaccountscallbackregistration.cpp
KpH91t
L$ E3
L$ H3
L$ SVWAVH
L$ SVWH
L$ UATAUAVAWH
L$ USVWAVH
l$ VWAVH
l$ VWAWH
l$(E3
L$(H;
l$@E3
L$@E3
L$@H3
L$@I;
L$`H3
L$0E3
L$0fD
L$0H3
L$8+GHD
L$8E3
L$8H;
L$8Hc
L$HE3
L$HH;
L$HH3
L$hI;
L$pH3
L$PH3
L$pH3
L$PH3
l$xE3
L$XH+
L$XH3
L$XI;
L$XL+
L9(u!
L9(uY
L9{0tEL
L9{Hu
L9>tiL9~
L9O@t
L9s(t
LASTATTEMPTTIME
LastSuccessfulHeartbeat
LASTSUCCESSTIME
LastSyncAttempt
LastSyncSuccess
LcA<E3
LCMapStringW
LeaveCriticalSection
LegalCopyright
lineNumber
listener->add_AccountAdded(addedHandler.Get(), &addedToken)
listener->add_AccountChanged(changedHandler.Get(), &changedToken)
listener->add_AccountDeleted(deletedHandler.Get(), &deletedToken)
LMNOPQYZ[_`abdemq
LoadHeartbeatValues
LoadLibraryExW
LoadLibraryW
LoadStringW
Local\SM0:%lu:%lu:%hs
LocalAlloc
LocalFree
LogHr
LogNt
LogRollOverSize
LogSyncBiweeklySQM
lstrcmpiW
lstrcmpW
m.google.com
m_accountName.assign(L"ServerLog")
m_accountName.assign(pSettings->pAccountName)
m_activityRefCount == 0
m_clientId.assign(pClientId)
m_clientSecret.assign(pClientSecret)
m_completedEvent != 0
m_customAuthParams.assign(pCustomAuthParams)
m_datatypeList.push_back(guidType)
m_datatypeList.reserve(4)
m_endURL.assign(pEndURL)
m_EngineGuid != GUID_INVALID
m_ge.IsInitialized()
m_Name != 0
m_pPdcReference
m_redirectURL.assign(pRedirectURL)
m_refreshURL.assign(pRefreshURL)
m_scopes.assign(pScopes)
m_sources.push_back(mailSourcesList[i])
m_sources.push_back(serverSourcesList[i])
m_startURL.assign(pStartURL)
m_userNameHint.assign(pUsernameHint)
m_watchdogDisabled
M9/tD
M9'u9
mac.com
MailBodyTruncation
MailFileAttachments
MailIncoming
MailOutgoing
MailReceivedCount10kTo20k
MailReceivedCount20kTo40k
MailReceivedCount5kTo10k
MailReceivedCountOver40k
MailReceivedCountUnder5k
MailReceivedKB
mailSourcesList.push_back(guidSource)
mail-x
malloc
MAPIAllocateBuffer
MAPIFreeBuffer
MAPIInitialize
MAPILogonEx
MAPIUninitialize
MarkServerReady
MarkServerShutdown
MarkUserDataAccountAsHidden
MaxAttachmentSize
MaxCalendarAgeFilter
MaxEmailAgeFilter
MaxEmailBodyTruncationSize
MaxEmailHTMLBodyTruncationSize
MCCS\
MCCSPal.dll
me.com
Meeting:AllDay
Meeting:DisallowNewTimeProposal
Meeting:Occurences
Meeting:Reminder
Meeting:Timezone
memcmp
memcpy
memcpy_s
memmove
memset
message
Microsoft
Microsoft Corporation
Microsoft Smart Card Key Storage Provider
Microsoft.PPI.CredentialManagement.DeviceCredentialUtility
Microsoft.PPI.CredentialManagement.PPIDeviceCredentialReader
Microsoft.Windows.OneSync.DiagCritical
Microsoft.Windows.OneSync.DiagError
Microsoft.Windows.OneSync.DiagTrace
Microsoft.Windows.OneSync.DiagWarning
Microsoft.Windows.OneSync.SyncUtil
Microsoft.Windows.Unistack.FailureTrigger
MicrosoftDefaultPadding
MicrosoftOAuthRedirectURI
MicrosoftOAuthTokenURI
MicrosoftOAuthURI
MicrosoftUserInfoURI
Microsoft-Windows-MCCS-SyncUtil
MinutesBetweenFT
mode != Access_Create
module
MSFT-
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
name.assign(pName)
ndrPropValues[0].ulPropTag == ((((ULONG)(0x0037))<<16)|((ULONG)(((ULONG) 31))))
ndrPropValues[1].ulPropTag == ((((ULONG)(0x0C1F))<<16)|((ULONG)(((ULONG) 31))))
NetworkHelper.dll
newAccessTokenValid
NextLogNumber
notificationData && (0 != byteCountNotificationData)
ntdll.dll
NULL != ppResumeState
NULL != pScopeMetadata
NULL != pServerName
NULL != pSyncPartner
NULL != sessionScope
NULL == sessionScope
nullptr != m_activationHandle
nullptr != m_pTpTimer
nullptr != pDisplayName
nullptr == buffer.insert( buffer.end(), readBuffer, readBuffer + readCount)
nullptr == m_activationHandle
NumberOfLogs
NXH!E
o\$PH
OAuth
OAuthHelper_CreateInstance
OAuthRefreshToken
oD$ f
oL$0f
OLEAUT32.dll
OMTP11
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecoreuap\base\appmodel\UserDataAccess\
onecoreuap\base\MailContactsCalendarSync\
onecoreuap\Base\MailContactsCalendarSync\Porting\Inc\AutoVariant.h
onecoreuap\Base\MailContactsCalendarSync\Porting\Inc\EntryIdEx.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Idl\objfre\amd64\AccountAccessorTypes.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\EnumMAPITable.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchdog.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchDog.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\SyncPdcReference.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\SyncResettableTimer.h
onecoreuap\base\mailcontactscalendarsync\utils\syncsqm\lib\sqmpartnertype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accessorutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accountpropertyutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\activesyncsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\asutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\base64.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\basicauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\comelevation.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\contactsyncutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\credutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\DelayedDBPropertiesStream.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\domutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easaadauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easheartbeatcontroller.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumdatatypereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsource.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourcereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourceregsimple.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\fileutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\guidenumerator.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\heartbeatalgorithmbase.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\internetmailauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\jsonhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\liveendpoints.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\mapiutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\msautils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthaccountutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhelper.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthtokenutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\password.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\plaintextauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\pluginerror.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\policyutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\popimapsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ppiauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\radiomanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\registryutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\serverreadyindictor.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\smtpauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourcelock.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncbufferedstream.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synccalendaringutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncds.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synchttputils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synclogger.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncpersistentobjectmanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\SyncPersistentObjectManager.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncsessionhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatshelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatusnotification.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\tokenbrokerutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\updaterestoreutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthsettings.cpp
onecoreuap\internal\base\inc\WRLWinRTHelpers.h
onecoreuap\private\base\inc\CommsPoomHelpers.h
onecoreuap\private\base\inc\HashKeyHelper.h
onecoreuap\private\base\inc\SafeMapiProps.h
OneStopFactory
OneSyncError
OPCOT
OpenMimeBufferedStream
OpenMutexW
OpenProcessToken
OpenProviderKey
OpenSemaphoreW
OpenThreadToken
organizations
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
originTag.append(timeStamp)
originTag.assign(pOriginTag)
oT$@f
outcome
outlook.at
outlook.be
outlook.ca
outlook.ch
outlook.cl
outlook.cn
outlook.co.id
outlook.co.il
outlook.co.in
outlook.co.jp
outlook.co.kr
outlook.co.nz
outlook.co.th
outlook.co.uk
outlook.co.za
outlook.com
outlook.com.ar
outlook.com.au
outlook.com.br
outlook.com.hk
outlook.com.mx
outlook.com.my
outlook.com.pt
outlook.com.sg
outlook.com.tr
outlook.com.tw
outlook.com.vn
outlook.cz
outlook.de
outlook.dk
outlook.es
outlook.fi
outlook.fr
outlook.gr
outlook.hk
outlook.hu
outlook.ie
outlook.in
outlook.it
outlook.jp
outlook.lt
outlook.lv
outlook.my
outlook.nl
outlook.no
outlook.ph
outlook.rs
outlook.ru
outlook.se
outlook.sg
outlook.sk
outlookApp.CoCreateInstance(__uuidof(Application))
OutputDebugStringW
p WATAUAVAWH
p WAVAWH
p;S>D.X
p{]0L
p0R^G'
P1_HexInt32
P1_HResult
P1_Int32
P1_UnicodeString
P2_String
P3_UInt32
p3QXI
PA^_]
pA^_^[]
PA^_^[]
PA_A^_^]
pA_A^_^]
pA_A^A\_^[]
PA_A^A]A\_^]
pA_A^A]A\_^]
pAccessToken->assign(accessToken.GetRawBuffer(nullptr))
pAccount->get_UserName(userName.GetAddressOf())
pAccount->get_WebAccountProvider(&provider)
pAccountId->assign( WindowsGetStringRawBuffer(accountId.Get(), nullptr))
pAcessToken->assign(accessToken.GetRawBuffer(nullptr))
packageName.append(L"!")
packageName.append(storeIdAsString)
packageName.assign(c_emailProductId)
packages\ActiveSync\LocalState\DiagOutputDir
Padding
ParseDelimitedString
PartA_PrivTags
partnerId
PathCchAddBackslash
PathCchAddBackslash(pPath, pathLength)
PathCchCombine
PathCchCombine(pPath, pathLength, localDataPath, pRelativePath)
pBackendServiceType->assign(pServiceType)
pCidTemp.valid()
pcPZt
pCredential->assign(pPassword, passwordLength)
pCredential->get_Domain(&domain)
pCredential->get_Username(&userName)
pCredential->get_UserPrincipalName(&userPrincipalName)
pDeviceId->assign(deviceID)
pDeviceType->assign(deviceTypeDefault)
pdhrResult != 0
pDomain->assign(pszDomainName)
pEndPoint->assign(pStringValue.get())
pEndToken == pToken
pEntryId->assign(tempEntryId)
Performance
pEventData
pGuid != 0
phQtQ
phU8U
phV6*'
pHXZ"
pIdParams->append(L"&device_model=")
pIdParams->append(L"&device_name=")
pIdParams->append(L"device_id=")
PIMPR_DISPLAY_NAME == propertyValues[0].propid
PIMSTORE.dll
pIsTimeoutError
pjVz2
pKey != 0
pKey != NULL
pKR^a
pMsgStore
pName
policyKey.append(L"\\")
policyKey.append(partnerString)
policyKey.append(pPolicyInfo->pwszPolicyKey)
policyKey.append(pPolicyInfo->pwszPolicyName)
position != nullptr
postLocation.assign(m_refreshUri)
POutlookAppManager_CreateInstance
pP\>o>
pPeriod != nullptr
pProperty->assign( WindowsGetStringRawBuffer(propertyValue.Get(), nullptr))
pProvider->get_Id(providerId.GetAddressOf())
ppTagArray
ppwszPassword
pQTzQ.
pQZ0}
PreferredBodyType
pRefreshToken->assign(refreshToken.GetRawBuffer(nullptr))
pReportError
pRequest->get_Properties(&requestProperties)
pResult->get_ResponseData(&responseData)
pResult->get_ResponseStatus(&requestStatus)
ProductName
ProductVersion
Prop_AnsiString
Prop_Dword
Prop_FileTime1
Prop_HexInt32
Prop_String
Prop_String1
Prop_String2
Prop_String3
Prop_StringA_1
Prop_StringA_2
properties->HasKey( HStringReference(pPropertyName).Get(), &hasProperty)
properties->Insert( HStringReference(L"client_secret").Get(), HStringReference(pClientSecret).Get(), &replaced)
properties->Insert( HStringReference(parameter.first.c_str()).Get(), HStringReference(parameter.second.c_str()).Get(), &replaced)
properties->Lookup( HStringReference(pPropertyName).Get(), propertyValue.GetAddressOf())
props!=0
props!=NULL
protocolReturnData.assign(pAuthCodeResponse)
providerErrorText
providerWithAuthotity->get_Authority(authority.GetAddressOf())
PRVAT
pServerName->assign(L"m.google.com")
pString->Get(&length, &pStringValue)
pSyncAttemptTime
pSyncSuccessTime
pszMultiByteStr
pszValue
pTags->cValues == (sizeof(*RtlpNumberOf(spta.aulPropTag)))
pTags->cValues == ARRAYSIZE(spta.aulPropTag)
pTargetType == AuthTargetType::GetAuthTargetType(AuthTargetKind::ExchangeActiveSync)
pToken->assign( WindowsGetStringRawBuffer(token.Get(), nullptr))
pTokenExpirationTime->assign(conversionBuffer)
pTokenType->assign(tokenType.GetRawBuffer(nullptr))
pUrlParam->append(escapedUrl.c_str())
pUser->assign(((&userVar)->bstrVal))
pUserName->assign( WindowsGetStringRawBuffer(userName.Get(), nullptr))
pUsername->assign(account.GetRawBuffer(nullptr))
pUsername->assign(hstrAccount.GetRawBuffer(nullptr))
pValue == tlx::iwstring_view_ascii(pStringValue, length)
pValue->append(uri, beginIndex, valueLength)
pValue->assign(GetVariantString(&propValue, L""))
pwszWideCharStr
pX]r&
pY]>_?
pZX2F
q"T<(
Q(9Q0~
Q,9Q4}
q:_0#
q;S>D.X
q;Vx"
q;Y~l
q@XvX
q[V0?7
q`Y>#
q+Z6;
q0R^G'
q3\pN
q8RTZ
Q9u H
qA\0i
qcPZt
qJW6p
qKSxt?
QueryPerformanceCounter
QueryTransientObjectSecurityDescriptor
qXV~(
qYQPu
qzV|=
R$fA;Z*
R:#'8
r\wbH
RadioManager::MarkInterfaceAsActive
RaiseException
RaiseFailFastException
reader->Read(&credential)
ReadFile
ReadOAuthRefreshTokenForPartnership
ReadPasswordForPartnership
reason
ReceivedMailCount
refresh_token
RefreshUri
RefreshWebTokenSilentlyEx
RegCloseKey
RegCreateKeyExW
RegDeleteKeyW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegGetValueW
RegisterSsoAccountsCallback
RegOpenKeyExW
RegOpenKeyW
RegQueryInfoKeyW
RegQueryValueExW
RegSetValueExW
ReleaseDataStoreLock
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
REPORT.IPM.Note.NDR
request.append( (OAuthGrantType::Implicit == grantType) ? L"token" : L"code")
request.append(accountInfoURI)
request.append(escapedRedirectUri.c_str())
request.append(escapedUsername.c_str())
request.append(L"&")
request.append(L"&client_secret=")
request.append(L"&code=")
request.append(L"&grant_type=authorization_code")
request.append(L"&grant_type=refresh_token")
request.append(L"&login_hint=")
request.append(L"&redirect_uri=")
request.append(L"&refresh_token=")
request.append(L"&response_type=")
request.append(L"&scope=")
request.append(L"?access_token=")
request.append(L"?client_id=")
request.append(L"client_id=")
request.append(m_clientId)
request.append(m_clientSecret)
request.append(m_customAuthParams)
request.append(m_scopes)
request.append(m_startURL)
request.append(pAccessToken)
request.append(pRefreshToken)
request.append(protocolReturnData, beginIndex, authCodeLength)
request->get_Properties(&properties)
requestedBytes <= 0xffffffffUL
requestedBytes <= ULONG_MAX
requestFactory->Create( pProvider, HStringReference(pScope).Get(), HStringReference(pClientId).Get(), &request)
requestParameters.emplace(L"authority", pAuthUri).first != nullptr
requestParameters.emplace(L"resource", utl::move(resourceUri)).first != nullptr
requestProperties->Insert( HStringReference(RequestAutorityPropertyName).Get(), authority.Get(), &replaced)
RequiredEncryptionSMIMEAlgorithm
RequiredSignedSMIMEAlgorithm
RequireEncryptedSMIMEMessages
RequireManualSyncWhenRoaming
RequireSignedSMIMEMessages
res == 0L
ResetEvent
ResolveDelayLoadedAPI
resource
resourcesLib.valid()
resourceUri.assign(pResourceUri, uriLength)
ResourceUrl
response->get_Token(token.GetAddressOf())
responseBody.reserve(++wideCount)
responseData->GetAt(0, &response)
result->get_DefaultWebAccount(&account)
ReturnHr
ReturnNt
rgName
Rich?v]
RoActivateInstance
RoGetActivationFactory
rpmsg.message
RPSToken
RtlCaptureContext
RtlClearThreadWorkOnBehalfTicket
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlGetThreadWorkOnBehalfTicket
RtlIsCriticalSectionLockedByThread
RtlIsCriticalSectionLockedByThread(&(_pAtlModule->m_csStaticDataInitAndTypeInfo.m_sec))
RtlIsMultiSessionSku
RtlLookupFunctionEntry
RtlReportException
RtlSetThreadWorkOnBehalfTicket
RtlVirtualUnwind
s%L93u
s_objectManager != 0
s_objectManager != NULL
s8I9>
SafeCustomerId
SafeCustomerId is: '%S', parsed value: %I64d, end index: %d
SafeLPWSTR
ScheduledSyncPeriod
Scheme
Scope
scopes->append(pProviderInfo->ScopeAccountInfo)
scopes->append(pProviderInfo->ScopeCalendar)
scopes->append(pProviderInfo->ScopeContacts)
scopes->append(pProviderInfo->ScopeMail)
scopes->append(pProviderInfo->ScopeSeperator)
sdct-w
sdpp-w
securePassword->Get(&passwordLength, &pPassword)
SelectionLanguage
SelectionNamespaces
SentMailCount
Server
ServerLog
serverSourcesList.push_back(guidSource)
ServerSync:AttOID
ServerSync:FileURI
ServerSync:FolderName
service::ssl.live.com::MBI_SSL
SetAuthCertHash
SetBatterySaverWnfName
SetConversationId
SetDefaultStoreDirty
SetEvent
SetLastError
SetMonitorDisplayState
SetOutgoingMessageSizeLimit
SetSyncWorkOnBehalfTicket
SetThreadpoolTimer
SetUnhandledExceptionFilter
SHCreateMemStream
SHGetKnownFolderPath
SHGetKnownFolderPath( knownFolderId, KF_FLAG_DONT_VERIFY, nullptr, replace(localDataPath))
ShouldReportAssertionFailure
sizeof(CEENTRYID) == storeEntryIdPropVal->Value.bin.cb
SL93t
Sleep
SleepConditionVariableSRW
SMIMEAlwaysEncrypt
SMIMEAlwaysSign
SNProviderAccountName
Software\Microsoft\AccountSettings
Software\Microsoft\ActiveSync
Software\Microsoft\ActiveSync\Environment
Software\Microsoft\ActiveSync\Partners
Software\Microsoft\ActiveSync\Security\Provision
Software\Microsoft\PPI\Settings\DeviceAccount
source != GUID_INVALID
source != GUID_NULL
SPERF_TAG_LOAD_XMLDOM
srcText
SsoId
SsoProviderMSA == providerType
SsoTokenTarget
SspiCli.dll
StateTransition
Status
StoreId
storeIds[0] != storeIds[1]
StoreType
strcspn
StringCbLengthA(pData, 2147483647 * sizeof(CHAR), &stringSize)
StringCbLengthW( credentialValue, credentialValueMaxLength * sizeof(WCHAR), &pwdSizeInBytes)
StringCchCatW(filePath, (sizeof(*RtlpNumberOf(filePath))), pFileName)
StringCchCatW(pwszBuffer, cchBufferSize, s_ServerTypeTable[type])
StringCchCatW(pwszBuffer, cchBufferSize, wszDataSource)
StringCchCopyExW( target, targetLength, pPrefix, &pEnd, &countCharsRemaining, 0)
StringCchCopyW( m_logPostfix, (sizeof(*RtlpNumberOf(m_logPostfix))), pSettings->logFilePostfix)
StringCchCopyW( m_logPrefix, (sizeof(*RtlpNumberOf(m_logPrefix))), pSettings->logFilePrefix)
StringCchCopyW(lineBuffer + HEX_LINE_CHARS, destinationSize, L"\r\n\0")
StringCchCopyW(pBuffer, bufferLength, value.c_str())
StringCchCopyW(pDestinationFileName, 260, pDefaultName)
StringCchCopyW(pPassword, passwordLen, pTmp)
StringCchCopyW(pwszBuffer, cchBufferSize, wszCredentialName)
StringCchCopyW(pwszPassword, dwPasswordLen, szNoPassword)
StringCchCopyW(retVal, addressLength, pMatchedAddress)
StringCchCopyW(retVal, bufferLength, localUsername.c_str())
StringCchLengthW(pBody, c_maxNDRBodySize, &contentLength)
StringCchLengthW(pMatchedAddress, (2147483647 - 1), &addressLength)
StringCchLengthW(pSubjectFormat, c_maxSubjectSize, &subjectFormatSize)
StringCchLengthW(pwszBuffer, cchBufferSize, &cchTempTargetName)
StringCchLengthW(pwszServer, MAX_SERVER_NAME_LENGTH, &cchServerSize)
StringCchPrintfA( partnerHeader, (sizeof(*RtlpNumberOf(partnerHeader))), c_partnerMapping, partnerGuid, TraceGetPartnerId(m_partner))
StringCchPrintfA(timeStamp, (sizeof(*RtlpNumberOf(timeStamp))), "[%02d/%02d/%04d %02d:%02d:%02d.%03d] \r\n", SystemTime.wDay, SystemTime.wMonth, SystemTime.wYear, SystemTime.wHour, SystemTime.wMinute, SystemTime.wSecond, SystemTime.wMilliseconds)
StringCchPrintfExW( deviceTypeFamily, sizeof(*__countof_helper(deviceTypeFamily)), nullptr, nullptr, 0x00000800, L"%u", deviceFamily)
StringCchPrintfW( pFileName, 260, L"%s%s%s-%d.txt", m_logPrefix, sanitizedFileName, m_logPostfix, logNumber)
StringFileInfo
StringFromGUID2
StringFromGUID2 ( partnerGuid, wszDataStoresLockName, 40 )
StringFromGUID2(dataTypeID, wszType, (sizeof(*RtlpNumberOf(wszType))))
StringFromGUID2(partner, partnerString, (sizeof(*RtlpNumberOf(partnerString))))
StringFromGUID2(source, wszDataSource, (sizeof(*RtlpNumberOf(wszDataSource)))) != 0
strspn
StrStrIW
SUCCEEDED(_IsValidToken(currentToken, &valid)) && (FALSE != valid)
SUCCEEDED(hr)
SUCCEEDED(hr) && (info != NULL)
SUCCEEDED(hr) && (info != nullptr)
success
SUVWATAUAVAWH
SUVWAVH
SUVWH
Sync utilities for mail, contacts, calendar
SYNC_CERT
SyncGetDeviceUniqueID
SyncPassword
SyncPdcReference_WatchdogReport
SyncPdcReference_WatchdogsEnabled
syncPeriodInMinutes != invalidPeriod
SyncRes.dll
SyncServer
syncServices.CoCreateInstance(__uuidof(POSyncServices))
SyncSqmUpdateStats
SyncStatusEventType_None == pEventData->eventType || SyncStatusEventType_Reset == pEventData->eventType
SyncUseSSL
SyncUtil
SYNCUTIL.dll
SyncUtil.dll
SyncUtil.pdb
SyncUtil_OAuth_GetTokensFromAuthCode
SyncUtil_OAuth_RefreshTokens
SyncUtil_XMLParse_LoadFailFilePos
SyncUtil_XMLParse_LoadFailHresult
SyncUtil_XMLParse_LoadFailReason
SyncUtil_XMLParse_LoadFailSrcText
SyncUtil_XMLParse_LoadFailUrl
SyncWerReportComponentName
SyncWerReportGenerator
SyncWhenRoaming
SystemTimeToFileTime
t"@8=
t$ AWH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$(H;
t$@H+
T$0E3
T$0H+
t$0L;
T$8H!|$8
T$hE3
T$HE3
T$hH;
T$PE3
T$XE3
t(D8%U
t(D8=
t(H9Y
t)H9=
t,D8=
t+H9^
t5fD9lw
TASKX
tBfE9
TempContact:DisplayName
TEMPH
TEMPP
TEMPT
tempUserId.append(L"\\")
tempUserId.append(pUserName)
tempUserId.assign(pDomain)
TerminateProcess
t'H9Q
threadId
tlx::append_sprintf(tempString, L"%s=", paramName)
tlx::assign_sprintf( *pAuthorization, L"%s %s", m_authScheme.c_str(), pCredential)
tlx::assign_sprintf( *pAuthorization, L"Basic %hs", encodedCredentials.c_str())
tlx::assign_sprintf( keyPath, L"%s\\WebAuth\\%s", c_wszActiveSyncKey, pProviderId)
tlx::assign_sprintf( m_account, L"%s\\%s", domain.c_str(), userId.c_str())
tlx::assign_sprintf( monikerName, L"Elevation:Highest!new:%s", classIdString)
tlx::assign_sprintf( requestBody, L"client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s", _GetClientId().c_str(), _GetClientSecret().c_str(), pRefreshToken, _GetScope().c_str())
tlx::assign_sprintf( subject, pSubjectFormat, c_maxSubjectSize - subjectFormatSize, pOriginalSubject)
tlx::assign_sprintf( wideCredentials, L"%s:%s", GetAccount(), pCredential)
tlx::assign_sprintf(userAgent, L"%s%s-%d/%u.%u.%u", c_wszHttpUserAgent, pwszDevice.get(), deviceFamily, OSVersionInfo.dwMajorVersion, OSVersionInfo.dwMinorVersion, OSVersionInfo.dwBuildNumber)
tlx::assign_wide( multiByteCredentials, wideCredentials, 0)
token
token_type
tokenBroker->GetDefaultSignInAccountAsync( &getDefaultSignInAccountResultOperation)
TokenBrokerError
tokenType
Trace
Translation
true == m_watchdogDisabled
TryGetDefaultSignInAccountInfo
tufD;.toL
tvH!]
tx@8=
u HcA<H
u;HcE
u<L9J
UATAUAVAWH
UAVAWH
udM9n
UIntPtrToInt(buffer.size(), &bufferSize)
ULongAdd((ULONG)[](size_t num) { ULONG out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(ULongLongToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\password.cpp", 139  ); } } while(0,0); return out; }(pwdSizeInBytes), sizeof(WCHAR), &blobSizeInBytes)
ULongLongToULong(multiByteCredentials.length(), &multiByteLength)
ULongLongToULong(utf8RequestBody.length(), &contentLength)
uN3T9X(
UnhandledExceptionFilter
UninitializeServerReadyEvents
UpdatedMailCount
UpdateYahooAccountType
uri.assign(pProtocolReturnData)
uriFactory->CreateUri(HStringReference(m_redirectURL.c_str()).Get(), &callbackUri)
uriFactory->CreateUri(HStringReference(request.c_str()).Get(), &startUri)
url.append(pAppend->c_str())
url.append(pAppend->c_str(), c_MaxParamSize)
UrlUnescapeW
UrlUnescapeW(pValue->data(), nullptr, nullptr, 0x00100000)
UseBuiltInTeamDeviceAccount
UserDataTimeUtil.dll
UserDataTypeHelperUtil.dll
username=
USOIDfromCEENTRYID
USVWATH
UVWATAUAVAWH
UVWATAWH
UVWAVAWH
UWATAVAWH
UWAUAVAWH
UWAVH
UWAWH
V_VT(&nameVar) == VT_BSTR
value.assign(pValue)
VarFileInfo
VaultAddItem
VAULTCLI.dll
VaultCloseVault
VaultCreateItemType
VaultFree
VaultGetItem
VaultGetItemType
VaultOpenVault
VaultRemoveItem
VerifyDataStoreLockOwner
VS_VERSION_INFO
VWATAVAWH
VWAUAVAWH
VWAVH
VWAWH
wabBrokerStatics->AuthenticateWithCallbackUriAndContinue( startUri.Get(), callbackUri.Get())
WaitForMultipleObjects
WaitForServerReady
WaitForSignalOrShutdown
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WakeAllConditionVariable
Warning
WATAUAVAWH
WATAVH
watchdogDurationMs
watchdogStartTime
WAVAWH
wcscat_s
wcschr
wcscmp
wcscspn
wcsncmp
wcsnlen
wcsrchr
wcsstr
wcstok_s
webAuthCore->FindAccountAsync( pProvider, HStringReference(pAccountId).Get(), &findAccountOperation)
webAuthCore->FindAccountProviderAsync( HStringReference(pProviderUri).Get(), &findAccountProviderOperation)
webAuthCore->FindAccountProviderWithAuthorityAsync( HStringReference(pProviderUri).Get(), HStringReference(pAuthority).Get(), &findAccountProviderOperation)
webAuthCore->GetTokenSilentlyAsync( pRequest, &webTokenRequestResultOperation)
webAuthCore->GetTokenSilentlyWithWebAccountAsync( pRequest, pAccount, &webTokenRequestResultOperation)
WebTokenRequestStatus_Success != requestStatus
WEVT_TEMPLATE
WideCharToMultiByte
WilError_03
wilResult
win:Error
win:Informational
win:Start
win:Stop
win:Verbose
win:Warning
Windows.Data.Json.JsonObject
Windows.Foundation.Uri
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Security.Authentication.Web.WebAuthenticationBroker
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsGetStringRawBuffer
WindowsLiveActiveSync
WindowsLiveServiceTarget
WindowsLiveStorage
WindowsMail
WINHTTP.dll
WinHttpCrackUrl
WinHttpCrackUrl(pResourceUri, 0, 0, &urlComponents)
WinHttpCrackUrl(providerUri.c_str(), 0, 0, &urlComponents)
WinSqmAddToStreamEx
WinSqmEndSession
WinSqmStartSession
WLAccountSyncEnabled
WriteOAuthRefreshTokenForPartnership
WritePasswordForPartnership
wszName != 0
www.google.com
x ATAUAVAWH
x ATAVAWH
x AVH
x UATAUAVAWH
x UAVAWH
x,f9|$@t
x,f9|$0t
x`D9L$@uWH
XA_A^_^][
XPath
yahoo
Yahoo
YahooDefaultPadding
YahooOAuthRedirectURI
YahooOAuthTokenURI
YahooOAuthURI
YahooUserInfoURI
ycal-w
z{uyA
