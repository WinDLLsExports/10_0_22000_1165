 Microsoft Corporation. All rights reserved.
 Operating System
 SVW3
 Windows
!( ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwLower != ((ULONG_PTR) ((INT_PTR) -1 ))) && ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwUpper != ((ULONG_PTR) ((INT_PTR) -1 ))) )
!accessToken.empty() && !_IsCurrentTimePastExpirationTime(expirationTime)
!SecIsValidHandle(&info->sslCredentialHandle[(UINT)handleType])
!This program cannot be run in DOS mode.
!token.empty() && ((nullptr == pCurrentToken) || (token != pCurrentToken))
#$#$#DataStoresLock#$#$#
#D$<PS
$171?1L1T1y1
$tG9T
$VWP3
%0W0z0
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%s %s
%s%s-%d/%u.%u.%u
%s%s%s-%d.txt
%s:%s
%s\%s
%s\%s-%d.txt
%s\Ping %s-%d.txt
%s\SKZ %s.txt
%s\WebAuth\%s
%x - %s
&client_secret=
&code=
&device_model=
&device_name=
&grant_type=authorization_code
&grant_type=refresh_token
&login_hint=
&PWSV
&redirect_uri=
&refresh_token=
&response_type=
&scope=
( ( 0x10a40000 | 31 ) ) == propertyValues[0].propid
( *pMutexHandle ) != 0
(!!parsed)
((&nameVar)->vt) == VT_BSTR
(((HRESULT)(_IsValidToken(currentToken, &valid))) >= 0) && (0 != valid)
(((HRESULT)(error)) < 0)
(((HRESULT)(hr)) >= 0)
(((HRESULT)(hr)) >= 0) && (info != 0)
(((HRESULT)(hr)) >= 0) && (info != nullptr)
(((HRESULT)(hr)) >= 0) || (((HRESULT)0x85050002) == hr)
(((NTSTATUS)(_ntStatus)) >= 0)
((*pPropNotEmptyFilterIndices)[i] >= 0) && ((*pPropNotEmptyFilterIndices)[i] < c_numGalContactPimProps)
((HRESULT)(50L) <= 0 ? ((HRESULT)(50L)) : ((HRESULT) (((50L) & 0x0000FFFF) | (7 << 16) | 0x80000000))) == hr
((HRESULT)0x80070057L)
((HRESULT)0x80070057L) != hr
(_itow_s((int)expirationTime, conversionBuffer, 10) == 0)
(0 != nSize)
(0 != ret)
(200 == httpStatus)
(accessorType == __uuidof(PopImapAccountAccessor)) || (accessorType == __uuidof(ExternalAccountAccessor)) || (accessorType == __uuidof(ActiveSyncAccountAccessor))
(caller: %p) 
(dwType == ( 4ul ))
(expirationTime == (double)((int)expirationTime))
(nullptr != pAuthTarget) && (L'\0' != *pAuthTarget)
(size > 0)
(StringFromGUID2(accountId, pEnd, (INT)[](size_t num) { INT out = 2147483647; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToInt(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\credutil.cpp", 580  ); } } while(0,0); return out; }(countCharsRemaining)) > 0)
(utl::wstring::npos != beginIndex)
)9;u4
*~*~*~*~*~*~*~*~*~*
*pEndToken == 0
*pEndToken == NULL
*ppszMultiByteStr == 0
*ppszMultiByteStr == NULL
*ppwszWideCharStr == 0
*ppwszWideCharStr == NULL
,SVWPj
.00cfg
.0A0I0V0^0
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gfids
.giats
.hotmail.com
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.outlook.com
.rdata
.rdata$brc
.rdata$sxdata
.rdata$T$brc
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata$x
: :&:G:O:V:\:b:
: ;\;n;
: ;0;e;k;x;
:!;><
:%;i;
:&:;:R:k:
:&;C;f;
:(;<;D;
:.:E:n:
:::[:h:
:::d:
::StringCchCatW(deviceTypeDefault, sizeof(*__countof_helper(deviceTypeDefault)), deviceTypeFamily)
::StringCchCopyW(pwszUserAgent, userAgentLength, userAgent.c_str())
:]:p:x:
:+;D;n;
:>:O:[:
:0:I:h:
:1;8;G;
:3:k:
:3;=;W<
:5:^:
:5:c:
:7;>;D;Q;Z;o;x;
:8:T:X:\:`:p:t:x:|:
:9;M;U;
:9;n;
:a:y:
:B:g:~:
:D:c:n:
:H:R:
:I:x:
:I<i<v<
:K:_:g:
:K:|:
:N;};
:O:g:o:
:U:y:
:V;j;
:W:o:w:
; ;(;n;
; <J<
;";*;Z;a;
;#;*;B;K;f;
;#<-<Q<i<s<
;$;*;1;>;3<:<l<
;$;~;
;&;A;
;&<0<b<
;);3;J;i;s;
;)<<<D<P<e<
;,;K;Q;e;
;/<<<G<o<
;:<R<Z<
;;<c<
;';f;
;+<j<
;<;R;i;
;'<f<
;0;<;D;
;0;N;z;
;0S0[0
;3<9<M<V<
;3<G<O<
;5;K;y;
;5;U;c;x;
;A<i<
;C;H;k;{;
;D$<u
;D;j;x;
;D<z<
;G;P;j;
;H<w<
;i;x;};
;K;j;u;
;P<d<l<
;V;j;r;
;X=e=j=
?$?*?0?7?>?E?L?S?Z?a?i?q?y?
?(?J?Q?
?.?<?K?i?
?:?T?
?;?T?
???S?[?y?
?=?G?y?
?>?j?
?0?M?
?access_token=
?B?U?m?
?client_id=
?H?b?u?
?o?v?
@.didat
@.reloc
@f94Bu
@v4j@V
[%02d/%02d/%04d %02d:%02d:%02d.%03d] 
[%hs(%hs)]
[%hs]
[f9\$0t
\$ PR
\$$Pj@h@D
\MailContactsCalendarSync\LiveDomainList.txt
^SSSSh
_^[Y]
__CxxFrameHandler3
__dllonexit
_amsg_exit
_callnewh
_errno
_except_handler4_common
_ftol2_sse
_GetAADToken
_GetBackendType() == c_pExchangeServiceType
_i64tow_s
_initterm
_IsValidToken(accessToken.GetRawBuffer(nullptr))
_IsValidToken(refreshToken)
_itow_s
_lock
_onexit
_purecall
_statusTemp == 0L
_strnicmp
_TranslateNotFoundErrors(AwaitOperationResult( findAccountOperation.p, &webAccount))
_TranslateNotFoundErrors(AwaitOperationResult( findAccountProviderOperation.p, &webAccountProvider))
_TranslateNotFoundErrors(AwaitOperationResult( getDefaultSignInAccountResultOperation.p, &result))
_unlock
_vscwprintf
_vsnprintf
_vsnwprintf
_vsnwprintf_s
_wcsicmp
_wcstoui64
_wtoi
_XcptFilter
`.data
{,_^[
{5B04B775-356B-4AA0-AAF8-6491FFEA5614}
|$ PQ
|$$PQQ
|$$PVV
~$9~(t
~(9~<t
~,_^]
~<9~8t
~89~,t
+|$(PSW
< <-<5<l<
<!<1<7<Q<b<f<
<!=)=k=
<!=4=<=I=Q=|=
<!=F=L=`=
<"=B=
<$<9<X<
<%=9=A=~=
<%=I=g=
<&<l<v<
<(<1<=<E<W<
<)<3<G<
<*=4=f=
<+=y=
<'</<u<
<-<Q<x<
<'=.=K=S=
<'=:=B=O=W=}=
<==K=Z=|=
<-=4=@=p=z=
<><s<
<0F0Z0`0d0i0o0s0
<6<E<P<w<
<A=Y=
<F<[<~<
<J=O=
<S<]<k<
<Z<f<
= ='=t={=
= >5>
--= Protocol logs for PARTNER='%S', CTRLLOG ID=0x%08X =--
="=7===B=I=`=K?
="><>B>]>
=#>n>
=#>S>
=$=Q=
=%=+=F=v=
=%=J=
=%>{>
=&=3=
=&=l=
=&>6>
=*=|=
=/>o>
=:>[>
=;>y>
=?=M=
=@>n>
=<>F>j>
=-= Build %d =-=
=-=-=-= Client Request =-=-=-  Timestamp: 
=-=-=-= Server Response =-=-=- Timestamp: 
='=2=N=
=0=@=
=0=K=a=v=
=0>D>L>
=2=6=<=@=F=J=b=f=l=p=v=z=
=6>=>T>
=b=v=~=
=B>W>f>w>
=D>S>t>z>
=E=L=l=y=
=E>Y>`>|>1?8?
=I>^>
=J>a>x>
=J>O>r>
=L=c=
=M=S=s=~=
=M=w=
=P=a=l=u=
=u=F>%?j?q?
=Y>q>y>
> ?4?<?y?
> ?L?Z?
> >0>T>`>h>
>"?R?|?
>">A>e>k>p>
>$>I>y>
>%?=?E?
>%>7>M>t>
>&?/?B?o?
>&?I?[?
>&>+>X>
>(>0>R>e>m>z>
>(>H>h>
>)?E?~?
>,>J>b>
>.?f?
>;?G?k?
>??F?
>_>q>
>+?E?W?
>+>??
>=?^?e?
>=?Q?Y?
>'>]>y>
>'>L>
>0?A?
>3>>>G>
>4?C?N?q?
>4?P?
>4?Q?n?y?
>G?Y?
>G>[>c>
>I>`>
>O?b?
>Q>t>{>
>S>g>n>
0 != *pCustomerId
0 != hashValueSize
0 != m_activityRefCount
0 != ppResumeState
0 != pScopeMetadata
0 != pServerName
0 != pSyncPartner
0 != sessionScope
0 != wideCount
0 == (clientSecretSize % sizeof(WCHAR))
0 == sessionScope
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0004080<0@0D0H0L0P0T0X0`0d0h0l0p0t0|0
0 0&0,02080>0E0L0S0Z0a0h0o0u0
0 0(0,0004080D0H0L0P0X0`0h0t0
0 0:0S0
0!070
0!1/191d1}1
0"1+1;1d1
0#0E1
0$0b0}0
0$0o0x0
0$1L1p1t1x1
0)0:0D0S0l0
0)1M1
0,1B1X1i1~1
0.1g1
0.w/X#
0:0f0w0
0;1W1
0@0P0b0
0\1p1x1
0_0s0{0
00000000-0000-0000-0000-000000000000
000000004011621F
010<0i0
020s0
021N1
040904B0
081^1
0A0m0y0
0b0}0
0C0|0
0C0i0
0K1P1[1
0L == lResult
0L0`0h0
0N1X1
0W0o0w0
0Y0{0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1%1[1w1
1 1P1o1z1
1!1%1*10141r1x1
1!1)161_1h1t1
1!1I1^1
1"1F1O1
1#1/1;1A1G1|1
1#2p2
1$2@2
1%1L1R1x1
1%222K2R2
1&1M1W1k1q1u1z1
1&2,2S2l2
1,1l1
1.1E1
1.3.6.1.4.1.311.71.1.1
1.3.6.1.4.1.311.71.1.2
1.3.6.1.5.5.7.3.2
1@1s1
1@2T2\2
10.0.22000.653
10.0.22000.653 (WinBuild.160101.0800)
10<0L0X0
1-1>1G1l1
111F1P1d1v1
121c142u2
132U2^2
141Z1
142;2h2
161]1
163.com
1A1e1|1
1B1K1_1
1B2V2^2
1c2w2
1f;2u
1G1[1c1
1H2M2_2}2
1L2X2
1P1j1
1Q2.3g3c4
1S1g1o1
1W1k1s1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2$2(2,2024282<2@2D2H2P2T2X2\2`2d2h2l2p2t2x2|2
2 2H2v2
2 2P2
2 383@3
2!202
2"2*2g2{2
2"2A2
2$2,282I2R2j2
2%2-2u2|2
2%2b2v2~2
2(2@2
2)212w2
2*3u3
2*44465
2?3U3a3g3n3t3|3
2\3z3
2+2:2B2O2
2<2e2
2<2K2V2y2
2=2]2
2=2a2t2
2>2R2Z2
2>2R2Z2z2
203?3Y3f3
212G2
233;3
292_2f2{2
2D2\2d2
2d3|3
2K3f3x3
2O3z3
2U2h2p2}2
2UuwarE
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(3,3034383<3@3X3d3h3l3
3!4I4
3"3*3
3$4*474\4l4
3$4F4
3&3.3\3
3&393A3N3V3
3&474H4Y4j4
3(3:3
3)313n3
3)3a3
3)3l3q3{3
3,3F3\3{3
3,4o4
3.3f3k3
3:3m3
3@3v3
3_4|4
3+4@4e4
3+4S4k4
3<3H3k3
3<4P4X4
3>4E4N4U4c4
3>4s4
304H4_4x4
305]5c5i5
333@3K3
3'363F3
363c3
3E4U4]4c4i4n4s4y4
3I3]3e3
3R3f3n3
3y3~3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4(4l4
4 4]4q4y4
4!5I5_5t5
4!5J5c5
4"5N5
4#4M4z4
4$464=4V4l4
4%5,5e5
4&5:5B5
4)454D4
4*505B5`5s5
4,5c5
4,5D5N5l5
4.4H4u4{4
4/5r5
4:4m4y4
4;4k4
4+4H4T4
405L5i5
406C6
424Q4W4d4v4~4
435G5O5
4'4,4P4o4y4
4'4-4A4\5
4B4P4Z4
4D4K4
4D5W5f6z6
4G5y5
4N4n4
4R4j4r4
4T6k6}6
4V4b4n4z4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 6|6
5!5%5*50545b5
5#5`5t5|5
5#5+5h5|5
5#6.6
5(505=5E5~5
5(585{5
5(585H5X5h5x5
5(6@6
5)6=6E6]6l6|6
5_5i5
5>6R6Z6
505p5
516E6M6
525[5|5
526j6
546L6T6
5'5/5U5b5m5
555D5K5P5}5
556H6R6
5-6M6Y6
586L6T6
595d5
595U5[5k5
5A6H6`6
5G5[5c5
5J516@6
5K6k6
5M5a5i5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6"6@6
6"7E7`7
6#7l7
6$6)6V6
6$6*6B6S6v6
6%797A7~7
6&6M6W6k6q6u6z6
6,7a7
6.666s6
6.747H7
6;7y7
6?6R6a6
6[6s6{6
6+696H6|6
6<7P7X7
6=6P6X6e6m6
6>6R6Z6
656:7K7W7
657X7h7
6'6;6H6\6i6}6
6'7;7C7
6'7?7G7k7~7
6'717S7_7f7
676D6
686X6a6}6
687O7f7}7
697r7y7
6A6F6g6n6
6D7~7
6L7_7g7t7|7
6n7t7
6R7d8x8
6S6j6
6Y6m6t6
6Y6q6y6
6Z6{6
7 7,7D7H7L7P7X7`7l7p7t7
7 787H7
7 7L7
7"8:9E9_9
7"8J8h8
7%7-7e7
7&737;7p7
7(8I8q8
7)808:8P8W8a8z8
7/7?7O7_7o7|7
7/7a7
7=8J8U8}8
738G8O8
747F7U7
747P7m7
768G8
7-7?7Q7\7|7
797E7V7_7
7A8k8
7c7w7
7C7W7_7
7I7]7e7
7J7b7j7
7L8`8h8
7L8}8p9{9
7L8a8
7O7z7
7S8{8
8 828L8r8
8$888
8%8A8K889v9
8&8N8
8(979e9
8)828i8
8,80848L8P8T8\8l8p8t8|8
8.9C9
8?8M8T8p8
8[8o8w8
8]9m9r9
8+989f9
8<8[8a8u8
8=8m8
8>9S9}9
808g8
828B8O8
839P9
858e8q8
862726500644-mba83qqf9kq69c5mk9u5h2dn4iocdspq.apps.googleusercontent.com
888`8
8-8p8u8
898P8
8A9i9o9
8G9L9Q9~9
8p8*9?9q9
8R8g8s8%9/959H9P9Y9y9
8T8h8p8
8U9p9
8W8k8s8
8W9q9
8Y8p8
8Z8s849x:
9!949Q9l9r9
9!9'9<9C9k9s9
9!9N9Y9t9
9"9(9<9
9"9_9s9{9
9#:7:?:|:
9$:;:A:Y:
9%92999F9M9T9i9
9&949V9l9y9
9):`:
9):9:|:
9)9o9
9*9^9
9*929?9G9
9*929o9
9,:C:}:
9,9>9
9,9c9w9
9.:F:N:
9:9U9a9m9t9
9-:o:
9@9K9
9@9T9\9
9]:q:y:
9_(s-j
9_:o:
9|$$|7Q
9+:?:G:
9+;l<
90t6jb_W
90u0jz_
91:I:r:
92989a9r9
929q9
949L9d9|9
969G9O9Y9s9
97u4hpc
9-9V9
9A9{9
9B:|:
9B9V9^9
9D$ u?
9D$(t
9D:W:_:l:t:
9f:n:
9G9n9
9t$ u<
A0+A4
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
access_token
access_type=offline
accessor.CoCreateInstance(__uuidof(ActiveSyncAccountAccessor))
accessor.CoCreateInstance(__uuidof(PopImapAccountAccessor))
accessor.CoCreateInstance(m_accessorType)
account
account->get_WebAccountProvider(&provider)
accountAbsent
accountConfig.CoCreateInstance(__uuidof(ActiveSyncApp))
accountId.reserve(accountIdBufferLength)
accountInternal->get_Id(accountId.GetAddressOf())
accountInternal->get_Properties(&accountProperties)
accountInternal->get_Properties(&properties)
accountProperties->HasKey( HStringReference(AccountAutorityPropertyName).Get(), &hasAuthrority)
accountProperties->Lookup( HStringReference(AccountAutorityPropertyName).Get(), authority.GetAddressOf())
AcquireDataStoreLock
AcquireDataStoreLockEx
AcquireSRWLockExclusive
ActivateInstance( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_PPIDeviceCredentialReader).Get(), &reader)
ActivateInstance( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &listener)
ACTIVESYNC_DATASOURCE_EXCHANGE == accountType
ActiveSyncCredential
ActiveSyncCredentialDefaultUser
ActiveSyncCredentialSchema
ActiveSyncUnistoreLockTemplate
added.first != nullptr
AggregateAccountSyncStats
AggregateSessionSyncStats
AirSync:FolderSyncFlags
AirSync:IsSearchResult
AirSync:LongID
AirSync:ParentID
AirSync:ParentServerID
AirSync:PermanentDelete
AirSync:PermanentID
AirSync:SyncOptionsHash
AllowSMIMEEncryptionAlgorithmNegotiation
AllowSMIMESoftCerts
apidata.googleusercontent.com
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-downlevel-shlwapi-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-accesshlpr-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shell-shdirectory-l1-1-0.dll
APPID
aSPh6&
Assert
ASync3dF[^
ATL$__a
ATL$__m
ATL$__z
Authority
authority
AuthUri
AwaitOperationResult( webTokenRequestResultOperation.p, &result)
backendType == c_pMSAServiceType
Basic
Basic %hs
BytesToDigits
bytesWritten == bytesToCommit
C ;L$
C(QPh
C@QPh`|
C<QPh
C0+C,
C8QPh
caldav.calendar.yahoo.com
CalendarAgeFilter
callContext
CallContext:[%hs] 
carddav.address.yahoo.com
cbWrite == chunkSize
CEMAPI.dll
CertCompareCertificateName
CertFreeCertificateChain
CertFreeCertificateChainEngine
CertGetCertificateChain
CertGetCertificateContextProperty
CertGetEnhancedKeyUsage
CertGetNameStringW
charsConverted != 0
CHttpTransport_CreateInstance
client_id=
client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s
client_secret
clientSecret.reserve(clientSecretSize / sizeof(WCHAR))
ClientUnreadToReadCount
CloseDataStoreLock
CloseHandle
CloseHandle ( lockHandle )
CloseThreadpoolTimer
CLSID_MailSyncEngine == sds.engineID
CLSIDFromString
cNames
CoCreateInstance
CoCreateInstanceElevated
code=
CoGetObject
CoGetObject( monikerName.c_str(), &bindOptions, interfaceId, ppInstance)
CoInitializeEx
CommsService
CompanyName
CompareFileTime
componentId
componentName
CompressWhitespaceNW
consumers
Content-Type: application/x-www-form-urlencoded
convertedBufferSize != 0
ConvertVariantTimeToFileTime
ConvertVariantTimeToFileTime(0, &(lastSyncTimeAsDate.date), &lastSyncTime)
CoTaskMemAlloc
CoTaskMemFree
CoUninitialize
CoWaitForMultipleObjects
CreateAuthHandler
CreateDataStoreLock
CreateEventExW
CreateEventW
CreateFileW
CreateMutexExW
CreateMutexW
CreateSemaphoreExW
CreateSyncBufferedStream
CreateThreadpoolTimer
CreateWrapFileStm
credential.assign(password)
credential->get_Password(&securePassword)
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(c_defaultResource).Get(), tokenResult.GetAddressOf())
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(resource.get()).Get(), tokenResult.GetAddressOf())
CredUtil_UpdatePasswordForAccount
CredVaultDelete
CredVaultRead
CredVaultWrite
CRYPT32.dll
CryptAcquireContextW
CryptAcquireContextW( tlx::replace(provider), 0, 0, 1, 0xF0000000)
CryptBinaryToStringA
CryptBinaryToStringA( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptBinaryToStringW
CryptBinaryToStringW( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptCreateHash
CryptCreateHash( provider, ((4 << 13) | (0) | 4), 0, 0, tlx::replace(hash))
CryptDestroyHash
CryptGetHashParam
CryptGetHashParam( hash, 0x0002, hashValue, &hashValueSize, 0)
CryptGetHashParam( hash, 0x0004, (LPBYTE)&hashValueSize, &dwordSize, 0)
CryptHashData
CryptHashData(hash, (LPBYTE)pUserId, (DWORD)[](size_t num) { DWORD out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\asutil.cpp", 524 ); } } while(0,0); return out; }(userIdSize), 0)
CryptReleaseContext
CRYPTSP.dll
CryptStringToBinaryA
CryptStringToBinaryA( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
CryptStringToBinaryW
CryptStringToBinaryW( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
currentContextId
currentContextMessage
currentContextName
currRefreshTokenValid
customAuthParams.append(escapedUsername.c_str())
customAuthParams.append(idParams)
customAuthParams.append(L"&")
customAuthParams.append(L"access_type=offline")
customAuthParams.append(L"username=")
D$ 9D$
D$ j@3
D$ Ph
D$ Pj
D$ PQ
D$ QQ
D$ SV
D$ SVW
D$ YY
D$$9D$
D$$Ph
D$$PV
D$$PW
D$$SP
D$(;D$,
D$(\U
D$(9D$
D$(9D$ t
D$(Hr
D$(PhdY
D$(Pj
D$(SP
D$(SVW
D$(VP
D$,Ph
D$@9D$8t
D$@h 
D$\9D$T
D$\9D$Tt
D$`Pj Z
D$`PS
D$`SVW
D$|j@SP
D$<<(
D$<Q+
D$>Ph
D$09D$(
D$09D$(t
D$09D$(t3S
D$0Hr
D$0Pj
D$0Pj<h
D$0PVV
D$0QP
D$0SVW
D$49D$,t
D$4CV3
D$4Pj
D$4PW
D$89D$0t
D$d9D$\t
D$D9D$<t
D$DPh
D$DPj
D$DS3
D$dSP
D$H9D$@t
D$HHr
D$Hj'PV
D$HPWh
D$L9D$Dt
D$LPj
D$P+D$
D$P9D$Ht
D$T9D$Lt
D$TPh
D$TPj
D$XPj
data.reserve((1024 * 60)+1)
DebugBreak
DefaultLogging
DefaultStoreDirty
DefaultWindowsLiveCid
DelayLoadFailureHook
DeleteAuthCertHash
DeleteCriticalSection
DeleteDataSource
DeletedMailCount
DeleteFileW
DeleteHttpTransport
DeleteInProgress
DeleteOAuthRefreshTokenForPartnership
DeletePwd
Device
device_id=
deviceFamily < 100
DeviceID
deviceID.valid()
deviceModel.assign(values)
deviceName.assign(values)
DeviceNeedsProvisioning
DeviceType
DisablePIIStripping
dj0yJmk9QzFFaHJsUnphMjlnJmQ9WVdrOVZUVk9iMWhCTXpZbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1lYw--
DllCanUnloadNow
DllGetClassObject
DMCfgUtils.dll
DoesServerSupportAutoMoveSentItem
Domain
DuplicateHandle
dwRC == 0L
dwSize == sizeof(DWORD)
E_INVALIDARG != hr
EASAccountId
Elevation:Highest!new:%s
Email
email
EmailAgeFilter
emails
Enabled
EnabledDavFeatures
EnableInProcTracingForProvider
encodedCredentials.reserve(encodedSize)
Engine
EnterCriticalSection
en-US
Error
error
Error
errorCode
EscapeURL
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
Exception
Exchange
expirationTime
expires_in
expression
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
f&8).
F@+F<
f9;t-
f9\$ u
factory->ActivateInstance(&inspectable)
FAILED(error)
FailFast
failureCount
failureId
FailureTrigger
failureType
FallbackError
FALSE
FileDescription
fileHandle != ((HANDLE)(LONG_PTR)-1)
fileName
filePos
FileTimeToSystemTime
FileVersion
FindErrorCode
fj<_W
FlushInProcTraceSession
Fonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourceinfo.cpp
FormatMessageW
FreeCredentialsHandle
FreeLibrary
FreeProws
FreeTransientObjectSecurityDescriptor
function
functionName
g_hServerReady != 0
GetAADToken
GetAccountSyncStats
GetAccountUsernameFromToken
GetActivationFactory( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_DeviceCredentialUtility).Get(), &credentialUtilities)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &tokenBroker)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebAuthenticationCoreManager).Get(), &webAuthCore)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebTokenRequest).Get(), &requestFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_WebAuthenticationBroker).Get(), &wabBrokerStatics)
GetAuthCertHash
GetAuthCertTargetAndUser
GetAuthority
GetBatterySaverWnfName
GetCurrentProcess
GetCurrentProcessId
GetCurrentSyncStats
GetCurrentSyncStatsForMessage
GetCurrentSyncStatsForStore
GetCurrentThread
GetCurrentThreadId
GetDefaultDeviceType
GetDefaultMsaWebAccountId
GetDefaultStoreDirty
GetDomainFromEmail
GetFileAttributesExW
GetFileSize
GetGalSearchResultsFolderAndPartnerGuidEx
GetGoldenPartnershipId
GetLastError
GetLocalTime
GetMeetingNotificationFromMessage
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExW
GetModuleHandleW
GetMonitorDisplayState
GetMsaCustomerId
GetMsgStoreFromMessage
GetOAuthAccessTokenForPartnership
GetOAuthHelperForAccount
GetOAuthHelperForProvider
GetOrCreateNullPowerDependencyCoordinatorManager
GetOutgoingMessageSizeLimit
GetPartnerGUID
GetProcAddress
GetProcessHeap
GetProductInfo
GetProviderUri
GetSessionSyncStats
GetSHA1HashOfString
GetSyncTargetName
GetSyncWorkOnBehalfTicket
GetSystemPowerStatus
GetSystemTime
GetSystemTimeAsFileTime
GetTickCount
GetTickCount64
GetTokenInformation
GetVersionExW
GetWebAccountId
GetWebAccountProvider
GetWebAccountProviderFromProviderId
GetWebTokenSilentlyEx
GetWebTokenTimedOut
gj<_W3
Gmail
gmail.com
GO:#cR
GoldenPartnershipId
GoogleDefaultPadding
GoogleOAuthRedirectURI
GoogleOAuthTokenURI
GoogleOAuthURI
GoogleUserInfoURI
gvType == GUID_VALIDATION_GUID || gvType == GUID_VALIDATION_DATASOURCE
H!ZIg\
HasNeverSyncedSuccessfully
HeapAlloc
HeapFree
hr == ((HRESULT)0L)
hr == ((HRESULT)0L) || 0 != rghObjects[1]
hr == ((HRESULT)0L) || hMutex != 0
hr == ((HRESULT)0x85050013)
hr == E_ACCOUNT_NOTFOUND
hr == S_OK
hr == S_OK || hMutex != 0
hr == S_OK || NULL != rghObjects[1]
hrDelete
hresult
HRESULT
hresult
HrGetOneProp
hrRewrite
HrSetOneProp
HTMLTruncation
http://
https%3A%2F%2Fmail.google.com
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcarddav
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email
https://
https://login.microsoft.com
https://outlook.office.com
icloud.com
IeRtUtil.dll
If90u
info != nullptr
InitializeCredVault
InitializeCriticalSection
InitializeCriticalSectionEx
InitializeMeContact
InitializeMsaStore
InitializeServerReadyEvents
InitializeSRWLock
InitializeSyncStatus
InitOnceBeginInitialize
InitOnceComplete
initWithWindow->Initialize(callerWindow)
InProcLogger.DLL
InprocLogger.dll
inspectable.As(&initWithWindow)
InternalName
InvalidateOAuthAccessTokenForPartnership
IPM.Schedule.Meeting.Canceled
IPM.Schedule.Meeting.Notification.Forward
IPM.Schedule.Meeting.Request
IPM.Schedule.Meeting.Resp.Neg
IPM.Schedule.Meeting.Resp.Pos
IPM.Schedule.Meeting.Resp.Tent
IsACOn
isalnum
IsDebuggerPresent
IsFirstSyncEver
IsMatchingClientCertificateEx
IsNotSupposedToSync
IsPwdSaved
IsScreenOn
IsValidAADAuthUri
it != m_objectMap.npos()
it == 0
j)[SP
j,hh=
j=Zf;T^
jI_PQ
jPRPj
jPSPQRV
jsonObject->GetNamedString( HStringReference(L"access_token").Get(), accessToken.GetAddressOf())
kD$(<
kD$8<
kD$H<
kD$X<
kernelbase.dll
konecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoaccountscallbackregistration.cpp
L$ +C\
L$ +C<
L$ HP
L$ Qh}
L$ Qj
L$ QP
L$ QW
L$$QP
L$(Qhb
L$(Qj
L$(Qj,P
L$(QP
L$,_^[3
L$,QP
L$,SP
L$,SV
L$@Qh{
L$@Qj
L$\_^[3
L$`Qj
L$`QVP
L$<_^[3
L$<Pj
L$0+D$ 
L$0j(QP
L$0Qh|
L$0Qj
L$4QP
L$8+D$(
L$8hHV
L$8Qh8
L$8Qj7P
L$d_^[3
L$DGW
L$HQVP
L$L^[3
L$l_^[3
L$PQhz
L$PQj
L$pQj
L$PQVP
L$t_^[3
L1c1p2
LASTATTEMPTTIME
LastSuccessfulHeartbeat
LASTSUCCESSTIME
LastSyncAttempt
LastSyncSuccess
LCMapStringW
LeaveCriticalSection
LegalCopyright
lineNumber
listener->add_AccountAdded(addedHandler.Get(), &addedToken)
listener->add_AccountChanged(changedHandler.Get(), &changedToken)
listener->add_AccountDeleted(deletedHandler.Get(), &deletedToken)
LMNOPQYZ[_`abdemq
LoadHeartbeatValues
LoadLibraryExW
LoadLibraryW
LoadStringW
Local\SM0:%lu:%lu:%hs
LocalAlloc
LocalFree
LogHr
LogNt
LogRollOverSize
LogSyncBiweeklySQM
lstrcmpiW
lstrcmpW
M QRSP
m.google.com
m_accountName.assign(L"ServerLog")
m_accountName.assign(pSettings->pAccountName)
m_activityRefCount == 0
m_clientId.assign(pClientId)
m_clientSecret.assign(pClientSecret)
m_completedEvent != 0
m_customAuthParams.assign(pCustomAuthParams)
m_datatypeList.push_back(guidType)
m_datatypeList.reserve(4)
m_endURL.assign(pEndURL)
m_EngineGuid != GUID_INVALID
m_ge.IsInitialized()
m_Name != 0
m_pPdcReference
m_redirectURL.assign(pRedirectURL)
m_refreshURL.assign(pRefreshURL)
m_scopes.assign(pScopes)
m_sources.push_back(mailSourcesList[i])
m_sources.push_back(serverSourcesList[i])
m_startURL.assign(pStartURL)
m_userNameHint.assign(pUsernameHint)
m_watchdogDisabled
mac.com
MailBodyTruncation
MailFileAttachments
MailIncoming
MailOutgoing
MailReceivedCount10kTo20k
MailReceivedCount20kTo40k
MailReceivedCount5kTo10k
MailReceivedCountOver40k
MailReceivedCountUnder5k
MailReceivedKB
mailSourcesList.push_back(guidSource)
mail-x
malloc
MAPIAllocateBuffer
MAPIFreeBuffer
MAPIInitialize
MAPILogonEx
MAPIUninitialize
MarkServerReady
MarkServerShutdown
MarkUserDataAccountAsHidden
MaxAttachmentSize
MaxCalendarAgeFilter
MaxEmailAgeFilter
MaxEmailBodyTruncationSize
MaxEmailHTMLBodyTruncationSize
MCCS\
MCCSPal.dll
me.com
Meeting:AllDay
Meeting:DisallowNewTimeProposal
Meeting:Occurences
Meeting:Reminder
Meeting:Timezone
memcmp
memcpy
memcpy_s
memmove
memset
message
Microsoft
Microsoft Corporation
Microsoft Smart Card Key Storage Provider
Microsoft.PPI.CredentialManagement.DeviceCredentialUtility
Microsoft.PPI.CredentialManagement.PPIDeviceCredentialReader
Microsoft.Windows.OneSync.DiagCritical
Microsoft.Windows.OneSync.DiagError
Microsoft.Windows.OneSync.DiagTrace
Microsoft.Windows.OneSync.DiagWarning
Microsoft.Windows.OneSync.SyncUtil
Microsoft.Windows.Unistack.FailureTrigger
MicrosoftDefaultPadding
MicrosoftOAuthRedirectURI
MicrosoftOAuthTokenURI
MicrosoftOAuthURI
MicrosoftUserInfoURI
Microsoft-Windows-MCCS-SyncUtil
MinutesBetweenFT
mode != Access_Create
module
MSFT-
Msg:[%ws] 
msvcrt.dll
MultiByteToWideChar
name.assign(pName)
ndrPropValues[0].ulPropTag == ((((ULONG)(0x0037))<<16)|((ULONG)(((ULONG) 31))))
ndrPropValues[1].ulPropTag == ((((ULONG)(0x0C1F))<<16)|((ULONG)(((ULONG) 31))))
NetworkHelper.dll
newAccessTokenValid
NextLogNumber
notificationData && (0 != byteCountNotificationData)
ntdll.dll
NULL != ppResumeState
NULL != pScopeMetadata
NULL != pServerName
NULL != pSyncPartner
NULL != sessionScope
NULL == sessionScope
nullptr != m_activationHandle
nullptr != m_pTpTimer
nullptr != pDisplayName
nullptr == buffer.insert( buffer.end(), readBuffer, readBuffer + readCount)
nullptr == m_activationHandle
NumberOfLogs
OAuth
OAuthHelper_CreateInstance
OAuthRefreshToken
OLEAUT32.dll
OMTP11
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecoreuap\base\appmodel\UserDataAccess\
onecoreuap\base\MailContactsCalendarSync\
onecoreuap\Base\MailContactsCalendarSync\Porting\Inc\AutoVariant.h
onecoreuap\Base\MailContactsCalendarSync\Porting\Inc\EntryIdEx.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Idl\objfre\i386\AccountAccessorTypes.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\EnumMAPITable.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchdog.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchDog.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\SyncPdcReference.h
onecoreuap\Base\MailContactsCalendarSync\PublishedInternal\Inc\SyncResettableTimer.h
onecoreuap\base\mailcontactscalendarsync\utils\syncsqm\lib\sqmpartnertype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accessorutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accountpropertyutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\activesyncsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\asutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\base64.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\basicauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\comelevation.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\contactsyncutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\credutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\DelayedDBPropertiesStream.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\domutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easaadauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easheartbeatcontroller.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumdatatypereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsource.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourcereg.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourceregsimple.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\fileutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\guidenumerator.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\heartbeatalgorithmbase.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\jsonhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\liveendpoints.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\mapiutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\msautils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthaccountutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhelper.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthtokenutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\password.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\plaintextauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\pluginerror.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\policyutil.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\popimapsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ppiauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\radiomanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\registryutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\serverreadyindictor.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\smtpauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourcelock.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncbufferedstream.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synccalendaringutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncds.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synchttputils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synclogger.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncpersistentobjectmanager.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\SyncPersistentObjectManager.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncsessionhelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatshelpers.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatusnotification.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\tokenbrokerutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\updaterestoreutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthsettings.cpp
onecoreuap\internal\base\inc\WRLWinRTHelpers.h
onecoreuap\private\base\inc\CommsPoomHelpers.h
onecoreuap\private\base\inc\HashKeyHelper.h
onecoreuap\private\base\inc\SafeMapiProps.h
onecoreuap\private\base\inc\unistorehelper.h
OneStopFactory
OneSyncError
OPCOT
OpenMimeBufferedStream
OpenMutexW
OpenProcessToken
OpenProviderKey
OpenSemaphoreW
OpenThreadToken
organizations
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
originTag.append(timeStamp)
originTag.assign(pOriginTag)
outcome
outlook.at
outlook.be
outlook.ca
outlook.ch
outlook.cl
outlook.cn
outlook.co.id
outlook.co.il
outlook.co.in
outlook.co.jp
outlook.co.kr
outlook.co.nz
outlook.co.th
outlook.co.uk
outlook.co.za
outlook.com
outlook.com.ar
outlook.com.au
outlook.com.br
outlook.com.hk
outlook.com.mx
outlook.com.my
outlook.com.pt
outlook.com.sg
outlook.com.tr
outlook.com.tw
outlook.com.vn
outlook.cz
outlook.de
outlook.dk
outlook.es
outlook.fi
outlook.fr
outlook.gr
outlook.hk
outlook.hu
outlook.ie
outlook.in
outlook.it
outlook.jp
outlook.lt
outlook.lv
outlook.my
outlook.nl
outlook.no
outlook.ph
outlook.rs
outlook.ru
outlook.se
outlook.sg
outlook.sk
outlookApp.CoCreateInstance(__uuidof(Application))
OutputDebugStringW
P1_HexInt32
P1_HResult
P1_Int32
P1_UnicodeString
P2_String
P3_UInt32
pAccessToken->assign(accessToken.GetRawBuffer(nullptr))
pAccount->get_UserName(userName.GetAddressOf())
pAccount->get_WebAccountProvider(&provider)
pAccountId->assign( WindowsGetStringRawBuffer(accountId.Get(), nullptr))
pAcessToken->assign(accessToken.GetRawBuffer(nullptr))
packageName.append(L"!")
packageName.append(storeIdAsString)
packageName.assign(c_emailProductId)
packages\ActiveSync\LocalState\DiagOutputDir
Padding
ParseDelimitedString
PartA_PrivTags
partnerId
PathCchAddBackslash
PathCchAddBackslash(pPath, pathLength)
PathCchCombine
PathCchCombine(pPath, pathLength, localDataPath, pRelativePath)
pBackendServiceType->assign(pServiceType)
pCidTemp.valid()
pCredential->assign(pPassword, passwordLength)
pCredential->get_Domain(&domain)
pCredential->get_Username(&userName)
pCredential->get_UserPrincipalName(&userPrincipalName)
pDeviceId->assign(deviceID)
pDeviceType->assign(deviceTypeDefault)
pdhrResult != 0
pDisplayState != nullptr
pDomain->assign(pszDomainName)
pEndPoint->assign(pStringValue.get())
pEndToken == pToken
pEntryId->assign(tempEntryId)
Performance
pEventData
pGuid != 0
pIdParams->append(L"&device_model=")
pIdParams->append(L"&device_name=")
pIdParams->append(L"device_id=")
PIMPR_DISPLAY_NAME == propertyValues[0].propid
PIMSTORE.dll
pIsTimeoutError
Pj@h@D
PjEhpE
pKey != 0
pKey != NULL
pMsgStore
pName
policyKey.append(L"\\")
policyKey.append(partnerString)
policyKey.append(pPolicyInfo->pwszPolicyKey)
policyKey.append(pPolicyInfo->pwszPolicyName)
position != nullptr
postLocation.assign(m_refreshUri)
POutlookAppManager_CreateInstance
pPeriod != nullptr
PPPPQ
PPPPVRP
pProperty->assign( WindowsGetStringRawBuffer(propertyValue.Get(), nullptr))
pProvider->get_Id(providerId.GetAddressOf())
PPSWPh
ppTagArray
ppwszPassword
PQQQQ
PQQSVW
PreferredBodyType
pRefreshToken->assign(refreshToken.GetRawBuffer(nullptr))
pReportError
pRequest->get_Properties(&requestProperties)
pResult->get_ResponseData(&responseData)
pResult->get_ResponseStatus(&requestStatus)
ProductName
ProductVersion
Prop_AnsiString
Prop_Dword
Prop_FileTime1
Prop_HexInt32
Prop_String
Prop_String1
Prop_String2
Prop_String3
Prop_StringA_1
Prop_StringA_2
properties->HasKey( HStringReference(pPropertyName).Get(), &hasProperty)
properties->Insert( HStringReference(L"client_secret").Get(), HStringReference(pClientSecret).Get(), &replaced)
properties->Insert( HStringReference(parameter.first.c_str()).Get(), HStringReference(parameter.second.c_str()).Get(), &replaced)
properties->Lookup( HStringReference(pPropertyName).Get(), propertyValue.GetAddressOf())
props!=0
props!=NULL
props==0
props==NULL
protocolReturnData.assign(pAuthCodeResponse)
providerErrorText
providerWithAuthotity->get_Authority(authority.GetAddressOf())
PRVAT
pServerName->assign(L"m.google.com")
PSShp
pString->Get(&length, &pStringValue)
pSyncAttemptTime
pSyncSuccessTime
pszMultiByteStr
pszValue
pTags->cValues == (sizeof(*RtlpNumberOf(spta.aulPropTag)))
pTags->cValues == ARRAYSIZE(spta.aulPropTag)
pTargetType == AuthTargetType::GetAuthTargetType(AuthTargetKind::ExchangeActiveSync)
pToken->assign( WindowsGetStringRawBuffer(token.Get(), nullptr))
pTokenExpirationTime->assign(conversionBuffer)
pTokenType->assign(tokenType.GetRawBuffer(nullptr))
pUrlParam->append(escapedUrl.c_str())
pUser->assign(((&userVar)->bstrVal))
pUserName->assign( WindowsGetStringRawBuffer(userName.Get(), nullptr))
pUsername->assign(account.GetRawBuffer(nullptr))
pUsername->assign(hstrAccount.GetRawBuffer(nullptr))
pusOid != 0
pValue == tlx::iwstring_view_ascii(pStringValue, length)
pValue->append(uri, beginIndex, valueLength)
pValue->assign(GetVariantString(&propValue, L""))
PVQh?
PVSh?
PVVh,%
PVVVVC
PWSh?
PWSSh
pwszWideCharStr
Q 9Q(}
q(9>u
Qf99u=hP}
Qj6Q3
QjaW3
QjbQ3
QjcQ3
QjCQB
QjkW3
QjlQ3
QjNQ3
QjoW3
QQh<(
QQh8(
QQQQQ
QQSVW
QQSVW3
QQSVWh
QQVW3
QQVWh
QQVWQ
QRPh,?
QRPh,@
QRPhL?
QRPhl?
QSh|]
QSh<_
QShL^
QShXP
QSVW3
QueryPerformanceCounter
QueryTransientObjectSecurityDescriptor
QVhXP
QWhXP
r=VWju_
RadioManager::MarkInterfaceAsActive
RaiseException
RaiseFailFastException
reader->Read(&credential)
ReadFile
ReadOAuthRefreshTokenForPartnership
ReadPasswordForPartnership
reason
ReceivedMailCount
refresh_token
RefreshUri
RefreshWebTokenSilentlyEx
RegCloseKey
RegCreateKeyExW
RegDeleteKeyW
RegDeleteTreeW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegGetValueW
RegisterSsoAccountsCallback
RegOpenKeyExW
RegOpenKeyW
RegQueryInfoKeyW
RegQueryValueExW
RegSetValueExW
ReleaseDataStoreLock
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
REPORT.IPM.Note.NDR
request.append( (OAuthGrantType::Implicit == grantType) ? L"token" : L"code")
request.append(accountInfoURI)
request.append(escapedRedirectUri.c_str())
request.append(escapedUsername.c_str())
request.append(L"&")
request.append(L"&client_secret=")
request.append(L"&code=")
request.append(L"&grant_type=authorization_code")
request.append(L"&grant_type=refresh_token")
request.append(L"&login_hint=")
request.append(L"&redirect_uri=")
request.append(L"&refresh_token=")
request.append(L"&response_type=")
request.append(L"&scope=")
request.append(L"?access_token=")
request.append(L"?client_id=")
request.append(L"client_id=")
request.append(m_clientId)
request.append(m_clientSecret)
request.append(m_customAuthParams)
request.append(m_scopes)
request.append(m_startURL)
request.append(pAccessToken)
request.append(pRefreshToken)
request.append(protocolReturnData, beginIndex, authCodeLength)
request->get_Properties(&properties)
requestFactory->Create( pProvider, HStringReference(pScope).Get(), HStringReference(pClientId).Get(), &request)
requestParameters.emplace(L"authority", pAuthUri).first != nullptr
requestParameters.emplace(L"resource", utl::move(resourceUri)).first != nullptr
requestProperties->Insert( HStringReference(RequestAutorityPropertyName).Get(), authority.Get(), &replaced)
RequiredEncryptionSMIMEAlgorithm
RequiredSignedSMIMEAlgorithm
RequireEncryptedSMIMEMessages
RequireManualSyncWhenRoaming
RequireSignedSMIMEMessages
res == 0L
ResetEvent
ResolveDelayLoadedAPI
resource
resourcesLib.valid()
resourceUri.assign(pResourceUri, uriLength)
ResourceUrl
response->get_Token(token.GetAddressOf())
responseBody.reserve(++wideCount)
responseData->GetAt(0, &response)
result->get_DefaultWebAccount(&account)
ReturnHr
ReturnNt
rgName
RoActivateInstance
RoGetActivationFactory
rpmsg.message
RPSToken
RQh0k
RSDS5
RtlCaptureContext
RtlClearThreadWorkOnBehalfTicket
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlGetThreadWorkOnBehalfTicket
RtlIsCriticalSectionLockedByThread
RtlIsCriticalSectionLockedByThread(&(_pAtlModule->m_csStaticDataInitAndTypeInfo.m_sec))
RtlIsMultiSessionSku
RtlReportException
RtlSetThreadWorkOnBehalfTicket
rXQPW
s!Qh>
s_objectManager != 0
s_objectManager != NULL
SafeCustomerId
SafeCustomerId is: '%S', parsed value: %I64d, end index: %d
SafeLPWSTR
ScheduledSyncPeriod
Scheme
Scope
scopes->append(pProviderInfo->ScopeAccountInfo)
scopes->append(pProviderInfo->ScopeCalendar)
scopes->append(pProviderInfo->ScopeContacts)
scopes->append(pProviderInfo->ScopeMail)
scopes->append(pProviderInfo->ScopeSeperator)
sdct-w
sdpp-w
securePassword->Get(&passwordLength, &pPassword)
SelectionLanguage
SelectionNamespaces
SentMailCount
Server
ServerLog
serverSourcesList.push_back(guidSource)
ServerSync:AttOID
ServerSync:FileURI
ServerSync:FolderName
service::ssl.live.com::MBI_SSL
SetAuthCertHash
SetBatterySaverWnfName
SetConversationId
SetDefaultStoreDirty
SetEvent
SetLastError
SetMonitorDisplayState
SetOutgoingMessageSizeLimit
SetSyncWorkOnBehalfTicket
SetThreadpoolTimer
SetUnhandledExceptionFilter
SHCreateMemStream
SHGetKnownFolderPath
SHGetKnownFolderPath( knownFolderId, KF_FLAG_DONT_VERIFY, nullptr, replace(localDataPath))
ShouldReportAssertionFailure
sizeof(CEENTRYID) == storeEntryIdPropVal->Value.bin.cb
Sleep
SleepConditionVariableSRW
SMIMEAlwaysEncrypt
SMIMEAlwaysSign
SNProviderAccountName
Software\Microsoft\AccountSettings
Software\Microsoft\ActiveSync
Software\Microsoft\ActiveSync\Environment
Software\Microsoft\ActiveSync\Partners
Software\Microsoft\ActiveSync\Security\Provision
Software\Microsoft\PPI\Settings\DeviceAccount
source != GUID_INVALID
source != GUID_NULL
SPERF_TAG_LOAD_XMLDOM
srcText
SSj P
SsoId
SsoProviderMSA == providerType
SsoTokenTarget
SspiCli.dll
SSQPV
SSSh8
StateTransition
Status
StoreId
storeIds[0] != storeIds[1]
StoreType
strcspn
StringCbLengthA(pData, 2147483647 * sizeof(CHAR), &stringSize)
StringCbLengthW( credentialValue, credentialValueMaxLength * sizeof(WCHAR), &pwdSizeInBytes)
StringCchCatW(filePath, (sizeof(*RtlpNumberOf(filePath))), pFileName)
StringCchCatW(pwszBuffer, cchBufferSize, s_ServerTypeTable[type])
StringCchCatW(pwszBuffer, cchBufferSize, wszDataSource)
StringCchCopyExW( target, targetLength, pPrefix, &pEnd, &countCharsRemaining, 0)
StringCchCopyW( m_logPostfix, (sizeof(*RtlpNumberOf(m_logPostfix))), pSettings->logFilePostfix)
StringCchCopyW( m_logPrefix, (sizeof(*RtlpNumberOf(m_logPrefix))), pSettings->logFilePrefix)
StringCchCopyW(lineBuffer + HEX_LINE_CHARS, destinationSize, L"\r\n\0")
StringCchCopyW(pBuffer, bufferLength, value.c_str())
StringCchCopyW(pDestinationFileName, 260, pDefaultName)
StringCchCopyW(pPassword, passwordLen, pTmp)
StringCchCopyW(pwszBuffer, cchBufferSize, wszCredentialName)
StringCchCopyW(pwszPassword, dwPasswordLen, szNoPassword)
StringCchCopyW(retVal, addressLength, pMatchedAddress)
StringCchCopyW(retVal, bufferLength, localUsername.c_str())
StringCchLengthW(pBody, c_maxNDRBodySize, &contentLength)
StringCchLengthW(pMatchedAddress, (2147483647 - 1), &addressLength)
StringCchLengthW(pSubjectFormat, c_maxSubjectSize, &subjectFormatSize)
StringCchLengthW(pwszBuffer, cchBufferSize, &cchTempTargetName)
StringCchLengthW(pwszServer, MAX_SERVER_NAME_LENGTH, &cchServerSize)
StringCchPrintfA( partnerHeader, (sizeof(*RtlpNumberOf(partnerHeader))), c_partnerMapping, partnerGuid, TraceGetPartnerId(m_partner))
StringCchPrintfA(timeStamp, (sizeof(*RtlpNumberOf(timeStamp))), "[%02d/%02d/%04d %02d:%02d:%02d.%03d] \r\n", SystemTime.wDay, SystemTime.wMonth, SystemTime.wYear, SystemTime.wHour, SystemTime.wMinute, SystemTime.wSecond, SystemTime.wMilliseconds)
StringCchPrintfExW( deviceTypeFamily, sizeof(*__countof_helper(deviceTypeFamily)), nullptr, nullptr, 0x00000800, L"%u", deviceFamily)
StringCchPrintfW( pFileName, 260, L"%s%s%s-%d.txt", m_logPrefix, sanitizedFileName, m_logPostfix, logNumber)
StringFileInfo
StringFromGUID2
StringFromGUID2 ( partnerGuid, wszDataStoresLockName, 40 )
StringFromGUID2(dataTypeID, wszType, (sizeof(*RtlpNumberOf(wszType))))
StringFromGUID2(partner, partnerString, (sizeof(*RtlpNumberOf(partnerString))))
StringFromGUID2(source, wszDataSource, (sizeof(*RtlpNumberOf(wszDataSource)))) != 0
strspn
StrStrIW
SUCCEEDED(_IsValidToken(currentToken, &valid)) && (FALSE != valid)
SUCCEEDED(hr)
SUCCEEDED(hr) && (info != NULL)
SUCCEEDED(hr) && (info != nullptr)
success
SVWhh
SVWj$
SVWj8
SVWu4
SVWu4jS_W
SVWu6
Sync utilities for mail, contacts, calendar
SYNC_CERT
SyncGetDeviceUniqueID
SyncPassword
SyncPdcReference_WatchdogReport
SyncPdcReference_WatchdogsEnabled
syncPeriodInMinutes != invalidPeriod
SyncRes.dll
SyncServer
syncServices.CoCreateInstance(__uuidof(POSyncServices))
SyncSqmUpdateStats
SyncStatusEventType_None == pEventData->eventType || SyncStatusEventType_Reset == pEventData->eventType
SyncUseSSL
SyncUtil
SYNCUTIL.dll
SyncUtil.dll
SyncUtil.pdb
SyncUtil_OAuth_GetTokensFromAuthCode
SyncUtil_OAuth_RefreshTokens
SyncUtil_XMLParse_LoadFailFilePos
SyncUtil_XMLParse_LoadFailHresult
SyncUtil_XMLParse_LoadFailReason
SyncUtil_XMLParse_LoadFailSrcText
SyncUtil_XMLParse_LoadFailUrl
SyncWerReportComponentName
SyncWerReportGenerator
SyncWhenRoaming
SystemTimeToFileTime
t$ PQ
t$ Yt@+
t$$PQ
t$(PQ
t&hDk
t&j<_
t:j7^V
t;jE^V
t]jN_W
t+ju_
t+Qho
t1j_^V
t6j@^
t8WjJ_W
TASKX
tcPRQ
tDjV^V
TempContact:DisplayName
TEMPH
TEMPP
TEMPT
tempUserId.append(L"\\")
tempUserId.append(pUserName)
tempUserId.assign(pDomain)
TerminateProcess
threadId
tk!\$
tlx::append_sprintf(tempString, L"%s=", paramName)
tlx::assign_sprintf( *pAuthorization, L"%s %s", m_authScheme.c_str(), pCredential)
tlx::assign_sprintf( *pAuthorization, L"Basic %hs", encodedCredentials.c_str())
tlx::assign_sprintf( keyPath, L"%s\\WebAuth\\%s", c_wszActiveSyncKey, pProviderId)
tlx::assign_sprintf( m_account, L"%s\\%s", domain.c_str(), userId.c_str())
tlx::assign_sprintf( monikerName, L"Elevation:Highest!new:%s", classIdString)
tlx::assign_sprintf( requestBody, L"client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s", _GetClientId().c_str(), _GetClientSecret().c_str(), pRefreshToken, _GetScope().c_str())
tlx::assign_sprintf( subject, pSubjectFormat, c_maxSubjectSize - subjectFormatSize, pOriginalSubject)
tlx::assign_sprintf( wideCredentials, L"%s:%s", GetAccount(), pCredential)
tlx::assign_sprintf(userAgent, L"%s%s-%d/%u.%u.%u", c_wszHttpUserAgent, pwszDevice.get(), deviceFamily, OSVersionInfo.dwMajorVersion, OSVersionInfo.dwMinorVersion, OSVersionInfo.dwBuildNumber)
tlx::assign_wide( multiByteCredentials, wideCredentials, 0)
token
token_type
tokenBroker->GetDefaultSignInAccountAsync( &getDefaultSignInAccountResultOperation)
TokenBrokerError
tokenType
Tonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\internetmailauthtargettype.cpp
Trace
Translation
true == m_watchdogDisabled
TryGetDefaultSignInAccountInfo
tSWSW
tVV9_
u!j!_
u!j/_
u!j:_
u!j\_
u!ja_
u!jl_
u!jP_
u$jf_
u$jg_
u$jV_
u$jY_
u$WSQ
u&QhS
u(jL_
u)j _
u)j"_
u)j@3
u)jQ_
u)jS_
u*j[_
u*jX_
u*QhY
u,j[^
u,jT^
u,jt_
u.j]_
u.QhY
u/j+^
u/jj^
u:j6_W
u:WjP_W
u?Sj=[S
u1j:^V
u1jK^V
u1jX[S
u2j@^
u2j8_W
u2jB_
u4j`^V
u4j0_
u5j*[S
u5j\_
u5j<^V
u5j>^V
u5jC^V
u5jm_
u5jo^V
u5jp^V
u6j1^V
u7j"[
u7j]^V
u7jU_
u8jn_W
UIntPtrToInt(buffer.size(), &bufferSize)
u-jR^
uLj`_
ULongAdd((ULONG)[](size_t num) { ULONG out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\password.cpp", 139  ); } } while(0,0); return out; }(pwdSizeInBytes), sizeof(WCHAR), &blobSizeInBytes)
UnhandledExceptionFilter
UninitializeServerReadyEvents
uNPPV
UpdatedMailCount
UpdateYahooAccountType
uPhP}
uri.assign(pProtocolReturnData)
uriFactory->CreateUri(HStringReference(m_redirectURL.c_str()).Get(), &callbackUri)
uriFactory->CreateUri(HStringReference(request.c_str()).Get(), &startUri)
url.append(pAppend->c_str())
url.append(pAppend->c_str(), c_MaxParamSize)
UrlUnescapeW
UrlUnescapeW(pValue->data(), nullptr, nullptr, 0x00100000)
UseBuiltInTeamDeviceAccount
UserDataTimeUtil.dll
UserDataTypeHelperUtil.dll
username=
USOIDfromCEENTRYID
uVj;_
v,ShT'
V_VT(&nameVar) == VT_BSTR
V0a0y0
value.assign(pValue)
VarFileInfo
VaultAddItem
VAULTCLI.dll
VaultCloseVault
VaultCreateItemType
VaultFree
VaultGetItem
VaultGetItemType
VaultOpenVault
VaultRemoveItem
VerifyDataStoreLockOwner
VPh<|
VPhPb
VPhtf
VS_VERSION_INFO
VSWRh
vTh8'
VVVVGW
VVVVj
VWPh<|
w PQQQQS
wabBrokerStatics->AuthenticateWithCallbackUriAndContinue( startUri.Get(), callbackUri.Get())
WaitForMultipleObjects
WaitForServerReady
WaitForSignalOrShutdown
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WakeAllConditionVariable
Warning
watchdogDurationMs
watchdogStartTime
wcscat_s
wcschr
wcscspn
wcsncmp
wcsnlen
wcsrchr
wcsstr
wcstok_s
webAuthCore->FindAccountAsync( pProvider, HStringReference(pAccountId).Get(), &findAccountOperation)
webAuthCore->FindAccountProviderAsync( HStringReference(pProviderUri).Get(), &findAccountProviderOperation)
webAuthCore->FindAccountProviderWithAuthorityAsync( HStringReference(pProviderUri).Get(), HStringReference(pAuthority).Get(), &findAccountProviderOperation)
webAuthCore->GetTokenSilentlyAsync( pRequest, &webTokenRequestResultOperation)
webAuthCore->GetTokenSilentlyWithWebAccountAsync( pRequest, pAccount, &webTokenRequestResultOperation)
WebTokenRequestStatus_Success != requestStatus
WEVT_TEMPLATE
WideCharToMultiByte
WilError_03
wilResult
win:Error
win:Informational
win:Start
win:Stop
win:Verbose
win:Warning
Windows.Data.Json.JsonObject
Windows.Foundation.Uri
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Security.Authentication.Web.WebAuthenticationBroker
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsGetStringRawBuffer
WindowsLiveActiveSync
WindowsLiveServiceTarget
WindowsLiveStorage
WindowsMail
WINHTTP.dll
WinHttpCrackUrl
WinHttpCrackUrl(pResourceUri, 0, 0, &urlComponents)
WinHttpCrackUrl(providerUri.c_str(), 0, 0, &urlComponents)
WinSqmAddToStreamEx
WinSqmEndSession
WinSqmStartSession
WLAccountSyncEnabled
WriteOAuthRefreshTokenForPartnership
WritePasswordForPartnership
wszName != 0
www.google.com
WWWRQ
WWWWWWhN
Xf9D$
Xf9D$ 
XPath
xZSVW
y Qjn3
y!j\_
y!jF_
y"j"_
y"ju_
y#Qjh3
y#Qjm3
y$j=_
y$jC^
y$jK_
y%Qjj
y&QjR3
y)jW^
y)Qh<
y*Qh8
y,jF^
y/t-~
y:Qhx
Y__^[
y1jf[S
y1Qh_
y5jC_
yahoo
Yahoo
YahooDefaultPadding
YahooOAuthRedirectURI
YahooOAuthTokenURI
YahooOAuthURI
YahooUserInfoURI
yBQji
ycal-w
yhQhg
y'j5^
y'j6^
y'jt_
y'jw_
y'jz_
yMQjH3
y'Qj4
y'QjpQ3
y'QjS3
YY_^[
YY_^]
YYQjv3
