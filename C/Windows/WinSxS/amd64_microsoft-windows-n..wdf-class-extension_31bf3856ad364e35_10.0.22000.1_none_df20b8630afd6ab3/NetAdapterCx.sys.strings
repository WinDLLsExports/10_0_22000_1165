 A^_^
 A^A\_
 A_A^_
 A_A^A\
 A_A^A\_^
 A_A^A]A\_
 A_A^A]A\_^]
 Microsoft Corporation. All rights reserved.
 Operating System
 VkXwY_[c\
 Windows
! (buffer + bufferLength > buffer)
! (buffer + length > buffer)
! context.CreatedQueueObject
! demux[demux.count() - 1]
! m_affinitizedQueues.resize(m_maxProcessorIndex - m_minProcessorIndex)
! m_extensionName
! m_extensions.insertSorted(extension, sort)
! m_indirectionTable.resize(capabilities.NumberOfIndirectionTableEntries)
! m_laLookupTable
! m_layoutParseBuffer.resize(m_datapathCapabilities.NominalMtu)
! m_multicastAddressList.resize(addressCount)
! m_packetExtensions.append(wistd::move(extension))
! m_rxQueues.reserve(RxQueueCount)
! m_rxQueues.reserve(RxScaling->GetNumberOfQueues())
! m_rxScaling
! m_temporary.reserve(m_extensions.count() + 1)
! m_txDemux.reserve(AdapterInit->TxDemux.count())
! m_vaLookupTable
! newApp
! queue
! queueControl
! QueueCreationContext.Extensions.append(*extension)
! Queues.resize(Queues.count() + 1)
! queues.resize(RxScaling->GetNumberOfQueues() - m_rxQueues.count())
! queues.resize(TxQueueCount - m_txQueues.count())
! resize(NdlCount)
! ring
! rxQueue
! rxQueues.resize(RxQueueCount)
! rxScaling
! txQueues.resize(TxQueueCount)
! txScaling
!bufferManager
!checksumOffload
!dataBuffer
!DbgkLiveDumpAddSecondaryDataRoutine
!dot11Context
!gsoOffload
!m_allocator
!m_apps.append(wistd::unique_ptr<INxApp> { static_cast<INxApp *>(client) })
!m_bufferPool
!m_BuffersInUseFlag.Initialize(m_PoolSize)
!m_BuffersRef.resize(m_PoolSize)
!m_BufferVectorAllocator.get()
!m_driverState
!m_frameworkExecutionContext
!m_MdlStorage
!m_MemoryConstraints.append(*MemoryConstraints)
!m_NblStorage
!m_offloadManager
!m_offloads.append(wistd::move(checksumOffload))
!m_offloads.append(wistd::move(gsoOffload))
!m_offloads.append(wistd::move(rscOffload))
!m_offloads.append(wistd::move(rxChecksumOffload))
!m_offloads.append(wistd::move(txChecksumOffload))
!m_oidList
!m_pGuidToOidMap
!m_registryPath
!miniport
!nsOffload
!offloadFacade
!pool
!resize(m_PoolSize)
!resize(MdlCount)
!rscOffload
!RTL_IS_POWER_OF_TWO(BufferPoolConfig->BufferAlignment)
!rxChecksumOffload
!tempInstanceNameBuffer
!This program cannot be run in DOS mode.
!txChecksumOffload
!WIN_VERIFY(Extension->NonWdfStyleAlignment <= alignment)
!WIN_VERIFY(Extension->Size != 0)
!WIN_VERIFY(Extension->Size <= MAXIMUM_ALLOWED_EXTENSION_SIZE)
!WIN_VERIFY(RTL_IS_POWER_OF_TWO(Extension->NonWdfStyleAlignment))
!wnodeCopy
%.4S:%wZ-%wZ
%ws execution context #%zu for %wZ
(|$`H
(D$ @
(D$ f
(D$ H
(D$ L
(D$@H
(D$`H
(D$0f
(D$0H
(D$PH
(L$0H
(ndisGuid->Flags & fNDIS_GUID_TO_STATUS) == 0
* (Stable) or NetAdapterCx 2.2 (Preview or Stable).       
* Actual function table count  : %u 
* and NetAdapterOffloadSetRxChecksumCapabilities instead.   
* deprecated. Use NetAdapterOffloadSetTxChecksumCapabilities
* Driver verifier should be enabled on both client and Cx
* Expected function table count: %u 
* If not, DV may report false violations while verifiying NDIS rules
* NetAdapterCx 1.%u (Preview) client detected.            
* NetAdapterCx 2 (Preview) client detected.               
* NetAdapterCx detected a function count mismatch. The driver 
* NetAdapterCx detected a verifier rule violation.       *
* NetAdapterOffloadSetChecksumCapabilities has been         
* NetOffloadIsChecksumIPv4Enabled has been deprecated.    
* NetOffloadIsChecksumTcpEnabled has been deprecated.     
* NetOffloadIsChecksumUdpEnabled has been deprecated.     
* NetOffloadIsRxChecksumIPv4Enabled instead.              
* NetOffloadIsRxChecksumTcpEnabled instead.               
* NetOffloadIsRxChecksumUdpEnabled instead.               
* Recompile your source code and target NetAdapterCx 2.%u.
* Recompile your source code and target NetAdapterCx 2.x  
* Use NetOffloadIsTxChecksumIPv4Enabled and               
* Use NetOffloadIsTxChecksumTcpEnabled and                
* Use NetOffloadIsTxChecksumUdpEnabled and                
* using this extension will not load until it is re-compiled 
* with the latest version of the extension's header and libs 
************************* 
*************************** 
**********************************************************
************************************************************
*IdleRestriction
*IPChecksumOffloadIPv4
*LsoV1IPv4
*LsoV2IPv4
*LsoV2IPv6
*NumRssQueues
*RscIPv4
*RscIPv6
*RscTimestamp
*RssBaseProcGroup
*RssBaseProcNumber
*RssMaxProcGroup
*RssMaxProcNumber
*TCPChecksumOffloadIPv4
*TCPChecksumOffloadIPv6
*UDPChecksumOffloadIPv4
*UDPChecksumOffloadIPv6
*UsoIPv4
*UsoIPv6
,f93r
.00cfg
.data
.data$brc
.fffffff
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.kmdfclassbind$a
.kmdfclassbind$c
.kmdfclassbind$d
.kmdftypeinit$a
.kmdftypeinit$c
.pdata
.rdata
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$mn$21
.xdata
:NAISH
;{0t0
;fD9#t
;fD9;t
;NAEIt
;xuZH
?NAEIt
@8|$`
@8h0t$H
@8l$Xu
@8rpt&H
@8t$xt
@8w t9H
@8wHt
@8x t)H
@A^_^
@A_A^_
@A_A^A\
@A_A^A]A\_^]
@p@8-
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAVH
@USVWH
@UVWATAUAVAWH
[2\W\
[4\Z\
[5\R]
[l[\_
[Q[}\
\$ 9_
\$ E3
\$ H;
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$@A+
\$\w\
\$0H;
\$pD:
\@]T]
\Device\netadaptercx
\I]y]
]#^7^
]HI9]
]J_\_
]z^N_
^ ^Q^
^$_w_
^6_^_
^N^s^l_
__chkstk
_strnicmp
_vsnwprintf
` UAVAWH
`A_A^A]A\_^]
`INIT
{ AVH
|$ AVH
|$ E3
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$(A^
|$@A_A^A]A\
|$0A_A^
|$8E3
|$PH;{
+M0#M
+N0#N
+O0#O
<! demux.reserve(Configuration.Count)
=diODt
=diOSt
0! m_txQueues.reserve(TxQueueCount)
040904B0
0A^_^
0A_A^_
0A_A^A\
0A_A^A]
0A_A^A]A\_
0A_A^A]A\_^]
0QkT?W#X
0XYZAXAY
10.0.22000.1
10.0.22000.1 (WinBuild.160101.0800)
3CPI#
4T$U%W
5!aZo
5`";Jb
6length < NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_3
7fD9/t
8\$4u
8\$5u
8\$6t
8A_A^A]A\_^][
9(u"H
9|$Pv*H
9GNxIt
9K8u@H
A D8Y
A)C(I
A,u1A
A;I0u
A^_^[]
A^A]A\
A_A\]
A_A\_
A_A\_^]
A_A^]
A_A^_
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]
A_A^A]_]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A+Q0A#Q
A8HcI0H
A9@0t
A9@0u
A9@0u0L
AAO!blContext
actualBufferOffset < BufferAlignmentOffset
actualBufferSize < BufferSize
AdapterNetLuid
AdapterStateTransitionEvent
AdapterStateTransitionFrom
AdapterStateTransitionTo
AdSt3
AllowDmaHalBypass
App %lu - RX %zu
App %lu - TX %zu
AQAPRQPH
ASmDH
Average Queue Depth
AZfA+
B.reloc
B.rsrc
BatlH
bGFIDS
bufferLength % addressLength != 0
bufferLength < sizeof(ULONG)
BufferPoolConfig->BufferAlignment > PAGE_SIZE
BufferPoolConfig->Flag & NET_CLIENT_BUFFER_POOL_FLAGS_SERIALIZATION
BufferSize < sizeof(WNODE_TOO_SMALL)
bufferVector == nullptr
C @8r
C D8b
C D8R
cbSourceString > USHORT_MAX
CHD9s
CompanyName
CoQuH
cT3Mk:V
cxbmH
cxDeviceInit == nullptr
CxDrH
CxDriverContext
D!t$ A
D!t$ D
D!t$ E
D$ ;O
D$ E3
D$ fD
D$$fA
D$(BatlA
d$(E3
D$(fD
D$(M;
D$@E3
D$`t#
D$0D;
D$0E3
D$0fA
D$4t#
D$8D*
D$8H#
d$DD8%
D$HE3
D$hH;
D$pA+
D$pD8%
D$PH;
D$rH+
D$XE3
D,Df9C
D/@E3
D;S0u
D6DD;
D8{ th
D8{!tXH
D8bpt0I
D8c+t
D8c0t
D8d$A
D8k0t
D8S u
D8S!u
D8Y$t
D8Y<t
D8YDt
D8YLt
D8YMt
D9?t[
D9@(s|3
D9C,t
D9s8uaH
DbgkWerCaptureLiveKernelDump
DbgPrintEx
DeferredDeleteContext
DeStD
DeviceBusAddress
DeviceStateTransitionEvent
DeviceStateTransitionFrom
DeviceStateTransitionTo
DL$`E3
DmaBouncePolicy
DpcDuration
DPnPH
DriverEntry failed 0x%x for driver %wZ
E;|$0A
E+`8M
E8`HtPI
E8T/`t0I
EC statistics
ECNaH
ECtxH
EcUpdatePerfCounters
EL9-b\
entries == nullptr
en-US
epA_A^A\_^[]
EPM;M
EtwRegister
EtwRegisterClassicProvider
EtwSetInformation
EtwUnregister
EtwWriteTransfer
ExAcquirePushLockExclusiveEx
ExAcquirePushLockSharedEx
ExAcquireRundownProtection
ExAcquireRundownProtectionCacheAware
ExAcquireRundownProtectionEx
ExAllocateCacheAwareRundownProtection
ExAllocatePool2
ExAllocatePoolWithTag
ExDeleteNPagedLookasideList
Execution Context
ExFreeCacheAwareRundownProtection
ExFreePool
ExFreePoolWithTag
ExInitializeNPagedLookasideList
ExInitializeRundownProtection
ExpInterlockedPopEntrySList
ExpInterlockedPushEntrySList
ExQueryDepthSList
ExQueueWorkItem
ExReInitializeRundownProtection
ExReInitializeRundownProtectionCacheAware
ExReleasePushLockEx
ExReleasePushLockExclusiveEx
ExReleaseRundownProtection
ExReleaseRundownProtectionCacheAware
ExReleaseRundownProtectionEx
extensionType == MediaExtensionType::None
EXtZE8f
ExWaitForRundownProtectionRelease
ExWaitForRundownProtectionReleaseCacheAware
f!~XH9>u
F(L+t$@I;
f;FPr
f;L$0t
f9,Au
f9iHt#H
f9QHt
fA9D$
fD+ev@
fD9#t
fD9${u
fD9$Cu
fD9/t
fD9;t
fD9+t
fD9<{u
fD9<Cu
fD9aH
fD9aHt
fD9aHt"H
fD9iHt!H
fD9iHt"H
fD9iHt#H
fD9iHt/I
fD9qHt
fD9qHt)H
fD9rHt0H
fE;d6DsIA
fE;T4Ds
fffff
fffffff
-fffffff
FHf;E
FileDescription
FileVersion
FxGetNextClassBindInfo failed
FxGetNextObjectContextTypeInfo failed
FxStubBindClasses: ClientBindClass %p, WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubBindClasses: invalid driver image, the address of symbol __KMDF_CLASS_BIND_START 0x%p is greater than the address of symbol __KMDF_CLASS_BIND_END 0x%p, status 0x%x
FxStubBindClasses: VersionBindClass WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubInitTypes: invalid driver image, the address of symbol __KMDF_TYPE_INIT_START 0x%p is greater than the address of symbol __KMDF_TYPE_INIT_END 0x%p, status 0x%x
G D8c 
G D8R
GetNxDriverFromWdfDriver(Driver) != nullptr
GNxIH
H UVWATAUAVAWH
H!:!z
H!\$ D
H!|$ D
H!D$ E3
H!D$(
H!l$ D
H!t$ D
H.data
H.idata
h.rdata
H;]gtQL
H;_`u
H;l$ 
H;Qhwx
H+l$8D
H9(uOH
H9(uqH
H9?u1H
H9=^1
H9=}y
H9=Fy
H9=Jz
H9=v3
H9iht
H9n0u
H9o u
H9y@u
hA_A^A]A\_^[]
HcG,A
HGrmH
HPAGE
I3A@H#
I9F0t=@
I9n(u
I9R@u
I9W u
IgnoreVerifierDebugBreak
imp_NetAdapterInitAllocate
imp_WppRecorderReplay
InternalName
IoAllocateWorkItem
IofCompleteRequest
IoFileObjectType
IoFreeWorkItem
IoGetDeviceNumaNode
IoQueueWorkItem
IoRegisterPlugPlayNotification
IoUnregisterPlugPlayNotificationEx
IoWMIDeviceObjectToProviderId
IoWMIRegistrationControl
IoWMIWriteEvent
IsEmpty()
Iterations/Sec
Iterations/Sec#Total number of packets transferred
J1D/@J
J3D/@A
K D8A t
K(D8A t
K(fA+J(fA+J
K(uUA
KArrH
KdRefreshDebuggerNotPresent
KeAcquireSpinLockRaiseToDpc
KeClearEvent
KeEnterCriticalRegion
KeFlushIoBuffers
KeGetCurrentIrql
KeGetCurrentProcessorNumberEx
KeInitializeDpc
KeInitializeEvent
KeInitializeSpinLock
KeInsertQueueDpc
KeLeaveCriticalRegion
KeLowerIrql
KeQueryDpcWatchdogInformation
KeQueryMaximumProcessorCountEx
KeQueryTimeIncrement
KeReadStateEvent
KeReleaseSpinLock
KeSetBasePriorityThread
KeSetEvent
KeSetSystemGroupAffinityThread
KeSetTargetProcessorDpcEx
KeShouldYieldProcessor
KeWaitForSingleObject
key == nullptr
KfRaiseIrql
KHstH
KmdfLibrary
KP@8q
KPD8a
KPD8Q
KsplH
KsplL
L$ E;N
L$ E3
L$ SVWH
L$ UH
l$ VWATAVAWH
l$ VWAVH
L$(E3
l$(fD
L$@!D$@L
L$@E3
L$@fD
L$`E3
L$0E3
L$0f9O
L$0H3
l$0L;
L$4fE9\,D
L$8E3
L$8H3
L$hH;
L$HH3
L$hH3
L$hHk
L$PE3
L$pH;D$X~@@8|$Ht H
L$PH3
L$XE3
L$XeH
L,J2K
L:@H;
L+l$8I
L95]W
L9g u
L9n t
L9t$@uTH
L9t$PuTH
LcK A
LegalCopyright
length < NDIS_SIZEOF_OFFLOAD_ENCAPSULATION_REVISION_1
length < NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_V2_REVISION_1
length < NDIS_SIZEOF_RSC_STATISTICS_REVISION_1
length < NDIS_SIZEOF_RSS_SET_INDIRECTION_ENTRIES_REVISION_1
length < NDIS_SIZEOF_STATISTICS_INFO_REVISION_1
Lower
m_MemoryConstraints.count() > 1
m_receiveFilterCapabilities.SupportedPacketFilters == 0
m_resetDiagnosticsBuffer == WDF_NO_HANDLE
mbbcx
Microsoft
Microsoft Corporation
Microsoft.Windows.Ndis.NetAdapterCx
Microsoft.Windows.Ndis.NetAdapterCx.Translator
minio\netcx\adapter\adapterpnppower.cpp
minio\netcx\adapter\devicepnppower.cpp
minio\netcx\adapter\idle\idlestatemachine.cpp
minio\netcx\adapter\idle\powerreferenceholder.cpp
minio\netcx\adapter\nxadapter.cpp
minio\netcx\adapter\nxdevice.cpp
minio\netcx\adapter\nxexecutioncontextapi.cpp
minio\netcx\adapter\nxexecutioncontexttask.cpp
minio\netcx\adapter\nxqueue.cpp
minio\netcx\adapter\powerpolicy\nxidlerestrictions.cpp
MmBuildMdlForNonPagedPool
MmGetPhysicalAddress
MmGetSystemRoutineAddress
MmIsDriverVerifyingByAddress
MmMapLockedPagesSpecifyCache
MmSizeOfMdl
MmUnmapLockedPages
MOFDATA
ms_fragment_databuffer
ms_fragment_logicaladdress
ms_fragment_mdl
ms_fragment_returncontext
ms_fragment_virtualaddress
ms_packet_checksum
ms_packet_gso
ms_packet_hash
ms_packet_ieee8021q
ms_packet_lso
ms_packet_rsc
ms_packet_rsc_timestamp
ms_packet_wifiexemptionaction
NAEIH
NAInH
NAISH
NameGenerationError
NBL Pending/Iteration
NdCxD
NdCxH
NdCxI
NdCxL
NDIS.SYS
NDIS_MINIPORT_BLOCK_TYPE
NdisAdvanceNetBufferDataStart
NdisAdvanceNetBufferListDataStart
NdisAllocateFragmentNetBufferList
NdisAllocateNetBufferAndNetBufferList
NdisAllocateNetBufferListPool
NdisCloseConfiguration
NdisConvertNdisStatusToNtStatus
NdisConvertNtStatusToNdisStatus
NdisCopyReceiveNetBufferListInfo
NdisCopySendNetBufferListInfo
NdisFreeFragmentNetBufferList
NdisFreeNetBufferList
NdisFreeNetBufferListContext
NdisFreeNetBufferListPool
NdisGetDataBuffer
NdisIfGetInterfaceIndexFromNetLuid
NdisMDeregisterMiniportDriver
NdisMIndicateReceiveNetBufferLists
NdisMIndicateStatusEx
NdisMOidRequestComplete
NdisMPauseComplete
NdisMRestartComplete
NdisMSendNetBufferListsComplete
NdisMSetMiniportAttributes
NdisOpenConfigurationEx
NdisOpenConfigurationKeyByName
NdisReadConfiguration
NdisReadNetworkAddress
NdisRetreatNetBufferDataStart
NdisWdfAsyncPowerReferenceCompleteNotification
NdisWdfChangeSingleInstance
NdisWdfCloseIrpHandler
NdisWdfCreateIrpHandler
NdisWdfDeregisterCx
NdisWdfDeviceControlIrpHandler
NdisWdfDeviceInternalControlIrpHandler
NdisWdfExecuteMethod
NdisWdfGetAdapterContextFromAdapterHandle
NdisWdfGetGuidToOidMap
NdisWdfMiniportDataPathStart
NdisWdfMiniportDereference
NdisWdfMiniportSetPower
NdisWdfMiniportStarted
NdisWdfMiniportTryReference
NdisWdfNotifyWmiAdapterArrival
NdisWdfPnPAddDevice
NdisWdfPnpPowerEventHandler
NdisWdfQueryAllData
NdisWdfQuerySingleInstance
NdisWdfReadConfiguration
NdisWdfRegisterCx
NdisWdfRegisterMiniportDriver
NdisWriteConfiguration
NetAdapterCx
NetAdapterCx Queue Counter
NetAdapterCx Queue Counter Set.
NetAdapterCx Queue Counter"Total number of polling iterations
NetAdapterCx.pdb
NetAdapterCx.sys
NetAdapterMof
NETADAPTERMOF
NETEXECUTIONCONTEXT %p
NETIO.SYS
Network Adapter Class Extension for WDF
NmrClientAttachProvider
NmrDeregisterClient
NmrRegisterClient
NmrWaitForClientDeregisterComplete
NrxRH
ntoskrnl.exe
NtxTA
NtxTH
NtxTI
NWmiH
NxAdapter
NxAdapter::InitializePowerManagement
NxAdapter::PowerReference
NxAdapterStateTransition
NxApH
nxbmH
NxBufferQueue
NxConfiguration
NxDevice
NxDevice::CollectDiagnostics
NxDevice::Initialize
NxDevice::WritePowerStateChangeEvent
NxDeviceStateTransition
NxDmH
NxDriver
NxExecutionContext
NxExecutionContextTask
NxExH
NxIRH
nxmaD
nxmaH
nxmaI
nxmvH
NxOfA
NxOfD
NxOfH
NxPEA
NxPEH
NxPLH
NxPLt
NxPLt"L
NxPLt#H
NxPwH
NxQueue
NxQueueVerifier
NxRBH
NxRxI
NxWmA
NxWmH
NxWmHk
NxWSH
NxWSt
NxWSt"L
NxWSt#H
ObfDereferenceObject
ObfReferenceObject
ObReferenceObjectByHandle
OPD8Q
OPD8y
OriginalFilename
p AWH
P QrQ
p WATAUAVAWH
p WAVAWH
P;PKPwP
P`R{R
P+QQQzQ
P2Q_QPR
P5Q0R[U_V&W
P5QqQ
pA^_^[]
PA_A^A\_^
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PacketFilter & ~(m_receiveFilterCapabilities.SupportedPacketFilters) && GetMediaType() != NdisMediumNative802_11
Packets Completed
Packets Completed/Iteration
Packets Transferred
Packets Transferred/Iteration
Packets Transferred/Iteration!Total number of packets Completed
Parameters.HashInformation == 0
parameters->RssEntrySize != sizeof(NDIS_RSS_SET_INDIRECTION_ENTRY)
pbxnL
PcwAddInstance
PcwRegister
PcwUnregister
PlDRH
PnPNH
PQQcU
ProductName
ProductVersion
PRQWS@U
PsCreateSystemThread
PsGetVersion
pZ1C>1
Q]RKU
Q2UbV}V9WLW
QAQlQ}QBS
QueryExtension(Extension.Name, Extension.Version, Extension.Type) != nullptr
QwR'S
R$fA;Z*
R_S0T
R9Vu^r_
Rate of NBL pending
Rate of packets Completed
Rate of packets transferred
Rate of polling iterations
Receive
resetDiagnosticsSize == 0U
rlf;K
RmSETsT
RtlClearAllBitsEx
RtlClearBitEx
RtlCopyUnicodeString
RtlEqualUnicodeString
RtlFreeUnicodeString
RtlInitializeBitMapEx
RtlInitUnicodeString
RtlRunOnceExecuteOnce
RtlSetBitEx
RtlStringFromGUID
RtlUnicodeStringToInteger
RxPerfCountersIterationInterval
RxReportPerfCounters
RxThreadAffinity
RxThreadPriority
S A8p
s AWH
S!arpOffload
S<TgU
SetRxThreadAffinity
SetTxThreadAffinity
sh@85
size != sizeof(m_hashSecretKey)
SqWEX
status
status != STATUS_OBJECT_TYPE_MISMATCH
STATUS_ACCESS_DENIED
STATUS_ALREADY_REGISTERED
STATUS_BUFFER_OVERFLOW
STATUS_BUFFER_TOO_SMALL
STATUS_DUPLICATE_NAME
STATUS_INSUFFICIENT_RESOURCES
STATUS_INTEGER_OVERFLOW
STATUS_INVALID_DEVICE_REQUEST
STATUS_INVALID_PARAMETER
STATUS_NOT_IMPLEMENTED
STATUS_NOT_SUPPORTED
STATUS_SUCCESS
STATUS_UNSUCCESSFUL
STATUS_WMI_INSTANCE_NOT_FOUND
SThbH
StringFileInfo
SUVWATAUAVAWH
t H9B
T!VbW
t"HcW4
t$ E3
T$ E3
t$ E3
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WATAUAVAWM
t$ WAVAWH
t$ WH
T$(E3
T$@H;Q
T$0E3
t$0M;
t$HA_A^A]A\_
T$hE3
t)<;u
t/I91t*
T-@E8Q`t?A
T=VwV0X
T2UXU
tafD!
targetAdapters.count() == 0
tIfD9
Total Iterations
Translation
tRich
TrQuH
TTU&VtV
TxPerfCountersIterationInterval
TxReportPerfCounters
TxThreadAffinity
TxThreadPriority
u fD9I
u!D8{
u!HcG
u.fD9I
u/@8y
u@D8%
u@H95
u+D8m
u0@8{
u0@8y
u1@8{
u1@8w
u1@8y
u2@8{
u2@8w
u5fD9I
uafD9I
UATAUAVAWH
UAVAWH
ueD8I
u'fD9I
uGL95g
uIHcG
UJUlU_Z
uKH9=6
uOfD9I
uOH9=
uOH9=O
UpdateIndirectionTableEntryStatus( parameters->NumberOfRssEntries, translatedEntries, entries)
USVWATAUAVAWH
USVWAVH
UVWATAUAVAWH
UVWATAWH
UVWAVAWH
UWATAVAWH
UWAVH
uwH;M
v(L95
V+YvY
VarFileInfo
VS_VERSION_INFO
VWATAVAWH
VWAVH
W E8P
W E8x
w,@8t$xD
w,@8t$xL
W,WTW|W
WATAUAVAWH
WATAVH
WATAWH
WAVAWH
wcscmp
wcscpy_s
wcsstr
WDFLDR.SYS
WdfRegisterClassLibrary
WdfVersionBind
WdfVersionBindClass
WdfVersionUnbind
WdfVersionUnbindClass
WI_AreAllFlagsClear(Parameters.HashInformation, hashTypeMask)
WI_IsAnyFlagSet(Parameters.HashInformation, reservedHashFunction)
WI_IsFlagClear(Parameters.HashInformation, hashFunctionMask)
wificx
WmiQueryTraceInformation
WmiTraceMessage
WppAutoLogStart
WppAutoLogStop
WppAutoLogTrace
WppRecorder.sys
x ATAUAVAWD
x ATAUAVAWE3
x ATAUAVH
x ATAVAWH
x AUAVAWH
x AVAWD
x AVH
x AVL
x AWH
x UATAUAVAWH
x UATAWH
X,XPXnX
X^YEZ
XA_A^A]A\_^][
XHYDZ
XtXJY
X'YtY
y(@8=
y.L95
y;H95
Y_\;^
Y{Y9Z9[
y=L95GR
Y1Z4[
y4H95`
yAH9=
YlY6[I[
yOH95
Z(sTH
Z`[Q\
Z}*5f
Z9[m^
Zc[i\
ZwClose
ZwOpenFile
ZwQuerySystemInformation
ZwSetInformationThread
