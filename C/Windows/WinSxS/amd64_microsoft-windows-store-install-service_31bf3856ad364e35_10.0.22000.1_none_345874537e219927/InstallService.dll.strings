     
      <Arguments>%windir%\\system32\\InstallServiceTasks.dll,ForceAppInUseRestart</Arguments>
      <Command>%windir%\\system32\\rundll32.exe</Command>
      <RunLevel>HighestAvailable</RunLevel>
      <UserId>S-1-5-18</UserId>
    </Exec>
    </Principal>
    <AllowHardTerminate>true</AllowHardTerminate>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>
    <DisallowStartOnRemoteAppSession>true</DisallowStartOnRemoteAppSession>
    <Enabled>true</Enabled>
    <Exec>
    <ExecutionTimeLimit>PT1H</ExecutionTimeLimit>
    <Hidden>false</Hidden>
    <MultipleInstancesPolicy>Queue</MultipleInstancesPolicy>
    <Principal id="LocalSystem">
    <Priority>7</Priority>
    <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>
    <SecurityDescriptor>D:P(A;;FA;;;SY)(A;;FA;;;BA)(A;;GRGX;;;SU)</SecurityDescriptor>
    <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>
    <URI>\\Microsoft\\Windows\\InstallService\\SmartRetryByPolicy</URI>
    <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>
    <Version>1.0</Version>
    <WakeToRun>false</WakeToRun>
  </Actions>
  </Principals>
  </RegistrationInfo>
  </Settings>
  </Triggers>
  <Actions Context="LocalSystem">
  <Principals>
  <RegistrationInfo>
  <Settings>
  <Triggers>
 >$x"N(.
 A^_^
 A^_^[]
 A^A\_
 A^A\_^]
 A^A]_
 A__^
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 A_A^A]A\_
 A_A^A]A\_^]
 AND UpdateID='%s'
 B"P$
 b"r$)
 b"Z 
 b&d(Q
 h"n$
 H3E H3E
 info
 Microsoft Corporation. All rights reserved.
 Operating System
 t9E3
 WARN
 Windows
!"Unsupported Http_Verb - please add"
!\$`L
!\$pL
!_hEvent
!_isTaskDefinitionDirty
!_progressCallback
!_resumeCallback
!_spAgentInstallControl
!_suspendCallback
!0H!t$ I
!IsInteractive()
!swapWith.active
!T$(3
!t$pE3
!This program cannot be run in DOS mode.
" *t,
"$*."6B0"@"D*Ld^"bBpB""x*
"2"42>"<,B*P"b"**p
"b$d"
"D$2&5
"h$l&E
"Z(N*x
"z}!M
#f9.H
$`"J&J
$2&"("*
$d&j$-
$H9\$Xt
$J"L(L*
$T ,&r"N
$t&8$
$Z&^$m
%d.%02d
%d.%d.%d.%d
%hs!%p: 
%hs(%d) tid(%x) %08X %ws
%hs(%u)\%hs!%p: 
%I32u 
%I64u 
%s = %s, catalogId = %s
%s = %s, catalogId = %s, flightId  = %s, CV = %hs
%s Install Time = %d/%d/%d, Stub Duration required = %ld day(s)
%s is already pinned to the Start screen.
%s is already pinned to the taskbar.
%s Last User Interactiviy By User %s, Time = %d/%d/%d, Stub Duration required = %ld day(s)
%s not found, CV = %hs
%s.%s.%s
%s: %s
%s: (fallback) %s
%s:%s:%s
%s\%s.dat
%s_%d_%s_%s
%ssa.%s.dat
%systemroot%\System32\usoclient.exe
%Title%
%TMP%
%ws: %ws (%hs) [%hs] %ws
%ws: %ws (0x%08x) (%hs) [%hs] %ws
%Y-%m-%dT%H:%M:%S%z
&alternateId=
&bigIds=
&catalogId=%s
&languages=
&moId=%s&oemId=%s&scmId=%s
&N*D,
&R$8&R$L"L(L*Q
&value=
&WinStoreAuth::GetDeviceTicketWithBroker
( 4ul ) == dwType || ( 1ul ) == dwType
(((HRESULT)(hr)) >= 0)
(((HRESULT)(hr)) >= 0) && "We should always take a reference and never allocate here"
(*?%%
(_^[]
(_installType == InstallType_Install) || (_installType == InstallType_Restore)
(`*N(
(08hp
(A^_^[
(A_A^A]A\_^][
(abortedItems.size() + activeItems) == activeItemCount
(AgileVector<IFulfillmentDataInfo *>::Make(&fulfillmentData))
(caller: %p) 
(D$ f
(D$ H
(D$@f
(D$`f
(D$0f
(D$pf
(D$Pf
(D$pf
(D$Pf
(D$pf
(f*`(
(L$`f
(ppaT && puSize) || (!ppaT && !puSize)
(streamingType != WindowsUpdate::Internal::StreamingType_Undetermined) && (_cbAutoDownloadSize == 0) && ((_streamingType == WindowsUpdate::Internal::StreamingType_Undetermined) || (_streamingType == streamingType))
(t$ H
(t$@f
(t$@H
(t$@I
(t$PH
(t$pI
)D$ A
)D$@3
)D$@A
)D$@L
)D$`f
)D$0f
)D$P3
)D$Pf
)H+(I
)L$0A
)L$PH
)t$ L
)t$@L
)t$pD
)t$PM
)X;$>
*$*&**
*&***&&0
*&*,L&*
*:*4*
*>RDL>*
*2R8L2*
*B2@4
*cv != '\0'
*n,d*
*pszAdditionalQueryParams == L'&'
*t,`0
*tqD;
*V,8.,,
, 0",$0&0(0*,,0.,002,4,6,8
, End Date 
, Threshold:
,,>:@0B2D2H
,|*Z06
,0N(P0R(T
,en,neutral
,f.v0
,f:v<
,r.D,t.
,t*<(
,v*Z.Z&
,Z&Z.N0N2J
.?AU?$default_delete@UData@CheckpointData@@@std@@
.?AUhresult_access_denied@winrt@@
.?AUhresult_canceled@winrt@@
.?AUhresult_changed_state@winrt@@
.?AUhresult_class_not_available@winrt@@
.?AUhresult_class_not_registered@winrt@@
.?AUhresult_error@winrt@@
.?AUhresult_illegal_delegate_assignment@winrt@@
.?AUhresult_illegal_method_call@winrt@@
.?AUhresult_illegal_state_change@winrt@@
.?AUhresult_invalid_argument@winrt@@
.?AUhresult_no_interface@winrt@@
.?AUhresult_not_implemented@winrt@@
.?AUhresult_out_of_bounds@winrt@@
.?AUhresult_wrong_thread@winrt@@
.?AUScanException@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_0337c7579b9a40a5a26d38128dfe699b>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_08179e5cc23d92b51328c80fa2c7c1cb>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_094d6d722165172402369dae7c430b5a>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_0f1cd609838bbb1f5437e306b6a725f3>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_2cfc0c0caa1fcd54fe0f7430694d5bdd>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_394a86526e765f4b1425b80f0271eece>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_5f5906ed5737911b2c75f6c48d41423e>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_7682865e293568c4b69d883ee8654101>@@PEAVInstallQueue2@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_b8b11713172ff6ecf94ac0be1cb5d1c3>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_cf3650008e7ce1059c61befaa444b187>@@@std@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_d85f620be08a66f39adc08fd647ba759>@@@std@@
.?AV_Interruption_exception@details@Concurrency@@
.?AV_System_error@std@@
.?AV<lambda_052e919cc0e5399df76dff3972c0cac1>@@
.?AV<lambda_1204b691136ec6f042fb56879f863d9a>@@
.?AV<lambda_1f87363f860f7398089fe336458b41fa>@@
.?AV<lambda_29c971a97b0583d0c3acfa6fa776a66c>@@
.?AV<lambda_2e3eb5bba24a4fcd0d50e16e73826a3c>@@
.?AV<lambda_2fa3e3d11fb97352afa77a4a13bfb543>@@
.?AV<lambda_5339800e503d9e6ef714f0519b282739>@@
.?AV<lambda_5c8b614548eceed3c9f391342bbe607d>@@
.?AV<lambda_763529b0c7473cbc215a52d189ac9b18>@@
.?AV<lambda_986a4c397041e6d86e8d4c2a3ff49355>@@
.?AV<lambda_b2fb9885807caf4f21683117fabd4d17>@@
.?AV<lambda_d7b6d5c115406de369cd466da008c2dd>@@
.?AV<lambda_e315956e230a115ef883fd023ec6e109>@@
.?AV<lambda_e9753840d0f46debf1e8433a4107c4fe>@@
.?AV<lambda_f25c37099038263181b5186a3fa41b37>@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVbad_cast@std@@
.?AVCAtlException@ATL@@
.?AVexception@std@@
.?AVfilesystem_error@filesystem@std@@
.?AVinvalid_argument@std@@
.?AVinvalid_operation@Concurrency@@
.?AVlogic_error@std@@
.?AVout_of_range@std@@
.?AVResultException@wil@@
.?AVruntime_error@std@@
.?AVsystem_error@std@@
.?AVtask_canceled@Concurrency@@
.?AVtype_info@@
.00cfg
.appx
.catalogItem
.checkpoint
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.d0Z.
.D426m
.data
.data$brc
.data$r$brc
.data$rs$brc
.didat$2
.didat$3
.didat$4
.didat$5
.didat$6
.didat$7
.edata
.gehcont
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.L7Gq&
.N&`$D"t2
.pdata
.rdata
.rdata$brc
.rdata$r
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata
.xdata$x
//ServiceEnvironment/Authentication
//ServiceEnvironment/InstallService
/fE9$vt
/t5I;
/toast
/toast/visual/binding
:"*$*&&(
:/u&H+
::UpdateFrameworks(callerContext, spFrameworkUpdates.Get(), szCV)
::WindowsDuplicateString(storeClientName, &storeClientNameCopy)
::WindowsDuplicateString(storeClientPublisher, &storeClientPublisherCopy)
:@8y]tMH
:^>ZB
:d<j:
:f<j>
:fH%wuc
:jV@6JX
:u{6tI
:w*tD
:W3oqu!
:W3oqu(
:z>*@\>
; charset=utf-8
;] }?
;]0}K
;|$PD
;} }Q
;C(t0
;D$Pt$
;t$`r
??0?$basic_ios@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0?$basic_iostream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@@Z
??0?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@_N@Z
??0?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@_N@Z
??0?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0?$codecvt@GDU_Mbstatet@@@std@@QEAA@_K@Z
??0_Lockit@std@@QEAA@H@Z
??0task_continuation_context@Concurrency@@AEAA@XZ
??1?$basic_ios@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_iostream@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_istream@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_ostream@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$codecvt@GDU_Mbstatet@@@std@@MEAA@XZ
??1_Lockit@std@@QEAA@XZ
??4?$_Yarn@D@std@@QEAAAEAV01@PEBD@Z
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@I@Z
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@J@Z
??Bid@locale@std@@QEAA_KXZ
?__ExceptionPtrAssign@@YAXPEAXPEBX@Z
?__ExceptionPtrCopy@@YAXPEAXPEBX@Z
?__ExceptionPtrCopyException@@YAXPEAXPEBX1@Z
?__ExceptionPtrCreate@@YAXPEAX@Z
?__ExceptionPtrCurrentException@@YAXPEAX@Z
?__ExceptionPtrDestroy@@YAXPEAX@Z
?__ExceptionPtrRethrow@@YAXPEBX@Z
?__ExceptionPtrToBool@@YA_NPEBX@Z
?_Addfac@_Locimp@locale@std@@AEAAXPEAVfacet@23@_K@Z
?_CallInContext@_ContextCallback@details@Concurrency@@QEBAXV?$function@$$A6AXXZ@std@@_N@Z
?_Capture@_ContextCallback@details@Concurrency@@AEAAXXZ
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
?_Fiopen@std@@YAPEAU_iobuf@@PEBGHH@Z
?_Getcat@?$codecvt@GDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?_Getcat@?$ctype@G@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?_Getcat@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?_Gndec@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAPEAGXZ
?_Incref@facet@locale@std@@UEAAXXZ
?_Init@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXXZ
?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z
?_Ipfx@?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA_N_N@Z
?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_LogCancelTask@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_LogScheduleTask@_TaskEventLogger@details@Concurrency@@QEAAX_N@Z
?_LogTaskCompleted@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_LogTaskExecutionCompleted@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_LogWorkItemCompleted@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_LogWorkItemStarted@_TaskEventLogger@details@Concurrency@@QEAAXXZ
?_New_Locimp@_Locimp@locale@std@@CAPEAV123@AEBV123@@Z
?_Osfx@?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAXXZ
?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAPEAGXZ
?_Release_chore@details@Concurrency@@YAXPEAU_Threadpool_chore@12@@Z
?_ReportUnobservedException@details@Concurrency@@YAXXZ
?_Reset@_ContextCallback@details@Concurrency@@AEAAXXZ
?_Rethrow_future_exception@std@@YAXVexception_ptr@1@@Z
?_Schedule_chore@details@Concurrency@@YAHPEAU_Threadpool_chore@12@@Z
?_Syserror_map@std@@YAPEBDH@Z
?_Throw_C_error@std@@YAXH@Z
?_Throw_future_error@std@@YAXAEBVerror_code@1@@Z
?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_Winerror_map@std@@YAHH@Z
?_Xbad_alloc@std@@YAXXZ
?_Xbad_function_call@std@@YAXXZ
?_Xinvalid_argument@std@@YAXPEBD@Z
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
?{u9H
?always_noconv@codecvt_base@std@@QEBA_NXZ
?clear@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAXH_N@Z
?fieldsTemplate=InstallAgent&market=
?flush@?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV12@XZ
?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXH@Z
?get@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@QEBA?AV?$istreambuf_iterator@GU?$char_traits@G@std@@@2@V32@0AEAVios_base@2@AEAHPEAUtm@@PEBG4@Z
?GetCurrentThreadId@platform@details@Concurrency@@YAJXZ
?getloc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEBA?AVlocale@2@XZ
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
?I;?t
?id@?$codecvt@GDU_Mbstatet@@@std@@2V0locale@2@A
?id@?$ctype@G@std@@2V0locale@2@A
?id@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@2V0locale@2@A
?imbue@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAA?AVlocale@2@AEBV32@@Z
?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAXAEBVlocale@2@@Z
?in@?$codecvt@GDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAG3AEAPEAG@Z
?out@?$codecvt@GDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBG1AEAPEBGPEAD3AEAPEAD@Z
?sbumpc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGXZ
?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAPEAV12@PEAG_J@Z
?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAXH_N@Z
?sgetc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGXZ
?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JXZ
?sputc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGG@Z
?sputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAA_JPEBG_J@Z
?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAHXZ
?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAGXZ
?uncaught_exception@std@@YA_NXZ
?uncaught_exceptions@std@@YAHXZ
?unshift@?$codecvt@GDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z
?widen@?$ctype@G@std@@QEBAGD@Z
?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEAG_J@Z
?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEBG_J@Z
@ t"6 m
@*J,J
@.data
@.didat
@.reloc
@@B?*%
@@B@:
@8|$1u
@8|$U
@8|$X
@8|$xt?I
@8=@D'
@80u3H
@8t$@I
@8t$@u=H
@8t$`H
@8t$`u
@8t$a
@8t$mL
@8t$P
@8t$PtWI
@8t$Qt
@8t$X
@8y=tVH
@A^_]
@A^_^
@A^_^[]
@A^_^][
@A^A\_
@A^A]A\_]
@A__^[]
@A__^][
@A_A^_
@A_A^_^[
@A_A^_^]
@A_A^A\
@A_A^A\_[
@A_A^A\_]
@A_A^A\_^
@A_A^A\_^[]
@A_A^A]_^[]
@A_A^A]A\_^[
@A_A^A]A\_^]
@E=K7
@fBv@
@HHXXhn
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWAV
@SUVWAVAWH
@SUVWAVH
@SUVWAWH
@SUVWH
@SUWH
@SVWATAUAVAW
@SVWATAUAVAWH
@SVWATAUAWH
@SVWATAVAWH
@SVWAUAVAWH
@SVWAVAWH
@SVWAVH
@SVWH
@UATAUAVAWH
@USVATAUAVAWH
@USVAVAWH
@USVH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAUAVAWH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWH
[ UVWAVAWH
[ VWAUAVAWH
[%hs(%hs)]
[%hs]
[%hs] Install item: productId = %s, type = %d, state = %hs(%d), percent complete = %d
[\&6m
[End] %s
[Error] %s
[Root]
[Start] %s
[t5.i
[Telemetry]: %hs :: %s
[UWAInstallServiceWorkItem] Waiting for unfinished Work threads to complete before destroying object
[UWAInstallServiceWorkItem] Work threads completed successfully
\$ E3
\$ L9m
\$ UH
\$ UVW
\$ UVWATAUAVAWH
\$ UVWATAWH
\$ UVWAVAWH
\$ UVWH
\$ VWATAVAWH
\$ VWAUH
\$ VWAVH
\$ WH
\$(E3
\$@H+
\$`E3
\$`H9CXt/H
\$`L;
\$0E3
\$0H9|$Ht
\$0I;
\$0u2
\$8D;
\$8E3
\$8H;
\$HH;\$PtWL
\$hM;
\$PD3
\$PE;
\$PE3
\$pE3
\$PH;
\$PMc
\$xE3
\$XE3
\$XH+
\$xL9|$hw
\*P*N
\AgileVector<ContentIdInfo *>::Make(&contentIds)
\b^j\q
\CategoryCache
\InstallServicePlugin.dll
\Microsoft\InstallAgent
\PluginList
\StaticPluginMap
]@L9}8t
]@L9e8t
]_L9eWt
]`D8c
]<(/h
]<Z?$
]GL9}?t
]hH!t$`H
]HH!t$`H
]hH;]pt
]HL9;I
]oD8c
]PD8{
]PD8c
]WD8c
]wL9}
^@8t$P
^XB6I
__C_specific_handler
__current_exception
__current_exception_context
__CxxFrameHandler3
__CxxFrameHandler4
__std_terminate
__std_type_info_compare
__TlgCV__
_Activate()
_AppIdFromUpdate
_Cnd_broadcast
_Cnd_destroy_in_situ
_Cnd_init_in_situ
_Cnd_register_at_thread_exit
_Cnd_unregister_at_thread_exit
_Cnd_wait
_CreateNotificationFromXml
_cRef == 0
_cSuspendRefs != 0
_cSuspendRefs == 0
_CxxThrowException
_DeleteCheckpointByName
_DeleteCheckpointIfRetriesExceeded
_DetermineWUVolumePath
_DisplayNotification(spTNMForUser.Get(), notification.Get())
_DoNormalInstall()
_evtInstallWorkStatusChangedEventToken.value == 0
_FillCheckpointDataFromInstallWorkStatus(status, &data)
_FindInstallItem(parentId.Get(), false, spItem.ReleaseAndGetAddressOf())
_FormatProgressValueForNotification
_GetIsAppAllowedToInstallWithPackageInfoForUserAsync request: packageIdentityName = %s, publisherCertificateName = %s, CV = %hs
_GetLocalDataPath
_GetPackageDetailsFromSinglePackage
_GetPdcActivation()
_H!l$pH
_H!t$@H
_hEvent
_initterm
_initterm_e
_IsFilePathSymlink
_moduleBasePtr != nullptr
_moduleBasePtr == ::Microsoft::WRL::GetModuleBase()
_Mtx_destroy_in_situ
_Mtx_init_in_situ
_Mtx_lock
_Mtx_unlock
_o____lc_codepage_func
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o___stdio_common_vswprintf_s
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__fseeki64
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__localtime64_s
_o__lock_file
_o__mktime64
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__set_errno
_o__ui64tow_s
_o__unlock_file
_o__wcsicmp
_o__wcstoui64
_o__wtoi
_o__wtoi64
_o_abort
_o_ceilf
_o_fclose
_o_fflush
_o_fgetc
_o_fgetpos
_o_fgetwc
_o_fputwc
_o_free
_o_fsetpos
_o_fwrite
_o_isalnum
_o_iswspace
_o_malloc
_o_mbstowcs
_o_mbstowcs_s
_o_rand
_o_realloc
_o_setvbuf
_o_srand
_o_strncpy_s
_o_strtol
_o_terminate
_o_ungetc
_o_ungetwc
_o_wcscat_s
_o_wcscpy_s
_o_wcsftime
_o_wcsncpy_s
_o_wcstok_s
_o_wcstol
_o_wcstombs
_o_wcstombs_s
_o_wcstoul
_OpenCheckpointFile
_OpenCheckpointFile(pszProductId, &pFileData)
_PackagesFromSearchResult
_pAvailability != nullptr
_pPackage != nullptr
_pSku != nullptr
_SetInternalConfigurationFlags
_SetNotificationAction
_SetNotificationTexts
_spDownload->RequestAbort()
_spInstall->RequestAbort()
_spInstallItemMap->First(&spIterator)
_spInstallWork->get_InstallState(&previousState)
_spInstallWork->get_WorkId(workId.GetAddressOf())
_spInstallWork->Resume(false , nullptr , nullptr )
_spNotificationCreator->CreateNotification( spTNMStatics.Get(), pData, !!(dwToastDisplayFlags & FLAG_GROUPED), !!(dwToastDisplayFlags & FLAG_GHOST), cNotificationCount, notification.GetAddressOf())
_spNotificationCreator->CreateNotificationUpdateData(pData, notificationUpdateData.GetAddressOf(), notificationGroup.GetAddressOf(), notificationTag.GetAddressOf())
_streamingType != StreamingType_Undetermined
_streamingType != WindowsUpdate::Internal::StreamingType_Undetermined
_suspendTimer.get() != nullptr
_Thrd_id
_time64
_TlgCV_
_UninstallPackages()
_UpdateFrameworks
_UpdateFrameworksImpl
_UpdateNotification(spTNMForUser.Get(), notificationUpdateData.Get(), notificationGroup.Get(), notificationTag.Get())
_UpdateNotificationHistory(spTNMForUser, pData, &dwToastDisplayFlags, &cNotificationCount)
_uPercentMin == 0
_WriteBlobToFile
_WriteStringDataToFile
_XmlCreateTextNode
_Xtime_get_ticks
` AUAVAWH
` UAVAWH
`.rdata
`2P0Z4
`A^_^[]
`A_A^_^[
`A_A^_^]
`A_A^A\_^[]
`A_A^A]A\_^[
`A_A^A]A\_^]
`R\J^@TP^@T
`ZbZTxR
{ ATAUAWH
{ ATAVAWH
{ AUAVAWH
{ AVH
{268761a2-03f3-40df-8a8b-c3db24145b6b}
{d6d5a677-0872-4ab0-9442-bb792fce85c5}
{OX,*
{T.u>fD9sVt
{V.u0fD9sXu)H
|$ 0t
|$ ATAVAWH
|$ AVH
|$ E3
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$(A^
|$(A_
|$(E3
|$(H;
|$@E3
|$@HcW
|$@Lcg
|$\.u
|$`L9t$ht
|$0A;
|$0A_A^
|$0E3
|$0H;
|$8 u$
|$8E3
|$8H;
|$dE3
|$HH;
|$HH+
|$hI;
|$hL9l$pt
|$PE3
|$pH;
|$pH9
|$pL;
|$pL9
|$pL9t$x
|$pL9t$xt
|$PL9t$Xt
|$PLcg
|$pM;
|$TA8u 
|$XE3
|$xE8|$!
|$xH;
|$XH;
|$XI;
|$XL9
|$xM;
|4b6,8B:
|9fD9Q
|H~.|
}@L9e8t
}_D8g
}`D8g
}0H+}(H
}GL9e?t
}hD+x
}HL9m@t
}o@8w
}oD8g
}oL9m
}PD8g
}WD8g
~ j$N
~vector too long
<*>.@*B4J 
</Task>
<~>V<5
<Task xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">
<toast><visual><binding><text>%Title%</text><progress value="{progressValue}" status="{progressStatus}" /></binding></visual></toast>
=Q.u(
>&t?L
>L<HHD8@6
>P<L4@0J*J
>Z@6B
0.0.0.0
0123456789abcdef
040904B0
08@HP
08@HPX`hpx
08@P^
0A^_]
0A^_^
0A^_^[]
0A^_^][
0A^A]A\_^
0A_A^_
0A_A^_^]
0A_A^A\
0A_A^A\_]
0A_A^A\_^
0A_A^A\_^[]
0A_A^A]_^
0A_A^A]A\]
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0d2j0
0r2B4J6J8J
0Z2X4J,
10.0.22000.1
10.0.22000.1 (WinBuild.160101.0800)
1H+0I
201ef99a-7fa0-444c-9399-19ba84f12a1a
2f4v2
2R:N,
2R4,6
3D$8%x
4 t(^*J
4*N"<*0fTB
4:@*B0D,FnJ
4\6V8
4>.@,1
460*%
4T2N:
62>bBm
6f>*H4LRTRX*Z*\R4
6f8v6}
6L$N N
6N4x85
6V,IW
6Z8V:J2
7510BCA33E0B8441
7518BCA33E06830D
7538BDA33E06830D
7Lci8A
8":*<Q
8\$`t
8\$Pux
8_^[]
8_^][
8|<n>
855E8A7C-ECB4-4CA3-B045-1DFA50104289
8A^_^[
8A_A^_^[]
8A_A^A]A\_^][
8bdH*%
8f:n81
8f<T:D6N4H@~B
8H!0H
8H;t$x
8HJt/
8l:0<
8N6L.@*J$J
8Ymtf@
8YMtf@
9(v H
9\$(|
9\$@t
9\$`vA
9\$0u
9\$Pt
9\$Xu
9\$XuOH
9}wwI
98v H
9D$ uW3
9E ugH
9EOu!H
9N4t\A
9N4t^
9N4tlA
9N4tN
9NTt\A
9NTt^
9NTtlA
9NTtN
9O$t[
9O4t?A
9O4t^
9O4t>
9O4tN
9OTt?A
9OTt^
9OTt>
9OTtN
9T$prRH
9t$PuOH
9WZDNCRFJBMP|9NBLGGH4LS1F
9zPta
A(A;@
A(H9q0t
A,9A(
A]A\]
A]A\_
A^_^[]
A^_^][
A^A\]
A^A\_
A^A\_^]
A^A]_^]
A^A]A\_^[
A_A\_
A_A]_^]
A_A]A\
A_A]A\_]
A_A]A\_^
A_A]A\_^[
A_A^]
A_A^^
A_A^^[]
A_A^_
A_A^_^
A_A^_^[
A_A^_^[]
A_A^_^]
A_A^_^][
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[
A_A^A\_^[]
A_A^A\_^][
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]_^[
A_A^A]_^[]
A_A^A]A\]
A_A^A]A\^[
A_A^A]A\^[]
A_A^A]A\_
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A_A^A]A\_^]H
A_A^A]A\_H
A8_8t
A8H+A0H
A8H9A0
A8w,H
A9,$u
A9}0t H
A9~(v)I
A9~0u
A9~Hv)I
A9~Pu
A94$u
A9u0t H
A9uPt H
AADAuthority
AADResource
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/W
Abort requested for item productId = %s. Ignoring work-status-change event
Abort Requested. Not Proceeding with State : %hs
AbortedInstallation
Aborting update item due to rescan 
Accept:application/json
AccountProviderId
AcquireSRWLockExclusive
AcquireSRWLockShared
AcquiringLicense
Acquisition
Acquisition;
AcquisitionIdentity: %s
AcquisitionInfo
action
action=pinToStart:packageFullNames=
Actions
actions
ActivateInstance(HStringReference(RuntimeClass_Windows_Management_Deployment_Internal_PackageManagerInternal).Get(), &spPackageManager)
ActivatePlugin
activatibleClassId
activationType
Added fulfillment task to work. TaskId: %d, Data: %s
Added to the installed pfn list: 
addend
Adding 'failed due to network' item to Retry list: productId = %s
Adding 'failed due to restart' item to Retry list. 
Adding 'failed due to restart' item to Retry list: productId = %s
Adding 'failed due to user credential issue' (for User SID: %s) item to Retry list: productId = %s
Adding 'failed due to user credential issue' item to Retry list. 
Adding 'network available' item to Retry list. 
Adding 'non-specifc failure' item to Retry list: productId = %s
Adding 'non-specific failure' item to Retry list. 
Adding 'package in use' failed item to Retry list with ForceAppRestart. 
Adding 'package in use' failed item to Retry list with ForceAppRestart: productId = %s
Adding 'package in use' failed item to Retry list. 
Adding 'package in use' failed item to Retry list: productId = %s
AggregatedPackageFullNames
AgileVector<Internal::AppData*>::Make(&spAppVector)
AHA;@
AHL90H
AL9AH
AllContent
AllowAppStoreAutoUpdate
AllowCachedResult
AllowDownloadOnAnyNetwork
AllowedPlatforms
AllowForcedAppRestart
AllowSetForegroundWindow
AllUsers
AlternateIds
AlwaysPromptBeforePurchase
An error occurred while loading app offloading onesetting local cache.
API;%s
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-com-l1-1-1.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-file-l1-2-4.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-wow64-l1-1-0.dll
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-crt-time-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-ham-apphistory-l1-1-0.dll
api-ms-win-ntuser-sysparams-l1-1-0.dll
api-ms-win-rtcore-ntuser-synch-l1-1-0.dll
api-ms-win-rtcore-ntuser-window-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-base-l1-2-0.dll
api-ms-win-security-capability-l1-1-0.dll
api-ms-win-security-cryptoapi-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
api-ms-win-shcore-taskpool-l1-1-0.dll
api-ms-win-shell-namespace-l1-1-0.dll
api-ms-win-shell-shdirectory-l1-1-0.dll
api-ms-win-stateseparation-helpers-l1-1-0.dll
ApiSetQueryApiSetPresence
App Install Time longer than threshold.
App Install Time shorter than threshold.
App is currently used 
App is currently used.
App never Used
App Never Used. 
App offloading kill switch set to disable the feature
App Recently Used 
App Recently Used, Marking preference back to full.
App Recently Used, Not Marking as Stub.
App Used Long Time Ago 
App Used Long Time Ago.
APPARCHIVING
AppCategoryIDs contains '%s'
AppId = %s, WU Installed Flag = %d, OnlineSearch = %d, Interactive = %d, Scope = %d, Client ID = %s
AppId::IdTypeName
AppId::Type %d = %s, catalogId = %s, bundleId = %s, CV = %hs
AppId::Types are not equal. Expected: %d, Actual: %d
AppInfo
applaunch
Applicability result: productId = %s, isApplicable = %s, CV = %hs
Applicability scan returned unrecognized CategoryId: %s
Application
application/json
ApplicationId
ApplicationManagement
Applications
AppUpdate
appxbundle
AppxBundle
Architectures
arguments
arm64
Array
Assert (%s): %s
Assert (%s): Failed
AssertIdTypesAreEqual
ATAVAWH
Attempting to abort item. The slot will be granted to another item currently pending
Attempting to find Plugin
Attempting to register update for User:%s
Attempting to remove %s
AttemptNumber
Attributes change Reported
AUAVAWH
Authenticated catalog access failed, trying anonymous
authority
Authority
authorization
AutoDownload
AutomaticallyDownloadAndInstallUpdateIfFound
AutomaticContentOnly
AutoResumeQueue
Autoupdate not enabled so not unblocking low priority items. Messaged USO that work is complete
Availabilities
Availability not allowed on 
Availability Not allowed on Client %s Version %d
AvailabilityId
availabilityId
AvailabilityId
AxH+ApH
AxH9Ap
b j"a
b;:'y
B]Cannot find subkey: %ws
b`dtb
B8H;B@t
background
BackgroundColor
bad allocation
bad array new length
bad cast
BD.<W_jAZ
Bearer 
BeginAcquireLicense
BeginDownload
BeginFrameworkUpdate
BeginGetFreeEntitlement
BeginGetInstalledContentIds
BeginInstall
BeginScanForUpdates
BeginSearchUpdatePackages
BeginStageUserData
BeginUpdateMetadataPrepare
BHFDDJF
BigId
BlockedOnUser
Blocking low priority items 
Boolean
broken promise
Build Name
BuildLabEx
Bundle expansion failed for
bundledProducts
BundledSkus
BundleId
BX9A4t
Bx9ATt
c AUAVAWH
c AUH
C D8U@u
C\$(I
C++/WinRT version:2.0.201201.7
C9fD9?u1
callContext
CallContext:[%hs] 
callerApplicationId
CallerApplicationId
CallerContext::_getCallerToken
CallerContext::Create
CallerContext::ImpersonateUser
callerModule
callerReturnAddressOffset
Calling _DeleteCheckpointByName with hr %08x
CampaignId
campaignId
CampaignId
CampaignServiceUrl
Cancel
Cancel: productId = %s, CV = %hs
Cancel: productId = %s, CV = %hs, Item not found
Canceled
Canceled Install
Canceling
Canceling update: productId = %s
CancelInstallation
canFulfill
CanFulfillSkuAvailability
Cannot Add fulfillment data to existing work. Creating a separate work item
Cannot add fulfillment task while the work is not waiting for its turn. InstallState: %d
Cannot create Install Work for %s due to product unfulfillable, returning S_OK for compatibility
Cannot create StoreAgentInstallitem ProductId = %s. May not recieve progress on this
Cannot find a fulfillable availability for Sku (%s). Will be ignored for install
Cannot find a WUCategoryId
Cannot Find Matching Packages for Sku (%s). Will be ignored for install
Cannot find PackageFamilyName for IUpdate
Cannot Find the specified sku: %s
Cannot Find Trigger : %ws
Cannot get any user tickets. Using device ticket
Cannot Get Array Item at Index: %Iu
Cannot get the impersonation token for the requested user
Cannot Install %s .Failure Processing FulfillmentData
Cannot preallocate array. Count = %Iu
Cannot update volume path during an ongoing install. InstallState: %d
Capabilities
CapabilityCheck
CatalogDataStore::_LookupForUserWithParent
CatalogDataStore::_ReadCacheFromDisk
CatalogDataStore::LookupForUser
CatalogId
catalogId
CatalogId
CatalogId = %ls:%ls 
catalogItem
CategoryId
categoryId
CategoryId
CategoryIds Count
cb == sizeof(fileData)
cbTotal.Lo64 > 0
ChainedInstallServiceWork::NotifyAttributesChanged
ChainedWork
CHANh
charset
CheckApplicabilityFromBridge
CheckExclusivity
CheckingOut
checkpoint
Checkpoint file create failed: Id = '%s'
Checkpoint file delete failed: Id = '%s'
Checkpoint file open failed: Id = '%s'
Checkpoint file write failed writing Blob: productId = %ws
Checkpoint file write failed: Id = '%s'
Checkpoint Item for ProductId = %s already exists. Not re-adding
CheckpointDataBlob
CheckpointFilename(szCheckpointPath, ARRAYSIZE(szCheckpointPath), pszProductId)
Checkpoints
CheckTokenMembership
CheckTokenMembershipEx
CHH98H
Cleaning up download data for %d IUpdate packages
CleanupInstallOperation
CleanupInstallOperation(data->ProductId(), data->PackageFamilyName())
client
ClientAppId
ClientConditions
clientContext
ClientId
clientid
clientId
CloseHandle
CloseServiceHandle
CloseThreadpoolTimer
CloseThreadpoolWork
CLSIDFromString
CoAddRefServerProcess
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateInstance
CoCreateInstance(__uuidof(InstallServiceUserBroker), nullptr, CLSCTX_LOCAL_SERVER | CLSCTX_ENABLE_CLOAKING | CLSCTX_ENABLE_AAA, IID_PPV_ARGS(&pinToHelper))
CoCreateInstance(__uuidof(UpdateSession), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&spSession))
CoDecrementMTAUsage
CoDisconnectContext
CoGetApartmentType
CoGetCallContext
CoGetInterfaceAndReleaseStream
CoGetMalloc
CoImpersonate Client Failed
CoImpersonateClient
CoIncrementMTAUsage
CoInitializeSecurity
CoMarshalInterface
combase.dll
CompanyName
CompareFileTime
CompareStringOrdinal
Completed
Completed Register operation for %d users
Completed work for item: productId = %s
CompletedNotificationMode
CompletedUnitsForStage
CompleteGetAuthTickets
CompleteGetSlsURL
CompleteInstallOperation
CompleteInstallOperation(data->ProductId(), data->PackageFamilyName(), hr)
CompleteInstallOperationRequest
CompletePostCampaignData
CompletePurchaseOrder
Completion notification to clients failed
Conditions
Conflicting Operation Result. Something is not quite right. Extended error code returned success for ORC:%d
Conflicting Operation Result. Something is not quite right. Update results returned success for ORC:%d
ConnectedAccountProvider
ConstrainedImpersonateLoggedOnUser::GenerateImpersonationToken
ConstrainedImpersonateLoggedOnUser::Impersonate
ConstrainedImpersonateLoggedOnUser::Revert
consumers
content
contentId
ContentId
ContentId: %s, cached FulfillmentData: %s
ContentId: %s, non-cached FulfillmentData: %s
Content-Type
Convert String Sid to PSID failed, skipping app usage check for this sid.
Convert String Sid to PSID failed, skipping,
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertStringSidToSidW
ConvertToWide
ConvertWideToUtf8
CoRegisterClassObject
CoReleaseMarshalData
CoReleaseServerProcess
CoResumeClassObjects
CoRevertToSelf
CoRevokeClassObject
CorrelationVector
CorrelationVector::ValidateAndCreate
CoSetProxyBlanket
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not find a fulfillable sku. Install not allowed
Could not find Product Document for productId = %s, CV = %hs. This was an M$ search. Retrying with AAD tokens
Could not get file information for symlink check: Id = '%s'
Could not get handle to file for symlink check: Id = '%s'
Couldn't extract PackageFamilyName from fulfillment data.
Couldn't find product title for productId = %s. Not showing any notifications
couldnt get volume name
CountFailureTypesForSmartRetry
CoWaitForMultipleHandles
CpH!:H
create_directories
CreateCatalogItemFromLocalData
CreateCheckpointFile
created
Created task progress for %s with parentbundleId %s
CreateDirectoryW
CreateDiscInstallObjects(_spFulfillmentDataVec.at(0).Get(), _volumePath.Get(), spSession.GetAddressOf(), &packages)
CreateEventExW
CreateEventW
CreateFileMappingW
CreateFileW
CreateInstallServiceWork
CreateInstallServiceWorkFromBridge
CreateInstallWork
CreateItemsValue(pszProductId, pszSkuId, pszAvailabilityId, pszCampaignId, &spItems)
CreateMutexExW
CreateMutexW
CreateOptions
CreateOrderBody(nullptr, callerApplicationId, &spCreateOrderBody)
CreateOrderBody(strOrderId.GetRawBuffer(nullptr), callerApplicationId, &spPurchasedOrderBody)
CreatePurchaseOrder
CreateSemaphoreExW
CreateStreamOnHGlobal
CreateTasksAndSetTriggersForSmartRetry
CreateThreadpoolTimer
CreateThreadpoolWork
CreateWellKnownSid
Creating Queue Item for the work
Creating UWA Work
Creating Work
CreationTimestamp
CryptAcquireContextW
CryptCreateHash
CryptDestroyHash
CryptGetHashParam
CryptHashData
CryptReleaseContext
Current Ordering (%ld) matches requested ordering for productId = %s
Current state is Idle. Invalid request for switch state
Current state is not Pending. Invalid request for switch state
Current state is Pending. Invalid request for switch state
currentContextId
currentContextMessage
currentContextName
currentIndex < swapWith.currentIndex
Currently Active. Switching state requires aborting the work
currentWorkIndex
CV should be passed in for interactive action
cvIn != 0
D$ @2
D$ 0u
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
d$ E3
D$ E3
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
D$(H;
D$(H9\$0t2H
D$(H9t$ t
D$(Lk
D$@8Amt[@2
D$@E3
D$@fD9d$pt3H
D$@H!l$8H!l$0H
D$@H!L$8H!L$0H
D$@H!t$8H!t$0H
D$@H;
D$@L!|$8L!|$0H
D$@L;
D$`9p
D$`E3
D$`H;
D$`H;Xx
D$`H+
D$`I;
D$`I9
d$|Ic
D$}@"
D$0E3
D$0H;
D$0H+
D$0I+
D$0tu
D$8E3
D$8H;
D$8H+
D$8I;
D$eD8v
D$h9+u
D$hA;
D$hE;
D$HE3
D$hE3
D$HE3
D$hE3
D$hfE
D$hH;
D$HH;
D$hH;
D$hH;|$XtJE3
D$hH9
D$p@8
D$P@8|$Tu
d$pA!4$I
D$pD8~
D$PE3
D$pE3
D$PE3
D$pE3
d$pE3
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$pE3
D$PH;
D$pH;
D$pH;t$Pt2L
D$PH=
D$PH9C
D$PHcH
D$PI;
D$PI;GX
D$pL;
D$pL9t$XH
D$qE3
D$tE3
D$TE3
D$tE8|$ 
D$x;(r
D$x;8r
D$x@8w
D$X9G4
d$XD8
D$XE3
D$xE8|$(
D$xH;
D$XH;
D$xH+
D$xH+D$pH
D$XH9C
D$xH9D$pu
D$xIc
D$xL)l$xfE;
D$XL;
d$xL;
D$XL;
D$xL9
D$xL9m
D$yE8|$
D(D*~
D:P(A;;FA;;;SY)(A;;FA;;;BA)(A;;GRGX;;;SU)
D;\$P
D;|$`
D;|$hr
D;|$X
D;|$x
D;}(r
D;}Hr
D;~(r
D;A(t2H
D;d$P
D;d$xL
D;e(r
D;gHr
D;l$x
D;mhL
D;t$<
D;t$P
D+D$x
D+D$xD
D26onecore\internal\sdk\inc\wil/wrlevent.h
D8$0u
D8|$ 
D8|$`
D8|$0
D8|$0teA
D8|$1
D8|$P
D8|$pt
D8|$q
D8|$tt
D8=!h"
D8>t&H
D8d$`H
D8d$a
D8d$pL
D8d$PtgL
D8d$qH
D8d$qL
D8d$rH
D8d$RtO
D8d$Uu
D8d$V
D8d$x
D8e@ubH
D8ext*H
D8l$ 
D8l$pu
D8nrt
D8t$(u
D8t$`t,H
D8t$a
D8t$bt
D8t$h
D8t$p
D8t$Pu
D8t$TtlL9
D8t$U
D9|$`t
D9|$hvV
D9|$tL
D9}8t-H
D9}8u
D9}8udH
D9~(v53
D9=W7
D9d$ 
D9d$T
D9e@u
D9e@u-H
D9extdH
D9l$(
D9l$<
D9t$\
D9t$`
D9t$8|
D9t$p
D9t$xL
D9ugu
Daily
DailyRetryOverride
data.hrError == ((HRESULT)0L) || data.installState == InstallState_Error || data.installState == InstallState_Downloading
data.installState < InstallState_LowBattery || data.installState > InstallState_WifiRequired
data.installState >= InstallState_Pending && data.installState <= InstallState_RestoringData
data.installType >= InstallType_Install && data.installType <= InstallType_Disc
data.uLastDownloadSuccessPercentComplete <= 100
data.uPercentComplete <= 100
data->StoreInContentIdCache(search->second.GetRawBuffer(nullptr))
day(s), 
DaysOfMonth
DaysOfWeek
dD;t$|
DebugBreak
DecodePointer
DelayLoadFailureHook
DELETE
DeleteCheckpoint
DeleteCriticalSection
DeleteFileW
Dependencies
dependencies->First(dependenciesIterator.GetAddressOf())
dependenciesIterator->get_Current(uri.GetAddressOf())
dependenciesVector.As(&_dependencies)
dependenciesVector->Append(uriCopy.Get())
dependencyName
dependencyOperationName
dependencyOperationVersion
dependencyType
deploymentOperation != nullptr
DetectAndReportQueueHang
Device Info: 
Device Uptime: 
DeviceClass
DeviceFamily = %s, Version = %llu
dF*"*4*84<
directory_entry::status
directory_iterator::directory_iterator
directory_iterator::operator++
DisableStoreApps
DisableStoreOriginatedApps
DisableThreadLibraryCalls
DiscDownloadJob::DoDiscDownloadJob
DispatchMessageW
DisplaySkuAvailabilities
DllCanUnloadNow
DllGetActivationFactory
DllGetClassObject
Doing per app offline scan to get app specific update collection. categoryId = %s, cv = %hs
Download and Install Failed at Stage: %hs
Download and Install Failed at Stage: %hs. Clearing cached updatecollection and trying again
Download Complete. The item was paused.
Download is complete, but no bytes have been downloaded!
Download running, not restarting
Download stopped (paused): PauseReasonCode = %d
Download stopped (transient error)
Downloading
Downloading %s
Downloading Automatic Contents for Streaming Install
Downloading with IsForced = TRUE
DownloadingProduct
DownloadingUserData
DownloadPackages
DownloadProgress::Invoke
DownloadSize
DownloadUrl
ds&L9
dTfvh,fU
Duplicate String detected in List:%s. Ignoring and moving on.
DuplicateToken
DuplicateTokenEx
DuplicateTokenEx failed
DZJ,L NhP
E;~(r
E;~Hr
E;f(r
E;gHr
E_BOUNDS
E_FAIL
E_INVALIDARG
E_NOT_SUFFICIENT_BUFFER
E_NOT_VALID_STATE
E_UNEXPECTED
E7H!E?
E8|$ A
E8|$ H
E8|$!
E8|$(L
E8|$)
E8|$8
E8|$8I
E8|$9
E8|$9I
E8<0u
E8H!U
E8w!A
E9gHvl3
eappx
eappxbundle
eHD+`
eHD9e@tEH
EHL9 I
Either AppId or Json object must be passed
Empty CategoryId list. Did not scan. Returning empty packages
Empty or Invalid Correlation Vector cvIn = %s. Using CV from queue cv = %s
EnableAppOffloading
enabled
EnableDailyRetry
EnabledFeatureUsage
EncodePointer
EndAcquireLicense
EndDownload
EndFrameworkUpdate
EndGetFreeEntitlement
EndGetInstalledContentIds
endIndex <= collectedLen
EndInstall
EndScanForUpdates
EndSearchUpdatePackages
EndStageUserData
EndUpdateMetadataPrepare
EnsureDownloadAsync initialization failed: productId = %s
EnsureDownloadAsync request: productId = %s, CV = %s
EnterCriticalSection
Entering pause without an E_ABORT error
Entitlement result: %s
entryId
en-US
EPx}A
err == 0
Error
ERROR
Error
Error attempting to create a dependency item.  Proceeding to the next 
Error attempting to create a sub item tracker.  Proceeding to the next 
Error attempting to fetch tickets. catalog access will be anonymous
Error attempting to process update work 
Error attempting to scan for updates 
Error Code
Error connecting installservice. Sleeping for 500ms before retrying (Attempt = %d)
Error creating work item
Error disconnecting InstallService
Error disconnecting previous progress token
Error encountered attempting to create install service work
Error encountered during install 
Error Getting a valid PFN from the Update. PFN %s
Error getting recommended retry interval
Error Install
Error Loading Checkpoint Data Blob for %ws
Error Loading Handler : %ls
Error scheduling queue evalution 
Error while processing one of the requested ids. %s = %s
Error: AppId::Types are not equal. Expected: %d, Actual: %d.
ErrorAppIdTypesAreNotEqual
ErrorCode
errorCode
ErrorCode
ErrorCount
errorLocation
ErrorMessage
errorMessage
errorMethod
ErrorName
errorName
errorType
EvaluateQueueImpl hitting error 
Evaluating Bundled Product for: %s -> %s
Evaluating whether low priority items have left queue
EventActivityIdControl
EventData
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
ew|>&=4_
ex.code()
EX9G$tV
EX9G4t6
Ex9GDtV
Ex9GTt6
Ex9GTta
Ex9GTtq
Exception
Exception raised during exclusive lock release call back 
Exception raised during lock release
Exception thrown while finding items to retry. 
Exception thrown while switching state for items to retry
Exception while Adding FulfillmentData for existing work item
Exception while processing installed packages. 
Exception while processing installed pfns: 
Exception while processing stubification 
Exception while querying stub state of the package 
Exception while reading cache from disk.
Exception while retrieving device uptime 
Exception while retrieving last stub time, proceed with the stub check
Exception while retrieving package install time
Exception while setting prefrence from full to stub 
Exception while setting prefrence from stub to full 
ExcludedContentIdsForUpdate
ExcludedErrorCodeList
exclusive_lock_with_release_callback<class InstallQueue2,void (__cdecl InstallQueue2::*)(void) noexcept>::~exclusive_lock_with_release_callback
Exclusivity check failed for sku %s.
ExclusivityFailed
ExclusivityStatus
exists
Exit due to too many evaluation requests under existing thread: 
ExpandEnvironmentStringsForUserW
ExperienceIds
ExtendedCampaignId
ExtendedErrorCode
extendedErrorCode
ExtendedHResult
ext-ms-win-appmodel-deploymentvolumes-l1-1-0
ext-ms-win-appmodel-deploymentvolumes-l1-1-1
ext-ms-win-appmodel-deploymentvolumes-l1-1-1.dll
ext-ms-win-devmgmt-policy-l1-1-0
ext-ms-win-devmgmt-policy-l1-1-0.dll
ext-ms-win-devmgmt-policy-l1-1-1
ext-ms-win-devmgmt-policy-l1-1-2
ext-ms-win-devmgmt-policy-l1-1-3
ext-ms-win-ntuser-windowstation-l1-1-0
ext-ms-win-ntuser-windowstation-l1-1-0.dll
ext-ms-win-ntuser-windowstation-l1-1-1
ext-ms-win-ntuser-windowstation-l1-1-2
ext-ms-win-rtcore-ntuser-cursor-l1-1-0.dll
ext-ms-win-security-srp-l1-1-0
ext-ms-win-security-srp-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-shell32-shellfolders-l1-1-0.dll
ext-ms-win-shell-shell32-l1-2-0.dll
ext-ms-win-shell-shell32-l1-2-1.dll
ext-ms-win-sysmain-pfapi-l1-1-0.dll
ext-ms-win-wer-reporting-l1-1-0.dll
F L9}Ht
F"R$`&J X
F$L9}Ht
f$N&Q
f:x,zJ|
f;EoA
f;EwA
f;UgA
F`I+FXH
f+S5I
f9,^u
f9,Au
f9,Bu
f9,Gu
f9,Pu
f9,su
f9\$Xu
f9{2u/f9{0u)
f9<Au
f9<Bt
f9<Bu
f9<Cu
f9<Fu
f9<Hu
f9<Pu
f9<pu
f9<Qu
f9<Vu
f9<Xu
f9<Zu
f94Bt
f94Cu
f94Hu
f94Ju
f94Pu
f94Qu
f94Wu
f94Xu
f94Yu
f9t$`t
fA9(t
fA9,@u
fA9,Qu
fA9<@u
fA9<Au
fA9<Fu
fA9<Ru
fA9<wu
fA90t
fA94@u
fA94Qu
fA94Xu
fA9Z*v$A
Fail to schedule the chore!
Failed
Failed attempting to assess applicability of queue item: 
Failed to add %s to list of installed ContentIDs
Failed to cache fulfillmentdata. key = %s, data = %s
Failed to complete install operation for %s : 0x%08X
Failed to connect to %ws with proxy %ws
Failed to connect to %ws with proxy config url %ws
Failed to create mutex
Failed to find AppListEntry for %ws
Failed to Find fulfillmentdata in the response json for contentId %s
Failed to find packages to download
Failed to find the package installed.
Failed to find updates to download or install, assuming this is ok!
Failed to get elevated (linked) token. Ignoring...
Failed to get elevated token. Ignoring...
Failed to get install time 
Failed to get packages to register for user: %ws
Failed to load app offloading onesetting local cache.
Failed To load Checkpoint for productId = %s
Failed to load resource string %d
Failed to obtain user tickets.
Failed to pause Item productId = %s to reorder it. Ignoring it for reorder request
Failed to query app usage 
Failed to query app usage, Not Marking as Stub.
Failed to read MDM policy on this device: PolicyManager_GetPolicyIntPresent API not present.
Failed to recover work from checkpoint. 
Failed to Register for UserSid: %ws
Failed to remove %s
Failed to retrieve token elevation type
Failed to update work properties due to incorrect state
Failed Writing To ContentId Cache. ContentId = %s
Failed: storeId = %s, campaignId = %s, useDeviceId = %s, CV = %hs
FailedRetry
FailFast
Failure detected
Failure to Load Initial UpdateCollection. Online Scan will be required
Failure trying to query queued product. index = %d
failureCount
failureId
FailureReportMetadata_
failureType
FallbackError
false
fB9<{u
fB9<Bu
fB9<Hu
fB94Bu
fB94Iu
fB94xu
fD9 t
fD9#t
fD9$^u
fD9$~u
fD9$Au
fD9$Bt
fD9$Cu
fD9$Hu
fD9$Ju
fD9$Qu
fD9$Xu
fD9$xu
fD9%7"
fD9%B&
fD9%b8
fD9%Y
fD9)H
fD9*u
fD9,Bt
fD9,Cu
fD9,Fu
fD9,Hu
fD9,Nu
fD9,Ou
fD9,Pu
fD9,Wu
fD9,Xu
fD9,xu
fD9.thI;
fD9<~u
fD9<At
fD9<Bt
fD9<Hu
fD9<Ju
fD9<Nu
fD9<Pu
fD9<su
fD9<xu
fD9<Xu
fD9<Zu
fD9=;
fD9=1
fD9=eq
fD9=q9
fD9>u$H
fD90t
fD94At
fD94Au
fD94B
fD94Bt
fD94Hu
fD94Jt
fD94Ju
fD94Nu
fD94Ou
fD94Pu
fD94pu
fD94Pu
fD94Qu
fD94Xu
fD94Yu
fD95'
fD95%
fD95C
fD95m
fD95o
fD98t
fD9lE
fD9u8u
fE9$@t
fE9$At
fE9$Pu
fE9,~u
fE9,Au
fE9,Fu
fE9,Lu
fE9,Pu
fE9<@t
fE9<At
fE94Au
fE9DU
featureBaseVersion
FeatureError
featureId
featureStage
FeatureUsage
FeatureVariantUsage
featureVersion
FetchImageFromNetworkAndSaveToFile
FetchUriResponse
FetchUriResponseWithAuthTicket
FetchUriResponseWithAuthTicket(pCV, pUri, nullptr, nullptr, Http_Verb::Get, nullptr , nullptr , jsonResponse)
fF9$qu
fF9,Fu
fF9,xu
fF9<Ku
fF9<pu
fF9<Wu
fF94zu
fffffff
FfHvF
fG9,Du
fG9,Fu
fG9,Gu
fH%w[
fieldsTemplate
FileDescription
fileName
FileTimeToLocalFileTime
FileTimeToSystemTime
FileVersion
finalOrderIt->second > currentOrder
FindAvailability
FindAvailabilityOrNull
FindClose
FindFirstFileExW
FindFirstFileW
FindFulfillmentData
FindFulfillmentInfo
FindNextFileW
FindPackageVolumeByName FAILED for "%s"
FindSkuAvailability
FindStringOrdinal
Finished executing work but a retry was requested for item: productId = %s
Finished updating frameworks, cv = %hs
FlightBundleId
FlushViewOfFile
Fonecore\internal\sdk\inc\wil\opensource\wil\result_macros.h
ForceAppRestartValues NOT set in MDM or invalid.
ForceRestart
ForceUseOfNonRemovableStorage
ForeachInstallWorkFactory
ForegroundColor
FormatMessageA
FormatMessageW
Found a dormant item still reporting an active state. ProductId = %s
Found already queued item for update. productId = %s
Found Bundle Sku: %s
Found Existing work for categoryId = %s. Adding to existing work
Found framework update, categoryId = %s, cv = %hs
Found framework update. 
Found matching Packages for Sku (%s). Install Allowed
Found restricted token. Auto elevating since consent already given
Found restricted token. Getting elevated token with admin consent.
Found update for categoryId = %s
Found update in applicability check.
FreeLibrary
FreeLibraryWhenCallbackReturns
FRHNJ=
FRoGetAgileReference
Fulfill
Fulfillable Product: ProductId = %s, SkuId = %s, AvailabilityId = %s, PackageId = %s
Fulfillment Data is not present so install cannot proceed.  Abandoning file since it cannot recover
FulfillmentComplete
FulfillmentData
fulfillmentData
fulfillmentId
FulfillmentId
FulfillmentInitiate
fulfillmentPluginId
FulfillmentPluginId
FulfillmentType
Function
function
Function
future
future already retrieved
fwkUpdData->frameworks.Get()
Fx8Xxt$8\$Bu
FxH+FpH
FXH9GXu
g_GlobalQueueCounter == 0
G0L9e
GenerateCacheKey(pAppId, szMoId, pszFieldsTemplate, szCacheKey, ARRAYSIZE(szCacheKey))
GenerateCacheKey(spAppId.Get(), szMoId, pszFieldsTemplate, szCacheKey, ARRAYSIZE(szCacheKey))
GenerateExcludedErrorCodeListForRetry(errorCodes.Get())
GenerateIfMissingCVAndExecute
GenerateNetworkErrorCodeListForRetry(networkErrorCodes.Get())
generic
GenuD
get_Flags(&pinFlags)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_ApplicationModel_TaskbarPinnableSurface).Get(), &pinnableSurfaceFactory)
GetActivationFactory(HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory)
GetAuthTicket
GetAuthTicketForCampaignData
GetCachedFulFillmentDataFromPackageFamilyNameOrEmpty
GetCollectionType(pPackages, &_collectionType)
GetCurrentDirectoryW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDownloadExtendedHResult
GetDownloadExtendedHResult(spJob, &hrExtended)
GetElevatedTokenForCurrentUserWithAdminConsent(hUserToken, wil::out_param(elevatedTokenWithAdminConsent))
GetEnvironmentVariableW
GetExclusivityId(L"MOID", szMoId, ARRAYSIZE(szMoId))
GetExclusivityIds(pszAdditionalQueryParamsEnd, cchAdditionalQueryParams, pszMoId)
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandleEx
GetFileSizeEx
GetForceAppRestartPolicy
GetFulfillmentData
GetFulfillmentData::<lambda_7438a1a8c57838e643ae4f6f19af9c80>::operator ()
GetGroupForNotificationType
GetInstalledContentIdsNoCV
GetInstalledPfns
GetInstallExtendedErrorCode
GetInstallExtendedErrorCode(pPackages, spResult.Get(), &hrExtended)
GetLanguageAndRegion(language.GetAddressOf(), region.GetAddressOf())
GetLastError
GetLastError()
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleExA
GetModuleHandleExW
GetModuleHandleW
GetMonitorInfoW
GetMultipleProductDatas
GetMultipleProductDatas::<lambda_c5c0bc94c692bf7acfabf1fff2903340>::operator ()
GetPackageDetails
GetPackageFamilyName
GetPackageFullName
GetPackageFullNameForUpdate
GetPackageFullNameFromToken
GetPackageFullNamesFromCollection(_updateCollection.get(), _pkgFullNames.GetAddressOf())
GetPackageFullNamesFromCollection::<lambda_c43f4da8a5b96204a63efaf38b571540>::operator ()
GetPersistedRegistryLocationW
GetPolicyInt
GetProcAddress
GetProcessHeap
GetProcessWindowStation
GetProductData
GetProductDataPlural( user, pIds, catalogId, idType, identityData.Get(), nullptr, pCV, &spResult)
GetProxyVectorFromList
GetRestrictedErrorInfo
GetSidSubAuthority
GetSidSubAuthorityCount
GetSlsDataChunk
GetSlsDataChunk(CLSCTX_LOCAL_SERVER, &pszJSON, &lastModified, &marker)
GetSLSUri
GetSLSUri(slsBulkHydrate, rgAnnotationValues, ARRAYSIZE(rgAnnotationValues), szAdditionalQueryParams, pCV, &spUri)
GetStoreAppsAreDisabled
GetSystemInfo
GetSystemTime
GetSystemTimeAsFileTime
GetTempFileNameW
GetTempPath2W
GetThreadDesktop
GetTickCount
GetTickCount64
GetTokenInformation
GetUpdateSearcher
GetUriResponseWithAuthTicket(user, spUri.Get(), pCV, nullptr , acquistionIdentity, false , &spJsonObject)
GetUriResponseWithAuthTicket(user, spUri.Get(), pCV, pAppId->CatalogIdHStr().Get(), acquistionIdentity, false , &spJsonObject)
GetUriResponseWithAuthTicket(user, spUri.Get(), pCV, pAppId->CatalogIdHStr().Get(), acquistionIdentity, true , &spJsonObject)
GetUserObjectInformationW
GetVersionExA
GetVolumeNameForVolumeMountPointW
gfffffffI
GlobalFree
GP@8u
Group policy has blocked the running and updating of all Windows Store apps on this device.
GroupResponseCount
Gt$@E;
H L;`
H SUVWAVH
h UAVAWH
h VWAVH
H!\$ L
H!\$0H
H!\$8H
H!\$8H!\$0H
H!] H
H!](L
H!_(H!_0H!_8H!_@I
H!_@3
H!_HH
H!_PH!_XH!_`
H!|$`L
H!|$x
H!}@H
H!}hH
H!EXH
H!khH
H!kpH
H!L$@3
H!T$ 
H!t$@
H!T$0
H!T$8H
H!t$pL
H!t$x
H!u(H
H!uX3
H;.t$H
H;.t&H
H;;t$H
H;\$ t*H
H;\$(t*H
H;\$0t*H
H;\$8t*H
H;\$8u
H;_`t.H
H;{ H
H;|$ht.3
H;+t$H
H;+t2H
H;3t$H
H;3t%H
H;7t&H
H;7t-H
H;D$@
H;D$Pu
H;E0t
H;EPt
H;G0t
H;GPt
H;O@M
H;Q0s
H;S(v
H;sht)H
H;spt)H
H;t$@t*H
H;t$Xt7H
H;t$XtLH
H;Vht
H;W H
h_^[]
H_^[]
h_^[]
H_^[]
h_^[]
H_^[]
h_^][
H_^][
H`FZ@^N@P)
H+/H+
H+P0H
H+Q0H
H0H+H(H
H9;t*H
H9\$@t
H9\$`t
H9\$8t
H9\$ht
H9\$pt
H9\$Pt
H9\$xt
H9\$Xt
H9](t
H9]/t
H9]@t
H9]0t
H9]0tWH
H9]7t
H9]Gt
H9]PtWH
H9^(tDL9f(t
H9|$@
H9|$`t
H9|$0t
H9|$8
H9|$ht
H9|$Ht
H9|$ht
H9|$P
H9|$Pt
H9|$pt
H9|$Xt
H9H s
H9i0t#H
H9L$X
H9L$xt
H9oHsKH
H9qht
H9S@t;H
H9T$@H
H9t$`
H9t$`t
H9t$0t
H9t$ht
H9t$pt
H9t$xt
H9t$Xt
H9u8t
H9x s
H9x@D
HA_A^_^[]
hA_A^_^[]
HA_A^_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
hA_A^A]A\_^][
HA_A^A]A\_^][
HamQueryPackageUsageInfo
HasFrameworkUpdates
Hc|$t
HcD$$H
HcD$hD
HcL$ H
HdJjHa
Headers
HeadlessApp
HeapAlloc
HeapFree
Height
HHH91H
HHL91H
HnJ&L
HResult
hresult
HResult
hresult
HResult
HResult = %d, Identifer = %ls
HRESULT(initScope)
HRESULT_FROM_WIN32(1317L)
HRESULT_FROM_WIN32(GetLastError())
hrInstallAllowed
Http %s response: %s
http:
HttpGetFile
HttpRequest::Open
HttpRequest::Send
HttpRequest::SetBody
HttpRequest::SetOptions
HttpRequestFailure
HttpResponse::Body
HttpResponse::StatusCode
HttpResponse::WriteResponseToFile
HTTPS
https
https://
https://displaycatalog.mp.microsoft.com/v7.0/products/
https://displaycatalog.mp.microsoft.com/v7.0/products/{productId}/{skuId}?market={marketCode}&languages={language}&fieldsTemplate={fieldsTemplate}
https://displaycatalog.mp.microsoft.com/v7.0/products/lookup
https://displaycatalog.mp.microsoft.com/v7.0/products/lookup?alternateId={idType}&value={productId}&market={marketCode}&languages={language}&fieldsTemplate={fieldsTemplate}
https://displaycatalog.mp.microsoft.com/v7/products?bigIds={productIdsWithCommas}&market={marketCode}&languages={languages}&fieldsTemplate={fieldsTemplate}
https://login.microsoft.com
https://login.windows.local
https://login.windows.net/common
https://onestore.microsoft.com
https://purchase.mp.microsoft.com
https://purchase.mp.microsoft.com/v7.0/users/{userId}/orders/{orderId}
https://storeedgefd.dsx.mp.microsoft.com/v7.0/oemdiscovery?oemId={oemId}&scmId={scmId}&phoneManufacturerName={phoneManufacturerName}&smBiosManufacturerName={smBiosManufacturerName}&phoneDeviceModel={phoneDeviceModel}&smBiosDm={smBiosDm}
https://storeedgefd.dsx.mp.microsoft.com/v8.0/campaigns?type=install&market={marketCode}&cid={cid}&ocid={ocid}&productId={productId}&skuid={skuid}&callercontext={clientid}&caller=InstallAgent
hUserToken != 0 || (flags & 0x00008000)
HXH+HPH
I;} s
I;~ s
I;4$t&I
I;4$u
I_E_C
I_RpcBindingInqLocalClientPID
I_RpcExceptionFilter
I|$ H
I9>t&I
I9>tFM9.t
I9Khs
IAPDC: Deactivated PDC activation for ProductID: %s
IAPDC: InstallAgentPdcActivation destroyed with ProductId: %s
IAPDC: InstallAgentPdcActivation::Update called for ProductId: %s at TickCount: %I64u
IAPDC: Pdcv2Activation activated for ProductId: %s at TickCount: %I64u
IAPDC: Pdcv2ActivationClientActivate failed for ProductId: %s
Idle item is in pending state so setting resume flags for when eventually restarted 
IdType
idType
idType >= AppId::Type_ProductId && idType <= AppId::Type_CategoryId
idType >= Type_ProductId && idType <= Type_CategoryId
If catalog lookup is skipped, we need fulfillmentdata to be provided!
Ignoring Duplicate ProductId in BundledSku list: %s
Ignoring from queue ordering as product is not applicable for user. 
Ignoring licensing failure for Update, content id: %s
Ignoring Product Id %s from the Bundle. Error parsing product document
Ignoring productId = %s from queue ordering. Not in pending queue or active
Ignoring productId = %s from queue ordering. Not valid for user sid = %s
Ignoring Resume request for active item. ProductId = %s, CV = %hs
Ignoring Resume request for item thats already pending. ProductId = %s, CV = %hs
Ignoring Scheduling request productId = %s. Already in pending queue
Ignoring Scheduling request productId = %s. Not ready
Ignoring Scheduling request productId = %s. Still Active
Ignoring work scheduling request. Work Already scheduled with productId = %s, Requested productId = %s
IIDFromString
Image download initialization failed: %s
Image download request: %s
ImagePurpose
images
Images
ImpersonateLoggedOnUser
ImpersonateSelf
Impersonating Client instead of user. User not logged in. SID: %s
Inconsistent state data size in wnf_query
Indeterminate
indowsUpdate.Internal.InstallControl
INFREQUENTLYUSEDAPPINDAYS
INFREQUENTLYUSEDAPPINDAYS = %s, MINIMUMDEVICEUPTIMEINMINUTES = %s, STUBIFICATIONTASKFREQUENCYINDAYS = %s, ISAPPARCHIVINGENABLED = %s
initialization failed: 
initialization failed: %s
initialization failed: %s = %s, catalogId = %s, flightId  = %s, CV = %hs
initialization failed: %s = %s, CV = %hs
initialization failed: %s = %s, interactive = %s, catalogId = %s, CV = %hs
initialization failed: %s = (vector), checkApplicability = %hs, CV = %hs
initialization failed: %s, %s
initialization failed: addAsPaused = %s, CV = %hs
initialization failed: CV = %hs
initialization failed: interactive = %s, CV = %hs, clientid = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
initialization failed: productId = %s, CV = %hs
initialization failed: productId = %s, skuId = %s, availabilityId = %s, CV = %hs
initialization failed: productId = %s, skuId = %s, catalogId = %s, CV = %hs
initialization failed: productId = %s, skuId = %s, catalogId = %s, CV = %hs, clientId = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
initialization failed: productid = %s, skuid = %s, catalogId = %s, flightId = %s, CV = %hs, repair = %s, userInteractive = %s, allowDownloadOnAnyNetwork = %s, forceUseOfNonRemovableStorage = %s, allowForcedAppRestart = %s, launchAfterInstall = %s
initialization failed: productId = %s, skuId = %s, CV = %hs
initialization failed:: packageFullName = %s, clientId = %s, allowForcedAppRestart = %s, forceUseOfNonRemovableStorage = %s, repair = %s, CV = %hs
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeSListHead
InitializeSRWLock
Initializing
Initializing InstallService
Initializing InstallService for shared
InitOnceBeginInitialize
InitOnceComplete
InitOnceExecuteOnce
innerValue <= ToastNotificationMode_NoToast
innerValue >= ToastNotificationMode_Default
InProgressNotificationMode
Install
Install Date:
Install item added: productId = %s
Install request: productId = %s. Item already found queued up. Updating with VolumePath = %s, Flags = %x
Install Service
Install Starting. Client Sid: %s, User Sid: %s
INSTALL_AGENT_E_MAX_INSTALL_HIERARCHY_REACHED
InstallAgent
InstallAgent_GetAvailableUpdates( user, spView.Get(), applicability, userInteractive, allowCachedResults, nullptr, cvStr, &spResult)
InstallAgent_GetAvailableUpdates(nullptr , spCategoryIds.Get(), true , false , false , nullptr , szCV, &spFilteredIds)
InstallAgent_GetInstallControl(&spAgent)
InstallAgent_Install( nullptr, _spFulfillmentDataInfo.Get(), WindowsUpdate::Internal::InstallType_Restore, 0, identityData.Get(), nullptr, nullptr , szCV, &spInstallItem)
InstallAgent_Install( user, _spFulfillmentDataInfo.Get(), InstallTypeFromAppInstallType(installType), installAgentFlags, identityData.Get(), volumePath, callerApplicationId, szCV, &spInstallItem)
InstallAgent_InstallProducts( user, spProductFulfillmentDataView.Get(), Internal::InstallTypeFromAppInstallType(installType), installAgentFlags, identityData.Get(), volumePath, callerApplicationId, szCV, &spView)
InstallAgent_InstallUpdates( user, fulfillmentData.Get(), IAF_INTERACTIVE | IAF_PAUSE_AFTER_DOWNLOAD | (addAsPaused ? IAF_ADD_PAUSED : 0) | IAF_AUTOMATICALLY_DOWNLOAD_UPDATE_IF_FOUND, true , HStringReference(callerApplicationId).Get(), szCV, &spInstallItems)
InstallAgent_InstallUpdates( user, fulfillmentData.Get(), Utils::GetUpdateFlags(fInteractive, false , false , allowForcedAppRestart, automaticallyDownloadAndInstallUpdateIfFound, fInteractive ), false , clientId , szCV, &spInstallItems)
InstallAgent_InstallWithOfflineUpdateScan( user, _spFulfillmentDataInfo.Get(), InstallTypeFromAppInstallType(installType), installAgentFlags, identityData.Get(), volumePath, callerApplicationId, szCV, &spInstallItem)
InstallAgent-AllowGPOForBlockingStore
InstallAgentPdcActivation::_Activate
InstallAgentPdcActivation::_Deactivate
InstallAgentPdcActivation::~InstallAgentPdcActivation
InstallAgentPdcActivation::Update
InstallAgentQueueHanged
InstallForAllUsers
Installing
Installing with IsForced = TRUE
InstallItemData::_ShowNotification
InstallOperationRequest
InstallPackages
InstallQueue::_AppendWuCategoryIdIfNotRunning
InstallQueue::_BackgroundRetry
InstallQueue::_ExecuteInstallItem
InstallQueue::_ExecuteInstallItems
InstallQueue::_FindActiveInstallItemToPause
InstallQueue::_FindOrInsertInstallItem
InstallQueue::_FindPendingItem
InstallQueue::_GetNextPendingItem
InstallQueue::_InsertInstallItem
InstallQueue::_InstallUpdates
InstallQueue::_IsItemReadyToExecute
InstallQueue::_LoadCheckpointsWorker
InstallQueue::_LoadItemsFromCheckpoints
InstallQueue::_LoadRegistryHandlers
InstallQueue::_ProcessQueueForSmartRetry
InstallQueue::_RemoveInstallItem
InstallQueue::_ResumeQueue
InstallQueue::_ScheduleInstallItem
InstallQueue::_SuspendQueue
InstallQueue::Cancel
InstallQueue::GetActiveInstallsForUser
InstallQueue::GetSingleton
InstallQueue::InstallProductsForUser
InstallQueue::MoveToFrontOfDownloadQueue
InstallQueue::Pause
InstallQueue::RaiseProgressEvent
InstallQueue::Resume
InstallQueue::ResumeWithFlags
InstallQueue::s_ExecuteInstallItem
InstallQueue::SetQueueOrderForUser
InstallQueue::SmartRetry
InstallQueue2::_AbortUpdateFromQueue
InstallQueue2::_EnqueueWork
InstallQueue2::_EvaluateQueueImpl
InstallQueue2::_FindNextPendingItem
InstallQueue2::_LoadCheckpointsWorker
InstallQueue2::_LoadRegistryHandlers
InstallQueue2::_ScheduleQueueEvaluation
InstallQueue2::_SwitchState
InstallQueue2::BlockLowPriorityWorkItems
InstallQueue2::Cancel
InstallQueue2::CreateScanForAllUpdatesWork
InstallQueue2::CreateScanForUpdatesWork
InstallQueue2::CreateWork
InstallQueue2::CreateWorkForCatalogItem
InstallQueue2::FlushEventQueue
InstallQueue2::IsWorkCompleted
InstallQueue2::MoveToFrontOfDownloadQueue
InstallQueue2::NotifyAttributesChanged
InstallQueue2::NotifyBlockedOnDependencies
InstallQueue2::NotifyBlockedOnSystem
InstallQueue2::NotifyCanceled
InstallQueue2::NotifyCheckpointChanged
InstallQueue2::NotifyCompleted
InstallQueue2::NotifyError
InstallQueue2::NotifyIdle
InstallQueue2::NotifyPriorityChanged
InstallQueue2::NotifyWorkProgress
InstallQueue2::NotifyWorkSubTaskProgress
InstallQueue2::Resume
InstallQueue2::ResumeWithFlags
InstallQueue2::SetQueueOrderForUser
InstallQueue2::SmartRetry
InstallQueue2::UnblockLowPriorityWorkItems
InstallQueue2::UpdateWorkProperties
InstallService
InstallService COM Caller SID: %s
InstallService InProc Caller. Current Thread not impersonating. Using current process (LocalSystem)
InstallService InProc Caller. Using current thread impersonation token SID: %s
InstallService not Connected. Attempting to reconnect
InstallService Shutting down
InstallService.dll
InstallService.pdb
InstallService::ServiceStarted
InstallService::ServiceStopped
InstallServiceModule::GetActivationFactory
InstallServiceModule::GetClassObject
InstallServiceModule::InstallServiceModule
InstallServiceMutableState
InstallServiceStubification
InstallServiceTaskHelpers::CreateAppInUseForceRestartTaskIfNecessary
InstallServiceTaskHelpers::EnableSmartRetryTriggerFromHResult
InstallServiceUserBroker::PinToDesktop
InstallServiceUserBroker::PinToShell
InstallServiceUserBroker::PinToShell::<lambda_b8b11713172ff6ecf94ac0be1cb5d1c3>::operator ()
InstallServiceUserBroker::PinToStart
InstallServiceUserBroker::PinToTaskbar
installState >= WindowsUpdate::Internal::InstallState_Pending && installState <= WindowsUpdate::Internal::InstallState_RestoringData
InstallType
IntentPackageFullName
InterlockedFlushSList
InterlockedPushEntrySList
InternalFailureSummary
InternalName
InternalProperty_GetStringValue
InternetConnectionState
Interrupting Item productId = %s. Item would no longer be active after reordering.
Intiating Scan as UserSid = %s, cv = %hs
invalid array<T, N> subscript
Invalid BigId %s. Ignoring
Invalid checkpoint data: type = %u, state = %u, pct = %u, dloadpct = %u, cv = %hs, hresult = 0x%08x
Invalid CV: %hs
Invalid enum value!
Invalid FulfillmentData. No ProductId
invalid hash bucket count
Invalid identity data: %s
Invalid json string, missing Products key 
invalid map<K, T> key
Invalid return from  _LookupForUserWithParent
Invalid SmartRetryTriggerType
invalid stoi argument
invalid string position
invalid vector subscript
Invalid/old checkpoint file: Id = '%s'
Invisible
Is WorkCompleted 
ISAPPARCHIVINGENABLED
IsApplicability
IsApplicableForUserFromBridge
IsBundle
isCompanionApp
IsDebuggerPresent
isDefered
IsDiscInstall
isDisplayed
IsErrorPropagationEnabled
isExclusivityFailed
IsInstalled=%c AND AppCategoryIDs contains '%s'
IsInstalled=0 AND AppCategoryIDs contains '%s'
IsInstalled=1 AND AppCategoryIDs contains '%s'
IsInstallServicePlugin
IsInteractive
IsMandatory
IsOnline
IsPIRequired
isPIRequired
IsPIREQUIRED_FIELD
isPlugin
IsProcessorFeaturePresent
IsRemediation
IsRestore
IsStoreBlockedByPolicy initialization failed: %s, %s
isSystemVol != 0
IsUpdate
IsUpdate()
IsUpdateProperties
IsUserRetry
isVisibleInAppList
IsWow64Process
IsWow64Process2
it1 != _activeItems.end()
Item = %ls 
Item = %ls, InstallState = %d 
Item execution canceled
Item execution complete 
Item found in unexpected install state while attempting to resume. ProductId = %s, CV = %hs
Item has transitioned to idle 
Item inserted into the queue. Attempting to create progresstrackers
Item is already being worked on so not adjusting the queue
Item is blocked on system 
Item not being started due to main package being in the queue.
Item productId = %s, in transient error state : %hs, (HR=0x%.8x). Reporting state as error without releasing slot
Item queued for abort no longer requires it
Item requested for cancel not found in the queue. Possibly it just completed. Silently returning.
Item requested user restart in an invalid state. item: productId = %s
Item switch to pending unsuccessful 
Item was canceled but work did not return E_ABORT for item: productId = %s
Item was paused but work did not return E_ABORT for item: productId = %s
item: productId = %s, that just finished execution wasn't found in the active items list
items
Items to retry
J r"@$@&
j R"R$e
j" $&&((
j"r R$6
j,p@r
J<P>"
J09yDtWH
J9\$Pt
JBHnBdZH\tZ
JdL,N
JFJHJJJ
JHJJ 
Json_Parse(pszJSON, &spJsonObject)
JTk_S/
JW_jAZ
JZPNRj@HT
K SVWH
k VWAVH
K0;D$p@
K0H9{
kernel32.dll
kernelbase.dll
KEYW`
KHH99H
KHL91H
L!|$h
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
L$ H;
L$ H+
L$ SUVWH
L$ SVWATAUAVAW
L$ SVWATAUAVAWH
L$ SVWAVH
L$ SVWH
L$ UVWATAUAVAWH
L$ UWATAUAVH
l$ VWATAUAWH
L$ VWATAVAWH
l$ VWATAVAWH
L$ VWATAVAWH
l$ VWATAVAWH
L$ VWATAVAWH
L$ VWAUAVAWH
l$ VWAVH
l$ WH
L$(@8
L$(E3
L$(H;
L$(H+
L$@ H
L$@@H
L$@9\$@u
L$@9L$ t
L$@9L$H
L$@E3
l$@E3
L$@fD
L$@H;
L$@H+
L$@H3
L$@I+
L$`D;
L$`E3
L$`H;
L$`H+
L$`H3
L$`Ic
L$`L9u
L$`xfM
L$0@85n
l$0E3
L$0E3
L$0fD
L$0H;
L$0H3
L$8@8
L$8D9L$8t
L$8E3
L$8H3
L$hE3
L$hH;
L$HH;
L$hH;
L$HH;
L$hH+
L$HH3
L$hH3
L$HH3
L$hH3
L$hH9H
l$HHcD$|I;
L$P H
L$P L
L$P@H
L$pE;
L$PE3
L$pE3
L$PE3
l$PfD
L$pH;
L$PH;
L$pH+
L$PH+
L$pH+
L$PH3
L$pH3
L$PH3
L$PL;
L$pL9u
L$rA;
l$TH9|$Ht
l$V& (
L$xE3
L$XE3
L$xH;
L$XH3
L$xH3
L$xHk
L$xI;
L$XL+
l$XL9l$`t
L;|$ptnI
L;|$xt0H
L;7t%H
L;G8u
L;T$H
L;t$Ht*H
L;t$X
L;t$Xt
L9&u>L
L9?unH
L9\$@t
L9` s
L9{Hu
L9|$ t
L9|$(t
L9|$@t
L9|$0t
L9|$h
L9|$Pt
L9|$x
L9|$X
L9|$x
L9|$X
L9|$Xt
L9|$xt*L
L9|$xu
L9}?t
L9}8t
L9}Ht
L9}Hu'
L9}Ot
L9}wt
L9>uT
L90u$H
L96u?H
L97uDL
L97ujI
L9d$ t
L9d$(t
L9d$@t
L9d$`t
L9d$0t
L9d$8t
L9d$Ht
L9d$ht
L9d$Ht
L9d$ht
L9d$Ht
L9d$ht
L9d$Ht
L9d$ht
L9d$Ht
L9d$Pt
L9d$pt
L9d$Pt
L9d$pt
L9d$Pt
L9d$pt
L9d$xt
L9d$Xt
L9d$xt
L9d$Xt
L9e?t
L9eHt
L9eOt
L9eot
L9eOt
L9ePt
L9eWt
L9ewt
L9eWt
L9ewt
L9eXt
L9ext
L9i(r
L9l$ t
L9l$@
L9l$@t
L9l$`
L9l$`t
L9l$0t
L9l$8
L9l$ht
L9l$Ht
L9l$Pt
L9l$pt
L9l$Pt
L9l$pt
L9l$Pt
L9l$xt
L9l$Xt
L9mOt
L9mot
L9mWt
L9mwt
L9O@t
L9t$`t
L9t$8u.L
L9t$h
L9t$ht
L9t$huQH
L9t$P
L9t$p
L9t$pt
L9t$X
L9t$Xt
L9u t
L9u0t-
L9u8t
L9uht
L9u'wJH
L9uxt
L9w t$H
L9whu
L9x@t
L9x0r
language
languages
Last success time = %s, Duration required = %ld day(s)
Last Successful stub check seems to be in the future. Not Executing check again. Last Success Time: 
LastModifiedTimestamp
latencyMs
launch
Launch Url: %s
Launch was not successful for ProductId: %s!
LaunchAfterInstall
LCMapStringEx
LeaveCriticalSection
LegacyWindowsPhoneProductId
LegacyWindowsPhoneSkuId
LegacyWindowsStoreProductId
LegacyXapPackageFamilyName
LegalCopyright
length
length > 0
li->Deactivate()
License could not be acquired with the client token and user (SID: %s) isnt logged on
LicensingData
Line Number
lineNumber
list too long
Listener
ListPrice
LoadCursorW
Loaded Listener : %s for Complete Events
Loaded Listener : %s for Progress Events
Loaded listener for completed events. 
Loaded listener for progress events. 
LoadLibraryW
LoadStringW
Local\SM0:%lu:%lu:%hs
LocalAlloc
LocalFree
LocalizedProperties
Lock Screen Not Active, skipping 'package in use'. 
Lock Screen Not Active, skipping 'package in use': productId = %s
LogHr
LogMessage
LogNt
LogSimpleMessage
LogTelemetryEvent
Looking for the next item to start
LowBattery
LowPriority
lstd::exception: %hs
LvdZf
M H1E
M H9M(
M#u0H
M;>t&I
M;f s
M;G`u
M@H9M
M@H9u
M0H9M
M9/t<
M94$t2I
M9B0M
M9nxu
M9t$pu?H
M9t$xu?H
mainPackageFamilyName
MainPackageFamilyNameForDlc
MakeAbsoluteSD
MakeAlternateIdUri
MakeAlternateIdUri(pAppId, szMoId, pszFieldsTemplate, pCV, &spUri)
MakeAndInitialize<Internal::AppData>(&spApp, this, user, pAppId, nullptr , pCV)
MakeBulkHydrateUri
MakePurchaseOrderUri(nullptr, pCV, &spUri)
MakePurchaseOrderUri(strOrderId.GetRawBuffer(nullptr), pCV, &spUri)
map/set too long
mapIt1 != mapIt2
mapIt1->second != mapIt2->second
MapViewOfFile
market
Market
marketCode
MarketProperties
MaxAttemptCountBackQueueRetry
MaxAttemptCountScheduledRetry
MaxConcurrentQueueItems
MaxDaysToRetryBeforeAbandon
MaxDownloadSizeInBytes
MaxElapsedTicksAllowedWithoutUpdate
MaximumGroupLatencyMs
MaxRetriesBeforeAbandon
mbi_ssl
MBI_SSL
MDM policy has blocked the running and updating of all Windows Store apps on this device.
MDPurchase
MDv7AlternateIdLookup
MDv7BulkProductDetails
MDv7ProductDetails
MDv7PurchaseOrder
memcmp
memcpy
memmove
memset
MerchandizingTags
Message
message
Message
message
Message
message
Messaged USO that work is complete
Messages
Microsoft
Microsoft Corporation
Microsoft Enhanced RSA and AES Cryptographic Provider
Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy
Microsoft.Windows.StoreAgent.Telemetry
Microsoft.Windows.Wil.FeatureLogging
Microsoft.WindowsStore_8wekyb3d8bbwe
Microsoft.WindowsStore_8wekyb3d8bbwe!App
Microsoft.Xbox.WinHttp
Microsoft\Windows\InstallService
MicrosoftTelemetryAssertTriggeredUM
Microsoft-Windows-Install-Agent
Microsoft-Windows-Store/Operational
minATL$__a
minATL$__f
minATL$__m
minATL$__r
minATL$__z
MINIMUMDEVICEUPTIMEINMINUTES
MinimumGroupLatencyMs
MinLatencyMs
MinVersion
Missing a few Products. Requested %d Got back %d
Missing CategoryId from AppData for Product %s. Ignoring it
misssingCV
mO|FW
mobilling.microsoft.com
MOBillingAuthenticationDomain
mode <= 3
mode >= 0
module
Module Name
ModuleLoaded
Monthly
MoveDownloadToTop: productId = %s, CV = %s
MoveToFrontOfDownloadQueue
MoveToFrontOfDownloadQueue_Interactive
MoveToFrontOfDownloadQueue_NonInteractive
Moving item to the top of pending
Moving item to top of pending queue. Will be picked up after slot becomes empty. 
Moving stub-to-full update to the front of download queue
MPR.dll
MSAHW1.0=
MS-CallerApplicationId
MS-CV
Msg:[%ws] 
MsgWaitForMultipleObjects
msvcp_win.dll
ms-windows-store://DownloadsAndUpdates
ms-windows-store://pdp/?productId=%1&skuid=%2&catalogid=%3
MultiByteToWideChar
MutableProperties
mXL;u
mXL9l$Xt
N $"R&N
N L9}Ht
N N"N$N&
N$N&N
n$ptn@l
N(L9}Ht
N09A<s
N8PZNI
ncalrpc
Ndr64AsyncClientCall
Need at least 1 Localized Property Object
NetworkDebounce
NetworkErrorCodeList
neutral
NewState
NHL9!H
NJZLN
No AAD ticket found for private catalog
No applicable packages. Already installed
No Application node had AppListEntry.
No Change in TaskDefinition. Not updating
No CV passed in - generating a new one.
No DSMA token found
No Fulfillable sku found. Trying to choose a sku with BundledSkus
No item found that we can pause. The queue might be in a flux.
No key in at least one kvp in serialized dictionary: %ws
No key/value sep char (%wc) in at least one kvp in serialized dictionary: %ws
No other elements of similar priority found. Inserting default priority item either at the back of the list or before the first low priority item
No other elements of similar priority found. Inserting high priority item at the top of the list
No other elements of similar priority found. Inserting low priority item at the back of the list
No package found during installation, and the product wasn't already installed
No package found during remediation
No queued Work found for WorkId: %s
No sku specified. Trying to find a fulfillable sku
no state
No tickets found for the current user.
No tickets found for the explicitly-specified account.
No update found in applicability check.
No updates found. 
No Updates Found. Checked %d categoryIds
No user signed into the store.
No value in at least one kvp in serialized dictionary: %ws
Not able to create install service work due to product unfulfillable
Not adding 'package in use' failed item (productId = %s) for User SID: %s - Not logged in
Not adding 'package in use' failed item. User is not logged in. 
Not interrupting Item productId = %s. Request requires item to still hold an active slot
Not retrying item due to too many previous retries (%d): productId = %s
Not retrying item due to too many previous retries. 
Not showing any notifications, couldn't find product title for 
Not showing pin to start button, not able to find for 
Not using a config url
Nothing can be started.  Pending: %d, Active: %d, Suspends: %d
Nothing to register for User: %s. Skipping Install
Notification of attributes changed
Notification serialiazer Mutex
Notification shown for 
Notification shown for PFN: %s, SkuId: %s, CatalogId: %s, NotificationType: %d, Progress if needed: %d
Notification that plug in blocked on dependiencies.  Converting to Chained task
NotificationCreator::_CreateSimpleTextNotification
NotificationCreator::_CreateUpdatableNotificationWithProgress
NotificationCreator::_FormatString
NotificationCreator::_LoadFormattedString
NotificationCreator::_SetNotificationsLaunchAndPinButtons
NotificationCreator::CreateNotification
NotificationCreator::CreateNotificationUpdateData
NotificationHelper::_DisplayNotification
NotificationHelper::_UpdateNotification
NotificationHelper::_UpdateNotificationHistory
NotificationHelper::RuntimeClassInitialize
NotificationHelper::ShowNotification
NotReady
NSf;L$ H
ntdll.dll
ntelA
NtQuerySystemInformation
NtQueryWnfStateData
NtUpdateWnfStateData
NTV"b%
Number
O:PSG:BUD:(A;;0xB;;;AC)(A;;0xB;;;WD)S:(ML;;NX;;;LW)
o\$PH
O0;D$@
Object
oD$ f
OemDiscovery
OEMDiscoveryCall
OEMID
oemId
OemId
OemIdentification
oL$0f
OldLogMessage
OldMessages
OLEAUT32.dll
One of the bundles failed in work creation
onecore\base\appmodel\common\guid.cpp
onecore\base\appmodel\common\registrykey.cpp
onecore\base\appmodel\packageacquisitioninfo\packageacquisitioninfo.cpp
onecore\internal\admin\inc\appmodel\packagemanager\ideploymentoperation.hpp
onecore\internal\com\inc\comservicehelper.h
onecore\internal\com\inc\winrt\WindowsCollectionsP.h
onecore\internal\onecore\priv_sdk\inc\ConstrainedImpersonationUtil.h
onecore\internal\sdk\inc\wil/resource.h
onecore\internal\sdk\inc\wil/Staging.h
onecore\internal\sdk\inc\wil\opensource/wil/resource.h
onecore\internal\sdk\inc\wil\opensource/wil/winrt.h
onecore\internal\sdk\inc\wil\opensource/wil/wrl.h
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\token_helpers.h
onecore\internal\sdk\inc\wil\opensource\wil\wrl.h
onecore\internal\shell\inc\SHRegHelpers.h
onecore\shell\lib\calleridentity\calleridentity.cpp
onecoreuap\enduser\winstore\auth\lib\winstoreauth.cpp
onecoreuap\enduser\winstore\auth\lib\winstoreauthstatics.cpp
onecoreuap\enduser\winstore\installservice\lib\appdata.cpp
onecoreuap\enduser\winstore\installservice\lib\appinstallcontrol.cpp
onecoreuap\enduser\winstore\installservice\lib\appinstallitem.cpp
onecoreuap\enduser\winstore\installservice\lib\AppInstallItem.h
onecoreuap\enduser\winstore\installservice\lib\appinstalloptions.cpp
onecoreuap\enduser\winstore\installservice\lib\AppInstallOptions.h
onecoreuap\enduser\winstore\installservice\lib\appoffloadsettings.cpp
onecoreuap\enduser\winstore\installservice\lib\appxhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\BufferHelpers.h
onecoreuap\enduser\winstore\installservice\lib\callercontext.cpp
onecoreuap\enduser\winstore\installservice\lib\CallerContext.h
onecoreuap\enduser\winstore\installservice\lib\checkpoint.cpp
onecoreuap\enduser\winstore\installservice\lib\CollectionHelpers.h
onecoreuap\enduser\winstore\installservice\lib\ComHelpers.h
onecoreuap\enduser\winstore\installservice\lib\CorrelationVector.h
onecoreuap\enduser\winstore\installservice\lib\discinstall.cpp
onecoreuap\enduser\winstore\installservice\lib\fulfillmentdata.cpp
onecoreuap\enduser\winstore\installservice\lib\httphelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\installagenthelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\installagentpdcmanager.cpp
onecoreuap\enduser\winstore\installservice\lib\installcontrol.cpp
onecoreuap\enduser\winstore\installservice\lib\installitem.cpp
onecoreuap\enduser\winstore\installservice\lib\InstallItem.h
onecoreuap\enduser\winstore\installservice\lib\installqueue.cpp
onecoreuap\enduser\winstore\installservice\lib\InstallServiceModule.h
onecoreuap\enduser\winstore\installservice\lib\JsonParser.h
onecoreuap\enduser\winstore\installservice\lib\notificationcreator.cpp
onecoreuap\enduser\winstore\installservice\lib\notificationhelper.cpp
onecoreuap\enduser\winstore\installservice\lib\productdocumenthelper.cpp
onecoreuap\enduser\winstore\installservice\lib\progress.h
onecoreuap\enduser\winstore\installservice\lib\purchase.cpp
onecoreuap\enduser\winstore\installservice\lib\RegHelpers.h
onecoreuap\enduser\winstore\installservice\lib\settings.cpp
onecoreuap\enduser\winstore\installservice\lib\shellhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\sls.cpp
onecoreuap\enduser\winstore\installservice\lib\storeappinfo.cpp
onecoreuap\enduser\winstore\installservice\lib\StoreAppInfoPriv.h
onecoreuap\enduser\winstore\installservice\lib\stringhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\stringhelpers.h
onecoreuap\enduser\winstore\installservice\lib\taskhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\TaskHelpers.h
onecoreuap\enduser\winstore\installservice\lib\telemetry.cpp
onecoreuap\enduser\winstore\installservice\lib\TimeHelpers.h
onecoreuap\enduser\winstore\installservice\lib\tokenhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\TokenHelpers.h
onecoreuap\enduser\winstore\installservice\lib\userhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\utils.cpp
onecoreuap\enduser\winstore\installservice\lib\uwainstallwork.cpp
onecoreuap\enduser\winstore\installservice\lib\UWAInstallWork.h
onecoreuap\enduser\winstore\installservice\lib\UWAInstallWorkFactory.h
onecoreuap\enduser\winstore\installservice\lib\wuhelpers.cpp
onecoreuap\enduser\winstore\installservice\lib\wuhelpers.h
onecoreuap\enduser\winstore\installservice\libqueue2\catalogdatastore.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\chainedinstallservicework.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\commontelemetry.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\installitemforqueue2.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\InstallItemForQueue2.h
onecoreuap\enduser\winstore\installservice\libqueue2\installqueue2.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\pluginhelpers.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\productdocument2helper.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\stubs.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\Utils.h
onecoreuap\enduser\winstore\installservice\libqueue2\uwainstallworkbridge.cpp
onecoreuap\enduser\winstore\installservice\libqueue2\windows.internal.installservice.control.installservicecontrol.cpp
onecoreuap\enduser\winstore\installservice\svc\logging.cpp
onecoreuap\enduser\winstore\installservice\svc\svcmain.cpp
onecoreuap\enduser\winstore\servicescommon\lib\httpforservices.cpp
onecoreuap\internal\base\inc\UserAwareCallerIdentity.h
onecoreuap\internal\shell\inc\holographicsession.h
OneSetting values: 
OneStoreAuthenticationDomain
OneStoreAuthenticationPolicy
Only admins are allowed to install for all users. cv = %ws
OPCO 
OpenProcess
OpenProcessToken
OpenSCManagerW
OpenSemaphoreW
OpenServiceW
OpenThreadToken
operationName
OperationName
operationName
OperationName
operationName
OperationType
orderAdditionalMetadata
orderId
OrderManagement
orderState
organizations
OriginalFilename
originatingContextId
originatingContextMessage
originatingContextName
originCallerModule
originCallerReturnAddressOffset
originFile
originLineNumber
originModule
originName
OSRevision
OSVersion
oT$@f
OTHER
Other
Other elements of similar priority found.  Adding to back of those elements
OutgoingServiceRequestSummary
OutputDebugStringW
p AWH
p Urg.
p WATAUAVAWH
p WAVAWH
p!Wp)
p"X\O
p#Y0&
p#Y2|
p&J(J*&
p(Wx.
p*]05
p*_:X
p*_ze
p:[>3
p:_0#
p;^r;
p[Up@
p[UvC'
p[Xx)
p`[\`
p{Yp4
p+WV]
p0:|W
P0@'D
p0\Z-
P0R&P
p2Qv}
P2x.h
p3_~4
p3QXI
p8S\F/
p9Wzc
pa\P@?
PA^_^
PA^_^[]
pA^_^[]
PA^_^[]
pA^_^[]
PA_A\_^[
PA_A\_^]
pA_A^_^[
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^_^]
pA_A^_^]
PA_A^A\_^[]
pA_A^A\_^[]
pA_A^A\_^][
PA_A^A]A\_^[
pA_A^A]A\_^[
PA_A^A]A\_^[
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Package did not contain any application entries.
Package Name: %s. "Pin to Start" button appended.
Package not installed. 
Package not installed: %s
PackageDownloadUris
packagedServices
PackageFamilyName
packageFamilyName
PackageFamilyName
packageFamilyName != nullptr
PackageFamilyName = %ls, cv = %ls, HRESULT = 0x%08x
PackageFamilyName: %s, type: %d, ContentId: %s
PackageFamilyNameFromFullName
packageFormat
PackageFormat
PackageFullName
packageFullName
PackageId
PackageIdentityName
packageIdentityName
PackageNameAndPublisherIdFromFamilyName
PackageRank
packageRelativeAppIds
Packages
ParentBundleId
PartA_PrivTags
PartB_Ms.Qos.OutgoingServiceRequest
PartB_Ms.Telemetry.Error
PathCchAddExtension
PathCchAppend
PathCchCombine
PathCchRemoveExtension
PathCchRemoveFileSpec
PathCchStripToRoot
PathFileExistsW
PathFindFileNameW
PathYetAnotherMakeUniqueName
Pause: productId = %s, CV = %hs
Paused
Paused Install
Paused or LowPri items moved to front and resumed 
PauseInstallation
PauseOperation for productId = %ls, CV = %s
PauseStoreUpdates
Pausing
Pausing existing update. Will be restarted after a new scan. productId = %s
pb\xT
pb]|s
pbRvr
pBXr>
pBXV<
pc]2b&
pContext
pcU>>
pcZ|R
PD*H*T*l
pData->pInstallItem
pData->pInstallQueue
Pdcv2ActivationClientActivate
Pdcv2ActivationClientDeactivate
pdr|p\f
PeekMessageW
Pending
percentMax <= 100
pExtendedResult->get_ExtendedErrorCode(hrExtended)
PFamN
PfIuUptimeStatsGet
PFN = %ls , SkuId = %ls, CatalogId = %ls, NotificationType = %ls, Progress if needed = %d
PFN4P
phoneDeviceModel
phoneManufacturerName
pHT<m
pInstallItems->get_Size(&cApps)
PinToDesktop(aumid.GetRawBuffer(nullptr))
PinToDesktopAfterInstall
PinToStart for %s unsuccessful.
PinToStart(HStringReference(packageFamilyName).Get(), appListEntry.Get())
PinToStartAfterInstall
PinToTaskbar for %ws unsuccessful.
PinToTaskbar(HStringReference(packageFamilyName).Get(), aumid.Get(), appListEntry.Get())
PinToTaskbarAfterInstall
pJsonObject->GetNamedArray(HStringReference(L"Products").Get(), &spProducts)
pJsonObject->GetNamedObject(HStringReference(L"Product").Get(), &spProduct)
pjSt=
pjTxM
pJY6L>
pjZ8k
pk[\ 
pK^ZR
pK_x8
pKPV!
PlatformDependencies
PlatformDependencyXmlBlob
platformDependencyXmlBlob
PlatformName
pLcIXL
Plugin activation failed, it is possibly removed from the system but continues to stay in the plugin list in registry. 
PluginHelpers::ActivatePlugin
PluginHelpers::GetAllPlugIns
PluginId
PluginId = %ls, HResult = 0x%08x, Message = %ls
PluginLastStage
PluginTelemetryData
pObj->QueryInterface(IID_PPV_ARGS(&spInternalConfiguration))
PolicyManager_FreeStringValue
PolicyManager_GetPolicyInt
PolicyManager_GetPolicyString
Popped productId = %s from Pending Queue.
pOrder->GetNamedString(HStringReference(L"orderId").Get(), strOrderId.GetAddressOf())
Post Cancel Cleanup Complete
PostBoot
PostCampaignData
PostQuitMessage
PowerClearRequest
PowerSetRequest
pPackages->get_Count(&cUpdates)
pProductData->GetNamedArray(HStringReference(L"DisplaySkuAvailabilities").Get(), &spSkuArray)
pPRt{7
ppXr/7 
pQZ0}
pR]z:
PreviousHResult
PreviousInstallState
PrevState
Prevstate
Price
PrimaryWebAccountId
priority
Priority = %d
Proceed with Stub Check. Duration since last check is long enough.
process
Process Name
ProcessIdToSessionId
Processing work 
Product
Product = %ls is interactive. Marking Dependency productId = %ls as interactive too
Product data cache hit: %s
Product data not found for 
Product data not found for %s = %s
Product is not fulfillable due to missing WuCategoryId, 
Product not fulfillable
ProductDataFromCatalogResponse
ProductDataFromCatalogResponse(pAppId, spJsonObject.Get(), &spProduct)
ProductHash
ProductId
productId
ProductId
productId = %ls Failed to suspend impersonation. Not updating checkpoint file
productId = %s is a DLC and waiting on its MainPackage productId = %s
productId = %s is not ready to execute, putting it back at the top of the pending queue
productId = %s is ready to install. Scheduling it on a separate thread
ProductId = %s, CV = %s
productIdsWithCommas
ProductName
Products
ProductTitle
productTitle
ProductVersion
Progress Download
Progress Install
Progress Stage
Progress Stage = %hs, Completed = %llu, Total = %llu, Total = %d 
Progress Update: 
ProgressBase<struct IDownloadProgressChangedCallback,struct IDownloadCompletedCallback>::ProgressBase
ProgressBase<struct IInstallationProgressChangedCallback,struct IInstallationCompletedCallback>::ProgressBase
ProgressBase<struct Windows::Foundation::IAsyncOperationProgressHandler<class Windows::Management::Deployment::DeploymentResult *,struct Windows::Management::Deployment::DeploymentProgress>,struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<class Windows::Management::Deployment::DeploymentResult *,struct Windows::Management::Deployment::DeploymentProgress> >::ProgressBase
ProgressStage
ProgressState
progressStatus
progressValue
promise already satisfied
properties
Properties
protocol
Protocol
protocol
Protocol
protocol
protocolStatusCode
ProxySettings::Capture
prSzt
PRVAT
pRX2"/
pRZ63
pSearchResult->get_ResultCode(&resultCode)
pSearchResult->get_Updates(&spPackages)
pSession->CreateUpdateDownloader(&spDownloader)
pSession->CreateUpdateInstaller(&spInstaller)
pSX^(
pszAppID && *pszAppID
Public
publisherCertificateName
PublisherCertificateName
pUpdate->get_Categories(&spCategories)
purchasableAvailabilityId
purchasableSkuId
Purchase
Purchased
PurchaseFreeApp
PvNZV
px]tT
pxQ0]&H
pxU>w&i
pY]6b.
pyPz~
pYT:d
pYVP:
pyWz+
pZVPF
q Urg.
q!]2c
q!Rv,
q"X\O
q#Y0&
q#Y2|
q*_ze
q:[>3
q:_0#
q;^r;
q[Pxs.
q[UvC'
q`[\`
Q0;D$0
q0\Z-
q0R^G'
q2Q<7
q2Qv}
Q4uaH
Q8H;Q@t+H
q9Wzc
qa\P@?
qAZ2+
qb\xT
qB^Xh
qC\r4
qcU>>
qJY6L>
qjZ8k
qk[\ 
qK^ZR
qK_x8
qKPV!
qP[\=
qPRt{7
qPSxA/
qpXr/7 
qR]z:
qRX2"/
qRXt(
qRZ63
quantity
QueryFullProcessImageNameW
QueryPerformanceCounter
QueryServiceStatus
Queue Composition - InUse/Restart/UserCreds/Network/NonSpecific - Pending/Active/Other: %d/%d/%d/%d/%d - %d/%d/%d
Queue item cannot be moved to front of Queue, invald
Queue State: 
Queue suspension timer expired - Queue is resuming. Outstanding suspends: %d
Queue: %u active, %u pending, %u inactive
QueueHang
Queueing Child Item
Queueing Work for Catalog Item
Queueing Work for Catalog Item created locally
QueueItemId = %ls 
QueueState
QueueUserWorkItem
QV'&X
qx]tT
qxQ0]&H
qY]6b.
qyPz~
qYVP:
qZVPF
qZYzl?
R$fA;Z*
r6D93I
RaiseException
RaiseFailFastException
Raising State Change for 
ReadFile
ReadyToDownload
ReadyToInstall
Received checkpoint data update
Received Completed Callback (for download), and Streaming Type has not been determined!
Received empty buffer for checkpoint file
Recieved empty buffer for checkpoint file
Recurrence
RefCountedEvent::~RefCountedEvent
RefCountedEvent::Initialize
RefCountedEvent::Release
RefCountedEvent::Wait
RegCloseKey
RegCreateKeyExW
RegCreateKeyW
RegDeleteKeyValueW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegGetValueW
Registering as current user
RegisterServiceCtrlHandlerExW
RegOpenCurrentUser
RegOpenKeyExW
RegQueryInfoKeyW
RegSetKeyValueW
RegSetValueExW
RelatedCV
RelatedProductId
RelatedProducts
RelationshipType
ReleaseMutex
ReleaseSemaphore
ReleaseSRWLockExclusive
ReleaseSRWLockShared
Releasing InstallAgentPdcActivation
Remediation
remove
RemoveWindowsStore
Removing abandoned checkpoint. 
Removing Linked Work Item. productId = %s
Repair
request
Request requires item to still hold an active slot. Not interrupting work item. 
request:  %s = %s, CV = %hs
request: %s %s
request: %s = %s, catalogId = %s, flightId  = %s, CV = %hs
request: %s = %s, CV = %hs
request: %s = %s, interactive = %s, catalogId = %s, CV = %hs
request: %s = (vector), checkApplicability = %hs, CV = %hs
request: addAsPaused = %s, CV = %hs
request: interactive = %s, CV = %hs, clientid = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
request: packageFullName = %s, clientId = %s, allowForcedAppRestart = %s, forceUseOfNonRemovableStorage = %s, repair = %s, CV = %hs
request: packageIdentityName = %s, publisherCertificateName = %s, CV = %hs
request: PFamN = %s, CV = %hs
request: product = %s, CV = %hs
request: productId = %s
request: productId = %s, CV = %hs
request: productId = %s, skuId  = %s, catalogId = %s, clientId = %s, campaignId = %s, extendedCampaignId = %s, correlationVector = %s
request: productId = %s, skuId = %s, availabilityId = %s, CV = %hs
request: productId = %s, skuId = %s, catalogId = %s, CV = %hs
request: productId = %s, skuId = %s, catalogId = %s, CV = %hs, clientId = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
request: productId = %s, skuId = %s, catalogId = %s, flightId  = %s, volumePath = %s, CV = %hs
request: productId = %s, skuId = %s, catalogId = %s, flightId = %s, volumePath = %s, CV = %hs, repair = %s, userInteractive = %s, allowDownloadOnAnyNetwork = %s, forceUseOfNonRemovableStorage = %s, allowForcedAppRestart = %s, launchAfterInstall = %s
request: productId = %s, skuId = %s, clientId = %s, CV = %hs
request: productId = %s, skuId = %s, CV = %hs
Request: storeId = %s, campaignId = %s, useDeviceId = %s, CV = %hs
request: storeId = %s, catalogId = %s, flightId = %s, clientId = %s, repair = %s, userInteractive = %s, allowDownloadOnAnyNetwork  =%s, forceUseOfNonRemovableStorage = %s
Requested Offline WU scan. Attempting to get updatecollection
Requested retry interval in mins
requestMethod
RequestMethod
requestMethod
Required Field missing from Json response: '%ls.%ls'
RequiredContentOnly
requiresElevation
RequiresElevation
ResetEvent
ResolveDelayLoadedAPI
resource
resourceResolver->GetLogoLocalized(pData->logoUrl.GetAddressOf())
ResponseCodeGrouping
responseContentType
responseSizeBytes
Restore
RestoreInstallWork
RestoringData
result - OEMId:%s, SCMId:%s
result: %s = %s, CV = %hs
result: %s = %s, interactive = %s, catalogId = %s, CV = %hs
result: %s = (vector), checkApplicability = %hs, CV = %hs
result: %s, %s, blocked = %s
result: addAsPaused = %s, CV = %hs
result: interactive = %s, CV = %hs, clientid = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
result: PFamN = %s, CV = %hs
result: productId = %s
result: productId = %s, CV = %hs
result: productId = %s, fUpdateAvailable = %s, CV = %hs
result: productId = %s, skuId  = %s, catalogId = %s, clientId = %s, campaignId = %s, extendedCampaignId = %s, correlationVector = %s, response: %d
result: productId = %s, skuId = %s, applicable = %s, CV = %hs
result: productId = %s, skuId = %s, availabilityId = %s, CV = %hs
result: productId = %s, skuId = %s, catalogId = %s, CV = %hs, allowed = %s
result: productId = %s, skuId = %s, catalogId = %s, CV = %hs, clientId = %s, allowForcedAppRestart = %s, automaticallyDownloadAndInstallUpdateIfFound = %s
result: productId = %s, skuId = %s, catalogId = %s, flightId = %s, CV = %hs
result: productId = %s, skuId = %s, catalogId = %s, flightId = %s, CV = %hs, repair = %s, userInteractive = %s, allowDownloadOnAnyNetwork = %s, forceUseOfNonRemovableStorage = %s, allowForcedAppRestart = %s, launchAfterInstall = %s
result: productId = %s, skuId = %s, CV = %hs, allowed = %s
Result: storeId = %s, campaignId = %s, useDeviceId = %s, CV = %hs
ResultFromKnownLastError()
Resume
Resume: productId = %s, CV = %hs
ResumeByCategoryId
ResumeClientId
ResumeInstallation
ResumeOperationRequest
ResumeWithFlags
ResumeWithFlags: productId = %s, setflag = %d, resetflag = %d, CV = %hs
ResumeWithFlags: productId = %s, setflag = %d, resetflag = %d, CV = %hs, Item not found
Resuming
RETAIL
Retrying %d items
Retrying aborted install
Retrying failed install: productId = %s
Retrying items. 
ReturnHr
ReturnNt
RevertToSelf
rhx"z
rJfD9?w
RoActivateInstance
RoGetActivationFactory
RoGetAgileReference
RoGetMatchingRestrictedErrorInfo
RoInitialize
RoOriginateError
RoOriginateErrorW
RoOriginateLanguageException
RoRegisterActivationFactories
RoReportFailedDelegate
RoRevokeActivationFactories
RoTransformError
RoUninitialize
RpcAsyncCancelCall
RpcAsyncCompleteCall
RpcAsyncInitializeHandle
RpcBindingFree
RpcBindingFromStringBindingW
RpcBindingSetAuthInfoExW
RPCRT4.dll
RpcStringBindingComposeW
RpcStringFreeW
rRt&v>t~z
RSDS_2p
RtlCaptureContext
RtlClearAllBits
RtlConvertDeviceFamilyInfoToString
RtlDisownModuleHeapAllocation
RtlDllShutdownInProgress
RtlGetDeviceFamilyInfoEnum
RtlInitializeBitMap
RtlIsMultiSessionSku
RtlIsMultiUsersInSessionSku
RtlLookupFunctionEntry
RtlNotifyFeatureUsage
RtlNtStatusToDosErrorNoTeb
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlSetBit
RtlUnregisterFeatureConfigurationChangeNotification
RtlVirtualUnwind
RtlWow64IsWowGuestMachineSupported
RunIfTaskIsMissed
RW3oq
s WATAUAVAWH
S-1-15-2-1609473798-1231923017-684268153-4268514328-882773646-2760585773-1760938157
S-1-5-18
S8;D$8
SampleCorrelationVector
Sandbox
Scan for Updates (not applicability) returned Update that is not in list of scanned for Apps: categoryId = %s
ScanForAllUpdates
ScanForUpdates
Scanning
Scanning a new plugin
Scheduled work with UO from Install Service 
ScheduledRetry
ScheduledTask::~ScheduledTask
ScheduledTask::CommitChanges
ScheduleForceRestartForUpdateFailures
Scheduling productId = %s. Inserting at Index = %d
Scheduling productId = %s. Inserting at the end of the queue
Scheduling productId = %s. Inserting at the top of the queue
SCMID
scmId
ScmId
sconecoreuap\Enduser\WinStore\inc\RAIIHelpers.h
Scope Timer fired before it went out of scope.
SearchForUpdateOperationRequest
searchId
searchIdType
SearchIdType = %ls, SearchId = %ls result = %hhd 
SearchUpdatePackages
SecureFailureFlags
SendRequestAndWaitForResponse
Serialized updates streaming install type couldnt be loaded and nothing was returned from a scan. Silently Completing
SerializedFulfillmentData
ServerRecommendedScheduledRetry
service::%s::%s
serviceErrorCode
ServiceErrorCode
serviceErrorCode
ServiceMain
Set package preference from full to stub 
Set package preference from stub to full 
SetContentIdForUAP(pfncidpair.first.GetRawBuffer(nullptr), pfncidpair.second.GetRawBuffer(nullptr))
SetCursor
SetEvent
SetFileAttributesW
SetFileInformationByHandle
SetLastError
SetPackageAcquisitionInfoForPackage failure ignored: PFN = %s, IdentityData = %s
SetQueueOrder
SetRestrictedErrorInfo
SetRetryIntervalTriggerOnBackgroundUpdateTask
SetRetryIntervalTriggersOnBackgroundUpdateTask
SetServiceStatus
SetThreadpoolTimer
SetThreadToken
SetTokenInformation
SetUnhandledExceptionFilter
severity
shared_lock::release
SHCreateItemInKnownFolder
SHGetFolderPathW
SHGetIDListFromObject
SHGetKnownFolderPath
SHGetKnownFolderPath(FOLDERID_LocalAppData, 0, nullptr, &pszAppData)
SHL9"H
SHRegGetBOOLWithREGSAM
SHTaskPoolAllowThreadReuse
SHTaskPoolQueueTask
size > 0
Skipcatalog lookup specified so creating catalogitem locally
SkipCatalogLookup
SkipForceAuthentication
Skipping already visited node: ProductId %s
Skipping chained work because another item with only one slot is in the queue 
Skipping chained work because it would violate the maxinum number of slots 
Skipping Stub Check. Duration since last check is too short.
skuId
SkuId
skuid
SkuId
SkuType
Sleep
SleepConditionVariableCS
Slow Response From WinStoreAuth::GatherAllStoreTickets
Slow Response From WinStoreAuth::GetTicketsForAccount
SlowResponse
SlowResponseFromTokenBroker
SlsInit
SmartRetry
SmartRetry_InUse
SmartRetry_NoNetwork
SmartRetry_NoUser
SmartRetry_Restart
SmartRetry_Scheduled
SmartRetryAsync
SmartRetryCSP
SmartRetryCSP_InUse
smBiosDm
smBiosManufacturerName
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
SOFTWARE\Microsoft\Windows NT\CurrentVersion
Software\Microsoft\Windows NT\CurrentVersion
SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\Configuration
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\InstallEventHandlers
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\InstallWorkFactories
Software\Microsoft\Windows\CurrentVersion\InstallService\OEMDiscovery
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State\CategoryCache
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State\PluginList
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State\StaticPluginMap
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\Stubification
SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\Stubification\
Software\Microsoft\Windows\CurrentVersion\Store
Software\Microsoft\Windows\CurrentVersion\Store\Configuration
Software\Microsoft\Windows\CurrentVersion\Store\ContentId
Software\Microsoft\Windows\CurrentVersion\Store\CurrentIdentity
SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsStore\WindowsUpdate
Software\Microsoft\XboxLive
Software\Policies\Microsoft\WindowsStore
SOFTWARE\Policies\Microsoft\WindowsStore
Someone added a new SmartRetryTriggerType!
Something bad happend. The item in the queue is not the same as the one scheduled. Ignoring scheduling request for productId = %s
Something bad happened. The evaluation thread should be running but it isnt. Recovering
Source
Sources
SourceUri
sourceUri->get_RawUri(sourceUriString.GetAddressOf())
spAgent->get_ActiveInstalls(&spInstallItems)
spAgent->ResumeByCategoryId(categoryId)
spApp->get_PackageFamilyName(appPFN.GetAddressOf())
spAsyncInfo->Cancel()
spCat->get_CategoryID(&bstrCatId)
spCat->get_Type(&bstrCatType)
spCategories->get_Count(&cCategories)
spCategories->get_Item(i, &spCat)
spCategoryCollection->get_Count(&cCategories)
spCategoryIds->IndexOf(categoryId.Get(), &index, &fExists)
spCreateOrderBody->SetNamedValue(HStringReference(L"items").Get(), spItems.Get())
spDownloader->BeginDownload(pProgress, pCompleted, varNull, &spJob)
spDownloader->Download(&spResult)
spDownloader->EndDownload(spJob.Get(), &spResult)
spDownloader->put_ClientApplicationID(sbstrClientApplicationId)
spDownloader->put_IsForced(VARIANT_TRUE)
spDownloader->put_Updates(pFrameworkUpdates)
spDownloader->put_Updates(pPackages)
spDownloader->QueryInterface(IID_PPV_ARGS(&spInternalConfiguration))
spDownloadState->GetDownloadStatus(&dseDownloadStatus)
spFilteredIds->GetAt(i, categoryId.GetAddressOf())
spHistory->RemoveGroupWithId( HStringReference((pData->notificationType == Success_Update) ? GROUP_UPDATE_SUCCESS_GROUPED : GROUP_INSTALL_ERROR_GROUPED).Get(), AppId.Get())
spHistory->RemoveGroupWithId(notificationGroup.Get(), AppId.Get())
spHistory2->GetHistoryWithId(AppId.Get(), &spNotifications)
spInstaller->BeginInstall(pProgress, pCompleted, varNull, &spJob)
spInstaller->EndInstall(spJob.Get(), &spResult)
spInstaller->Install(&spResult)
spInstaller->put_ClientApplicationID(sbstrClientApplicationId)
spInstaller->put_Updates(pFrameworkUpdates)
spInstaller->put_Updates(pPackages)
spInstaller->QueryInterface(IID_PPV_ARGS(&spInternalConfiguration))
spInternalConfiguration->put_InternalConfigurationProperty(IUPDATE_INTERNALPROPERTY_DOWNLOAD_USERTOKEN, var)
spInternalConfiguration->put_InternalConfigurationProperty(IUPDATE_INTERNALPROPERTY_INSTALL_APPINSTALLUSERCONTEXT, var)
spInternalConfiguration->put_InternalConfigurationProperty(IUPDATE_INTERNALPROPERTY_INSTALL_USERTOKEN, var)
spInternalConfiguration->put_InternalConfigurationProperty(IUPDATE_INTERNALPROPERTY_SEARCH_USERTOKEN, var)
spItem->BackgroundRetry()
spItem->CancelWithTelemetry(false, nullptr)
spItem->get_ParentId(parentId.GetAddressOf())
spItems->Append(spT.Get())
spItems->GetAt(i, &spT)
spIterator->get_Current(&spKeyValue)
spIterator->get_HasCurrent(&fHasCurrent)
spIterator->MoveNext(&fHasCurrent)
spJob->CleanUp()
spJob->GetProgress(&spDownloadProgress)
spJsonObject->GetNamedArray(g_jsonPropertyProducts.Get(), &spJsonArray)
spJsonValue->GetObject(&spJsonObject)
spKeyValue->get_Value(&spT)
spOrder->GetNamedBoolean(HStringReference(L"isPIRequired").Get(), &piRequired)
spPackageManager->StageUserDataAsync(packageFullName, options, priority, &spDeploymentOperation)
spPackages->get_Count(&cUpdates)
spProgress->get_TotalBytesToDownload(&cbTotal)
spResult->get_ResultCode(&orc)
spResult->get_Size(&cProducts)
spResult->get_Size(&cResult)
spResult->GetAt(i, &spJsonValue)
spResult->GetUpdateResult(iUpdate, &spUpdateResult)
spSearcher.As(&spInternalConfiguration)
spSearcher->put_ClientApplicationID(sbstrClientApplicationId)
spSearcher->put_Online(fOnline ? VARIANT_TRUE : VARIANT_FALSE)
spSearcher->put_Online(VARIANT_TRUE)
spSearcher->put_ServerSelection(ssOthers)
spSearcher->put_ServiceID(sbstrServiceID)
spSearcher->Search(sbstrQuery, &spSearchResult)
spSearcher3->put_SearchScope(scope)
spSelector->SelectSingleNode(HStringReference(L"/toast").Get(), &spToastNode)
spSelector->SelectSingleNode(HStringReference(L"/toast/visual/binding").Get(), &spBindingNode)
spSelector->SelectSingleNode(hstrToast.Get(), &spToastNode)
spSession
spSession->CreateUpdateDownloader(&spDownloader)
spSession->CreateUpdateInstaller(&spInstaller)
spSession->CreateUpdateSearcher(&spSearcher)
spSLSClient2->GetSLSDataChunk(GUID_StoreFrontServiceID, FALSE, L"//ServiceEnvironment/InstallService", ppszJSON, plastModified, pmarker)
spTickets->GetAt(i, authTicket.GetAddressOf())
spToastNotificationFactory->CreateToastNotification(toastXml, spToastNotification.GetAddressOf())
spToastNotificationManager->get_History(&spHistory)
spToastNotifier->Show(notification)
spUpdate7->get_HandlerPayloadPackageId(&sbstrHandlerPackageId)
spUpdate9->CleanupDownloadData()
spUpdateResult->get_ResultCode(&orc)
spUpdateToastNotifier->UpdateWithTagAndGroup(notification, notificationTag, notificationGroup, &updateResult)
spVector->GetView(&spView)
SrpDoesPolicyAllowAppExecution
SrpDoesPolicyAllowAppExecution(%s, %s)
SrpDoesPolicyAllowAppExecution(%s, %s), CV = %hs
StageButDoNotInstall
StageUserData failure ignored. PackageFullName = %s
Start Date 
Start Install
Start screen does not support pinning. Not pinning %s
StartAppInstalls: request install %d of type %s, CV = %hs
StartDateTime
Starting
Starting Post Cancel Cleanup
Starting UWA Install Work
StartInstallOperation
StartInstallOperation(data->ProductId(), data->PackageFamilyName())
StartServiceW
StartStageUserData
StartStoreUpdates
State = %hs 
StateTransition
StateTransition = %hs -> %hs 
static_cast<InstallItem*>(mapItem.Get()) == pItem
status.installState == InstallState_Completed || status.installState == InstallState_Canceled
status->autoDownloadSize == 0 || (status->autoDownloadSize < status->downloadSize)
stoi argument out of range
StoreAADAccountId
StoreAgent
StoreAgentAcquireLicenseFailure1
StoreAgentDownloadFailure1
StoreAgentInstallFailure1
StoreAgentScanForUpdatesFailure0
StoreAgentSearchUpdatePackagesFailure1
storeAppInstall
storeAppInstallation
StoreClient
StoreContentModifier
StoreId
strchr
String
string too long
StringFileInfo
StringFromGUID2
StringHelpers::Join(batchProductIds.Get(), L',', productIdsWithCommas.GetAddressOf())
StringHelpers::TransformAndJoin
strrchr
Stubification Feature is not enabled from user face setting.
StubificationLastSuccessTime
STUBIFICATIONTASKFREQUENCYINDAYS
Subkey : %ws, ValueName :%ws
SubmitThreadpoolWork
SubTask = %ls:%ls
subtaskData
succeeded
Succeeded
succeeded
Succesfully queued  %d products
Success Install
Success Update
Successfully Added ProductId %s to the expanded Bundle Product List
Successfully created SmartRetryCSP task.
Successfully Pinned %s to Desktop.
Successfully Pinned %s to Start.
Successfully Pinned %s to Taskbar.
Successfully removed %s
Suspending
SUVWATAUAVAWH
SUVWATAVAWH
SUVWAVH
SUVWAWH
SUVWH
SVATAUAVAWH
svchost.exe
SVWATAUAVAWH
SVWATAUAVH
SVWATAUAWH
SVWATAVAWH
SVWATAWH
SVWAUAVAWH
SVWAVAWH
SVWAVH
Swapping Pending Queue Positions for productId = %s, Index = %ld, with productId = %s, Index = %ld
SWATAVAWH
Switching failed install to remediation install
SwitchState 
Symbolic link detected. Checkpoint file creation failed: Id = '%s'
Symbolic link detected. Checkpoint file delete failed: Id = '%s'
Symbolic link detected. Checkpoint file open failed: Id = '%s'
system
System\CurrentControlSet\Control\SystemInformation
SystemAttemptCount
SystemAttemptNumber
SystemManufacturer
SystemProductName
SystemTimeToFileTime
Szm/T
t I9}
t"@8=
T"0$F"j&*(**}
t#fD9/t
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ E3
T$ E3
t$ M;
t$ UH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WATAUH
t$ WAUAVH
t$ WAVAWH
t$ WH
t$@E3
T$@E3
t$@E3
t$@H;
t$@H9|$Ht
t$@Lcn
t$`!t$h
T$`A;
T$`H;
t$`H+
t$`H9
t$`I;
T$`L+
t$`L+
t$0H#
T$0L+
t$0L9e
T$-A;
T$dfD
t$fD9I
T$hA;
T$HE3
T$hE3
t$hH;
T$HH;
T$HH;T$Pt&H
t$hI;
T$HL;
T$hxPH
T$PD3
t$pD9e
t$pE3
t$PE3
t$pH;
t$PH;
t$pH;}
T$PH+
T$pH+
t$PH9
t$PH9}8t]H
t$PH9}Xt]H
t$pI;
T$PL;
t$pL;u
t$TD9
t$TE3
t$x@8
T$XE3
t$XE3
T$XH;
T$XH+
t$xH9t$ht
t$xI;
t$xL9u
t$xM;
t%HcM`H
t&D8~
t&D8>t!H
t(D85
t(D8-H"'
t(fE9.t"M
t)D8~
T*V2X
t,D8=r['
t/L9;t
t/L9't
t/M9&t
t/M9.t
t:fA9(t4H
t@f90t;H
t\9\$P
t+L9~
t0H;w0t*
t0H93t
t2fD9
t2fD9Q
t3H93t
t4E88t/H
t4L96t
t7fD93t1H
t9fD9I
tA9^Ht<H
tA9^ht<H
TargetHostName
TargetUri
targetUri
TargetUri
targetUri
tbvXtA
template
TEMPx
Terminal State event raised from work. Ignoring the event productId = %s, state = %hs
TerminateProcess
tfH93t
tG9)u
The queue appears to be hung and isn't processing items
There are 'failed due to network' items in queue, but network availability trigger wasn't enabled.
thH9khu
This function cannot be called on a default constructed task
threadId
Threshold = %ld -> Actual = %ld 
TicketCount
ticketCount > 0 && "TryGetTickets should return nullptr for empty vector"
tickets->get_Size(&ticketCount)
tickets->GetAt(0, authTicket.GetAddressOf())
tjH9_
tJH9~
TlsProtocol
TlsProtocolUnion
tNL9H sHI
Toast notification generation, displayName resolved from appx resourceResolver: %s, PackageFullName: %s
Toast notification generation, displayName resolved from appx resourceResolver: %s, PackageFullName: %s. Invalid displayName, defaulting to catalog information.
Toast notification generation, no packages returned in _FindPackage
ToastGeneric
toastNotificationManager->CreateToastNotifierWithId(AppId.Get(), &spToastNotifier)
toastNotificationManager->GetTemplateContent(ToastTemplateType::ToastTemplateType_ToastImageAndText02, &spToastTemplate)
TokenHelpers::GetAllLoggedInUserTokens
totalCompletedBytes
TotalGroupLatencyMs
TotalLatencyMs
TotalPercentComplete
TotalUnitsForStage
tplbvXxQ
TpVDX0Z0\,^~b
TraceLoggingCorrelationVector::Validate(cV)
TraceLoggingCorrelationVector::Validate(szCV)
TranslateMessage
Translation
trI!}
TryGetTickets
Trying to install %d products
TryInternalProperty_GetStringValue
ttA9u0t9A
ttA9uPt9A
twf93trM
tx@8=
TZRZV
u ;u@
u$D9J
u$D9R
u%A8p
u%D9Z
u%f9|$`t
u%H!\$8H
u%I!C
u(H!GHH
u)A8p
u*D9Z
u@L+3H+
u@L+7H+
u@L9e8t
u_f9|$ptXH
U_S_C
u{H9A
u+fD9Q
U0fD94Jt
u3H!H
u5D9J
u7!D$0D
u8D9J
uAJ9|
UATAUAVAWH
UATAUH
UATAVH
UAVAWH
ubfD9
u'D91|"
uD9D$Xt>H
u'D9J
ue9}o
uFD8m
uGL9e?t
u'H9u
uHD9J
UhfD94Jt
UHfD94Jt
UHL92I
uiAccess
uIL9p@uC3
ukJ9|
UMgrEnumerateSessionUsers
UMgrFreeSessionUsers
UMgrGetConstrainedUserToken
UMgrGetImpersonationTokenForContext
UMgrOpenProcessTokenForQuery
UMgrQueryDefaultAccountToken
UMgrQueryUserContext
UMgrQueryUserToken
umgrToken.IsValid()
UMPDC.dll
Unable to cache a modern license, ContentId = %s
Unable to delete checkpoint file %s.
Unable to get a modern license ContentId = %ws
Unable to invalidate license for %s
Unblocking low priority items 
uND9R
Undetermined
Unexpected checkpoint file size: Id = '%s', size = '%I64d'
Unexpected error encountered attempting to create install service work
Unexpected error encountered for one child of the bundles during work creation
Unexpected Error from InstallWorkFactory: ClassId:%s
Unexpected error from IUpdateSearcher::Search
Unexpected error trying to convert Json Value to %s
Unexpected error. Failed to get system volume GUID.
Unexpected Json Value Type Expected %s. Found: %s
UnhandledExceptionFilter
Unknown
unknown
unknown error
Unknown exception
UNKWN
UnmapViewOfFile
unordered_map/set too long
uPD8f
Update
Update regulated
Update requested from LocalSystem context. Attempting to register for all logged-on users who have it
Update search returned unrecognized categoryId = %s, cv = %s, cv = %hs
Update search returned unrecognized categoryId. 
Update;
UpdateAppByPackageFamilyName
UpdateAppOperationRequest
UpdateHasCategory
UpdateIsFramework
UpdatePolicy-UpdateManagementGroup
Updating frameworks, cv = %hs
Updating InstallAgentPdcActivation
Updating priority of qItem
Updating Task Definition for : %s
Updating volumePath. OldVolumePath = %s, NewVolumePath = %s
UpdatingWorkProperties
uPercentMax <= 100
uPercentMin <= uPercentMax
UPfD94Jt
UpLc2H
uri->get_RawUri(uriString.GetAddressOf())
uriFactory->CreateUri(sourceUriString.Get(), _sourceUri.GetAddressOf())
uriFactory->CreateUri(uriString.Get(), uriCopy.GetAddressOf())
UrlEscapeW
uSD8d$puLH
UseDeviceId
UseInstallQueue2
User restart required for item: productId = %s, installstate = %s
User wasnt logged in. Downloading as LocalSystem
User wasnt logged in. Scanning as LocalSystem
User with SID: %s is not logged in and WU scan returned no updates!
user.auth.xboxlive.com
UserAttemptCount
UserAttemptNumber
USERENV.dll
UserHelpers::ValidateMultiUserApiCall(user)
userId
userIdentity
UserIdentityInfo
userSID
UserSID
UserSID = %ls 
UserSid: %ws
uSH9C
uSH9K
Using elevated (linked) token.
Using elevated token.
USVWATAUAVAWH
USVWATAVAWH
USVWATAVH
USVWAVAWH
USVWAVH
USVWH
Utils::GetCompletedNotificationFlags
Utils::GetInProgressNotificationFlags
Utils::GetPackageFamilyNameFromFullName
UuidCreate
UUUUUUU
UVWATAUAVAWH
UVWATAVH
UVWAUAVH
UVWAUAWH
UVWAVAWH
UWAInstallServiceWorkItem::~UWAInstallServiceWorkItem
UWAInstallServiceWorkItem::Start::<lambda_08179e5cc23d92b51328c80fa2c7c1cb>::operator ()
UWAInstallServiceWorkItem::UWAInstallServiceWorkItem
UWAInstallWork::_AcquireLicenseForUpdate
UWAInstallWork::_CleanupAfterCancel
UWAInstallWork::_CleanupDownloadData
UWAInstallWork::_DetermineCollectionTypeIfNeeded
UWAInstallWork::_DoAcquireLicense
UWAInstallWork::_DoDownload
UWAInstallWork::_DoInstall
UWAInstallWork::_DoInstallForAllLoggedOnUsers
UWAInstallWork::_DoNormalInstall
UWAInstallWork::_DoRequiredStreams
UWAInstallWork::_DoScan
UWAInstallWork::_DoStageUserData
UWAInstallWork::_DoStageUserDataForUpdate
UWAInstallWork::_InstallCompleted
UWAInstallWork::_LaunchAppListEntry
UWAInstallWork::_RecordAcquisitionIdentity
UWAInstallWork::_RequestAbort
UWAInstallWork::_UninstallPackages
UWAInstallWork::_UpdatePdcActivation
UWAInstallWork::AddFulfillmentTask
UWAInstallWork::Cancel
UWAInstallWork::DoWork
UWAInstallWork::IsStreaming
UWAInstallWork::OnDownloadPaused
UWAInstallWork::OnDownloadTransientError
UWAInstallWork::OnError
UWAInstallWork::OnError Releasing InstallAgentPdcActivation
UWAInstallWork::OnProgress
UWAInstallWork::OnProgress Updating InstallAgentPdcActivation
UWAInstallWork::Pause
UWAInstallWork::ProductIsLaunchable
UWAInstallWork::Resume
UWAInstallWork::s_CleanupAfterCancel
UWAInstallWork::SetStreamingType
UWAInstallWork::UpdateIsRegulated
UWAInstallWork::UpdateProperties
UWAInstallWork::UWAInstallWork
UWATAUAWH
UWATAVAWH
UWATH
UWAUAVAWH
UWAVH
UWAWH
V*x,.
V8H@F
Value
var.vt == VT_BSTR
VarFileInfo
variant
variantKind
varIsFramework.vt == VT_BOOL
VAVAWH
vDzbv
Vector<Uri *>::Make(dependenciesVector.GetAddressOf())
Verbose
VerifyPackageFullName
Version
VfVj*ldn
Volume path "%s" is not a system volume, but system volume is required; install will be redirected to a system volume.
VolumePath
VS_VERSION_INFO
VWATAUAVH
VWATAVAWH
VWAUAVAWH
VWAVAWH
VWAVH
VWAWH
W0A8w,
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WaitOnAddress
WakeAllConditionVariable
WakeByAddressAll
Warning
WATAUAVAWH
WATAVH
WATAWH
WAVAWH
wcschr
wcschr(szUrl, L'?')
wcscmp
wcsncpy
wcsnlen
wcsstr
wdD;t$@D
We expect at least one source specified!
We shouldn't be attempting to insert the same item twice!
WebAccountId
Weekly
WerReportAddFile
WerReportCloseHandle
WerReportCreate
WerReportSetParameter
WerReportSubmit
WEVT_TEMPLATE
WideCharToMultiByte
Width
WifiRecommended
WifiRequired
WilError_03
wilResult
WilStaging_02
win:Error
win:Info
win:Informational
win:Verbose
win:Warning
win32
win8xappx
Winding down from working state. Invalid request for switch state
Windows.8828080
Windows.ApplicationModel.AppDisplayInfo
Windows.ApplicationModel.Core.AppListEntry
Windows.ApplicationModel.Core.CoreApplication
Windows.ApplicationModel.Store.Internal.AuthenticationExtension
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManagerItemEventArgs
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallOptions
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus
Windows.ApplicationModel.Store.Preview.InstallControl.AppUpdateOptions
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppImage
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.IAppData
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.IAppImage
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo
Windows.ApplicationModel.Store.Preview.InstallControl.Internal.OEMHardwareInfo
Windows.Core
Windows.Data.Json.JsonArray
Windows.Data.Json.JsonObject
Windows.Data.Json.JsonValue
Windows.Data.Xml.Dom.XmlDocument
Windows.Desktop
Windows.Foundation.AsyncOperationCompletedHandler`1<Boolean>
Windows.Foundation.AsyncOperationCompletedHandler`1<String>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.GetEntitlementResult>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.OEMHardwareInfo>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>>
Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>>
Windows.Foundation.Collections.IIterable`1<String>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, WindowsUpdate.Internal.IInstallItem>>
Windows.Foundation.Collections.IIterator`1<Object>
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppImage>
Windows.Foundation.Collections.IIterator`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>
Windows.Foundation.Collections.IIterator`1<Windows.Data.Json.IJsonValue>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, WindowsUpdate.Internal.IInstallItem>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.InstallService.Plugin.IInstallServiceWorkItem>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.InstallService.Plugin.IInstallServiceWorkItemSubTask>
Windows.Foundation.Collections.IIterator`1<WindowsUpdate.Internal.ContentIdInfo>
Windows.Foundation.Collections.IIterator`1<WindowsUpdate.Internal.IFulfillmentDataInfo>
Windows.Foundation.Collections.IIterator`1<WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IIterator`1<WindowsUpdate.Internal.InstallItem>
Windows.Foundation.Collections.IKeyValuePair`2<String, String>
Windows.Foundation.Collections.IKeyValuePair`2<String, UInt8>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IKeyValuePair`2<String, WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IMap`2<String, String>
Windows.Foundation.Collections.IMap`2<String, UInt8>
Windows.Foundation.Collections.IMap`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IMap`2<String, WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IMapView`2<String, String>
Windows.Foundation.Collections.IMapView`2<String, UInt8>
Windows.Foundation.Collections.IMapView`2<String, Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IMapView`2<String, WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IVector`1<Object>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppImage>
Windows.Foundation.Collections.IVector`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>
Windows.Foundation.Collections.IVector`1<Windows.Data.Json.IJsonValue>
Windows.Foundation.Collections.IVector`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVector`1<Windows.Internal.InstallService.Plugin.IInstallServiceWorkItem>
Windows.Foundation.Collections.IVector`1<Windows.Internal.InstallService.Plugin.IInstallServiceWorkItemSubTask>
Windows.Foundation.Collections.IVector`1<WindowsUpdate.Internal.ContentIdInfo>
Windows.Foundation.Collections.IVector`1<WindowsUpdate.Internal.IFulfillmentDataInfo>
Windows.Foundation.Collections.IVector`1<WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IVector`1<WindowsUpdate.Internal.InstallItem>
Windows.Foundation.Collections.IVectorView`1<Object>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppImage>
Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>
Windows.Foundation.Collections.IVectorView`1<Windows.Data.Json.IJsonValue>
Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVectorView`1<WindowsUpdate.Internal.ContentIdInfo>
Windows.Foundation.Collections.IVectorView`1<WindowsUpdate.Internal.IFulfillmentDataInfo>
Windows.Foundation.Collections.IVectorView`1<WindowsUpdate.Internal.IInstallItem>
Windows.Foundation.Collections.IVectorView`1<WindowsUpdate.Internal.InstallItem>
Windows.Foundation.Diagnostics.AsyncCausalityTracer
Windows.Foundation.IAsyncAction
Windows.Foundation.IAsyncOperation`1<Boolean>
Windows.Foundation.IAsyncOperation`1<String>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.GetEntitlementResult>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>
Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.OEMHardwareInfo>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>>
Windows.Foundation.IAsyncOperation`1<Windows.Foundation.Collections.IVectorView`1<Windows.ApplicationModel.Store.Preview.InstallControl.Internal.InstallAppInfo>>
Windows.Foundation.Uri
Windows.Internal.ApplicationModel.TaskbarPinnableSurface
Windows.Internal.Flighting.OneSettings.OneSettingsPayload
Windows.Internal.InstallService.Control.InstallServiceControl
Windows.Internal.InstallService.Plugin.IInstallServiceConnection
Windows.Internal.InstallService.Plugin.IInstallServicePlugin
Windows.Internal.InstallService.Plugin.IInstallServiceWorkItem
Windows.Internal.InstallService.Plugin.IInstallServiceWorkItemSubTask
Windows.Internal.InstallService.Plugin.InstallServiceCreateWorkProperties
Windows.Internal.InstallService.Plugin.InstallServiceScanForUpdateProperties
Windows.Internal.InstallService.Plugin.InstallServiceWorkAttributes
Windows.Internal.InstallService.Plugin.InstallServiceWorkProgressStatus
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Internal.Security.WebAuthentication.AuthenticationManager
Windows.Internal.Shell.Holographic.ContextIdentifier
Windows.Internal.StateRepository.Application
Windows.Internal.StateRepository.Package
Windows.Internal.StateRepository.PackageResourceResolver
Windows.Internal.StateRepository.PackageUser
Windows.Internal.StateRepository.TargetDeviceFamily
Windows.Internal.StateRepository.User
Windows.Internal.Wil.EventInvocationContext
Windows.Management.Deployment.Internal.PackageManagerInternal
Windows.Management.Deployment.PackageManager
Windows.Mobile
Windows.Security.Authentication.OnlineId.OnlineIdServiceTicketRequest
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Security.Cryptography.CryptographicBuffer
Windows.Storage.Streams.Buffer
Windows.System.Internal.UserManager
Windows.System.Profile.AnalyticsInfo
Windows.System.UserProfile.GlobalizationPreferences
Windows.UI.Notifications.NotificationData
Windows.UI.Notifications.ToastNotification
Windows.UI.Notifications.ToastNotificationManager
Windows.UI.StartScreen.StartScreenManager
Windows.Universal
Windows.Windows8x
Windows.WindowsPhone8x
Windows.Xbox
Windows.Xbox.System.Internal.Deployment.XVCInstallWorkFactory
Windows::ApplicationModel::Store::Preview::InstallControl::_CategoryIdsFromProductData
Windows::ApplicationModel::Store::Preview::InstallControl::_CheckApplicability
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::EnsureDownloadAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::get_CompletedInstallToastNotificationMode
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::get_InstallInProgressToastNotificationMode
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::get_InstallType
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::GetInstallWithoutChildren
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::Initialize
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallItem::RuntimeClassInitialize
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_FindUpdateItems
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetActiveInstalls
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetCurrentActiveUserAccessToken
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetFreeEntitlement
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetFreeEntitlement::<lambda_06264381f85c2c936d8adf28e6b47eaa>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIdentityDataSnapshot
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsAppAllowedToInstallForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsAppAllowedToInstallForUserAsync::<lambda_0afdb9b6549a940ccb495b3c476e625d>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsApplicableForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsApplicableForUserAsync::<lambda_4c419096870a134d163037edef9ad862>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsPackageIdentityAllowedToInstallForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_GetIsPackageIdentityAllowedToInstallForUserAsync::<lambda_4a7eecc9fc8c8380f8dc9aef98711c33>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_ModifyInstall
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_NewInstallItem
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_RecursivelyUpdateParentsOnProgress
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_ScanForAllUpdatesWorker
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_ScanForSpecificUpdatesWorker
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_SearchForAllUpdatesForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_SearchForAllUpdatesForUserAsync::<lambda_df2c3c021deb4d4977b9da815e20a7db>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_SearchForUpdatesForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_SearchForUpdatesForUserAsync::<lambda_85a469f3dfa7e042f256f88470994329>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartBundleProductInstallAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartBundleProductInstallAsync::<lambda_81fd7eb0fffa0d1f063377bbe2fc7359>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartBundleProductInstallWithOptionsAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartSingleProductInstallAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_StartSingleProductInstallAsync::<lambda_3747722370885c1269c92f1212981f0b>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_UpdateAppByPackageFamilyNameForUser
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_UpdateAppByPackageFamilyNameForUser::<lambda_fa13e7274b441fbd9ea3b281f2014d4d>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::_VerifyInstallControl2IsRunning
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::~AppInstallManagerImpl
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::ConnectAgent
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::ConnectAgent2
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::DisconnectAgent2
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::FindOrCreateInstallItem
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::get_AppInstallItemsWithGroupSupport
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppData
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataAsync::<lambda_35599b5140a1c62af3dcf8306f3a9e59>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataForUserAsync::<lambda_18436597836e65510abb43df107ab27c>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetAppDataPlural
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeEntitlementAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeEntitlementAsync::<lambda_e2e4d746b1b82bfebb92260e7937808f>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeEntitlementByProductSkuAvailabilityAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeEntitlementByProductSkuAvailabilityAsync::<lambda_1f8bcd9156093304f88f518521a13326>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetFreeUserEntitlementForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetOEMHardwareInfoAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::GetOEMHardwareInfoAsync::<lambda_c793d3da3e4c3aa5f57a9b9da43f7e86>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::InstallPackageByPackageFullNameForUserAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::InstallPackageByPackageFullNameForUserAsync::<lambda_1a23f785e711e60d84f9d9bf24dfb7d4>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::IsStoreBlockedByPolicyAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::IsStoreBlockedByPolicyAsync::<lambda_307b295522495cbd0e13b17d977e524f>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::OnResume
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::OnSuspend
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::put_AcquisitionIdentity
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::RegisterCurrentUser
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::ResumeByCategoryId
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::SearchForUpdatesAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::SearchForUpdatesAsync::<lambda_b3c5f37c7ef668429c280b29c56fab5d>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::SearchForUpdatesWithPausedAddAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::SearchForUpdatesWithPausedAddAsync::<lambda_c4e0dfa3dc4b9d4d584490550deeeeca>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallAsync::<lambda_1d55dfd97c3a4ae9ea969e90097e4bfd>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallForDeviceAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallForDeviceAsync::<lambda_bf2c22c2da75a4bfaf8079fbe543d90c>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallsAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppInstallsAsync::<lambda_0227109a6ae1c97474fcbff8dd458370>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppRestoreAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartAppRestoreAsync::<lambda_71bc64eae3a80406608306d87753a4a8>::operator ()
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallManagerImpl::StartBundleInstallForDeviceAsync
Windows::ApplicationModel::Store::Preview::InstallControl::AppInstallStatus::get_InstallState
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::_DoUpdateSearchForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::_ExpandBundles
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::_StartInstallForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::CheckApplicabilityForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::GetFreeEntitlement
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::GetFreeEntitlementAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::GetIsApplicableAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::RuntimeClassInitialize
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::SearchForUpdatesAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::SearchForUpdatesForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::StartInstallAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::StartInstallForUser
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::StartRestore
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppData::StartRestoreAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppImage::DownloadAsync
Windows::ApplicationModel::Store::Preview::InstallControl::Internal::AppImage::DownloadAsync::<lambda_8572128ce8ad6ecdf045ede786f4b985>::operator ()
Windows::Foundation::Collections::Internal::SimpleVectorView<class WindowsUpdate::Internal::InstallItem *,class Windows::Foundation::Collections::Internal::Vector<class WindowsUpdate::Internal::InstallItem *,struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultVectorOptions<class WindowsUpdate::Internal::InstallItem *> >,struct Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<class WindowsUpdate::Internal::InstallItem *>,struct XWinRT::IntVersionTag,0>::First::<lambda_661192b5151332f931e163766675f515>::operator ()
Windows::Foundation::Collections::Internal::Vector<class WindowsUpdate::Internal::InstallItem *,struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultVectorOptions<class WindowsUpdate::Internal::InstallItem *> >::_EraseAll
Windows::Foundation::Collections::Internal::Vector<class WindowsUpdate::Internal::InstallItem *,struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultVectorOptions<class WindowsUpdate::Internal::InstallItem *> >::InsertAtInternal
Windows::Foundation::Collections::Internal::Vector<class WindowsUpdate::Internal::InstallItem *,struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultVectorOptions<class WindowsUpdate::Internal::InstallItem *> >::RemoveAtInternal
Windows::Foundation::Collections::Internal::Vector<class WindowsUpdate::Internal::InstallItem *,struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<class WindowsUpdate::Internal::InstallItem *>,struct Windows::Foundation::Collections::Internal::DefaultVectorOptions<class WindowsUpdate::Internal::InstallItem *> >::SetAt
Windows::Foundation::GetActivationFactory(HStringReference(RuntimeClass_Windows_UI_Notifications_ToastNotification).Get(), &spToastNotificationFactory)
Windows::Internal::InstallService::Control::InstalledPackage::SetPackagePreferenceFullToStub
Windows::Internal::InstallService::Control::InstalledPackage::SetPackagePreferenceStubToFull
Windows::Internal::InstallService::Control::InstalledPackage::ShouldPrioritizeInQueue
Windows::Internal::InstallService::Control::IsDeviceUptimeEnoughForStubification
Windows::Internal::InstallService::Control::IsTaskPeriodCheckLongEnough
Windows::Internal::InstallService::Control::LoadOffloadingOneSettings
Windows::Internal::InstallService::Control::ShouldPackageBeMarkedForStubification
Windows::Internal::InstallService::Control::ShouldStubificationCheckRun
Windows::Internal::InstallService::Control::StubificationEnabled
Windows::Management::Deployment::WaitForDeploymentOperation
WindowsCompareStringOrdinal
WindowsConcatString
WindowsCreateString
WindowsCreateStringReference
WindowsDeleteString
WindowsDeleteStringBuffer
WindowsDuplicateString
WindowsGetStringLen
WindowsGetStringRawBuffer
WindowsIsStringEmpty
WindowsPreallocateStringBuffer
WindowsPromoteStringBuffer
WindowsReplaceString
WindowsStore-Enabled
WindowsStoreWindowsUpdate
WindowsStringHasEmbeddedNull
WindowsSubstringWithSpecifiedLength
WindowsUpdate.Internal.AppOffloadSettings
WindowsUpdate.Internal.ContentIdInfo
WindowsUpdate.Internal.FulfillmentDataInfo
WindowsUpdate.Internal.IInstallWork
WindowsUpdate.Internal.InstallItem
WindowsUpdate::CommonTelemetry::BeginGetInstalledContentIds
WindowsUpdate::CommonTelemetry::BeginInstallOperationRequest
WindowsUpdate::CommonTelemetry::BeginUpdateMetadataPrepare
WindowsUpdate::CommonTelemetry::CompleteGetSlsURL
WindowsUpdate::CommonTelemetry::CompletePostCampaignData
WindowsUpdate::CommonTelemetry::EndGetInstalledContentIds
WindowsUpdate::CommonTelemetry::EndInstallOperationRequest
WindowsUpdate::CommonTelemetry::EndUpdateMetadataPrepare
WindowsUpdate::CommonTelemetry::FulfillmentComplete
WindowsUpdate::CommonTelemetry::FulfillmentInitiate
WindowsUpdate::CommonTelemetry::GenerateIfMissingCorrelationVector
WindowsUpdate::CommonTelemetry::LogCompletePurchase
WindowsUpdate::CommonTelemetry::LogCreatePurchase
WindowsUpdate::CommonTelemetry::LogGetProductData
WindowsUpdate::CommonTelemetry::LogHttpGetFile
WindowsUpdate::CommonTelemetry::LogUpdateByPFN
WindowsUpdate::CommonTelemetry::ResumeOperationRequest
WindowsUpdate::CommonTelemetry::SearchForUpdateOperationRequest
WindowsUpdate::CommonTelemetry::StateTransition
WindowsUpdate::CommonTelemetry::TraceError
WindowsUpdate::CommonTelemetry::UpdateAppOperationRequest
WindowsUpdate::Internal::FulfillmentDataInfo::RuntimeClassInitialize
WindowsUpdate::Internal::FulfillmentDataInfo::StoreInContentIdCache
WindowsUpdate::Internal::InstallControl::GetAvailableUpdates
WindowsUpdate::Internal::InstallControl::Invoke
WindowsUpdate::Internal::InstallControl::SmartRetryAsync
WindowsUpdate::Internal::InstallItem::_OnWorkStatusChanged
WindowsUpdate::Internal::InstallItem::BackgroundRetry
WindowsUpdate::Internal::InstallItem::CreateCheckpoint
WindowsUpdate::Internal::InstallItem::LogState
WindowsUpdate::Internal::InstallItem::OnWorkFinish
WindowsUpdate::Internal::InstallItem::OnWorkStart
WindowsUpdate::Internal::InstallItem::ShowNotification
WindowsUpdate::Telemetry::AbortedInstallation
WindowsUpdate::Telemetry::BeginAcquireLicense
WindowsUpdate::Telemetry::BeginDownload
WindowsUpdate::Telemetry::BeginFrameworkUpdate
WindowsUpdate::Telemetry::BeginGetFreeEntitlement
WindowsUpdate::Telemetry::BeginInstall
WindowsUpdate::Telemetry::BeginScanForUpdates
WindowsUpdate::Telemetry::BeginSearchUpdatePackages
WindowsUpdate::Telemetry::BeginStageUserData
WindowsUpdate::Telemetry::CancelInstallation
WindowsUpdate::Telemetry::EndAcquireLicense
WindowsUpdate::Telemetry::EndDownload
WindowsUpdate::Telemetry::EndFrameworkUpdate
WindowsUpdate::Telemetry::EndGetFreeEntitlement
WindowsUpdate::Telemetry::EndInstall
WindowsUpdate::Telemetry::EndScanForUpdates
WindowsUpdate::Telemetry::EndSearchUpdatePackages
WindowsUpdate::Telemetry::EndStageUserData
WindowsUpdate::Telemetry::LaunchAfterInstall
WindowsUpdate::Telemetry::PauseInstallation
WindowsUpdate::Telemetry::ResumeInstallation
WINHTTP.dll
WinHttpCloseHandle
WinHttpConnect
WinHttpCrackUrl
WinHttpCreateUrl
WinHttpGetDefaultProxyConfiguration
WinHttpGetIEProxyConfigForCurrentUser
WinHttpGetProxyForUrl
WinHttpOpen
WinHttpOpenRequest
WinHttpQueryDataAvailable
WinHttpQueryHeaders
WinHttpQueryOption
WinHttpReadData
WinHttpReceiveResponse
WinHttpSendRequest
WinHttpSetOption
WinHttpSetTimeouts
winrt::hresult_error: %ls
winrt::Windows::Internal::InstallService::Control::implementation::InstallServiceControl::ScheduleWorkWithUO
Winsta0\Default
WinStoreAuth::_SendTokenRequestAndGetTickets
WinStoreAuth::AuthenticationInternal::CaptureGoldenAccountTicket
WinStoreAuth::AuthenticationInternal::CaptureStorePrimaryAccountId
WinStoreAuth::AuthenticationInternal::CaptureStorePrimaryAccountTicket
WinStoreAuth::AuthenticationInternal::CreateAuthenticationManager
WinStoreAuth::AuthenticationInternal::CreateGoldenAccountTokenRequest
WinStoreAuth::AuthenticationInternal::CreateLegacyTicketRequest
WinStoreAuth::AuthenticationInternal::CreateTokenBroker
WinStoreAuth::AuthenticationInternal::CreateTokenBrokerInternal
WinStoreAuth::AuthenticationInternal::CreateTokenRequestHelper
WinStoreAuth::AuthenticationInternal::ExtractAccountId
WinStoreAuth::AuthenticationInternal::ExtractProviderType
WinStoreAuth::AuthenticationInternal::ExtractTicket
WinStoreAuth::AuthenticationInternal::ExtractTicketFromTokenResponse
WinStoreAuth::AuthenticationInternal::ExtractTicketsFromTokenResult
WinStoreAuth::AuthenticationInternal::FetchStoreAccountIdFromRegistry
WinStoreAuth::AuthenticationInternal::FetchXboxLiveAccountId
WinStoreAuth::AuthenticationInternal::FindAccount
WinStoreAuth::AuthenticationInternal::FindCachedStorePrimaryAccount
WinStoreAuth::AuthenticationInternal::GetAccountProvider
WinStoreAuth::AuthenticationInternal::GetAllAccountTickets
WinStoreAuth::AuthenticationInternal::GetAllTokenBrokerAccounts
WinStoreAuth::AuthenticationInternal::GetAllXTokens
WinStoreAuth::AuthenticationInternal::GetCurrentIUser
WinStoreAuth::AuthenticationInternal::GetDeviceTicketWithBroker
WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountId
WinStoreAuth::AuthenticationInternal::GetStorePrimaryAccountTicketForUri
WinStoreAuth::AuthenticationInternal::GetTicketForAccount
WinStoreAuth::AuthenticationInternal::GetXToken
WinStoreAuth::AuthenticationInternal::ManagePropertiesFromTokenResponse
WinStoreAuth::AuthenticationInternal::PrefixTicketForMDollar
WinStoreAuth::GatherAllStoreTickets
WinStoreAuth::GatherAllStoreTickets( WinStoreAuth::AccountProviderType::AAD, &tickets, spWebTokenRequestResults.GetAddressOf())
WinStoreAuth::GetDeviceTicket
WinStoreAuth::GetDeviceTicket(authTicket.GetAddressOf())
WinStoreAuth::GetDeviceTicketWithBroker(true, authTicket.GetAddressOf())
WinStoreAuth::GetStorePrimaryAccountTicket( authTicket.GetAddressOf(), &providerType, spWebTokenRequestResult.GetAddressOf())
WinStoreAuth::GetStorePrimaryAccountTicket(authTicket.GetAddressOf(), &providerType, ppWebTokenRequestResult)
WinStoreAuth::GetStorePrimaryAccountTicketForUser
WinStoreAuth::GetTicketsForAccount(accountId.Get(), providerId.Get(), authority.Get(), &tickets, spWebTokenRequestResult.GetAddressOf())
WinStoreAuth::GetTicketsForAccountForUser
WinStoreAuth::SetProxyBlanket
WinstoreAuth_SendTokenRequestAndGetTickets_Failure
WinstoreAuth_SLSFailure
WinstoreAuth_UserAuthRequired
Wldp.dll
WldpIsAppApprovedByPolicy
WLID1.0=
WNetGetConnectionW
Work already enqueued. Refusing to queue duplicate work
Work does not apply to the user requesting the operation
Work is ending abnormally.  Returning error: 
Work is null, so not setting InstallService connection and not resuming.
WorkId
workId
Working
Working = %zu, Pending = %zu, Idle = %zu 
WorkItem
WorkProperties
workPropertiesJSON
WorkPropertiesJSON
WorkState
wp8xappx
wRH9Q
WriteFile
Writing updated Checkpoint-Blob to file for productId = %s, dataSize = %d
WSLicenseManager
WSLicensingService-AllowDisablingStoreApps
WTn'A
WU query: "%s"
WU Scan failed due to server load shedding.
WU Scan failed due to server load shedding. Requested retry interval = %ld mins
WU scan found %d packages
WU search failed, orc = %d
WUCategoryId
WuCategoryId
WUContentId
WUProgressBase<struct IDownloadProgressChangedCallback,struct IDownloadCompletedCallback,struct IDownloadJob,struct IDownloadProgress,struct IDownloadProgressChangedCallbackArgs,struct IDownloadCompletedCallbackArgs,struct IUpdateDownloadResult>::Invoke
WUProgressBase<struct IInstallationProgressChangedCallback,struct IInstallationCompletedCallback,struct IInstallationJob,struct IInstallationProgress,struct IInstallationProgressChangedCallbackArgs,struct IInstallationCompletedCallbackArgs,struct IUpdateInstallationResult>::Invoke
www.microsoft.com
x $"D R$6
x ATAVAWH
x AVAWH
x AVAWI
x AVH
x AVL
x AW3
x AWH
x UATAUAVAWH
x UATAVH
x UAVAWH
x&D8}8t H
x)D8l$Pt"I
x.@2F4
X_^[]
X_^][
x>L9u'v>H
x4p2p8
x86a64
XA^A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^[]
xbox\SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State
xbox\SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State\CategoryCache
xbox\SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State\PluginList
xbox\SOFTWARE\Microsoft\Windows\CurrentVersion\InstallService\State\StaticPluginMap
XboxConsoleGenCompatible
XboxCrossGenSetId
XboxLiveAuthenticationDomain
XboxUserId
xDD8mHu>H
xE9t$Xv?H
Xext-ms-win-session-usermgr-l1-1-0.dll
xIH9|$0t
XJV*Z
xKD8e
xmlDocument->CreateTextNode(content, &spText)
xmlDocument->GetElementsByTagName(HStringReference(L"text").Get(), &spTextNodes)
xrL9e
xS@8|$Pt$@
Xt$pH
xX9t$`t
x-xbl-contract-version:2
xzD9}0v<H
y dt1kQ
Y0;D$@
y0;D$`
y8uEH
YRo>M
z(J&:
z0;D$ 
z2*4p6
zR|&~>|~
