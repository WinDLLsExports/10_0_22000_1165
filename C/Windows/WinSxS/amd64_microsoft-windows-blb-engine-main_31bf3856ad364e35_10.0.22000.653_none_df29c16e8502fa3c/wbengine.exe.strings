                                 uiAccess="false"/>
                    name="WBEngineRunAsInvoker"
                    type=""/> 
            val AppID = s '%APPID%'
        '%APPID%' = s 'Service'
        {
        }
        </requestedPrivileges>
        <requestedExecutionLevel level="asInvoker"
        'Service.EXE'
       </security>
      <requestedPrivileges>
      processorArchitecture="amd64"
    {
    }
    <assemblyIdentity version="1.0.0.0" 
    <security>
    NoRemove AppID
  <!-- Identify the application security requirements. -->
  </trustInfo>
  <description>The manifest for the Windows Backup Engine service </description> 
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
 }1Lc
 A\_]
 A\_^
 A]_^
 A]A\_
 A]A\_^]
 A^_[
 A^_]
 A^_^
 A^A\_
 A^A\_][
 A^A]_
 A^A]_^]
 A^A]A\
 A__^
 A__^[]
 A_A\_
 A_A\_^]
 A_A]_
 A_A]A\
 A_A]A\_^[]
 A_A^^
 A_A^_
 A_A^_][
 A_A^_^[
 A_A^_^]
 A_A^A\
 A_A^A\_]
 A_A^A\_^
 A_A^A\_^][
 A_A^A]
 A_A^A]_^
 A_A^A]_^[]
 A_A^A]A\_
 A_A^A]A\_^]
 Block Level Backup Engine Service EXE
 D8yht
 H3E H3E
 Microsoft Corporation. All rights reserved.
 not 
 Operating System
 rdfD9C
 t|A8p)us
 taD8E
 tf@8r)u
 tK;|$pr
 Windows
!!(SUCCEEDED(hr)) == !!(NT_SUCCESS(ntStatus))
!(* pStr)
!(bDFSRWriter && bFRSWriter)
!\$ H
!\$(3
!\$(A
!\$(E3
!\$(H
!\$`3
!\$`H
!\$8E3
!\$PH
!_isCompactForm
!_isReadInitialized
!|$ I
!|$0H
!|$pH
!|$xH!
!}8!}0H!]@D
!>A!>H
!>H!8
!bBlind
!bFound
!bTargetFailure
!CHUNKED(m_ulFeatures)
!fRet
!IsBuilt()
!IsListEmpty(&diffsInSource)
!iteratorErrorInfo.pstrDirectory
!l$(D
!l$(E
!l$`L
!m_bAsyncInProgress
!m_bGlobalCatalog
!m_bInitialized
!m_bIsCatalogLoadedFromTarget || (m_pTargetCatalogSystem != NULL)
!m_bstrCurrentSubComponentName && !m_bstrCurrentFilePath
!m_fInitialized
!m_hCryptHash
!m_hFmifs
!m_pAsyncHelper
!m_pAsyncRef
!m_pbHashObject
!m_pCatalogSystem
!m_pSecurityDescriptor
!m_spVssAsync
!m_spVssBackupComponents
!pAtomTable != NULL
!pCatalog->m_bGlobalCatalog
!pDependencyCtxt->m_wszRemoteMachineName
!pLatestDirectoryList->directoryList.IsEmpty()
!pTable->IsGlobalCatalog()
!pVssComponentInfo
!rgVolumeUsnInfo[iVolume].m_bValid
!s_pFormatBackupContext
!t$HH
!t$pI
!This program cannot be run in DOS mode.
!VOLUME_IS_INCREMENTAL(pVolumeContext->m_dwVolumeFlags)
!wszIteratorSnapshotFilePath
"ExcludeDisk"="%d",
"InjectDrivers"="%d"
"SkipDiskRecreation"="%d","InjectDrivers"="%d","BootVolumeName"="%s","SystemVolumeName"="%s"
'$#=G
$AllVolumes$
$H;A@u
$L9l$8t
$UserProfile$
%%%%%u
%.4u-%.2u-%.2uT%.2u:%.2u:%.2u
%02d-%02d-%04d_%02d-%02d-%02d
%04X.%04X::%02d/%02d-%02d:%02d:%02d.%03d#%02d:%s(%d)%s: %s
%PROCESSOR_ARCHITECTURE%
%ProgramData%\Microsoft\Windows\DRM\ 
%s-%d-%d-%04d-%02d.%02d-DVD%02d
%s,%u
%s.%d.%s
%s.0.%s
%s.vhdx
%s\%s\%s
%s\%s{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
%SystemRoot%\Logs
%SystemRoot%\Logs\WindowsServerBackup\WBEngine.0.etl
%windir%\system32\spp\store_test\2.0\
%windir%\System32\wbadmin.exe
%ws-%ws.log
%ws%ws\%ws
%ws%ws\%ws\%ws
%ws%ws\%ws\%ws\
%ws: lVal : %S
%ws\%ws
%ws\%ws-%ws.log
%ws\%ws*
%ws\%ws\%ws
%ws\%ws\%ws\%ws\
%ws\{%ws}
%ws_%ws_%ws
&@8l$ht_H
&amp;
&I9X t
&SmartStr != this
(!isTemplate && !IsGlobalCatalog()) || (isTemplate && IsGlobalCatalog())
(!m_fInitialized && (m_strRootDirectoryFullPath.Length() == 0) && m_queuedDirectoryTree.IsEmpty()) || (m_fInitialized && (m_strRootDirectoryFullPath.Length() > 0) && m_rootDirectoryData.fSent)
(((DWORD_PTR) &pb[cbPad + 1 + sizeof(DWORD)]) & 0x7) == 0
(((HRESULT)(hr)) < 0) || (*ppstrFilePath != 0)
((DWORD)-1) != dwFileAttributes
((DWORD)wcslen(wszVolumeAccessPath) > 2) && (wszVolumeAccessPath[(DWORD)wcslen(wszVolumeAccessPath) - 1] == '\\')
((HANDLE)(LONG_PTR)-1) != hVolume
((HANDLE)(LONG_PTR)-1) != m_hFile
((HANDLE)(LONG_PTR)-1) == hVolume
(*pcVolumes == 0) == (*prgVolumes == NULL)
(|$0D
(A^_^[
(A_A^_^[]
(A_A^A\_^[
(A_A^A]A\_^[]
(A_A^A]A\_^][
(cComponents == 0) == (rgComponents == NULL)
(cIncludedComponent == 0) == (rgIncludedComponent == NULL)
(cSkippedWriterInfo == 0) == (rgSkippedWriterInfo == NULL)
(cSPPComponents == 0) == (rgSPPComponents == NULL)
(cVolumesInBackup == 0) == (rgVolumesInBackup == NULL)
(D$ H
(D$@H
(D$`H
(eLogOperationType > BLB_LOG_OPTYPE_UNDEFINED) && (eLogOperationType <= BLB_LOG_OPTYPE_FILE_RESTORE)
(fLoThreshold >= 0) && (fLoThreshold < fOptimalLoad)
(H;L$@v
(iElement+nElements) <= m_nSize
(length == BLBIMGI_BYTES_PER_BLOCK) || isLastBlockInSource
(m_cCurrentSubComponentIndex != -1) && (m_cCurrentSubComponentIndex < (int)m_arrVssWMComponents.GetCount())
(m_iteratorState == FIRST_FILE) || (m_iteratorState == NEXT_DIRECTORY)
(m_pPerformanceSetting->m_eOverallPerformanceSettingType == BLB_PST_ALWAYS_FULL) || (m_pPerformanceSetting->m_eOverallPerformanceSettingType == BLB_PST_ALWAYS_INCREMENTAL) || (m_pPerformanceSetting->m_eOverallPerformanceSettingType == BLB_PST_CUSTOM)
(pPerformanceSettings->m_eOverallPerformanceSettingType == BLB_PST_ALWAYS_FULL) || (pPerformanceSettings->m_eOverallPerformanceSettingType == BLB_PST_ALWAYS_INCREMENTAL) || (pPerformanceSettings->m_eOverallPerformanceSettingType == BLB_PST_CUSTOM)
(pPerformanceSettings->m_rgePerformanceSettingType[i] == BLB_PST_ALWAYS_FULL) || (pPerformanceSettings->m_rgePerformanceSettingType[i] == BLB_PST_ALWAYS_INCREMENTAL)
(pstrIteratorPath != 0) || (hr == ((HRESULT)1L))
(rgComponentNameOrdered[i] != NULL) && (rgComponent[j].m_wszName != NULL)
(rgSpecs && cSpecs > 0) || (!rgSpecs && !cSpecs)
(ssVolumeRelativePath.Length() > 0) && (ssVolumeRelativePath[0] == L'\\') && (ssVolumeRelativePath[ssVolumeRelativePath.Length()-1] == L'\\')
(t$ H
(t$@H
(t$`H
(t$PL
(this->m_pPerformanceSetting->m_rgePerformanceSettingType[i] == BLB_PST_ALWAYS_FULL) || (this->m_pPerformanceSetting->m_rgePerformanceSettingType[i] == BLB_PST_ALWAYS_INCREMENTAL)
(UINT)stat
)|$0D
)D$ H;
)D$PH;
)E'Hk
)t$@H
)t$`H
)t$pH
*.vhd
*_AdditionalFiles*.xml
*_Writer*.xml
*pguidMediaId != GUID_NULL
*ph != INVALID_HANDLE_VALUE
*ppAsync != NULL
*ppstrFilePath
*ppstrFilePath || ((hr == ((HRESULT)1L)) && (m_queuedDirectoryTree.IsEmpty()))
*ppstrFilePath == 0
*ppstrLogicalFilePath == 0
*ppstrSnapshotPath == 0
*pwszComputerName!=NULL
*wszTargetVolumeName
.?AV_com_error@@
.?AVCAtlException@ATL@@
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.data
.data$brc
.data$r$brc
.edata
.gehcont
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.pdata
.rdata
.rdata$brc
.rdata$T$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.vhdx
.xdata
.xdata$x
/fD;e
::GetLengthSid(pSid) < (sizeof(SID) - sizeof(ULONG) + ((15) * sizeof(ULONG)))
::GetVolumeNameForVolumeMountPointW(pstrNewLongPath, wszVolumeGuidName, 260)
:PAR(A;OICI;FA;;;BA)(A;OICI;FA;;;BO)(A;OICI;FA;;;CO)
;\$0r
;\$8|
;|$0r
;|$pt
;D$ v
;D$@}
;D$H}
;EXrAH
;l$`uF;\$hu@H
;L$0s
;s(s=
;s(sUI
;T$@s
;t$4r
;T$4t1L
;Wbengine(PID:%ld,TID:%ld) Assertion Failed: %s(%d): %s
;xPucH
??_V@YAXPEAX@Z
??0CTraceFailureHelper@@QEAA@AEAVCTraceProvider@@JPEBGKPEBX@Z
??0CTraceFunction@@QEAA@AEAVCTraceProvider@@PEBGH1PEBX@Z
??0CTraceHelper@@QEAA@AEAVCTraceProvider@@PEBGKPEBX@Z
??0CTraceProvider@@QEAA@W4COMPONENT_CODE@@@Z
??1CTraceFunction@@QEAA@XZ
??1CTraceProvider@@QEAA@XZ
??1type_info@@UEAA@XZ
??4CTraceProvider@@QEAAAEAV0@AEBV0@@Z
?@8{ toH
?333333
?EtwEnabled@CTraceProvider@@QEAA_NW4TRACE_FLAG@@@Z
?EtwTrace@CTraceProvider@@QEAAXAEBUDLS_TRACE_EVENT@@@Z
?m_dwTraceCurrSize@CTraceProvider@@0KA
?m_dwTraceLevel@CTraceProvider@@0KA
?m_dwTraceMaxNum@CTraceProvider@@0KA
?m_dwTraceMaxSize@CTraceProvider@@0KA
?m_dwTraceNextNum@CTraceProvider@@0KA
?m_errLogCriticalSection@CTraceProvider@@0U_RTL_CRITICAL_SECTION@@A
?m_errorFile@CTraceProvider@@0PEAU_iobuf@@EA
?m_errorTracingInBadState@CTraceProvider@@0_NA
?m_isCriticalSectionIntialized@CTraceProvider@@0_NA
?OdsEnabled@CTraceProvider@@QEAA_NW4TRACE_FLAG@@@Z
?OdsTrace@CTraceProvider@@QEAAXAEBUDLS_TRACE_EVENT@@@Z
?QueryTaskId@CTraceProvider@@SA?AU_GUID@@XZ
?SetTraceControlInfo@CTraceProvider@@QEAAX_N_KK@Z
?terminate@@YAXXZ
?Trace@CTraceProvider@@QEAAXW4TRACE_FLAG@@PEBGKPEBX1PEAD@Z
?TraceMessage@CTraceFailureHelper@@QEAAXPEBGZZ
?TraceMessage@CTraceHelper@@QEAAXW4TRACE_FLAG@@PEBGZZ
@(ulPos < m_Size) && (ulPos >= 0)
@.data
@.reloc
@.rsrc
@4?3@
@8{ t
@8{8t
@8{yH
@8~(t
@8~Ht
@8l$`u
@8l$pt>H
@8l$xtjH
@8o tZ
@8s(t}H
@8t$[tAE3
@8t$0
@8t$8t
@8t$P
@8t$Xt
@8t$ZtB
@8u@uvM
@8u`tCH
@8uoL
@8w tFH
@8w8u
@8yHu
@8yZu
@A\_]
@A]A\_
@A]A\_^]
@A^_]
@A^_^
@A^A\_
@A^A\_^]
@A^A]^][
@A^A]_
@A^A]_^[
@A^A]_^]
@A^A]A\^]
@A^A]A\_^[]
@A__^
@A_A\^
@A_A\_
@A_A\_[]
@A_A\_^]
@A_A]_
@A_A]A\
@A_A]A\_^[]
@A_A^]
@A_A^_
@A_A^_^]
@A_A^A\
@A_A^A\_^
@A_A^A\_^[]
@A_A^A\_^][
@A_A^A]
@A_A^A]_^[]
@A_A^A]_^][
@A_A^A]A\_^[
@A_A^A]A\_^]
@SUVAUAVH
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWATH
@SUVWAUAVAWH
@SUVWAUAVH
@SUVWAVH
@SUVWAWH
@SUWATAVH
@SVWATAUAVAW
@SVWATAUAVAWH
@SVWAVAWH
@SVWH
@SWAVH
@tJI;
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAUAWH
@USVWATAVAWH
@USVWATAVH
@USVWAUAVAWH
@USVWAUH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWATAUAVAWH
@USWATAWH
@USWAUAVH
@USWH
@UVWAVAWH
@v'fA
[t5.i
[traceprovider-trace] Failed: %ws: %#010x
\$ 9u
\$ A;
\$ E3
\$ UH
\$ UVW
\$ UVWATAUAVAW
\$ UVWATAUAVAWH
\$ UVWATAUH
\$ UVWATAVH
\$ UVWATAWH
\$ UVWAUAVH
\$ UVWAVAWH
\$ UVWH
\$ UWATAVAWH
\$ UWAVH
\$ VWAUAVAWH
\$ VWAVH
\$ VWAWH
\$ WH
\$(A_A^A]A\
\$(E3
\$(H;
\$@9_P
\$@E3
\$@H9
\$`H;
\$|;_@umH
\$0E3
\$0H;
\$0Hi
\$8E3
\$8H9
\$hD9[ 
\$hE3
\$HE3
\$HM9wP
\$pD8s@
\$PE3
\$pE3
\$pH;
\$PI;
\$px I+
\$px#H+
\$XA;
\$XE3
\$xE3
\$xr3L
\%s%s
\%s%s.catalog
\%s%s_AdditionalFiles%s.xml
\%s%s_Components.xml
\%s%s_RegistryExcludes.xml
\%s%s_Writer%s.xml
\%s*.catalog
\%s*_AdditionalFiles%s.xml
\%s*_Components.xml
\%s*_RegistryExcludes.xml
\\%s\%s\
\\%ws\%ws
\\.\PhysicalDrive%d
\\?\GLOBALROOT
\\?\GLOBALROOT%s
\\?\GLOBALROOT%ws
\\?\GLOBALROOT\Device\
\\?\Globalroot\Device\Harddisk%lu\Partition1
\\?\Globalroot\Device\Harddisk%lu\Partition2
\\?\GLOBALROOT\DEVICE\HARDDISKVOLUME%d
\\?\Globalroot\Device\HarddiskVolume%lu
\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy{
\\?\UNC\
\\?\Volume
\\?\Volume%s
\\?\Volume%ws\
\\?\Volume{
\Backup
\Backup %04u-%02u-%02u %02u%02u%02u
\Backup *
\Backup*
\hiberfil.sys
\Implemented Categories
\Mb=Lk
\MediaId
\Microsoft\Windows
\pagefile.sys
\Required Categories
\System Volume Information\
\System Volume Information\*{3808876B-C176-4e48-B7AE-04046E6CC752}
\SystemStateBackup
\TempMediaId
\tTA8
\UNC\
\Windows\bootstat.dat
\Windows\System32\config\Software
\WindowsImageBackup
]HD9}X
]PH9_
^&base\stor\blb\catalog\catsys.cpp
^7pstrFilePath && *pstrFilePath
^base\stor\blb\dsm\dsmutils\dll\stringutils.cpp
^hH9FP}
_((HANDLE)(LONG_PTR)-1) != hFile
__atl_condVal
__C_specific_handler
__CxxFrameHandler4
__dllonexit
__set_app_type
__setusermatherr
__wgetmainargs
_amsg_exit
_batBlockList[_currentBlockListNumber] != 0xFFFFFFFF
_batList[diskBlockOffset] != 0xFFFFFFFF
_batRelativeVolumePointer >= BLBIMGF_SECTOR_SIZE
_blockBitmap.SizeOfBitMap >= 1
_callnewh
_cexit
_commode
_compressionReadAheadBufferOverlapped.hEvent
_currentBitNumber == 0
_currentBlockListNumber < _batBlockListLength
_currentFilePointer < _maximumFileSize
_currentFilePointer <= _maximumFileSize
_currentFileSize >= _existingFileSize
_CxxThrowException
_errno
_exit
_fmode
_handle != NULL
_handle == NULL
_hImpersonationToken != INVALID_HANDLE_VALUE
_initterm
_isCompactForm == FALSE
_lock
_newVhdFormat
_onexit
_pAtlModule == 0
_purecall
_scwprintf
_unlock
_VerifyPadBytes(pb + 1, cbPad) == S_OK
_vsnprintf
_vsnwprintf
_wcmdln
_wcsicmp
_wcsicmp(pDiffArea->m_pwszVolumeName, wszTargetVolumeName) == 0
_wcsicmp(pDiffArea->m_pwszVolumeName, wszVolumeName) == 0
_wcsnicmp
_wcsnicmp(pstrIteratorPath, m_pIncludeFiles->ssFilePath.PeekStr(), wcslen(pstrIteratorPath)) == 0
_wcsnicmp(ssActualFilePath.PeekStr(), m_pIncludeFiles->ssFilePath.PeekStr(), m_pIncludeFiles->ssFilePath.Length()) == 0
_wcstoi64
_wgetenv
_wtoi
_wtol
_XcptFilter
` AUAVAWH
` AVH
` UAUAVH
` UAUAWH
` UAVAWH
`.rdata
`A^_^
`A^_^][
`A^A]_^]
`A^A]A\_]
`A^A]A\_^[]
`A_A]A\_^[]
`A_A^_^]
`A_A^A\^]
`A_A^A\_^[]
`A_A^A]_^[]
`A_A^A]A\_[]
`A_A^A]A\_^[
`A_A^A]A\_^]
{ ATAVAWH
{ AVH
{ AWH
{ UAVAWI
{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
{@9{pv
{3808876B-C176-4e48-B7AE-04046E6CC752}
{8H;{@
{C3B65D83-FB15-4e3f-BA04-097D1E2B5AC1}
{XH;{`r
|$ ATAVAWH
|$ AUAVAWH
|$ AVH
|$ AWH
|$ E3
|$ fD
|$ L9y0t
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$ wdnitHH
|$(A^
|$(A_
|$(E3
|$(L;
|$@fA
|$@H;
|$\L;
|$`E3
|$`H;
|$|.u
|$0 t
|$0{H
|$0D8\$3tN
|$0E3
|$0H;
|$0H;;t1H
|$0L;
|$4drJH
|$4H;
|$4L;
|$8E3
|$8I!u
|$bE3
|$D+|$@
|$H;t$D
|$HL;
|$HL;t$`r#L
|$LL;
|$P8\$0tZH
|$PE3
|$pE3
|$PE3
|$pE3
|$pfD
|$pH;
|$PH9l$`t
|$PL;
|$pmotatFH
|$TI;
|$TL;
|$XH!|$`H!|$h!|$p3
|$Xhs;H
|$XhsBH
|$XI;
|$YA9
|base\stor\blb\engine\service\filebackup.cpp
|TaskID=%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
}HH!}
}PH9>u
~ M;~(r
~(*@base\stor\blb\engine\service\wrapper.cpp
~8HcM
+\$hH
<!-- Copyright (c) Microsoft Corporation -->
<--%s
<%ws>
</%ws>
</AdditionalFiles>
</AppInfo>
</AppInfoItem>
</assembly>
</BackupSpecs>
</ComponentInfo>
</ComponentSpecs>
</ComponentStatus>
</FileInfo>
</FileSpecs>
</TimesList>
</Volume>
</VolumeInfo>
</WriterInfo>
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<>:"/\|
<AdditionalFiles>
<AllCritical IsPresent="%ws" />
<AppInfo>
<AppInfoItem ComponentName="%ws" LogicalPath="%ws" Caption="%ws" HResult="%d" DetailedHResult="%d" NumBytesProcessed="%I64d" NumBytesToProcess="%I64d" ComponentRestoreState="%d" NoOfFilesFailed="%I64d" NoOfFilesProcessed="%I64d" WriterGuid="%ws" NoOfDepenedncies="%d" IsFailureInDependency="%d" >
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0"> 
<BackupSpecs Version="%u">
<BMR IsPresent="%d" HResult="%d" DetailedHResult="%d" />
<ComponentInfo>
<ComponentInfoItem WriterId="{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}" InstanceId="{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}" Name="%ws" LogicalPath="%ws" Caption="%ws" AppName="%ws" hResult="%d" hDetailedResult="%d" IsFullBackup="%d" FullBackupReason="%d" Size="%I64u" DataTransferred="%I64u" TotalNoOfFiles="%I64u" />
<ComponentInfoSummary ComponentInfoArrayPresent="%d" TotalComponents="%d" SucceededComponents="%d" />
<ComponentSpec WriterId="{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}" InstanceId="{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}" ComponentName="%ws" LogicalPath="%ws" Caption="%ws" />
<ComponentSpecs>
<ComponentStatus>
<ComponentStatusItem Name="%ws" LogicalPath="%ws" Caption="%ws" AppId="%ws" WriterId="{%ws}" InstanceId="{%ws}" ConsistencyCheckResult="%d" ConsistencyCheckResultDetailed="%d"/>
<ExcludeFile FilePath="%ws" FileSpec="%ws" IsRecursive="%ws" />
<FileInfo>
<FileInfoItem Name="%ws" HResult="%d" DetailedHResult="%d" FileRestoreState="%d" NoOfFilesFailed="%lld" NoOfBytesProcessed="%lld" NoOfFilesProcessed="%lld" NoOfBytesToProcess="%lld" /> 
<FileSpec FilePath="%ws" FileName="%ws" IsRecursive="%ws" IsInclude="%ws" />
<FileSpecs>
<IncludeFile FilePath="%ws" FileSpec="%ws" IsRecursive="%ws" />
<SystemState IsPresent="%d" HResult="%d" DetailedHResult="%d" />
<SystemState IsPresent="%ws" />
<Time Time="%04d-%02d-%02dT%02d:%02d:%02d.%03dZ" />
<TimesList>
<Volume Name="%ws" AccessPath="%ws" OriginalAccessPath="%ws" Label="%ws" OriginalLabel="%ws" >
<VolumeInfo>
<VolumeInfoItem Name="%ws" OriginalAccessPath="%ws" State="%d" HResult="%d" DetailedHResult="%d" PreviousState="%d" IsCritical="%d" IsIncremental="%d" BlockLevel="%d" HasFiles="%d" HasSystemState="%d" IsCompacted="%d" IsPruned="%d" IsRecreateVhd="%d" FullBackupReason="%d" DataTransferred="%I64u" NumUnreadableBytes="%I64i" TotalSize="%I64u" TotalNoOfFiles="%I64u" Flags="%lu" BackupTypeDetermined="%d" SSBTotalNoOfFiles="%I64u" SSBTotalSizeOnDisk="%I64u" />
<VolumeInfoItem Name="%ws" RecoveryTargetVolumeName="%ws" HResult="%d" DetailedHResult="%d" VolumeRestoreState="%d" NoOfBytesProcessed="%lld" NoOfBytesToProcess="%lld"  Warnings="%lu" ChkDskHResult="%d" OriginalSectorSize="%lu" TargetSectorSize="%lu" BackupTargetUnreadableBytes="%I64d" RestoreTargetUnwritableBytes="%I64d" /> 
<VolumeInfoItem Name="%ws"/>
<WriterInfo>
<WriterInfoItem Name="%ws" HResult="%d" NumOfComponents="%d" NoOfFilesProcessed="%lld" NoOfFilesFailed="%lld" NoOfBytesProcessed="%lld" TotalNumOfBytes="%lld" />
==>%s
=L9o<
=T%UU
=wszOriginalAccessPath != NULL
>*tLf
>*u1fA
>{uOH
>9>u@9~
>L9|$ t
>m_pVolumeCat != NULL
0 != lpstrFilePath
0 != pAllocationDeltaSize && 0 < (*pAllocationDeltaSize)
0 != pdwFileAttributes
0 != pFileAttributes
0 != pFindData
0 != pMapEntries->szData
0 != pMaximumSize && 0 < (*pMaximumSize)
0 != pstrVolumeName
0 && L"Use OBJECT_ENTRY_NON_CREATEABLE_EX macro if you want to register class categories for non creatable objects."
0 == m_pbBuffer
040904B0
09q$vND
0A\_]
0A\_^][
0A]A\]
0A^_[
0A^_]
0A^_^
0A^A\_
0A^A\_^]
0A^A]_^]
0A^A]A\
0A^A]A\_^
0A__^
0A__^][
0A_A\_
0A_A]_^]
0A_A]A\_^
0A_A]A\_^[]
0A_A^_
0A_A^_^[
0A_A^_^]
0A_A^A\
0A_A^A\_]
0A_A^A\_^
0A_A^A\_^[]
0A_A^A]
0A_A^A]_]
0A_A^A]_^
0A_A^A]A\]
0A_A^A]A\^
0A_A^A]A\_
0A_A^A]A\_^]
0FbusldwBytesRead == dwBytesToRead
0MLs7
0r5fA
0x%08x
10.0.22000.653
10.0.22000.653 (WinBuild.160101.0800)
2pwszSystemDrive
3rd Party
4@L9|
4PA#fT
5`S:n
7fD;>u
8\$0uEH
8\$1u5H
8\$aueL
8\$HthH
8\u[f
8]`t'I
8]0u?A
8^!u/
8_!tC
8_^[]
8_lut8_tt
8~h`cb + sizeof(BYTE *) <= m_cbLeft
8A^_^[
8A^A\_^[]
8A^A]_^][
8A_A^_^[]
8A_A^A]A\_^[]
8A_A^A]A\_^][
8CHtIH
8D$0t
8D$1tHH
8D$2u
8D$At
8D$Au~H
8H9t$Pt
8L$0t
8L$0u
8L$pul
8L9} t
8L9}Ht
8M;49u
8T$@t
8T$1u
8VTuDH
9;v&H
9\$@vhL
9\$4vyH
9] |5H
9^DvgH
9_hv4H
9_xv7H
9{,v)H
9{@vUH
9{\vUH
9{DvKH
9{Hv@
9|$`v%H
9|$Ht
9}HtCH
9}PtCH
9~Hv<A
97v4M
9C u!I
9D$Hu$H
9D$pt
9Hur3
9i$vKH
9k@v*
9k@v1H
9k0v1H
9kHtPH
9kPv+
9L$<D
9L$0v-H
9L$HuZ
9L7 |e8M
9o(v;H
9oDvcL
9oPv&
9ppProperties
9sHvK
9sHvU
9sHvW
9T$`A
9t$4v'
9t$4v%H
9u@t@L
9u@v+
9uHt@L
9v(fA
9VPv!L
9W$v[
9w8v=
9wHvU
9y@~63
9y@vzA
9Y<w1L
9YPv{A
9yPv8
A H;E
A!4$E
A!7A!u
A(H;E
A;^Hr
A;}Xr
A;~Pr
A;Fpu
A;m(r
A;V$r
A;whr
A;wPr
A]_^[]
A]A\]
A^_^[
A^_^[]
A^_^][
A^A\]
A^A\_
A^A\_^]
A^A]]
A^A]_^]
A^A]A\^]
A^A]A\_]
A^A]A\_^
A^A]A\_^[]
A_A\_
A_A\_^]
A_A]]
A_A]A\_]
A_A]A\_^
A_A]A\_^[]
A_A^]
A_A^_
A_A^_^[
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]_^][
A_A^A]A\]
A_A^A]A\]H
A_A^A]A\^[]
A_A^A]A\_
A_A^A]A\_[]
A_A^A]A\_^
A_A^A]A\_^[
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A8_Ht!H
A9?uP
A9^$v#I
A9^$v0
A9|$$u
A9FHv<A
A9m(v3I
A9u@vDM
ActivateJournal(hVolume, pMaximumSize, pAllocationDeltaSize)
Active Directory
AddAce
Additional Files To Exclude
AdditionalFiles
AddProcessedExclusion(ssFilePath, ssFileSpec, fRecursive)
AdExcludeFiles failed for FilePath: %ls, FileSpec: %ls, Recursive: %ls
ADIFM
AdjustTokenPrivileges
advapi32.dll
ADVAPI32.dll
AllowAppRecFromPartialBackup
AllowSSBToAnyVolume
AllowSSEE
AllowSSRForOSMinorVersionMismatch
AlwaysRunCompaction
amd64
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
APPID
AppID
Application Backup hr
Application Identifier
ApplicationRestore
ApplicationRestore_Error
ARM64
arrExclusionElements.GetCount() == 0
ATAVAWH
ATL$__a
ATL$__m
ATL$__z
AttachVirtualDisk
AUAVAWH
B B"B$B&B(B*
B@kon|
B0I;D
B8I;D
b9T$`v
Backup
Backup Target Type
Backup_Error
Backup_Operations
BackupFileName != NULL
BackupGlobalCatalog
backupSetId != GUID_NULL
BackupSettings
BackupSpecs.xml
base\stor\blb\blbevents\publisher\blbpublisher.cpp
base\stor\blb\blbimg\backfile.cxx
base\stor\blb\blbimg\blbimg.cxx
base\stor\blb\blbimg\snapvol.cxx
base\stor\blb\bmr\asrrestore.cpp
base\stor\blb\catalog\atomtbl.cpp
base\stor\blb\catalog\atomtbl.hxx
base\stor\blb\catalog\bsettbl.cpp
base\stor\blb\catalog\catalog.cpp
base\stor\blb\catalog\catalog.hxx
base\stor\blb\catalog\catglbl.cpp
base\stor\blb\catalog\catlocal.cpp
base\stor\blb\catalog\cmpnttbl.cpp
base\stor\blb\catalog\compare.cpp
base\stor\blb\catalog\cursor.cpp
base\stor\blb\catalog\index.cpp
base\stor\blb\catalog\index.hxx
base\stor\blb\catalog\sorter.cpp
base\stor\blb\catalog\table.cpp
base\stor\blb\catalog\tgtstbl.cpp
base\stor\blb\catalog\volstbl.cpp
base\stor\blb\coresdk\smart\smartarray.hpp
base\stor\blb\coresdk\smart\smartregistry.hpp
base\stor\blb\coresdk\smart\smartstr.hpp
base\stor\blb\dsm\dsmfs\dll\directorystack.cpp
base\stor\blb\dsm\dsmfs\dll\exclusionhandler.cpp
base\stor\blb\dsm\dsmfs\dll\filesystemiterator.cpp
base\stor\blb\dsm\dsmfs\dll\volumeexclusions.cpp
base\stor\blb\dsm\dsmutils\dll\deletebase.cpp
base\stor\blb\dsm\dsmutils\dll\dsmfsenumerator.cpp
base\stor\blb\dsm\dsmutils\dll\fsutils.cpp
base\stor\blb\dsm\dsmutils\dll\fsutilswrapper.cpp
base\stor\blb\dsm\dsmutils\dll\stringutils.cpp
base\stor\blb\dsm\dsmutils\inc\DeleteBase.h
base\stor\blb\dsm\dsmutils\inc\FuncTable.h
base\stor\blb\engine\blbengutils\blbautoplay.cpp
base\stor\blb\engine\blbengutils\blbbackupitemsutils.cpp
base\stor\blb\engine\blbengutils\blbbackuptargetutils.cpp
base\stor\blb\engine\blbengutils\blbcatalogutils.cpp
base\stor\blb\engine\blbengutils\blbdeviceutils.cpp
base\stor\blb\engine\blbengutils\blbdiffareautils.cpp
base\stor\blb\engine\blbengutils\blbfsutils.cpp
base\stor\blb\engine\blbengutils\blbnetworkutils.cpp
base\stor\blb\engine\blbengutils\blbregsettingsutils.cpp
base\stor\blb\engine\blbengutils\blbresutils.cpp
base\stor\blb\engine\blbengutils\blbsecurityutils.cpp
base\stor\blb\engine\blbengutils\BlbSecurityUtils.h
base\stor\blb\engine\blbengutils\blbspputils.cpp
base\stor\blb\engine\blbengutils\blbstructutils.cpp
base\stor\blb\engine\blbengutils\blbsystemstateutils.cpp
base\stor\blb\engine\blbengutils\blbvhd.cpp
base\stor\blb\engine\blbengutils\blbvhdhelper.cpp
base\stor\blb\engine\blbengutils\Blbvhdhelper.h
base\stor\blb\engine\blbengutils\blbvolumemaputils.cpp
base\stor\blb\engine\blbengutils\blbvolumeutils.cpp
base\stor\blb\engine\blbengutils\blbwriterutils.cpp
base\stor\blb\engine\blbengutils\filelogger.cpp
base\stor\blb\engine\componenthelper\componentbackuphelper.cpp
base\stor\blb\engine\componenthelper\vssutils.cpp
base\stor\blb\engine\helper\blbbackupstatupdater.cpp
base\stor\blb\engine\service\appbackup.cpp
base\stor\blb\engine\service\application.cpp
base\stor\blb\engine\service\async.cpp
base\stor\blb\engine\service\async.h
base\stor\blb\engine\service\backup.cpp
base\stor\blb\engine\service\bmr.cpp
base\stor\blb\engine\service\component.cpp
base\stor\blb\engine\service\component.h
base\stor\blb\engine\service\deletebackup.cpp
base\stor\blb\engine\service\engine.cpp
base\stor\blb\engine\service\engine.h
base\stor\blb\engine\service\fileasync.cpp
base\stor\blb\engine\service\performancemanager.cpp
base\stor\blb\engine\service\prune.cpp
base\stor\blb\engine\service\restore.cpp
base\stor\blb\engine\service\restore.h
base\stor\blb\engine\service\restorefiles.cpp
base\stor\blb\engine\service\service.cpp
base\stor\blb\engine\service\sppmetadatamanager.cpp
base\stor\blb\engine\service\systemstatebackup.cpp
base\stor\blb\engine\service\systemstatebase.cpp
base\stor\blb\engine\service\verify.cpp
base\stor\blb\engine\usn\base\lib\usniterator.cpp
base\stor\blb\engine\usn\base\lib\usnjournalhelper.cpp
base\stor\blb\inc\blbutility.h
base\stor\blb\inc\errorutils.h
base\stor\blb\scheduler\parsetime.cpp
base\stor\blb\scheduler\scheduler.cpp
base\stor\blb\util\apputils.cpp
base\stor\blb\util\backupsetutils.cpp
base\stor\blb\util\blbtrace.cpp
base\stor\blb\util\blbutility.cpp
base\stor\blb\util\checksum.cpp
base\stor\blb\util\fileutils.cpp
base\stor\blb\util\locutils.cpp
base\stor\blb\util\networkutils.cpp
base\stor\blb\util\securityutils.cpp
base\stor\blb\util\stringutils.cpp
base\stor\blb\util\systemutils.cpp
base\stor\blb\util\volumeutils.cpp
base\stor\blb\util\vssfilereadhelper.cpp
base\stor\blb\wsbutil\vssrestore.cpp
base\stor\blb\wsbutil\wsbdeviceutils.cpp
base\stor\blb\wsbutil\wsbexclusionhelper.cpp
base\stor\blb\wsbutil\wsbfsutils.cpp
base\stor\blb\wsbutil\wsbnonwriterfiles.cpp
base\stor\blb\wsbutil\wsbsystemstateutils.cpp
base\stor\blb\wsbutil\wsbutils.cpp
base\stor\blb\wsbutil\wsbvdshelperlibrary.cpp
base\stor\blb\wsbutil\Wsbvdshelperlibrary.h
base\stor\blb\wsbutil\wsbvolumeutils.cpp
bcd.dll
BcdCloseStore
BcdForciblyUnloadStore
BcdImportStoreWithFlags
BcdOpenSystemStore
BcdSetSystemStoreDevice
bcrypt.dll
BCryptCloseAlgorithmProvider
BCryptCreateHash
BCryptDestroyHash
BCryptFinishHash
BCryptGetProperty
BCryptHashData
BCryptOpenAlgorithmProvider
bFound
BLB_USN_E_CRC_ERROR
blblog
blbres.dll
BlbutilIsEspVolume(m_dwTargetVolumeFlags) == FALSE
BlbutilIsEspVolume(m_rgVolumeContext[m_iCurrentVolume].m_dwVolumeFlags)
BlbutilIsEspVolume(rgVolumesInBackup[0].m_dwVolumeFlags)
blockNumberOnDisk != 0xFFFFFFFF
BMR hr
bNeedNetworkShare
BNYbase\stor\blb\engine\service\systemstaterestore.cpp
bPureSSB
bsiCat.m_cTarget == 1
bsiCat.m_wszBootVolumeAccessPath != NULL
bstrAlternateLocation.Length() == 0
bytesRead == len
C 9G t
C(H9CXw
C;\,D
C8;C 
C8H!t$@L
calloc
CancelIo
CancelIoEx
Caption
Catalog
cb == sizeof(GUID)
cb > BLB_CAT_CHECKSUM_SIZE
cBackupSetsInTarget > 0
cbHash == BLB_CHECKSUM_SIZE
cblgH
cbRet == sizeof(hotPlugInfo)
cbRet == sizeof(sadAdapterDesc)
cbSize > 0
ccolH
cComponent != 0
cComponentSpecs == lLen
CDirectoryStack::~CDirectoryStack
cDisk > 0
cDiskExtents == pExtents->NumberOfDiskExtents
CExclusionHandler::ProcessAndAddExclusion
cFileSpecs
cFileSpecs != 0
cFileSpecs == lLen
CFileSystemIterator::GetNextFilePathEx: Directory search error
CFuncTable::Uninitialize
CharNextW
CharUpperBuffW
CharUpperW
CheckTokenMembership
CheckUnitSizeInMB
Child_{47b7fa87-ce42-48ff-8b18-2f1088121503}
ChkdskEx
cIncludeSpecs || cExcludeSpecs
ClientLaunchType
CLOCK$
CloseHandle
CloseServiceHandle
CLSID
CLSID\
CLSIDFromString
CLUSAPI.dll
Cluster
cMedia == 1
cMedia > 0
cNonWriterMetaDataFiles == 1
cNumFailures < m_cVolume
cNumRestoredVolume >= 1
CoCreateGuid
CoCreateInstance
CoDisconnectObject
CoImpersonateClient
CoInitializeEx
CoInitializeSecurity
COMPACT(m_ulFeatures) || !m_rules.m_bExcludeAudio && !m_rules.m_bExcludeVideo
CompactionSettings
CompactVirtualDisk
CompanyName
CompareFileTime
CompareStringOrdinal
CompileRegistryFNTSExclude(p)
Component Categories
componentDependency.m_guidDependantWriterId != GUID_NULL
ComponentName
conectix
ControlService
ControlTraceW
ConvertSidToStringSidW
ConvertStringSecurityDescriptorToSecurityDescriptorW
CopyFileExW
CopyFileW
CopySid
CoRegisterClassObject
CoResumeClassObjects
CoRevertToSelf
CoRevokeClassObject
CoSuspendClassObjects
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
Could not delete service
Could not open service
Could not open Service Manager
Could not start service
Could not stop service
CoUninitialize
CqtKH
CRC error while reading USN
CreateClassMoniker
CreateDirectoryW
CreateEventW
CreateFile failed for %s
CreateFile unsuccessful for %ws
CreateFileW
CreateGroup
CreateGroupEx
CreateServiceW
CreateStreamOnHGlobal
CreateThread
CreateVirtualDisk
CreateVssBackupComponentsInternal
CreateVssExamineWriterMetadataInternal
CreateWaitableTimerW
CreateXmlReader
CreateXmlReaderInputWithEncodingName
cRestorableComponentCount == cValidComponents
cRestoreOptionStrLength > 1
cRows <= m_cRows
cScheduleTime > 0
cSkippedVolumes < iVolumeUsnInfo
cSourcePath > 0
cSppBadWriters
cSrcComponents != 0
CSVFS
CsvHacks
CsvSourceSupported
CsvSupportSettings
CsvTargetSupported
cTarget < cMaxTarget
cTarget == 1
cToSave == dwBytesWritten
cToSave > 0
current != NULL
CUsnJournalHelper::ActivateJournal
CUsnJournalHelper::GetUsnMaxSize
CustomPerformanceSettings
cVolume
cVolume != 0
cVolume < cMaxVolume
cVolume == dwVolumeGuid
cVolume == iVolume
cVolume > 0
cVolume> 0
cVolumeContext
cVolumeMap
cVolumeMap > 0
cVolumeName == m_cVolume
cVolumes > 0
cVolumesIn
cVolumeSSB
cVolumeUpdateDone < cUpdatedVolume
cWriterInfo
cxsparse
cxsparseH
D!D$ H
D!eoE3
D!eoH
D!l$ L
D!l$0H
D!mPE3
D!t$8
D!u@L!uHL
D!uHL
D!uPH
D"DH;
D"DI;
D"LH;B
D"LI;D
D$ ;F
D$ E3
D$ H!uPL
D$ H;
D$ H+
D$ H9
D$ wdniH
D$$;BHtCL
D$$A;
D$$E3
D$$I;
D$(!]
d$(;|$4r
D$(E3
d$(E3
D$(E3
d$(E3
D$(E3
D$(H;
D$@!D$@E3
D$@A;
D$@A9
D$@E;
D$@E3
d$@E3
D$@E3
d$@E3
D$@E3
D$@H+
D$@H9
D$@Hk
D$@I;
D$\D9
D$`;P
D$`;p@
D$`D;t$@s@H
D$`E3
D$`H;
D$`H;G
D$`H+
D$`H9L$`wND
D$`L;
D$`mota
D$`u>H
D$|fD
D$~u!f
D$<E3
D$0 t
d$08EHL
D$0A;
D$0D;
D$0E3
d$0E3
D$0E3
d$0E3
D$0E3
d$0E3
D$0E3
d$0E3
D$0E3
d$0E3
D$0E3
D$0fA
D$0fD
D$0H!L$PH!M
D$0H;
D$0H+
d$0H9w
D$0I;
D$0L;
D$4A;
D$8@"
D$8E3
d$8E3
D$8fD
D$8H!\$0
D$8H;G
D$8I;F
D$8Ii
D$8L!D$0
D$8L9F t~
D$DE;
D$DL;d$@s(H
D$hA;
d$hD8a!t
D$HD9
D$HE3
D$hE3
D$hfD
d$hfD
D$HH!D$@H
D$HH;
D$hH;G
D$hH9D$`t
D$hI;E
D$HI;G
d$HL!e
D$HL9,
D$hL9,
D$hL9l
D$HL9l
D$L @
D$lD;
D$lH;
D$LL;|$H
D$lL+L$hE
D$nI+
d$p8_H
D$pA;F(
D$pA9F(
d$pD8gtt
D$pE3
D$PE3
D$pE3
D$PE3
D$pE3
D$PE3
D$Pf9E$t>I
D$pfD
D$PH;
D$PH;A
D$pI;
D$PI;
D$pI;E
D$pL+
D$PL9
D$T+D$P
D$t=^
D$TD9
D$tE3
D$tH;
D$X;{
d$xD9}
D$XE3
D$xE3
D$XE3
d$xfD
D$xH;
D$XH;
D$XH;G
d$xH+
D$XHi
D$XI!73
D$XI;
D$XI;D$
D$XI;F
D$XtZA
D%PD;
D%PD9D$t
D-(E3
D.8E3
D/PE3
D:AR(A;OICI;GA;;;BA)(A;OICI;GR;;;BO)
D;{hr
D;|$@
D;|$`
D;|$<
D;|$p
D;}Hs
D;}Xs
D;~0r
D;5&x
D;D$$wyA
D;D$`r
D;d$4
D;D$4r
D;d$p
D;eXr
D;GHr
D;I<t
D;IHsDA
D;JPs$
D;l$0
D;l$h
D;L$x|
D;l$Xux
D;m@s;
D;p@r
D;q@r
D;qPr
D;rPs
D;s\r
D;sHr
D;t$0
D;t$Ds;H
D;t7 r
D;uHr
D;uPs<H
D;uPt6A
D;v\r
D;vPr
D+|$@A
D+L$h
D>PD9m@
D30I;
D38I;
d3base\stor\blb\engine\blbengutils\blbapputils.cpp
D6PH;}
D7`E3
D7lE;
D8!m_pCatalogChecksum
D8#t+H
D8\$Xt
D8\$Y
D8\$YtGH
D8|$@
D8|$0u
D8|$1
D8|$1t
D8|$ptDH
D8}Ht<H
D8}ot
D8}Xu3E
D8~(t+A
D85:9
D857;
D8C)tUL9E
D8C0A
D8c0t
D8cHuAH
D8d$@
D8d$@t
D8d$@t6H
D8d$@u
D8d$0t
D8D$AtQ
D8d$P
D8d$p
D8d$Pt;H
D8d$s
D8d$X
D8eH@
D8eHt|I
D8ePu
D8f)u
D8g`u=L;
D8g8u
D8gau&L;
D8ghu
D8git
D8glt
D8glu
D8gru
D8kHt
D8l$0
D8l$puDI
D8mgu
D8o8u
D8OTtbH
D8t$@t
D8t$@t@H
D8t$1tE
D8t$8u
D8t$AuaL
D8t$pu
D8t$R
D8u@H
D8u`u~@
D8UoL
D8v!t
D9 w:E9
D9.voA
D9?v*L
D9{ |
D9{ |c
D9|$hu
D9|$tt
D9~0vnH
D90L;
D99u<
D9a |
D9b@u.I
D9cXu
D9d$`
D9d$`v
D9d$H
D9d$p
D9d$t|T
D9d$t}ID8e
D9d$xu
D9e0v'
D9e8v^H
D9eXv
D9F@vx
D9g |
D9g\vjE
D9gDv~
D9gHu<3
D9gXu
D9gxu
D9gXu
D9KhvIA
D9l$@ueL
D9l$4
D9L$4rCH
D9l$x~7M
D9n |
D9n$u
D9o\vjE
D9q@u
D9rPvVH
D9s\vJH
D9t$0v"
D9t$0v)H
D9t$x
D9t7 v0H
D9uHH
D9uHvMH
D9v\v]H
D9wHveL
D9wHvo3
D9wxt
D9yPw
data.dat
Delete
DeleteCriticalSection
DeleteFileW
DeleteService
DeleteVolumeMountPointW
DetachVirtualDisk
DetailedHR
DeviceIoControl
DIFFERENT
DisableBackupToDisk
DisableBackupToNetwork
DisableBackupToOptical
DisableCompaction
DisableSystemBackupUI
diskBlockOffset < _numberOfBatEntries
diskOffset >= volumeStartOffset
DispatchMessageW
Dk&*A
DL$hE3
DoNotDeleteFFBSnapshot
DoNotDeleteSourceSnapshot
DoNotInjectDrivers
DoNotResizeUSNJournal
DriverStoreOfflineAddDriverPackageW
drvstore.dll
DsmutilDeleteDirectory((LPWSTR)ssPathToDelete.PeekStr(), DSM_DDO_IGNORE_DELETION_FAILURE | DSM_DDO_DELETE_ONLY_CONTENTS, pbRetryableError)
DsmutilIsPathUnderParent(ssFilePath.PeekStr(), ssVolumePath.PeekStr(), &bIsUnderParent, &dwParentPathLength)
DSREPAIR
DuplicateTokenEx
dwBytesWritten == dwBytesToWrite
dwBytesWritten == sizeof(wchUnicodeBOM)
dwcSppBlob != NULL
dwError != ERROR_SUCCESS
dwLengthOfCurrentLine > 0
dwlJournalId != BLB_INVALID_USN_JOURNAL_ID
dwMountedPathLength < MAX_PATH
dwPathLength > 0 && pstrFilePath[dwPathLength-1] == L'\\'
dwPos <= arrFiles.GetCount()
dwRegVHDMountTimeOut != 0
dwSkipVolumeIndex < cVolumesUsnInfo
dwSnapshotCount == (DWORD)snapshotList.GetCount()
dwType == REG_DWORD
dwType == REG_MULTI_SZ
dwVolumeFlags & (BLB_VI_BLOCK | BLB_VI_HAS_FILES | BLB_VI_HAS_SYSTEMSTATE)
dwWritten == sizeof(rgChecksum)
E!/L!(H
E(H;B
E/H+E
E;A@r
E;d. r
E;d?H
E;f0r
E;g@r
E;t$\r
E@A;F@r
E@A9F@v]
E@H!}@I
E@H!u@L
E_@8xPt
E_INVALIDARG
E_OUTOFMEMORY
E`H;EP
e`L9c
E{(E3
E<f9ELt>I
E0I9D$0u
E8grt
E8I9D$8u
E9|$\v)A
E9~Pv:
E9d. v.I
E9f0vXI
E9fPv
E9fPv4H
E9g@vlA
E9OhvQ
E9uXv 
ED9wh
EFI\Microsoft\Boot\BCD
EgL;e
EGL9M@tMH
E'H;D
E'H+E
EHD8u@H
EhL9p
EJ{1sR6PWf7oD
EK E3
eMediaType == BLB_MT_UNDEFINED || eMediaType == rgMediaCat[0].m_eMediaType
EnableTrace
EnterCriticalSection
EnumDependentServicesW
en-US
EoH!0A
EoL! E!e
EoL+EwI
EqualSid
eReason == (EReasonForExclusion)eNone || eReason == (EReasonForExclusion)eSkippedInSnapshot
Error loading operating system
Errors during registy enumeration
EtwTraceMessage
Ev|;vbase\stor\blb\engine\helper\blbhelper.cpp
Ev|;vFAILED(hResult)
EventEnabled
eventInfo->wszFailureLogPath != NULL
EventRegister
EventSetInformation
EventUnregister
eventVol < eventInfo.cVolume
EventWrite
EventWriteTransfer
EwI!7H!3H!0H
EX;EPs9
EX9EP
Exclude
ExcludeFile
ExcludeFolder
ExcludeSystemFiles
EXH;EH
EXH;Eht~H
ExpandEnvironmentStringsW
ExpirationTime
ExtentLength > 0
ExtractVolumePath(ssPath, ssVolumePath)
ExtractVolumePath(ssWorkingPath, ssVolumePath)
F( uJA
F(((HRESULT)(hr)) >= 0)
F(@uQA
f;D$@u
f;D$4u
f;D$D
F@H9E
F8L)Tt
f9,Au
f9,Bu
f9,Cu
f9,Fu
f9,Gu
f9,Ku
f9,Pu
f9,Qu
f9,su
f9,Vu
f9,wu
f9,Zu
f9/u'L
f9:u0
f9{pt
f9|$ u
f9<Au
f9<Bt
f9<Bu
f9<Fu
f9<Ht
f9<Hu
f9<Ju
f9<pu
f9<Qu
f9<Xu
f94Au
f94Cu
f94Gu
f94iu
f94Ju
f94ju
f94Pu
f94Qu
f94xu
f9H\u
fA9,@u
fA9,Bu
fA9,Cu
fA9\E
fA9<@u
fA9<Au
fA9<Bu
fA9<Cu
fA9<Fu
fA9<Gu
fA9<Nu
fA9<Ou
fA9<Qu
fA94@u
fA94Au
fA94Gu
fA94Lu
fA94Nu
fA94Qu
fA94Ru
fA96u
fA97u
fA9DU
fA9LE
fA9Lm
fA9TM
failed
Failed to get directory metadata for path: %ws
Failed to get directory metadata for path:%ls
Failed to open volume:%ls
Failed to parse path:%ls
Failed to query USN journal for volume handle %x
Failed to query usn journal for volume: %x
Failed to read next USN record (delta USN: %016I64X)
Failed to set the USN journal size (volume handle = %x)
Failed to wait for the USN journal notification (volume handle = %x)
FAILED(hr)
FAILED(hrResult)
Failed: 
Failure
false
False
FALSE
FALSE && "Unexpected error from ::WaitForSingleObject()"
false && L"Unknown performance settings type"
FALSE && L"value table has overflowed!"
FAT32
fB9,Gu
fB9<Au
fB9<fu
fB9<Hu
fB94Au
fB94Ju
fC9,Qu
fC9<Qu
fC9<Su
fC9DE
fD;8uwH
fD;c\u
fD9 u
fD9!t
fD9!u
fD9"t
fD9"u
fD9#u
fD9$^u
fD9$_u
fD9${u
fD9$Au
fD9$B
fD9$Bu
fD9$Cu
fD9$Fu
fD9$Gu
fD9$nu
fD9$Nu
fD9$Qu
fD9$qu
fD9$su
fD9$Vu
fD9$Wu
fD9$wu
fD9$Yu
fD9$yu
fD9*u
fD9,^u
fD9,_u
fD9,~u
fD9,Au
fD9,Bu
fD9,Ct
fD9,Cu
fD9,Fu
fD9,Gu
fD9,Ku
fD9,Nu
fD9,Ou
fD9,pu
fD9,Pu
fD9,pu
fD9,Su
fD9,Xu
fD9.u
fD9/u
fD9:u
fD9?u
fD9|}
fD9|E
fD9}Hu<
fD9<_u
fD9<~u
fD9<Au
fD9<Bu
fD9<Cu
fD9<Fu
fD9<Gu
fD9<Hu
fD9<Ju
fD9<Ku
fD9<Nu
fD9<Pu
fD9<Qu
fD9<Wu
fD9<Xu
fD9<Zu
fD9<zu
fD9>u)H;
fD9>uSL
fD90t
fD90u
fD92u*
fD94(t1
fD94_u
fD94Au
fD94Bu
fD94Cu
fD94Fu
fD94Gu
fD94Hu
fD94Ju
fD94Ku
fD94Ou
fD94Pu
fD94ru
fD94wu
fD94Xu
fD94zt
fD94zu
fD94Zu
fD99u
fD9dE
fD9DE
fD9dH
fD9DU
fD9t$PtQH
fD9tDntxH
fD9tE
fE9 u
fE9$^u
fE9$~u
fE9$Au
fE9$Fu
fE9$Gu
fE9$vu
fE9$yu
fE9,$u`L
fE9,$u5
fE9,Du
fE9,F
fE9,Fu
fE9,Gu
fE9,Ou
fE9,vu
fE9,wu
fE9,Wu
fE9/u
fE9\U
fE9|M
fE9<@u
fE9<\u
fE9<Cu
fE9<Du
fE9<Fu
fE9<Nu
fE9<tu
fE9>u
fE94@u
fE94Au
fE94D
fE94Du
fE94Gu
fE94Ou
fE9d]
fE9DU
fE9LE
fE9tE
fE9tU
fF;|*ju
fF9$@u
fF9$Cu
fF9$ru
fF9$vu
fF9$wu
fF9$zu
fF9,Bu
fF9,bu
fF9,Bu
fF9,Iu
fF9,vu
fF9,wu
fF9|E
fF9<Bu
fF9<Qu
fF94Au
fF94Bu
fF94bu
fF9LE
fG9,|u
fG9,tu
fG9,wu
fG9<Fu
fG9<Qu
fG9L}
fG9te
fHiThreshold > fOptimalLoad
FileDescription
FileName
FilePath
FileRestore
FileRestore_Error
FileSpec
FileTimeToLocalFileTime
FileTimeToSystemTime
FileType
FileVersion
FindClose
FindFirstFile failed
FindFirstFileCaseSensitive(lpstrFilePath, pFindData, lpstrFileSpec)
FindFirstFileW
FindFirstVolumeW
FindNextFile failed in %ls with filespec %ls
FindNextFile failed in %ls with filespec %ls, hr=0x%08x
FindNextFileW
FindNextFileW(pFindData)
FindNextVolumeW
FindResourceExW
FindVolumeClose
fIsValidFile
FlushFileBuffers
Fm_pEngine == NULL
Fm_pGIT != 0
fmifs.dll
fOptimalLoad > 0
ForceFileLevelBackup
ForceFullBackup
ForceRemove
ForceRemove {37734C4D-FFA8-4139-9AAC-60FBE55BF3DF} = s 'BlbEngine Class'
FORMAT_ON_WRITE_TYPE(eMediaType)
FormatEx2
FormatMessageW
FpEntry->iType == 2
FreeLibrary
FreeSpace
Frequency
fSfSfUfh
FSWrapperGetFileAttributes(hFile, pdwFileAttributes)
FSWrapperSetFileAttributes(hFile, dwFileAttributes)
FullBackupSettings
fveapi.dll
FveCloseVolume
FveEraseDrive
FveGetDescriptionW
FveGetStatusW
FveOpenVolumeW
G 9C t
G edem
G tesbD
G tgab
G tlov
G ttgt
G utes
G(L9g u
g_cInitialized == 0
g_cInitialized == 1
g_hFveApi != NULL
g_hIdleEngineTimer != NULL
g_hInstance != NULL
G`;Gd
G0D9`
G4D;GXuyH
G8H!G@H
G8H;C
G8L(Tt
GetAclInformation
GetCommandLineW
GetComputerNameExW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDiskFreeSpaceExW
GetDriveTypeW
GetEnvironmentVariableW
GetFileAttributes() failed on:%ls
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandle
GetFileInformationByHandle(hFile, &fileInfo)
GetFileInformationByHandleEx
GetFileInformationByHandleEx failed
GetFileInformationByHandleEx(hFile, FileAttributeTagInfo, &fileAttributeTagInfo, sizeof(FILE_ATTRIBUTE_TAG_INFO))
GetFileInformationByHandleEx(hFile, FileBasicInfo, &fileInfo, sizeof(FILE_BASIC_INFO))
GetFileInformationByHandleEx(m_hFile, FileBasicInfo, &fileInfo, sizeof(FILE_BASIC_INFO))
GetFileSize
GetFileSize failed for %ws
GetFileSizeEx
GetLastError
GetLengthSid
GetLocalTime
GetLogicalDrives
GetLongPathNameW
GetMessageW
GetModuleFileNameW
GetModuleHandleW
GetNextFilePathEx(ppstrFilePath, ppstrSnapshotPath, pFindData, pErrorInfo)
GetNextUsnInternal(hVolume, &queriedJournalId, &queriedNextUsn, &queriedFirstUsn)
GetNextUsnInternal(hVolume, &queriedJournalId, &queriedNextUsn, pFirstUsn)
GetNextUsnInternal(hVolume, pJournalId, pNextUsn, &firstUsn)
GetNodeClusterState
GetOverlappedResult
GetParentPaths(m_pIncludeFiles->ssFilePath, arrstrParentPaths)
GetParentPaths(ssPath, arrstrPaths)
GetProcAddress
GetProcessHeap
GetProductInfo
GetRunningObjectTable
GetSecurityDescriptorControl
GetSecurityDescriptorDacl
GetSecurityDescriptorGroup
GetSecurityDescriptorLength
GetSecurityDescriptorOwner
GetSecurityDescriptorSacl
GetSidLengthRequired
GetSidSubAuthority
GetStartupInfoW
GetStorageDependencyInformation
GetSystemDirectoryW
GetSystemInfo
GetSystemTime
GetSystemTimeAsFileTime
GetTempPathW
GetTickCount
GetTimeZoneInformation
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetUserGeoID
GetUserNameW
GetVersionExW
GetVirtualDiskInformation
GetVirtualDiskOperationProgress
GetVirtualDiskPhysicalPath
GetVolumeHandle(pstrVolumeName, &hVolume)
GetVolumeHandle(pszVolumePath, &hVolume)
GetVolumeHandle(szSrcVol, &hVolume)
GetVolumeHandle(wszVolumeName, &hVolume)
GetVolumeInformationW
GetVolumeNameForVolumeMountPointW
GetVolumePathNamesForVolumeNameW
GetVolumePathNameW
GetVolumePrefixLength failed for %ls
GetWindowsAccountDomainSid
GetWindowsDirectoryW
GHL;u
GLJ;D
GlobalAlloc
GlobalCatalog
GlobalFree
GlobalLock
GlobalUnlock
gm_lRefCount > 0
GT@tzH
guidAppWriterId != GUID_NULL
guidBackedUpVolumeId != GUID_NULL
guidBackupBootVolumeGuid != GUID_NULL
guidBackupBootVolumeId != GUID_NULL
guidBackupSetId != GUID_NULL
guidBackupSetIdToDelete != GUID_NULL
guidBackupSetInLocalCatalog != GUID_NULL
guidBagVolumeId != GUID_NULL
guidBootVolumeGuid != GUID_NULL
guidBootVolumeGuid!= GUID_NULL
guidBootVolumeId != GUID_NULL
guidLocalBootVolumeId != GUID_NULL
guidMediaId != GUID_NULL && corruptBagRowId != ROWID_NULL
guidSourceSnapId != GUID_NULL
guidTargetMediaId != GUID_NULL
guidTargetVolumeId != GUID_NULL
guidTemplateId != GUID_NULL
guidVolumeId != GUID_NULL
guidWriterId != GUID_NULL
GX;G\r
h AVH
h AWH
H UATAUAVAWH
h UAVAWH
h VWATAVAWH
h VWAUAVAWH
h VWAVH
H WATAUAVAWH
H WATAWH
H!;!|$PL
H!;H9;
H!\$ 
H!\$ E3
H!\$ H
H!\$(
H!\$(H
H!\$`8
H!\$0
H!\$0!\$8
H!\$0@2
H!\$03
H!\$09_
H!\$0A
H!\$0D
H!\$0H
H!\$0I
H!\$8E
H!\$8E3
H!\$8H
H!\$hI
H!\$PH
H!]@H
H!]@H!]H!]0D
H!]`H!]
H!_8H
H!|$ H
H!|$@E3
H!|$`E2
H!|$0
H!|$0D
H!|$0E3
H!|$0I
H!|$0L
H!|$8H
H!|$h
H!|$HH
H!|$HL
H!|$PE3
H!|$PH!~PD
H!|$xE3
H!|$XE3
H!}@E2
H!=7t
H!7E3
H!8!;
H!D$0E3
H!E M
H!l$ 3
H!L$@E3
H!l$0A
H!L$8E3
H!l$h3
H!l$X
H!M`H!MhH!Mp!MxE3
H!t$@L
H!t$`H
H!t$8E2
H!t$H
H!t$pH
H!t$XE3
H!u@3
H!u_E3
H!u`E3
H!u03
H!u8D
H!u8H
H!uHH
H;\$p
H;\$P
H;\$p
H;\$P
H;\$p
H;\$Pr
H;\$pr
H;\$Pr
H;](r
H;](r"L
H;_0s>H
H;{0sOH
H;{hs\H
H;{Pr"L
H;{X~
H;{Xr
H;{xr"L
H;|$(
H;|$`
H;|$`r#L
H;5H_
H;A(|
H;A(~
H;A@u
H;AHt
H;C0u~I
H;C0ulH
H;C8ubH
H;C8usH
H;CHu`L;s
H;D$(t3
H;D$(u
H;D$@H
H;D$`
H;F0t
H;F0uyI
H;F8uoH
H;FDu
H;FLu
H;G(s
H;GDu
H;GLt
H;H@ujI
H;H0u
H;H8utI
H;J0t
H;K |x
H;K t
H;K8t
H;k8v
H;N8t
H;S v
H;t$`
H;W(s
H;y v
h`H9M
H+\$0H
H+|$@H
H+EPu
H+EXH
H+L$hH
H+T$`H
h8H9M
H9\$(
H9\$`t
H9\$8u
H9\$ht
H9]`t
H9]ou
H9]wu
H9_ht
H9{ H
H9{0u
H9{Xu
H9|$ht
H9}hu
H9>t/H
H99u:
H9A u
H9D$Pt
H9D$xt
H9E0uo
H9G8|
H9i(t
H9K w
H9L$@t
H9l$0t
H9L$Ht
H9l$Pt
H9q L
H9t$`t
H9t$0
H9t$0u
H9t$8t
H9uGt
H9uOt
H9uot
H9uou
H9uwu
H9w uG
H9Y8t
H9Y8u
H9ypu
H9yXvPH;yXs|L
hA_A^A]A\_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^[]
hA_A^A]A\_^[]
HA_A^A]A\_^][
hA_A^A]A\_^][
Hardware
HashDigestLength
Hc{8H
Hc{8H;{ r"L
HcA<H
hCryptHash
HeapAlloc
HeapDestroy
HeapFree
HeapReAlloc
HeapSetInformation
HeapSize
hFile != INVALID_HANDLE_VALUE
HGWd"
hHH9M
HiberFil.sys
hInstTypeLib != 0
hKey != INVALID_HANDLE_VALUE
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
hKeyParent != 0
HL;|$0
hm_eImpersonationType != BLB_IT_COM_CLIENT_CACHE_TOKEN
hr = hrWin32
hr == S_FALSE
hr == S_OK
hr == VDS_E_PACK_OFFLINE
HRESULT_FROM_WIN32(error)
HRESULT_FROM_WIN32(GetLastError())
hXH9L$pt
hxH9M
HyperV
HyperVWriterId
I!<$H
I!<$L
I!4$H
I!6E2
I;}0t
I;~0t
I;D)Du
I;D)Lth
I;F ~
I;F0t
I;JDu
I;JLt
I;M8t
I;N8t
I+G0u
I9^(~-H
I9<$w
I94$t
I9F8t
I9u |?H
I9v(I
I9v0I
iCol < m_tabledef.m_cColumns
iCurrentComp == cComponents
ID Changed
iDstComponents == cDstComponents
iElement < m_nSize
IgnorePartialVolumesBackupSize
iLastBackSlash >= 0
iMediaInfo < cMediaInfo
ImpersonateLoggedOnUser
INBOX
IncludeFile
Index < m_Size
index == cNumSuccessful
InitializeAcl
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeParents()
InitializeSecurityDescriptor
InitializeSid
InitiateShutdownW
InprocServer32 = s '%MODULE%'
InstanceId
Interface
InternalName
iNumVolumeRepeats == 0
Invalid parameter passed to C runtime function.
Invalid partition table
Invalid path:%ls
Invalid USN nextUsnBeforeSnapshot 0x%016I64X (first USN: %016I64X, last USN: %016I64X)
IoState[CurrentBuffer] == BLBIMGI_IO_STATE_WRITING
iRow < cguidTemplateId
irow <= m_cRows
iRow == cguidTemplateId
iRow >= 0 && iRow < (int) m_cRows
is NOT
IsAborted()
IsGlobalCatalog()
IsInclude
isMasterBootRecord
IsPathMountPoint(ssPath.PeekStr(), &fMountPoint)
IsPresent
IsRecursive
IsValid()
IsValidSecurityDescriptor
IsValidSecurityDescriptor( (PSECURITY_DESCRIPTOR)sd.GetPSECURITY_DESCRIPTOR()) && "Invalid security descriptor"
IsValidSid
iVolume < cb/sizeof(GUID)
iVolumeCat != bsiCat.m_cVolume
iVolumeCat != pbsiCat->m_cVolume
iVolumeIndex > 0
iVolumeLocal != cVolumeLocal
iVolumeMap < cVolumeMap
iVolumeMap == cVolumeMap
iVolumeSSB == cVolumeSSB
iVolumeUpdate == cVolumes
iVolumeUsnInfo == cVolumeUsnInfo
iWriterComponent == rgWriterInfo[iWriterInfo].cComponentInfo
j == 0
j == cVolumesInBackup
j == m_cVolume
j == pMediaCtxt->m_ulBagCount
J;D1Du@H
J;D1Lu5H
Journal wrap detected (start usn:0x%016I64X, first usn:0x%016I64X)
JournalId has changed since last replication (Old Journal ID: %016I64X, Current Journal ID:0x%016I64X)
K L;O uzH
K L9O t>H
k VWAVH
k,base\stor\blb\catalog\bagstbl.cpp
k|D9o$
k2iWD
k8,aP+N
KERNEL32.dll
kernel32.dll
kH9kLt8H
kOs#N
L!|$(
L!|$0@
L!e`H
L!eHE3
L!eHL
L!eP3
L!ePH
L!l$(H
L!l$(L
L!l$0E3
L!t$(H
L!t$8H
L!t$HH
L!t$xD!t$pH;
L!uwD!ug3
L$ 8O t
L$ E3
l$ E3
L$ E3
l$ E3
L$ E3
L$ H!\$(E3
L$ SH
L$ SUVWH
L$ SVWAVH
L$ SVWH
L$ UH
L$ USVWATAVAWH
L$ UVWATAUAVAWH
L$ UVWH
l$ VATAUAVAWH
l$ VWATAUAVH
l$ VWATAUAWH
l$ VWATAVAWH
l$ VWATH
l$ VWAUAVAWH
l$ VWAVH
l$ VWAWH
l$ WH
L$ WH
l$ WH
L$ WH
l$ WH
L$(A;
L$(E3
l$(E3
L$(E3
l$(E3
L$(E3
l$(E3
L$(E3
L$(L#
L$,H;
L$@D;
L$@E3
l$@E3
L$@E3
L$@fD
L$@H3
l$@u!H;-
L$\E3
l$`;\$0
L$`E3
L$`fA
L$`fD
L$`H3
L$`H9
L$|E3
L$0D;
L$0E3
l$0E3
L$0E3
l$0E3
L$0E3
L$0H!\$0H
l$0H#
L$0H+
L$0H3
L$0H9Y
l$0u!H;-
L$4H!}
L$8D;
l$8D8
L$8E3
l$8E3
L$8E3
l$8E3
L$8E8
L$8H!
L$8H3
L$8Hk
l$dD+l$`A
L$DfE9M
L$hA;
L$HD;
L$hE3
L$HE3
L$hE3
l$HfD
l$HH;
L$HH;
L$HH3
L$hH3
L$HH3
L$hH3
l$p@8o u
L$pA9I@v,A
L$PD;
L$PD9
L$pE3
L$PE3
L$pE3
L$PE3
l$pE3
L$pfF
L$pH!\$ E
l$pH;
L$pH3
L$PH3
L$pH3
L$PH3
L$pH3
L$SL!l$@L
L$TE;
L$tE3
L$TH9D$P
L$XD;
l$xD8gt
L$XE3
L$xH;
l$XH;
L$xH3
L$XH3
L$xH3
L$XH3
L$XH9L$Pt
l$xr/
L.0L+
L.8L+
L;7}?L
L;mPtwH
L;t$`
L;t$`r#L
L;w r"L
L;whr"L
L?HE3
L+kN:l
L+l$hH
L9/t"H
L9|$`t
L9|$0t
L9|$Ht
L9|$ht
L9}`u
L9}Ht
L9}Pt
L9}Xt
L9=EN
L9a@t{H;
L9a@tuH;
L9d$@t
L9d$`t
L9d$`upA
L9d$8t
L9d$pt
L9d$Xt
L9d$xt
L9d$Xt%H
L9e(vZI
L9eHt
L9f(u
L9f0t
L9g t
L9g(M
L9g(u
L9g0L
L9g0t
L9gXH
L9k0u1H;
L9l$@t
L9l$0t
L9l$Pt
L9l$pt
L9O0t!H
L9t$(t
L9t$@t:L9t$Ht3A
L9t$0t
L9t$8t,A
L9t$Ht
L9t$P
L9t$pt
L9t$Xt
L9t$xt
L9u0t
L9u0t}Hcs8H
L9uPvu
L9w(u
L9w0t
L9y@}
L9yXu
LanmanNt
LastAliveStamp
LastBackupDrive
LastBackupLocation
LastBackupResultHr
LastBackupResultHrDetailed
LastBackupTime
LastInstance
LastSuccessfulBackupDrive
LastSuccessfulBackupLocation
LastSuccessfulBackupTime
LcA<E3
LcEH3
lDeletedSnapshots == 1
LeaveCriticalSection
LegalCopyright
len == _sectorSize
length > 0
llSpaceRequired > 0
LoadLibraryExW
LoadResource
LoadStringW
LocalAlloc
LocalFree
LocalService
LogicalPath
LogonUserExExW
LookupAccountNameW
LookupPrivilegeValueW
lpDataToDump
lpszKey != 0 && lpszValue != 0
lpszReg != 0
lRes == 0L
LsaClose
LsaFreeMemory
LsaNtStatusToWinError
LsaOpenPolicy
LsaQueryInformationPolicy
lstrcmpiW
M!7H;
M%windir%\system32\spp\store\2.0\
m@uAH
m_apVssComponent || m_apVssWMComponent
m_apVssExamineWriterMetadata
m_arrComponents.GetCount() > 0
m_arrDependentCompContext.GetCount() == 0
m_arrVolumeExclusions.GetSize() != 0
m_arrVssWMComponents.GetCount() == 0
m_BackupsetVerifier.Remove(wszLocalCatalogFile)
m_bBackupOperation
m_bDeleteFromTarget
m_bGlobalCatalog
m_bInitialized
m_bInitialized != NULL
m_bInitialized == FALSE
m_bIsBuilt
m_bIsRecoveryStarted
m_bLock
m_bPreRestoreCalled
m_bRecreateDisks == FALSE
m_bRecreatePath == TRUE
m_bResetTargetDiffArea == FALSE
m_bstrCurrentSubComponentName
m_bSystemState
m_bValid
m_cApplication > 0
m_cComponent > 0
m_cIncludeFileSpecs || m_cExcludeFileSpecs
m_cRowBlock == 0
m_cRowBlock > 0
m_cRows == 0
m_cRows == m_pTable->GetRowCount()
m_cRows >= cRowsWritten
m_cSortPages == 0
m_cVolume > 0
m_cVolumeMap
m_cVolumeMap != 0
m_cVolumes == 0
m_dwAutoPlayROTCookie == 0
m_dwIndexPosition <= m_dwIndexPositionHigh
m_dwRef != -1L
m_dwRef == 0
m_eImpersonationType == BLB_IT_UNDEFINED
m_eMediaType != BLB_MT_SHINY
m_eMediaType == BLB_MT_FIXED || m_eMediaType == BLB_MT_YANKABLE || m_eMediaType == BLB_MT_NETWORK_SHARE
m_ePosition == BLB_CP_ATBEGIN || m_ePosition == BLB_CP_ATEND || m_ePosition == BLB_CP_ONROW
m_fileHandle != INVALID_HANDLE_VALUE
m_fInitialized
m_guidWriterId == pComponent->m_guidWriterGuid
m_hCheckPointEvent == NULL
m_hCOMClientToken == INVALID_HANDLE_VALUE
m_hDoneEvent == NULL
m_hFile != INVALID_HANDLE_VALUE
m_hFile != NULL
m_hKey != 0
m_hRemoteUserToken == INVALID_HANDLE_VALUE
m_hVhd != INVALID_HANDLE_VALUE
m_iCurrentApp < m_cApplication
m_iCurrentApp< m_cApplication
m_iCurrentComponent < m_cComponent
m_iCurrentRestoreFiles < m_cRestoreFiles
m_includeFilesStack[i] != 0
m_iteratorState == FIRST_FILE
m_iteratorState == NEXT_DIRECTORY
m_iteratorState == NEXT_FILE
m_iteratorState == NEXT_INCLUDE
m_iteratorState == NEXT_PARENT
m_nElements == 0
m_nElements > 0
m_nLockCount > 0
m_nSize <= (0xffffffffffffffffui64/sizeof( E ))
m_numNetworkShareVolumes > 0
m_p == 0
m_pAppBackupContext
m_pAppBackupContext != NULL
m_pAsyncContext
m_pAsyncContext != NULL
m_pAsyncContext == NULL
m_pAsyncHelper
m_pAsyncHelper == NULL && m_pAsyncRef == NULL
m_pAsyncRef == NULL && m_eOperationType == BLB_OT_UNDEFINED
m_pBmrAsrRestore
m_pbsiCat == NULL
m_pCatalogSystem
m_pComponentBackupHelper
m_pCtxtSppMetadata
m_pCurrentRestoreContext
m_pDsmCallback->SetDelayed(INFO_FILE_DELETE, wszIteratorFilePath, 0)
m_pExclusionHandler
m_pExclusionHandler == NULL
m_pFailureLog
m_pFilesInfo != NULL
m_pfnCreateInstance != 0
m_pFree != 0
m_pGlobalCatalog != NULL
m_pGlobalCatalog->m_bInitialized
m_pGroup
m_pGroupRestorer == NULL
m_pIncludeFiles != 0
m_pIncludeFiles != 0 && m_pDirectoryData != 0
m_pIncludeFiles != 0 && m_pDirectoryData == 0
m_pIncludeFiles != NULL
m_pIncludeFiles == 0
m_pIncludeFiles->fIncludeParents
m_pLocalCatalog
m_pMetadata
m_pMetadata != NULL
m_pMetadata == NULL
m_pOverflowFirst != NULL
m_pOverflowFirst == NULL
m_pOverflowLast != NULL
m_pOverflowLast == NULL
m_pParentBackupAsync
m_pParentContext != NULL
m_pParentCtxt
m_pParentCtxt != NULL
m_ppBins != 0
m_ppBins[iBin] != 0
m_ppBins[iBin] == pNode
m_pRestoreSystemState != NULL
m_pSppGroupProp != NULL
m_pSppMetadata != NULL
m_pSppMetadata->pwszBackupComponents != NULL
m_pSSBContext
m_pSSBContext != NULL
m_pSuccessLog
m_pValuesFirst == NULL
m_pValuesLast != NULL
m_pValuesLast == NULL
m_queuedDirectoryTree.IsEmpty()
m_rgBagCat
m_rgBagCat[i].m_guidVolumeId != GUID_NULL || BlbutilIsEspVolume(m_rgBagCat[i].m_dwVolumeFlags)
m_rgBagCat[m_cBags - 1].m_guidMediaId == m_rgMediaCat[m_cMedia -1].m_guidMediaId
m_rgdwOverflow == NULL
m_rgMediaCat
m_rgpbEntries == NULL
m_rgpOrderedComponentContexts.GetCount() == m_cComponent
m_rgSppGroup
m_rgVolumeContext
m_rgVolumeContext == NULL
m_rgVolumeContext[iVolCtxt].volumeMap.wszBackupAccessPath == NULL
m_rgVolumeContext[iVolume].volumeMap.wszRestoreAccessPath
m_rgVolumeMap
m_rgVolumeMap != NULL
m_rgVolumeMap && m_cVolumeMap
m_sidnameuse == SidTypeInvalid
m_spAutoPlaySuppressor == NULL
m_spBackupItemsRoot
m_spBackupItemsRoot == NULL
m_spComponentNode
m_spInclusionRoot
m_spVssAsync
m_spVssBackupComponents
m_ssCurrentVolumePath.Compare(pstrDirectoryWin32Path, 0, m_ssCurrentVolumePath.Length()) == 0
m_ssCurrentVolumePath.Length() > 0
m_state == CAN_ENUMERATE || m_state == CONTINUE_ENUMERATION
m_state == NOT_INITIALIZED || m_state == CLOSED
m_strAccountName.IsEmpty()
m_strCurrentPath.Compare(m_strRootDirectoryFullPath, m_fCaseSensitive, m_strCurrentPath.Length()) == 0
m_strCurrentPath.Compare(pstrFilePath, m_fCaseSensitive, m_strCurrentPath.Length()) == 0
m_strCurrentPath.Length() == 0
m_strDomain.IsEmpty()
m_strSid.IsEmpty()
m_tBackupTime.dwHighDateTime || m_tBackupTime.dwLowDateTime
m_ulBagsProcessed <= m_cBags
m_wszApplicationId
m_wszBackupSetDirectory
m_wszBackupSetDirectory == NULL
m_wszBackupSpecs
m_wszBackupSpecs != NULL
m_wszCurrentCompactionVolume
m_wszMountedVolumePath != NULL
m_wszSourceVolumePath != NULL
m_wszSpecsXML
m_wszSpecsXML == NULL
m_wszSuccessLogFileName != NULL && m_wszFailureLogFileName != NULL
m_wszTargetName != NULL
m_wszTargetName && *m_wszTargetName
m_wszUserName
m_wszVhdFilePath && *m_wszVhdFilePath
M0@8uH
M0D;i@smH
m4H+M
m4H+MPH
m4H+T$(M
m4H+U
m4H+UHM
m9|$xt
M9<$u$A
M9e |;H
M9u(I
M9'u,H;
MAD:e@
MakeAbsoluteSD
malloc
MaximumSizeInMB
MaximumWaitTimeInMins
MaxTriggerSizeInGB
memcmp
memcpy
memcpy_s
memmove
memmove_s
memset
MessageBoxW
metadata-2
MgH+MoH
mi.dll
MI_Application_InitializeV1
Microsoft
Microsoft Corporation
MICROSOFT##SSEE
Microsoft.Windows.SystemImageBackup.Engine
MICROSOFT\WINDOWS NT\CurrentVersion\ASR\RestoreSession
Microsoft\Windows\CurrentVersion\Reliability
Microsoft\Windows\CurrentVersion\WindowsBackup
Microsoft-Windows-WindowsBackup
mid < (int) m_cRows && mid >= 0
MinFreeSpaceAvailableInMB
Missing operating system
Module
Module_Raw
MoveFileExW
MoveFileW
MPD8u@H
MPD8u@uLH
MpH+MxH
Mscoree.dll
MSFT_DedupVolume
msvcrt.dll
MultiByteToWideChar
MwH+UwI
MXH+M`H
MXL91u
nAclLength > 0
nBins > 0
nElementSize > 0
NETAPI32.dll
NetApiBufferFree
NetShareAdd
NetShareDel
NetShareGetInfo
nextVolumeContextIndex == cVolumeId
nIndex >= 0 && nIndex < m_nSize
nLength <= GetData()->nAllocLength
nLength >= 0
nLength-(size_t)( (ptrdiff_t)&(((ACCESS_ALLOWED_ACE *)0)->SidStart) ) >= m_sid.GetLength()
nMax > 0
nNewLength >= 0
nNewMax <= 0xffffffffffffffffui64/sizeof( E )
nNewMax >= m_nMaxSize
nNewSize > m_nSize
nOa-Q
NoBackupToDisk
NoBackupToNetwork
NoBackupToOptical
NoOfAppsInBackup
NoOfComponentsInBackup
NoOfVolumesFullyBackedUp
NoOfVolumesPartiallyBackedUp
NoOfVolumesWithBadClusters
NoRemove
NoRemove CLSID
normal
NoRunNowBackup
not a
NoTargetSnapshot
npD,M3+R
nRefs != 0
nRefs > 0
nResult == nConvertedLen
nSubAuthorityCount
NT AUTHORITY\SYSTEM
NtCreateFile
ntdll.dll
NtQueryInformationFile
NtQueryKey
NtQuerySystemInformation
NtQueryVolumeInformationFile
NtSetInformationKey
NULL != m_pAppBackupContext
NULL != pSppMetadata
NULL != pVolCtxt
NULL != wszVolumeName
numMaxCharacters >= wcslen(wszMultiVolumeList)+1+2
O$D9.u
O:%wsD:AR(A;OICI;FA;;;BA)(A;OICI;FA;;;BO)(A;OICI;FA;;;CO)(A;OICI;FA;;;%ws)
O:%wsD:PAR(A;OICI;FA;;;BA)(A;OICI;FA;;;BO)(A;OICI;FA;;;CO)
O:BAG:BAD:P(A;CIOI;GA;;;BA)(A;CIOI;GA;;;SY)(A;CIOI;GA;;;BO)
o0H;o8r
O4D;OX
ObjectLength
ODSFLAGS
oeY<9
Offline Files Cache
OfflineSoftwareHive
offset[i] < volumeSize
offsetInDiskBlock % BLBIMGI_BYTES_PER_BLOCK == 0
ohI;opr
OHL91u
ole32.dll
OLEAUT32.dll
onecore\external\sdk\inc\atlmfc\atlalloc.h
onecore\external\sdk\inc\atlmfc\atlbase.h
onecore\external\sdk\inc\atlmfc\atlbase.inl
onecore\external\sdk\inc\atlmfc\atlcoll.h
onecore\external\sdk\inc\atlmfc\atlcom.h
onecore\external\sdk\inc\atlmfc\atlcomcli.h
onecore\external\sdk\inc\atlmfc\atlconv.h
onecore\external\sdk\inc\atlmfc\atlcore.h
onecore\external\sdk\inc\atlmfc\atlexcept.h
onecore\external\sdk\inc\atlmfc\atlsecurity.inl
onecore\external\sdk\inc\atlmfc\atlsimpcoll.h
onecore\external\sdk\inc\atlmfc\atlsimpstr.h
onecore\external\sdk\inc\atlmfc\statreg.h
OnlySystemBackup
op == BLB_IO_GE || op == BLB_IO_LE || op == BLB_IO_EQ
OPB9,
OpenProcessToken
OpenSCManagerW
OpenServiceW
OpenThreadToken
OpenVirtualDisk
Operation Type
OPL;)uHL;y
OriginalFilename
OutputDebugStringA
OutputDebugStringW
Overall Detailed hr
Overall hr
OverallHR
OverallPerformanceSetting
OVERWRITE(m_ulFeatures)
OVERWRITE(m_ulFeatures) || SNAPSHOT(m_ulFeatures)
oXL9oX
p != 0
p <= pwstrEnd
p AWH
p UWATAVAWH
p WATAUAVAWH
p WATAUH
p WAVAWH
p)T:J.P
p)Vx#
P`!!pdwRegDisableCompaction
p`L9m`t
p`L9mXt
p{SZf
p{ZZz6
P+f9Q`u
p0R^G'
p1[th
p2\8M
p3XpZ.x
p8H9}8t
p8H9uHt
p8L9}0t
p8L9e`t
p8L9m
PA]_]
PA]A\_^]
PA^_]
PA^_^[]
PA^_^][
PA^A\_][
PA^A]_[]
PA^A]_^]
pA^A]_^]
PA^A]_^]
PA^A]A\_^[]
PA_A\_[]
pA_A\_^]
PA_A\_^]
pA_A^_^]
PA_A^_^]
PA_A^A\_^[]
pA_A^A\_^[]
PA_A^A\_^[]
pA_A^A]A\_^[
PA_A^A]A\_^[
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
Pagefile.sys
pAppCLSID != NULL
pAppRestoreContext->m_iCurrentComponent < cComp
pAppRestoreContext->m_iCurrentComponent < pAppRestoreContext->m_cComponent
pAppRestoreInfo
parrList
path != NULL
Path %S is invalid as it contains a '.' or '..', hr=0x%08x
pAtom != NULL
pAX~P
pb != NULL
pb != NULL && pcb != NULL && ppbReturn != NULL
pb && pguid
pb && pwsz
pBackupAsync
pBackupInfo
pBackupSet
pBackupSet != NULL
pBackupSetInfo
pBackupSpec
pBackupSpecs
pBadClusExtentsBeforeRecovery
pBag != NULL
pbAllCritical
pbAllowSourceSnapshotDeletion
pbAppRegistered != NULL
pbClient
pbCLSIDFound != NULL
pbCompactionRequired
pbCreateNewDir
pbDeleteSnapshot != NULL
pbDVD
pbExist
pbFloppy
pbForceFull
pbFound != NULL
pbHasBackngWim != NULL
pbHasSystemState
pbIsADWriterPresent != NULL
pbIsComponentIncluded
pbIsCritical != NULL
pbIsCSV
pbIsDsrmMode
pbIsDynamic
pbIsFile
pbIsFullVolume
pbIsLastBackupOnTarget != NULL
pbIsReadonly
pbIsReadOnly
pbIsReparsePoint != NULL
pbIsValid
pbIsVirtualSrcVolDependant
pbIsVolumeDedupOptimized
pbIsVolumeOnSharedDisk != NULL
pbIsVolVirtual
pbIsWriteCapable
pBlbBackupStatUpdater != NULL
pbLockable
pbMediaFailure
pbNewValue != NULL
pbOldVhdsExist
pbOnline
pbOverflow != NULL
pbPerformFullBackup
pbPerformResize
pbPrevKey == NULL || keycomp.CompareKeys(pbKey, pbPrevKey) > 0
pbPruningRequired
pbRecomputeNeeded
pbRestorable
pbRetryVolumeBackup
pbRvr
pbsiCat
pBsiCat
pbsiCat != NULL
pBsiCat != NULL
pBSIToSave != NULL
pbSizeChanged
pbSppBlob != NULL
pbstr != 0
pbstrPath != 0 && ppTypeLib != 0
pbstType
pbSystemState
pbSystemWriter
pbTargetFailure
pbToSave != NULL
pbVal != NULL
pbVal1 != NULL
pbVal2 != NULL
pbValue != NULL
pbVhdCorrupt
pbVhdOldVersion
pbWinPE
pCatalog
pCatalog != NULL
pCatalog->m_bGlobalCatalog
pCatalogChecksum
pCatalogSystem
pCatBackupSet->m_cTarget == 1
pcBag != NULL
pCBlbVhd
pcCatComponents
pcComponent != NULL
pcComponents
pcComponents && prgComponents
pcComponentSpecs
pcDstComponents
pcDstVolumes
pcExcludeSpecs
pcFiles
pcFilesEnumInfo
pcFileSpecs
pcguidBackupSetId != NULL
pcguidTemplate
pcguidTemplateId != NULL
pChangeDetected
pcIncludeSpecs
pcMediaInfo != NULL
pcNumberOfFilesProcessed
pcNumbytes
pcNumMedia
pColdef->m_offset + length <= m_tabledef.m_cbRow
pColdef->m_type == type
pComModule->m_hInstTypeLib != 0
pComponent
pComponent != NULL
pComponentInfo
pCompStatus
pContext->IsAborted()
pContext->m_pAppBackupContext
pContext->m_pGroup->cVolumes > 0
pContext->m_pGroup->rgVolumes
pContext->m_pSSBContext
pcPZt
pCrtMediaCtxt
pcScheduleTime
pcTargetInfo != NULL
pCtxt
pCurrentListEntry->Length > 0
pCurVolumeInfo
pcVolume
pcVolumeInfo != NULL
pcVolumes
pcVolumeSSB
pcWriter
pcWriterInfo
pcZ|R
pDetailedHResult
pDirectoryInfo
pDisk->m_bVolumeInformationUnavailable == FALSE
pDiskExtent
pDsmCallback != NULL
pdwFlags
pdwlJournalId
pdwlUsnMaxSize
pdwlUsnSize
pdwOSMajorVersion != NULL
pdwOSMinorVersion != NULL
pdwRegAlwaysRunCompaction
pdwRegMaxUSNSizeMB
pdwRegPercentageTrigger
pdwRegSizeInGBTrigger
pdwRegSkipUSNResize
pdwRegUSNSizePercent
pdwValue
pdwVHDDeviceDiskNumber
pdwVolumeBackupFlags
pdwVolumeMapIndex
pdwVolumeNumber
peMediaType
pEngine
pEngine != NULL
pEntries->pFunc == ((ATL::_ATL_CREATORARGFUNC*)1)
PercentageOfVolumeSize
PercentageTrigger
pErrorInfo->pstrDirectory == 0
pErrorInfo->pstrDirectory == NULL
pExclusionHandler
pFileAsync
pFileDesc != NULL
pFindData != 0
pFirstUsn
pfIsDirectory
pfIsPathMountPoint
pfIsReparsed
pftEndTime
pftStartTime
pGlobalCatalogImpl->m_bInitialized
pGroup
pGroup != NULL
pguidAppWriterId
pguidBackupSetId
pguidBackupSetId != NULL
pguidBootVolume
pguidId != NULL
pguidMediaId
pGuidSnapshotId
pguidSppGroupId
pguidTemplateId
pguidVolumeId
pguidVolumeId != GUID_NULL
pguidVolumeId != NULL
pguidWriterId
pHandle != NULL
phCryptHash
phFind
pHH9}0t
pHH9u@t
pHL9mPt
phM9>t
phrDetailedResult
phrError
phrResult
phrStatus
phToken
phTraceSession
phVhd
phVolume != 0
pImpersonator
pInfo
pIsBMRCompatible != NULL
pIsOldFormatVhdsExist
pIsOldVhdFormat
pIsVolumeOnDynamicDisk != NULL
pJ]zy
pJournalId
pKey->m_type == pCol->m_type
plastUsn
pllDiffAreaSize
pLMdr4
pLocalCatalog
pLocalCatalog != NULL
pLogFile
pLogger != NULL
pMedia != NULL
pMedia->m_eMediaType == BLB_MT_SHINY || pMedia->m_eMediaType == BLB_MT_REMOVABLE
pMediaCtxt->m_iVolume <= m_cVolume
pMediaCtxt->m_pBackupPtr == pBackupPtr
pMediaCtxt->m_ulBagCount > pInitialMediaCtxt->m_ulBagCount
pMetadata
pMountDevId->UniqueIdLength < dwBufSize
pNewTemplate != NULL
pNextMediaCtxt
pNextUsn
pNumberSets
pOldData->nAllocLength < nLength
pOldNode == m_pHead
pOldPrivileges
pOldTemplate != NULL
pos != 0
PostThreadMessageW
pOutTargetCat
ppAppRestoreInfo
pParentContext
pParentCtxt
pPartitionOffset
ppBackupSets
ppBackupSpec
ppbHashObject
ppbNewValue != NULL
ppbOverflowEntry != NULL
ppbOverflowValue != NULL
ppBsiCat
ppbValue != NULL && wszValueName != NULL && lpType != NULL && lpSize != NULL
ppCatalog != NULL
ppDataBlock != NULL
ppDependencyInfo
pPerformanceSettings
pPerformanceSettings->m_eOverallPerformanceSettingType == BLB_PST_CUSTOM
ppGIT != 0
ppHeader
ppLocalCatalog
ppPerformanceSettings
ppRequiredTarget
ppRestoreFileSpec != NULL
pPrev != 0
pPrev->m_pNext == pNode
pProductType != NULL
pProgressReportCallbackContext
pPRV)
ppSpec
ppStorageDepInfo
ppstrFilePath != 0
ppstrFilePath && ppstrSnapshotPath
ppstrLogicalFilePath != 0
ppstrPath && *ppstrPath == 0
ppstrReparsePtPath && (*ppstrReparsePtPath == 0)
ppstrStr != NULL
ppsUniqueId
ppSystem
ppszReg != 0
ppTemplates
ppv != 0
ppVhdContext
ppvObject != 0
ppVolumeInfo
ppVolumeMap
ppVolumeMap != NULL
ppWriterInfo
ppWriterInfoList
ppwszVolumesInBackup
pQ\V$
pRestoreFileContext != NULL
pRestoreFileContext->m_cNumberOfFilesProcessed > 0
pRestoreFiles
pRestoreFiles != NULL
pRestoreGrp->GetNumberOfComponents() > 0
pResult
prevBlock >= 0
prevLen == wcslen(wszVolumeName)
prgBackupMachineNames
prgBackupMachineNames->IsEmpty()
prgBag != NULL
prgCatComponentInfo
prgCompHr
prgCompHrDetailed
prgComponent != NULL
prgComponents
prgComponentSpecs
prgDstComponentInfo
prgDstVolumeInfo
prgExcludeSpecs
prgFilesEnumInfo
prgFileSpecs
prgguidBackupSetId != NULL
prgguidTemplateId != NULL
prgIncludeSpecs
prgMediaInfo != NULL
prgRestoreSpecs
prgScheduleTime
prgTargetInfo != NULL
prgVolumeGuid
prgVolumeInfo != NULL
prgVolumes
prgVolumeSSB
prgWriterInfo
prgwszFiles
pRight >= pLeft
ProcessAndAddExclusion((CSmartStr)p)
ProcessAndAddExclusion((CSmartStr)wszEntry)
ProcessAndAddExclusion(ssAppend)
ProcessAndAddExclusion(ssData)
ProductName
ProductType
ProductVersion
prop.Obj.DiffArea.m_llAllocatedDiffSpace >= 0
prop.Obj.DiffArea.m_llUsedDiffSpace >= 0
prop.Type == VSS_MGMT_OBJECT_DIFF_AREA
pRow != NULL
pRow1 > pRow2
pRowDest != NULL
pRowSource != NULL
pRRx3
pSetupGetFileTitle
pSortPage != NULL
pSortPage == NULL
pSourceGroup
pSpecCurr
pSpecPrev
pSppMetadata
pSPTZ
pStats != NULL
pStatus
pStatus != NULL
pstDepInfo != NULL
pstDepInfoType2MaxAncestor != NULL
pstm != NULL
pstrDest != 0 && vt == VT_BSTR
pstrFilePath != 0
pstrFilePath != 0 && *pstrFilePath != 0
pstrFilePath != NULL
pstrFilePath && *pstrFilePath && pFindData
pstrFilePath && pstrFileSpec && *pstrFilePath && *pstrFileSpec
pstrFileSpec != NULL
pstrFileSpec && *pstrFileSpec
pstrIteratorPath == 0
pstrName != 0
pstrPath != 0
pstrPath && pstrPath[0]
pstrSnapshotPath == 0 || *pstrSnapshotPath
pstrTargetFilePath
pstVhdInfo
pSX^(
pSysInfo->SystemPartition.Length % sizeof(WCHAR) == 0
pSystemCatalogSystem != NULL
pszAccountName
pszVolumePath != 0
pszVolumePath && pszVolumePath[0]
pTable != NULL
pTable->CBLBBackupSetTable::m_signature == m_signature
pTable->CBLBBackupSetTable::m_tabledef.m_cColumns == m_tabledef.m_cColumns
pTable->CBLBBagsTable::m_signature == m_signature
pTable->CBLBBagsTable::m_tabledef.m_cColumns == m_tabledef.m_cColumns
pTable->CBLBMediaTable::m_signature == m_signature
pTable->CBLBMediaTable::m_tabledef.m_cColumns == m_tabledef.m_cColumns
pTable->CBLBRestorableComponentsTable::m_signature == m_signature
pTable->CBLBRestorableComponentsTable::m_tabledef.m_cColumns == m_tabledef.m_cColumns
pTable->CBLBTargetsTable::m_signature == m_signature
pTable->CBLBTargetsTable::m_tabledef.m_cColumns == m_tabledef.m_cColumns
pTable->CBLBVolumesTable::m_signature == m_signature
pTable->CBLBVolumesTable::m_tabledef.m_cColumns == m_tabledef.m_cColumns
pTable->IsGlobalCatalog()
pTableSource != NULL
pTarget
pTargetCatalog != NULL
pTargetFound != NULL
pTemplate
pTemplate != NULL
pTemplate->m_bIsScheduledTemplate
pTemplate->m_cFileSpecs == 0
pTemplate->m_cTarget == 1
pTemplate->m_rgFileSpecs == NULL
pTemplCat
pTemplCat->m_bSystemState == FALSE
pThis != 0
pTimeOfBackupSet
pulClusterSize
pulFlags
pullAllocatedDiffAreaSize || pullUsedDiffAreaSize || pllMaxDiffAreaSize
pullBackupSize
pullCurrentBackupSize
pullDifference
pullDirSize
pullExcludedFileSize
pullExpirationTime != NULL
pullPartialVolumeBackupSize
pullSizeToReclaim
pullTotalTargetFreeSpace
pullTotalTargetSpace
pullVHDFileSize
PuNHc
pUsnInfo
pvCalculated
pvHash
pVhdContext
pVhdContext->m_pCBlbVhd
pVhdContextForRemoval
pVhdHandle
pVolCat != NULL
pVolCat->m_bInBackup
pVolCtxt
pVolCtxt != NULL
pVolCtxt == NULL || VOLUME_IS_BLOCKLEVEL(pVolCtxt->m_dwVolumeFlags) || VOLUME_IS_INCREMENTAL(pVolCtxt->m_dwVolumeFlags)
pVolCtxt->m_wszMountedVhdPath == NULL
pVolCtxt->m_wszRestoreTargetPath
pVolInfo
pVolMap
pVolStat
pVolume != NULL
pVolumeCat
pVolumeContext
pVolumeExclusions != NULL
pVolumeInfo != NULL
pVolumeMap
pVolumeMap != NULL
pVolumeVHDInfo != NULL
pvReceived
pVssComponentInfo != NULL
pwstrKeyName
pwszAppIdentifier != NULL
pwszBackupSpecsInfo
pwszBackupSpecsXML
pwszBackupSpecsXmlFile
pwszBagFile
pwszBaseString != NULL
pwszBlbNetworkPath != NULL
pwszBlbWindowsDirectoryPath != NULL
pwszBootVolume
pwszComponentInfo
pwszComponentInfoSummary
pwszComputerName!=NULL
pwszDescription != NULL
pwszDest
pwszDevicePath
pwszDiffVhdFilePath && pwszVhdTempPath
pwszDiskName
pwszDiskPath
pwszDisplayName
pwszDomainPart
pwszDrive
pwszDrive != NULL
pwszFailureLogName
pwszFileName
pwszGuidVolumeId
pwszLocalCatalogFile
pwszLogFile
pwszLogsDirectory
pwszMachineDir
pwszMappedPath != NULL
pwszMessage
pwszMetaDataDirPath
pwszMountedPath
pwszMountedPath != NULL
pwszName != NULL
pwszNetShareName != NULL
pwszNewRestoreOptions
pwszOriginalAccessPath
pwszOutputString
pwszParentDir != NULL
pwszReparsePointName
pwszRestoreAccessPath
pwszRestoreOptions
pwszRestoreTarget
pwszRestoreTargetFriendlyName
pwszReturnedString
pwszRootDir
pwszSessionName
pwszSlashTerminatedPath != NULL
pwszSnapshotPath != NULL
pwszSPPMetadataFilePath != NULL
pwszSppMetadataFilePath != NULL
pwszSSBDir != NULL
pwszSystemDevicePath
pwszTargetLogFileName
pwszTaskSchedulerTimeString
pwszTimesString
pwszTracingDirectory
pwszUserPart
pwszVhdExtension
pwszVhdPath
pwszVolumeDevicePath
pwszVolumeGlobalRootPath
pwszVolumeName
pwszVolumeName != NULL
pwszVolumePath
pwszVolumePath != NULL
pwszWindowsTempPath
pwszWriterMetaData
q"[pF
q#UP"/
q)T:J.P
q)Vx#
q`Y83'T
q{ZZz6
Q-0E9
q0R^G'
q1[th
qAX~P
qAZf4[a
qbZ|=
qH9_xt
qJ]zy
qK]0 &`
qQ\V$
qqW2)
qQYvm
QueryDeviceInformation
QueryDosDeviceW
QueryPerformanceCounter
QueryServiceStatus
QuickFormat
qZQx'/
r H9{ H
r%H9C
r&A9>L
r*D8u@H
r,9>L
r.D8u@H
r.D9e
r;!\$0H
r1 == BlbimgSuccess
r9A86H
r9D8'H
RaiseException
readBuffer != NULL
ReadFile
ReadHandle != INVALID_HANDLE_VALUE
readOffset.QuadPart%BLBIMGF_SECTOR_SIZE == 0
readOffset.QuadPart/BLBIMGF_SECTOR_SIZE <= _maximumFileSize
readOffset.QuadPart/BLBIMGF_SECTOR_SIZE >= _firstBlockSector
reagent.dll
realloc
RegCloseKey
RegCreateKeyExW
RegDeleteKeyExW
RegDeleteKeyW
RegDeleteValueW
RegEnumKeyExW
RegEnumValueW
RegGetValueW
RegisterServiceCtrlHandlerW
RegisterTraceGuidsW
REGISTRY
Registry
REGISTRY
RegistryExcludes
RegLoadKeyW
RegOpenKeyExW
RegQueryInfoKeyW
RegQueryValueExW
RegServer
RegSetValueExW
RegUnLoadKeyW
RemoveDirectoryW
ReplicationContext != NULL
ReplicationContext->FirstBlock != NULL
ReplicationHandle
ResetEvent
ResizingVssDiffArea
RestoredVolumes
RestoreStatusResult
RestoreTime
result.m_high + 1 >= result.m_low
RevertToSelf
rgAllVolumesInfo
rgBackupSet != NULL || cBackupSet ==0
rgBackupSets != NULL || cBackupSets ==0
rgbChecksum
rgbValues != NULL
rgCatBackupSet[i].m_wszCurrentTargetName
rgChecksum
rgClient
rgComponent != NULL
rgDisk != NULL
rgFilesInfo
rgFileSpecs
rgFilesSpecs != NULL
rgguidVolumes
rgScheduleTime != NULL
rgSppBadWriters
rgSrcComponentInfo
rgSrcVolumeInfo
rgTarget
rgVolume
rgVolume != NULL
rgVolumeContext
rgVolumeLocal
rgVolumeMap
rgVolumeMap != NULL
rgVolumeMountedVhdPaths
rgVolumeName
rgVolumes && cVolumes
rgVolumesIn
rgVolumesIn && cVolumesIn
rgWriterInfo
rgwszSourcePath != NULL
rgwszVolumes
rgwzSourcePath
rLD;s|r
rLD;sdr
rlHi]
root\microsoft\windows\deduplication
rowID != ROWID_NULL
rowid < m_cRows
rowid >= m_rgRowBlock[m_cRowBlock - 1].m_lowRowid
rowid1 != rowid2
RPCRT4.dll
RPCSS
RpcStringFreeW
rSid.IsValid()
RtlAreBitsClear
RtlAreBitsSet
RtlCaptureContext
RtlClearAllBits
RtlClearBits
RtlCompareMemory
RtlCreateSystemVolumeInformationFolder
RtlDosPathNameToNtPathName_U
RtlFindNextForwardRunClear
RtlFreeHeap
RtlGetLastNtStatus
RtlGetSetBootStatusData
RtlInitializeBitMap
RtlInitUnicodeString
RtlLookupFunctionEntry
RtlNtStatusToDosError
RtlNumberOfClearBits
RtlNumberOfSetBits
RtlSetAllBits
RtlSetBit
RtlSetBits
RtlUnlockBootStatusData
RtlVirtualUnwind
rWD;s|r
rWD;sdr
RxV'Y
S_OK != hr
saDesiredAccess
SAFEBOOT_OPTION
saSecurityAttributes
sbD;E
ScheduledTargetType
SCSIOP_MODE_SENSE
SCSIOP_MODE_SENSE10
sdiVersion == STORAGE_DEPENDENCY_INFO_VERSION_1 || sdiVersion == STORAGE_DEPENDENCY_INFO_VERSION_2
SeBackupPrivilege
SECURITY
SeManageVolumePrivilege
SeRestorePrivilege
ServerNt
Service
SeSecurityPrivilege
SeShutdownPrivilege
SeSystemEnvironmentPrivilege
SeTakeOwnershipPrivilege
SetEndOfFile
SetErrorMode
SetEvent
SetFileAttributesW
SetFileInformationByHandle
SetFileInformationByHandle failed
SetFilePointer
SetFilePointerEx
SetFileSecurityW
SetFileShortNameW
SetFileValidData
SetLastError
SetSecurityDescriptorDacl
SetSecurityDescriptorGroup
SetSecurityDescriptorOwner
SetServiceStatus
SetThreadExecutionState
SetThreadToken
SetUnhandledExceptionFilter
SETUPAPI.dll
SetupDiDestroyDeviceInfoList
SetupDiEnumDeviceInterfaces
SetupDiGetClassDevsW
SetupDiGetDeviceInterfaceDetailW
SetupDiGetDeviceRegistryPropertyW
SetupEnumPublishedInfW
SetupGetInfDriverStoreLocationW
SetVirtualDiskInformation
SetVolumeLabelW
SetVolumeMountPointW
SetWaitableTimer
SHA256
ShowWarning
Single Instance Storage
SizeofResource
Sleep
SleepEx
Software
SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList
Software\Microsoft\Windows NT\CurrentVersion\SystemRestore
software\microsoft\windows nt\currentversion\windowsserverbackup\Application Support
Software\Microsoft\Windows\CurrentVersion\Windows Block Level Backup
SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsBackup
Software\Policies\Microsoft\Windows\Backup\Client
Software\Policies\Microsoft\Windows\Backup\Server
spAllCriticalNode
spCompSpecsRoot
spCurrentVolume
spFileSpecsNode
SplitDirPath( ssDirPath, ssParentDir, ssDirName )
SplitDirPath(strPath, strParent, strChild)
splitRead
spNode
SPP.dll
spp.dll
SppFreeBadWritersArray
SPPMetadataCache
spSystemStateNode
spSystemTime
sPt*H
spVolume
SSB hr
ssDirPath.Length() != 0
ssFilePath.Length() > 0
ssFilePath.Length() > 0 && ssFilePath[0] == L'\\'
ssFileSpec.Length() > 0
ssPath.Length() > 0
ssVolumePath[ssVolumePath.Length() - 1] == L'\\'
ssWorkingPath[ssWorkingPath.Length() - 1] == L'\\'
Start <= (m_Len + 1)
start backup -templateId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} -quiet
StartServiceCtrlDispatcherW
StartTraceW
status == RPC_S_OK
strAttributeName
strChildPath == (strLogicalFilePath.PeekStr() + (strLogicalFilePath.Length() - strChildPath.Length()))
StringCchCopyW(pstrLocal, dwLength, strStr.PeekStr())
StringFileInfo
StringFromGUID2
strStr != NULL
strValue.Length()
strValue.Length() != 0
stVhdInfo.VirtualStorageType.DeviceId == VIRTUAL_STORAGE_TYPE_DEVICE_VHDX
stVhdInfo.VirtualStorageType.VendorId == VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT
succeeded
SUCCEEDED(m_rgVolumeContext[iVol].m_hrResult)
SUCCEEDED(pVolCtxt->m_hrResult)
Success
SUVAUAVH
SUVWATAUAVAWH
SUVWATAVAWH
SUWAVAWH
SVWATAUAVAWH
SVWATAVAWH
SVWAUAVH
SVWAVAWH
SVWAVH
swscanf_s
SXM;K
SYSTEM
System Volume Information
System Volume Information\Dedup
System Volume Information\SPP
System Volume Information\SystemStateRestore
System Volume Information\SystemStateRestore\MetaDataFiles
SYSTEM\ControlSet001\Control\MiniNT
SYSTEM\CurrentControlSet\Control\BackupRestore\FilesNotToBackup
SYSTEM\CurrentControlSet\Control\BackupRestore\FilesNotToSnapshot
System\CurrentControlSet\Control\ProductOptions
SYSTEM\CurrentControlSet\Services\VSS\VssAccessControl
SYSTEM\CurrentControlSet\Services\wbengine
SYSTEM\CurrentControlSet\Services\wbengine\SystemStateBackup
SYSTEM\CurrentControlSet\Services\wbengine\SystemStateRestore
SystemImageBackup
SystemImageBackupComplete
SystemImageBackupTwoTBWarning
SystemStateBackup
SystemStateRestore
SystemStateRestore_Error
SystemTimeToFileTime
SYSVOL
t @8y
t D8a
t D8y
t!@8q
t!D8a
t"@8q
t"@8y
t"A8r
t"D8{
t"D8a
t"D8i
t"D8y
t"E8}
t#@8p
t#@8x
t#@8y
t$ ATAUAWH
t$ AWH
t$ E3
T$ E3
t$ UAVAWH
t$ UWATAUAVH
t$ UWATAUAWH
t$ UWATAVAWH
t$ UWATH
t$ UWAUAVAWH
t$ UWAVH
t$ UWAWH
t$ WATAUAVAWH
t$ WATAVH
t$ WATAWH
t$ WAUAVH
t$ WAVAWH
t$ WH
T$(A;
t$(E3
T$(fA
t$(I;
t$(L;5
T$@!\$@
t$@8q
t$@8y
T$@9ZPvPL
T$@A;
T$@E3
t$@E3
t$@fH
t$@H;
T$@H;
t$@I;
T$`D!d$`
T$`E3
t$`fD9t$`t8H
T$`fH
T$`H+T$xH
T$|;W@r
T$|9W@v@M
t$0D;
t$0E3
T$0E3
t$0E3
t$0I;
t$0uHH
t$4r-H
t$8E3
T$8E3
t$8E3
T$8fA
t$8H;
T$8H9Q
t$8I;
T$8L;
t$8L;5
t$D8q
t$D8y
t$HD;
T$hE3
T$HE3
T$hH;
T$hH+T$`H
T$P;z@
T$P9P
t$PD;m
T$pD+
T$PD9b@
t$PD9t$Hu
t$pE;
T$pE3
t$pE3
T$PE3
T$pE3
T$PE3
T$pE3
T$pH;
T$PH;
T$pH;
T$PH;
T$pH;
t$pH9u
t$tE3
T$x!U
t$XD;
t$XE3
T$XE3
t$xH!u
T$xH+
t$XuQH
t%@8q
t%D8a
t%D8i
t%D8q
t%D8y
t&@8q
t&@8y
t&A8Z
t&D8i
t&D8y
t&E8z
t&H9{
T&pE3
t(D8i
t(D8I
t(D8y
t(H9;I
t)@8y
t)D8a
t)D9Q u
t)E8b
t*D8i
t,@8q
t,@8y
t,9X u
t,D8q
t,H;s
t,H9y
t.9{Pv
t.D8i
t.QuadPart < restoreContext->VolumeSize
t/@8q
t/LcE
t:@8q
t:@8y
t:H;{0r
t?D8i
t?H9w
t-@8q
t'@8y
t-@8y
t@D8A
T@tbH
t[D8a
t\D8e
t^LcE
t{@8o t9
t+9{@v
t+E8b
t+H9y
t<@8y
t=D8h
t=H!p H
t1E8B
t1H!l$0A
t2D8i
t2D8y
t2E8b
t3H;_0r
t4D8y
t5@8q
t5D8h
t5I9^Pt/I
t6@8q
t6D8p
t6D8y
t7H9w
t8D8i
t8D8y
t9D8h
t9L9e`u
t-9Y(u
taD8i
TargetType
tb@8y
tbD8i
TCPAu2
tD@8sHt>H9
t'D8a
Temp_
TempFile.tmp
TEMPGlobalCatalog
TerminateProcess
tF;~|r
tF@8q
this != &aSrc
this->m_handle == NULL
tJD8q
TlsGetValue
tmptmptmI
tOL9'uJL9
TotalBackupSizeMB
TotalBackupTimeSeconds
towlower
tqfA;
TraceEvent
TraceMessage
TranslateMessage
Translation
TreeSetNamedSecurityInfoW
Trigger %u
TRUE == m_bPerformAppBackup
tSH9{Pu
tT@8q
tTD8a
tu@8x
tUD8|$0u
tUL9a
tVf93tQH
TypeLib
tz@8y
u H!u
u HcA<H
u!H;=
u&fD9C
u&L9o
u(;}$
u(H!G@H
u(L;=?
u)H91t
u*9Q<|%
u,HcA
u.L97t
u/L;k
u:D8k0urH
u;9\$8~5L
u;fD9C
U@!|$(L
u@8}0toH
U@H+UHH
u\8D$0t
u`@8t$`uY@8t$buRH
u>H9C
U0Hc{8
u0Hcs
u0M9.u
u1L;&t@H
u1L9e0u
u48Y`t
u4fD9C
u4I9^0t>H
u4L;{ 
u7L9|$pu
uAM;S(
UATAUAVAWH
UATAUH
UATAVH
UAUAVH
UAVAWH
ubD8m
uCurrentBit < HintSpaceBitmapSize
ud9w8t
uDD8M
u-fD9C
u-H9G
uhI9~(t.H
u-L!D$@E3
U'L!u
ulCurrentMedia < m_cMedia
ulFetched == 0
ulFetched == 1
ulIndex < m_Len
ulLen <= m_Len
ullEndTime >= ullStartTime
ullReclaimSizeCheckPoint != 0
ulNumLogs >= 2
ulReadSize > 0
ulSectorSize != 0
UnhandledExceptionFilter
UnregisterClassA
UnregisterTraceGuids
UnregServer
UoH+UwH
UseASR
USER32.dll
USERDOMAIN
USERNAME
UseSameVssContext
usnBeforeSnapShot != BLB_INVALID_USN_ID
USNSettings
USVATAUAVAWH
USVWATAUAVAWH
USVWATAVAWH
USVWAUAVAWH
USVWAVAWH
USWATAUAVAWH
USWATAWH
UTF-16
UuidCreate
UuidFromStringW
UuidToStringW
UVATAUAVH
UVATAVAWH
UVAUH
UVWATAUAVAWH
UVWATAUH
UVWATAVH
UVWATAWH
UVWAUAVH
UVWAUAWH
UVWAVAWH
uW@8sHt
UWATAUAVH
UWATAUAWH
UWATAVAWH
UWATH
UWAUAVAWH
UWAUH
UWAVH
UWAWH
uWD;}
uWf9_
uWL!l$(H
uXD;e\
UXH+U
v0I;Z
val ThreadingModel = s 'Both'
ValidSystemImageBackup
Value
VarFileInfo
VATAWH
VAVAWH
Version
VHDMountSettings
VirtDisk.dll
Volume
Volume Backup hr
Volume%ws
VOLUME_HAS_SYSTEMSTATE(pVolCtxt->m_dwVolumeFlags)
VOLUME_IS_BACKUP_CRITICAL(pVolume->m_dwVolumeFlags) != FALSE
VOLUME_IS_BACKUP_CRITICAL(rgVolume[j].m_dwVolumeFlags)
VOLUME_IS_BLOCKLEVEL(dwVolumeFlags)
VOLUME_IS_BLOCKLEVEL(pVolCtxt->m_dwVolumeFlags) || VOLUME_IS_INCREMENTAL(pVolCtxt->m_dwVolumeFlags)
volumeBlockOffsetBitLength >= bitsInvolumeStartOffset
volumeGuid != GUID_NULL
volumeId != GUID_NULL
vRbase\stor\blb\catalog\mediatbl.cpp
VS_VERSION_INFO
vsimL
VSS Default Provider
VSSAPI.DLL
VssFreeSnapshotPropertiesInternal
vssSnapshotId != GUID_NULL
vsstrace.dll
VWATAUAVAWH
VWATAUAVH
VWATAUAWH
VWATAVAWH
VWATH
VWAUAVAWH
VWAUH
VWAVH
VWAWH
w L;w(r
w";D$H@
w(E8f 
w8H!l$@M
WaitForSingleObject
WaitForSingleObjectEx
WATAUAVAWH
WATAUH
WATAVH
WATAWH
WAUAVH
WAUAWH
WAVAWH
WBEngine
wbengine
wbengine.exe
wbengine.pdb
wcscat_s
wcschr
wcscmp
wcscpy_s
wcscspn
wcslen(pwszLogFile) < (MAX_PATH - 7)
wcslen(wcsPathCat) + wcslen(x_wszBLB_CATALOG) + wcslen(x_wszGlobalCatalogName) + 1 < STRING_LEN(wcsPathCat)
wcslen(wszBuf) + wcslen(x_wszApplicationName) + 1 < MAX_PATH
wcslen(wszBuf) + wcslen(x_wszSPPMetadataDirectoryName) + 1 < MAX_PATH
wcslen(wszBuf) + wcslen(x_wszSVIDirectoryName) < MAX_PATH
wcslen(wszCatalogDir) + wcslen(x_wszApplicationName) + 1 < MAX_PATH
wcslen(wszCatalogDir) + wcslen(x_wszBLB_CATALOG) + 1 < MAX_PATH
wcslen(wszCatalogDir) + wcslen(x_wszSVIDirectoryName) < MAX_PATH
wcslen(wszFilePath) > 0
wcslen(wszMultiVolumeList) >= 1
wcslen(wszPath) + wcslen(data.cFileName) + 2 < MAX_PATH * 2 + 1
wcslen(wszPath) + wcslen(x_wszBLB_CATALOG) + 1 < MAX_PATH + 64
wcslen(wszPath) + wcslen(x_wszBLB_CATALOG) + wcslen(wszFileName) + 1 < MAX_PATH + 64
wcslen(wszPath) + wcslen(x_wszTempGlobalCatalogName) + 3 < MAX_PATH * 2 + 1
wcslen(wszPathBackup) + wcslen(x_wszBackupGlobalCatalogName) + wcslen (x_wszBLB_CATALOG) + 1 < STRING_LEN(wszPathBackup)
wcslen(wszPathBackupCatalog) + wcslen(x_wszBackupGlobalCatalogName) + 1 < MAX_PATH
wcslen(wszPathOrg) + wcslen(x_wszGlobalCatalogName) + wcslen (x_wszBLB_CATALOG) + 1 < STRING_LEN(wszPathOrg)
wcslen(wszPathOrgCatalog) + wcslen(x_wszGlobalCatalogName) + 1 < MAX_PATH
wcslen(wszPathToDirectory) + wcslen(x_wszGlobalCatalogName) + 1 < STRING_LEN(path)
wcslen(wszPathToDirectory) < MAX_PATH
wcsncmp
wcsncpy_s
wcsPath
wcsrchr
wcsstr
wcstok_s
wcstoul
WcurrentRestoreContext
wer.dll
WerReportAddFile
WerReportCloseHandle
WerReportCreate
WerReportSetParameter
WerReportSubmit
Windows Server Backup Error
Windows Server Backup Error Report
WindowsBackup
WindowsBackupLinks
WindowsImageBackup
WindowsLicensing
WindowsServerBackup
WinReRestoreLogFiles
WinSqmAddToStream
WinSqmAddToStreamEx
Wrapped
WriteFile
WriteHandle != INVALID_HANDLE_VALUE
writeOffSet - Length + _lastBlockSize == _volumeSize
WriterId
writerId != GUID_NULL
wsbappres.dll
WsbMountedVolumeFile%lu
WsbMountedVolumeFile%lu_%s
WsbMountedVolumeFile*
WsbMountedVolumes
wsz != NULL
wszAccessPath
wszAccessPath != NULL
wszAppend
wszAppId && pbValid && pwszParsedAppId
wszAppName
wszBackupComponents
wszBackupComponents != NULL
wszBackupDir
wszBackupMetadata
wszBackupSetDir
wszBackupSetDirectory
wszBackupTargetVolume != NULL
wszCatalogTargetVolume != NULL
wszCatalogVolumeName[wcslen(wszCatalogVolumeName) - 1] == '\\'
wszComponentLogicalPath
wszComponentName
wszComponentName1
wszComponentName2
wszCriticalVolumeName
wszCurrentTargetName != NULL
wszDeleteFile
wszDevice
wszDeviceName
wszDeviceName != NULL
wszDir
wszDiskName
wszDiskPath && *wszDiskPath
wszDisplayName
wszDstFile
wszDstPath
wszEntry != 0
wszFailureLogFileName
wszFailureLogName
wszFile != NULL
wszFileFound == NULL
wszFileName
wszFileName != NULL
wszFilePath
wszFilePath != NULL
wszfilePath != NULL
wszFilePattern
wszFileSearchPath
wszFileSpec
wszFileSpecsXML
wszFileSystem
wszGuid != NULL
wszInputString
wszKeyName
wszKeyValue != NULL && wszSubKeyPath != NULL && wszSubKeyName != NULL && lpType != NULL
wszLabel
wszLastSlash != NULL
wszLogFileName
wszLogicalPath
wszMachineName
wszMachineName != NULL
wszMappingVolumePath != NULL
wszMetadata != NULL
wszMountedDeviceName
wszMountedDeviceName && *wszMountedDeviceName
wszMountedPath != NULL
wszMountedVhdPath != NULL
wszMountedVolume
wszMountedVolume != NULL
wszMountedVolumePathNoSlash && *wszMountedVolumePathNoSlash
wszName != NULL
wszNetworkShare
wszNewDirectory != NULL
wszNonWriterMetadata
wszNonWriterXMLData
wszOldDirectory != NULL
wszOriginalAccessPath
wszPath
wszPath != NULL
wszPath && wszPath[0]
wszPathToDirectory != NULL
wszPathToDirectory[wcslen(wszPathToDirectory) - 1] != L'\\'
wszReason
wszRegXML
wszRestoreTargetPath
wszRootPath
wszSearchFileName
wszServiceName
wszSnapshotName
wszSource
wszSourceFilePath != NULL
wszSourcePath
wszSourcePath != NULL
wszSourceSPPMetadataCachePath != NULL
wszSourceVolumePath
wszSpec
wszSpecsXml
wszSpecsXmlCurr
wszSPPMetadataCachePath != NULL
wszSPPMetadataPath != NULL
wszSrcFile
wszSrcPath
wszString
wszStringNewline
wszStringToAppend != NULL
wszSuccessLogFileName
wszSuccessLogName
wszSuccessLogName && wszFailureLogName
wszSystemPartition != NULL
wszTargetAccessPath
wszTargetBootVolume
wszTargetFilePath
wszTargetFilePath != NULL
wszTargetName
wszTargetName != NULL
wszTargetPath
wszTargetSPPMetadataCachePath != NULL
wszTargetVhdFilePath
wszTargetVolName && *wszTargetVolName
wszTargetVolume
wszTargetVolume != NULL
wszTargetVolume != NULL || guidBootVolumeId != GUID_NULL
wszTargetVolumeName && pullSizeUsedByBackup
wszTempCustomPerformanceSetting == (wszCustomPerformanceSetting + dwcCustomPerformanceSetting -1)
wszTempFileName
wszUserName
wszValue != NULL
wszValueName
wszVhdExtension
wszVhdExtension != NULL
wszVhdFile
wszVhdFile && *wszVhdFile
wszVhdFileName
wszVHDFileName && *wszVHDFileName
wszVhdFileName && *wszVhdFileName
wszVHDFilePath && *wszVHDFilePath
wszVhdFilePath && *wszVhdFilePath
wszVHDPath
wszVHDVolumeDevicePath
wszVHDVolumeDevicePath && *wszVHDVolumeDevicePath
wszVirtualSrcVolName && *wszVirtualSrcVolName
wszVolume
wszVolumeAccessPath
wszVolumeAccessPath != NULL
wszVolumeDevicePath && *wszVolumeDevicePath
wszVolumeFriendlyName
wszVolumeGuid
wszVolumeGuid != NULL
wszVolumeGuidPath
wszVolumeLabel
wszVolumeName
wszVolumeName != NULL
wszVolumeName && *wszVolumeName
wszVolumePath
wszVolumePath != NULL
wszVolumePath == NULL
wszWindowsImageBackupDirectory
wszWriterMetadata
wszWriterMetadataXML
x ATAUAVAWL
x ATAUAVH
x ATAUAWH
x ATAVAWH
x ATH
x AUAVAWH
x AVAWL
x AVD
x AVH
x AVL
x AWH
x AWL
x UATAUAVAWH
x UATAVH
x UAUAVH
x UAVAWH
X UVWATAUAVAWH
x%;i(
x%9_@vPH
x(L9mHt
x*L9c 
X@H9u
X_^][
X`L9e
x<D8t$ H
x0H9M
x0L9mHt
x1u_H
x8L9mHt
xA_A^A]A\_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^[]
xA_A^A]A\_^[]
XA_A^A]A\_^[]
XA_A^A]A\_^][
xC@8|$`t
xfB;l/Du
xgH!|$0E3
xHL9e
xHL9e`t
xJ9\$HsBH
xlL9}@
xM9\$HsEH
XmlLite.dll
xU8\$`t>H
xzD8eHt\H
xZu3H
Y@H9;u+H
y^}t<
y=F8D3ht6D9
yf98t
yp@8u
yphFile != NULL
ySM;S8
yVM;SP
