 DisableStripFVF
 Microsoft Corporation. All rights reserved.
 Operating System
 t*VW
 t'h@
 Windows
!This program cannot be run in DOS mode.
"""""""
"""""""""""""""""""""""""""""""
"080C0j0
#0*0z0
#t/=DXT1t
$3T3k3
$SVWh
%d different constant registers (c#) read by instruction.  Max. different constant registers readable per instruction is %d.
%d different constant registers (c#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different input registers (v#) read by instruction.  Max. different input registers readable per instruction is %d.
%d different input registers (v#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different temp registers (r#) read by instruction.  Max. different temp registers readable per instruction is %d.
%d different temp registers (r#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different texture coordinate registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different texture coordinate registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different texture registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different texture registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%s specified twice in the declaration
%s(%d) : 
%sInput registers (v#) are not available in phase 1 of the shader.
%sInvalid register number: %d.  Max allowed for this type is %d.
%sInvalid register number: %d. Max allowed for this type is %d.
%sInvalid register type.
%sInvalid source modifier for tex* instruction.
%sInvalid source modifier.
%sInvalid source selector for tex* instruction.
%sInvalid source selector.
%sSource register type must be temp (r#) or texture coordinate input (t#) for tex* instruction.
%sSource register type must be texture coordinate input (t#) for texcrd instruction.
%sTexture coordinate registers (t#) are not available to arithmetic instructions.
&0F0d0
&0U0f0
(080(1w2
(0G0S0
(First source param) 
(Global Validation Error) 
(Global Validation Warning) 
(Second source param) 
(Source param) 
(Statement %d) 
(Third source param) 
(Validation Error) 
(Validation Warning) 
)SWhP
*071"3A4Q4
, texm3x2depth
,0U0d0
,A;L$(r
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.data
.data$brc
.data$r$brc
.edata
.gfids
.giats
.idata
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.rdata
.rdata$brc
.rdata$sxdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata$x
/k@Z>
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
: :8:\:d:l:x:
: ;5;
:!:2;
:";W;
:#:G:b:}:
:%:4:
:%:E:h:l:p:t:x:|:
:&:Y:
:&;I;i;
:(;:;n;
:,:e:
:.;A;
:.;K;-=@=S=
:::E:
:':1:;:E:O:Y:c:m:w:
:':E:W:
:;CHv
:;FHv
:-;I;
:@:H:P:\:d:
:~;t<
:<<m=
:<>R>
:>:h:
:0:|:
:1:T:
:2:V:
:4:<:D:P:X:p:
:5:G:Y:f:k:s:{:
:5;K;
:6:t:
:8:F:
:A:\:x:
:a:y:
:A;d;
:B:l:
:G;~;
:h;x;
:K:x:
:K;k;g<n<a=w=
:l;i<v<f>
:M:^:
:M:n:
:m:u:
:N;Y;
:O:t:
:P;8<Z<
:Q;s;
:S;m;
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
; ;$;(;,;0;4;8;<;@;D;H;L;T<
; ;d;
; <?<T<i<
;!<Z<
;";^<
;";N;V;];u;
;"<2<K<_<l<
;"<5<
;$;);:;`;g;s;
;$;,;8;@;t;|;
;$;X;`;h;t;|;
;$<,<4<@<H<|<
;$<0<Q<-=
;$<7<w<
;$<B<M<
;&<X<s<3=S=
;(<:<r<
;(<9<j<
;);6;M;e;|;
;*;^;
;*<o<
;.<O<
;';-;3;9;?;E;O;Y;c;m;w;
;?;==d=
;]<w<
;~$v;
;~(vN
;+<H<i<
;<;e;
;-<@<
;-<_<
;=;U;
;1<!=F=f=
;1=x=
;3<;<d<
;4;d;
;5;^;p;
;5;}<
;5=<=v>c?x?
;7;h;y;
;7<k<r<
;8;E;w;
;9;`;
;9;S;n;
;C8u(
;CHv9
;CHw+
;D$`u
;F$s+
;G,s/Q
;G,s@
;G<h<z<
;Gdu(9_<u#
;GHvA
;GHw-
;GHw#
;GHw*
;GHw~
;GHw=f
;GHw0
;GHw2
;GHw6
;GHw7
;GHwIf
;GxtD
;GxtV
;H;S;^;i;
;H;Z;
;h;z;&<O<e<
;h<v<
;h<x<
;j<}<
;J<O<
;L;_;
;L;T;\;h;p;
;Q;^;l;x;~;
;r;{;
;spu(;Stu#;Cxu
;Stu$;Cxu
;Sxu$;C|u
;t$4u
;T$8u
;V,sY
;zDu.
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
? ?(?\?d?l?x?
?"?5?f?l?
?#?;?O?b?w?
?$?+?2?9?@?G?M?W?c?
?,?2?8?>?H?N?T?f?u?
??1type_info@@UAE@XZ
?-?o?w?
?@?D?H?L?P?T?X?\?`?x?
?>?p?
?3?X?e?
?5?H?S?j?
?7?d?
?8?P?k?
?D?t?
?d?v?}?
?e?l?
?H?b?
?H?Z?
?I?q?
?L?`?h?p?x?
?mQZG.
?Q?x?
?terminate@@YAXXZ
@( u@
@.reloc
@.rsrc
@H@t@
@H@u3
@P=DXT3wot
@SVWj
@ta_^
@VSWQ
\$ td
\$<;L$du(
\$<9^
__CxxFrameHandler3
__dllonexit
_amsg_exit
_bx2 is a valid src mod for texM* instructions only (%s source param).
_CIcos
_CIexp
_CIlog
_CIlog10
_CIpow
_CIsqrt
_CxxThrowException
_dw(=_da) modifier on source param for texld only allowed if source is a texture coordinate register (t#).
_dw(=_da) modifier on source param must be paired with source selector .xyw(=.rga).
_dz(=_db) modifier cannot be used on source parameter for texcrd. It is only available to texld instruction, when source parameter is temp register (r#).
_dz(=_db) modifier may only be used at most 2 times in a shader.
_dz(=_db) modifier on source param for texld must be paired with source selector .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
_dz(=_db) modifier on source param for texld only allowed if source is a temp register (r#).
_dz(=_db) modifier on source param for texld only allowed in second phase of a shader.
_except_handler4_common
_ftol2_sse
_H_^[
_initterm
_L_^[]
_lock
_onexit
_purecall
_stricmp
_unlock
_vsnprintf
_wcslwr
_XcptFilter
`.data
|$$t/
|$(t?;\$Lu9;|$Pu3
+K +C
+t$0B
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
< <,<4<h<p<x<
<!<+<5<?<I<S<]<g<q<{<
<"<m<
<"=5=v=
<#=0=}=
<$<T<
<$<V<n<
<$=T=
<%<*<K<U<Z<m<w<|<
<%<U<k<
<&<-<4<;<B<I<P<W<^<g<w<
<&=a=
<(<0<d<l<t<
<)<6<;<H<X<_<o<v<
<)=e=
<*<|=
<,='?j?
<,=4=<=H=P=
<.=b=z=
</=X=i=
<@<M<W<c<i<Y=g=s=
<+<9<U<
<+=^=
<<<~<
<<<W<V=
<'<=<
<'=@=X=
<=<d<m<y<
<>=`=
<0<h<
<2>(?
<4=J=
<6<O<m<
<7=F=`=q=
<9<i<
<A=@>
<B=K=
<E<x<Y=
<F=p=
<K=v=
<R<q<
<u=a>
<U>R?
<X=e=
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
= =(=4=T=\=h=
=!=y?
=#=>=Y=
=#>;>D>|>
=$=,=8=X=d=l=
=$=>=X=r=
=&=Q=x=
=&>9>
=)=/=C=R=g=p=
=*=^=
=*=j=
=.>a>
=/=G=b=h=t=z=
=@>r?
=@>Z>
=[>v>
=+=h=z=
=+=O=
==>`>
='=1=;=U=j=
=>>V>x>
=0Q0u0
=1>8>T>
=1>a>
=4>8>
=5>R>
=6>R>l>
=8=d=
=8=K=b=
=A=m=
=A=q=
=c=i=
=D>y>
=DXT1tW=DXT2um
=DXT1u
=DXT2t!
=DXT2u
=DXT3
=DXT3u
=DXT4t
=DXT4u
=DXT5t
=DXT5u
=F>|>
=FILEt
=H=s=
=h=x=
=LINEu
=O=p=
=O=x=
=T>n>
=U=n=
=UYVYu
=v?}?
=YUY2u
=Z>n>
> ?$?(?,?0?
> ?%?,?1?8?=?K?P?
> ?(?0?<?D?x?
> ?3?q?
> ?d?
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
> >T>\>d>p>x>
>!?g?
>!>]>i>u>
>!>3>>>E>T>
>"?+?v?
>#>(>U>
>#>c>
>$>,>`>h>p>|>
>%>2>K>
>(?:?
>(?:?l?
>(?T?
>(>1><>A>L>R>Z>`>
>*?a?
>.?G?
>.>o>
>:?X?j?
>:>r>
>;?Q?
>;?R?x?
>??D?
>@>Y>
>\?`?d?h?l?
>_>r>
><>B>H>N>
>=>b>z>
>0?:?E?K?
>0?i?
>0?W?
>0>K>h>l>p>t>x>|>
>1?W?
>2?F?W?
>3?O?
>4><>D>P>X>
>6>@>}>
>7>|>
>8?H?
>8?J?~?
>9>\>
>A>d>
>A>q>
>b>b?
>F?P?
>G>l>
>G>X?
>I?~?
>I>k>
>k>r>
>O>v>
>Q>n>
>U>]>o>
>v>3?
>X?j?
>Y?l?
0 0$0(0
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0 0$0(0,040X0d0
0 0(0@0d0l0t0
0 151
0!0'1;1
0!0q0
0!0W0^0v0
0!1K1
0"0_0o0
0"010B0M0S0Y0_0i0o0u0
0#0?0R0s0
0#5K5x6|6
0$0(0,0004080<0@0D0H0L0
0$0c0
0$1L1
0%0?0b0f0
0%xh 
0&1-1Z1a1|1
0(00080D0L0d0
0(000d0l0t0
0(0-030?0h0u0
0(171a1{1
0(171w1
0(1p1L2m2
0)1G1N1U1
0*090J0^0m0r0w0|0
0*0S0
0.191D1O1
0.1V1
0:0L0
0:0x0
0@1S1
0\1o1
0_1w1+4
0+121
0+1t1z1
0<0,1
0=0Q0
0=1?4
000h0t0
000J0_0l0
000K0
000U0p0
0014181<1@1Y2n2
011[1
011a1
012E2
021J1e1
030`0{0
04080
040904B0
040q0
041H1L1P1T1X1\1`1d1h1l1p1t1x1|1
051@1
060N0i0
060N0v0
061_1|2<5o9_<(=:=
064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
080G0
080J0{0
081U2
091k1
0A0d0
0a0t0
0b0k0
0B0m0y0
0D1H1L1P1T1X1\1`1d1h1l1p1
0D1S1j1{1
0F0\0u0
0J0j0
0L0P0T0X0\0`0
0O1Z1h1q1
0P1c1
0T1!3a3
0watL
0X1n1
0Y0g0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
1 1$1,10181<1D1H1h1
1 1,121C1I1O1[1`1u1
1 1=1
1 2$2(2D2H2x2
1!2Q2
1"1y1
1"2'2g2l2
1#1S1
1#2/2^2l2w2
1$1,121E1
1$1,181@1X1|1
1$1H1P1X1d1l1
1&2h2
1(2:2
1(2:2n2
1)1r1x1
1)2l2
1*161L1
1*1K1
1,141<1D1t1
1,1J1g1
1.2F2
1/2J2a2x2
1/2m2
1/3*4|4
1;GHv
1@2H2v2
1\1a1
1\1v1
1+171
1<1_1
1<1T1
10.0.22000.1
10.0.22000.1 (WinBuild.160101.0800)
111l1
121h1z1
131F1K1Q1e1j1v1
141c1{1
14282<2@2D2H2l2p2t2x2|2
152O2
191u1
192l2?3
1a2f2
1c1v1
1C2]2p2
1C2Z2
1E1]1f1
1G2j2
1K1t1x1|1
1l1z1
1l2z2
1N1H2X3j3
1O1i1C2V2
1r2y2
1S2Y2
1X1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2 2*242>2H2R2\2f2p2z2
2 3;3Z3m3x3
2 343Y3
2"2,2@2e2m2u2
2"2024282<2@2q2
2"3J3y3
2$2,242<2D2L2T2\2d2l2t2
2$2.282B2L2V2`2j2t2~2
2$2D2P2X2p2
2$373F3b3
2%2B2U2[2c2i2
2&2H2W2n2
2&3034383<3@3D3H3
2(2-2M2{2
2,242D2J2[2e2p2
2,3$4o4v4
2.3=3L3[3j3
2.3-4T4
2.393g3
2.3h3
2.3Y3
2/2t2
2;3C3Q3
2;CHvJ
2@3Q3
2+373S3Y3
2<2P2
2<2Z2
2>2N2
20<0A0F0K0P0U0Z0z0
202A2
202r2
212B2S2
21393@3]3o3
222T2l2
2'2J2
232?2a2x2
2-3W3c3o3
242<2D2P2X2
243=3}3
262N2f2~2
272o2
293X3w3
2D2X2
2e2x2
2F2}2 6Q6x6
2H3T3l3u3{3
2I2x2
2k3~3
2O2q2
2o2u2
2o4v4
2R3q3
2S2k2
2S3^3
2U2~2
2X2j2
2Y3l3
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
3 3$3(394v4
3 3$3d4
3 3(30383D3L3d3
3 3<3K3U3i3
3 3D3L3T3`3h3
3 4*4M4W4b4
3!3d3
3!4<4W4r4
3"454
3"4A4
3"4G4_4
3#474u4
3$3,343<3D3L3T3`3
3$3.383B3L3V3`3j3t3~3
3$4/4>4l4
3$4D4K4
3%494d4
3&3>3V3v3
3&4D4s4
3(3^3
3(323<3F3P3Z3d3n3x3
3)313
3)373B3M3
3*3^3
3*353A3X3}3
3*3M3
3*3X3i3z3
3?3m3
3?4h4z4
3_4n4z4
3_4p4
3+464a4m4y4
3>3~3
304A4
314<4\4h4t4
324Z4
3'3 4)454g4
3'313
333K3
3-4w4
354_4y4
354D4
354T4p4t4x4|4
3'555U5v5
364F4
384B4]4
3B3d3
3D3t3
3E4j4
3f>u>
3G3a3
3h3{3
3n4u4
3O4H6m798l9n:
3p7y7p8~8\:d:`=i=`>n>
3w4}4
3X3j3
3X4e486J6
3Z4h4s4~4
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4 4(4@4d4l4t4
4 4_4
4 4'414N4Y4b4
4 474
4 4C4
4 5O5_5p5v6
4!4<4
4!5N5
4"4W4f4u4
4$4,444<4D4L4T4\4d4p4
4$4H4P4X4d4l4
4$5T5
4%4J4
4%5i5p5
4%656=6M6
4&4>4V4n4
4&5i5
4(424<4F4P4Z4d4n4x4
4(6m6
4)4L4W4
4)4M4 5)5=5
4,4L4d4
4,5Y5~5
4.4L4
4/5<5T5a5y5
4:4x4
4:5M5`5
4;5V5~5
4@5H5t5
4+4C4[4s4
4=4d4x4
4=5[5
4>4y4
404o4
415T5
425b5
435x5|5
4-4>4W4k4q4
4'414:4?4E4O4Y4b4g4m4w4
4'434Q4`4|445
444d4
4'4I4x4
4'565E5Y5f5
4-5E5r5
494N4x4
494q4
495H5h5
4A5X5
4b5n5
4C4X4J5O7
4E4i4y4
4M5|5
4O4s4
4P4i4
4Q5a5
4Q5v5
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
5 5F5P5d5
5!5*5/555?5I5R5W5]5g5q5z5
5!6Q6t6
5"5;5i5
5#6-676A6K6U6_6i6s6}6
5$5,585@5X5|5
5$5<5`5h5p5|5
5$6:6E6{7
5%6O6~6
5&5Q5}5
5&656Y6
5(505P5l5t5|5
5(535:5R5X5^5d5j5p5w5~5
5(565
5(6;6
5(6<6D6L6T6\6h6p6
5(656
5(6o6
5)6|6
5*5[5
5*5E5a5~5
5*6D6Y6
5,646<6H6h6t6
5.6w6
5:6`6y6
5;6E6X6q6
5@5O5i5Y6
5@5R5
5^5s5~5
5~6P7
5+5G5b5
5+6H6L6P6T6X6\6`6d6(7:7P7`7
5<5S5
5<6P6T6X6\6`6d6h6l6p6t6x6|6
5>5P5i5{5
515X5h5
526Y6b6
535K5c5{5
535P5^5j5
536D6
545x5|5
565h5
566V6
5'6x6
585s5
595?5_5i5y5
595h5
5A5g5y5
5D5Z5g5
5D6H6L6P6T6X6x6|6
5h8z8
5I5y5
5K5S5
5m6L7
5N5o5
5P5`5
5U5v5
5V6|6
5W5o5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
6 737R7s7
6 9B9
6!696D6\6k6
6"7'7,71767;7@7E7J7O7T7Y7^7c7h7m7r7w7|7
6#6;6S6k6
6$6/6
6$606@6I6`6f6l6r6x6~6
6$7(7,7074787
6$7+787p7w7
6$7h7
6%6/696B6G6M6W6a6j6o6u6
6%656A6O6_6k6
6%6c6l6u6
6&7-7:7A7
6)636
6)666b6
6*7B7
6,62686=6E6O6Y6c6
6,7T7\7d7t7
6/6F6_6s6
6/7P7x7
6@7Z7q7
6\7`7d7h7l7p7t7x7
6]7c7
6^6|6
6`8g8
6=77?
6=8|8
6>7m7t7
626{6
637R7y7
646<6D6P6X6
646d6
647|7_9
656j6
656M6V6
666N6f6~6
69W(t1
6D7H7y7
6D7t7
6H6W6
6I7X7
6l6p6t6x6|6
6L7j7
6L7P7T7X7\7`7d7h7l7p7t7x7|7
6P6_6
6P6c6
6P6W6t6
6s7x7
6T6c6z6
6X7e7|7
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
7 7(7@7d7l7t7
7 7D7L7T7`7h7
7 8<8C8O8
7!8;8
7!8I8X8b8x8
7$7)7.73787=7d7
7$7@7h7z7
7%7;7D7.;
7%7=7U7m7
7%8?8c8p8{8
7&7/7x7
7(7K7
7(8:8[8+9
7(8:8N8
7(8:8s8
7(828]8g8
7(878Q8c8
7(8V8
7)737=7G7Q7[7e7o7y7
7)7I7
7,8P8
7.7x7
7.8Q8l8
7.8Y8
7/888?8F8M8T8[8b8h8r8~8
7:7Y7q7
7]:d:
7_7{7
7+7C7[7s7
7>7u7
708U:
70O0z0
718a8q8
72777R7^7r7
737:7S7
738p8
738X8j8
757O7
7'7,767;7E7J7T7Y7c7h7r7w7
7'717;7E7O7Y7c7m7w7
7'8{8
788E8
7A7q7
7A8Q8
7D7_7f7
7j7z9
7K8e8{8
7P7r7
7p7w7
7S8]8d8-9b9
7W9w9
7Z8p8t8x8|8
8 8$8(8
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8,9
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8s:}<
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
8!8&8+80868<8A8F8K8P8U8Z8_8d8i8n8s8x8}8
8!8+858?8I8S8]8
8!9D9t9
8#8<8O8Z8x8
8#8-8L8u8
8$8,848<8H8P8
8$8,888@8X8|8
8$898x8
8%8<8g8
8&9-9S9l9s9
8(838q8
8)8V8}8
8.9S9
8/8\8}8
8;9c9|9
8;9V9
8?8R8
8[8s8
8+969H9o93:]:i:
8<8F8Q8W8^9e9
8=9j:
80888@8L8T8
808H8c8
819:9A9o9
81E1_1
859A9@:
869`9
888J8
889J9
889z9
8-8E8]8
8'8R8
898X8
899J9{9
8'9b9s9
8'9N9
8'9y9
8a9}9
8D8t8
8G8U8`8k8
8H849
8H9U9l9
8I9k9
8K8{8
8L8f8u8{8
8n9u9
8P:[:f:q:
8V9i9
8X9\9`9d9h9
9 ;;;@;^;
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9":?:h:z:
9";A<
9"9=9X9s9
9#:H:
9$9)9.93989=9B9G9L9Q9V9[9`9e9j9o9t9y9~9
9$9,949<9D9\9d9l9t9|9
9$959<9C9J9Q9a9h9o9v9}9
9%:T:
9%;H;Z;
9&:D:X:\:`:d:
9&9.9;9
9(:M:r:
9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9(919x9
9*9`9
9*9n9
9*9U9p9
9,:X:
9,9=9E9[9c9
9/:B:M:|:8;K;
9;FHv
9?:f:
9_ v|
9_ vd
9_ vf
9+:5:M:T:
9<:@:D:H:L:P:T:X:\:`:d:h:
9<;N;
9<9D9L9X9`9x9
9<9I9S9q9
9>9k9
90:M:j:
91:@:
929x9
94:;:X:\:`:
95:D:X:k:z:
96:|:
98:K:
989@9H9T9\9
99:o:
9-939@9U9~9
9B9w9
9D:c:
9d:q:
9G u5
9G:s:
9G9x9
9h?z?
9J9s9
9L$$ub
9L:S:Z:M=
9N9s9y9
9p9t9x9|9
9T$ u
9T$$u
9T$8u
9w vA
9w vC
9w<u#
9wptA9wtu<
9Y,vn
9Y9x9
A ;GHv
A$;GHwXf
A(;B(u'
A(;GHv
A;N$r
A0;GH
A4;GHv
A8;B8u/
Absolute and relative addressing of constant registers cannot be combined in one instruction.
Adapter %d FPS = %ld.%01ld
AddAccessAllowedAce
AddMandatoryAce
Address mode must be absolute (%s source param).
Address register not available for vertex shader version %d.%d.  Version 1.1 required.
advapi32.dll
ADVAPI32.dll
After texdepth instruction, r5 is no longer available in shader.
AH;GHv
ALSVW
api-ms-win-appmodel-unlock-l1-1-0.dll
api-ms-win-core-versionansi-l1-1-0.dll
api-ms-win-gdi-dpiinfo-l1-1-0.dll
At;GHv
B$_^[
B(;A(t
B;V$r
B@;Bxu
B<;Btu
B8;A8t
BD;B|u
bem cannot be co-issued.
bem may only be used before the phase marker.
bem may only be used once in a shader.
BitBlt
Blend indices
Blend weight
C,_^[
C;Y,r
C4;C0t
CalibrateGammaRamp
CallWindowProcA
Cannot apply a negation source modifier on data that was last written with the saturate destination modifier. Affected components(*) of %s source param: %s
Cannot negate second source parameter to vector*matrix instructions.
Cannot set co-issue ('+') on a tex* instruction.  Co-issue only applies to arithmetic instructions.
Cannot set co-issue ('+') on a texture instruction.  Co-issue only applies to arithmetic instructions.
Cannot set co-issue ('+') on consecutive instructions.
Cannot swizzle second source parameter to vector*matrix instructions.
Cannot use tex* instruction after non-tex* instruction.
CD_^[
ChangeDisplaySettingsExA
ClientToScreen
CloseClipboard
CloseDesktop
CloseHandle
Co-issued instruction cannot write all components - must write either alpha or color.
Co-issued instructions cannot both be dot-product, since each require use of the color/vector pipeline to execute.
Co-issued instructions cannot both be dp3, since each require use of the color pipe to execute.
Co-issued instructions cannot both write to alpha component.
Co-issued instructions cannot both write to color components.
Co-issued instructions cannot both write to the same component(s).  One instruction must write to alpha and the other may write to any combination of red/green/blue.  Destination registers may differ.
Co-issued instructions cannot both write to the same components of a register.  Affected components: %s
Co-issued instructions must both write to the same register number for pixelshader version <= 1.0.
Co-issued instructions must both write to the same register type for pixelshader version <= 1.0.
CompanyName
ConnectNamedPipe
Const declaration (def) must appear before other instructions.
ConvertStringSidToSidA
CreateCompatibleBitmap
CreateCompatibleDC
CreateDCA
CreateDIBitmap
CreateFileA
CreateIconIndirect
CreateMutexA
CreateRectRgn
CreateSemaphoreA
CryptCATAdminAcquireContext
CryptCATAdminCalcHashFromFileHandle
CryptCATAdminEnumCatalogFromHash
CryptCATAdminReleaseCatalogContext
CryptCATAdminReleaseContext
CryptCATCatalogInfoFromContext
CryptCATClose
CryptCATEnumerateCatAttr
CryptCATGetCatAttrInfo
CryptCATOpen
D$ PP
D$ SV
D$ Vj@
D$$+D$
D$$Ph
D$$tO
D$$u4
D$$VW
D$(+D$ j
D$(Pj
D$(u'
D$@;L$(
D$@+D$ 
D$@v-
D$\PS
D$\VW
D$`SVW
D$|Pj
D$|PR
D$0+OX+GTQP
D$0Pj
D$4Pj
D$8tM
D$D9W
D$dPj
D$h;O4u`
D$h;O8u;
D$HPQ
D$HSVW
D$LPj
D$LPt
D$Lt(
D$P#D$0f
D$TGP
D$TPQ
D$TPS
D$xSj
D3D PixelShader Validator: Out of memory.
D3D8.dll
d3d8.dll
D3D8.dll
d3d8.pdb
D3D8_IdHot_Ctrl_SnapDesktop
d3d8d.dll
D3D8GetSWInfo
d3d8thk.dll
D3D9on12.dll
D3DKMTCloseAdapter
D3DKMTCreateAllocation
D3DKMTCreateAllocation2
D3DKMTCreateContext
D3DKMTCreateContextVirtual
D3DKMTCreateDCFromMemory
D3DKMTCreateDevice
D3DKMTCreateHwQueue
D3DKMTCreatePagingQueue
D3DKMTCreateSynchronizationObject
D3DKMTCreateSynchronizationObject2
D3DKMTDestroyAllocation
D3DKMTDestroyAllocation2
D3DKMTDestroyContext
D3DKMTDestroyDCFromMemory
D3DKMTDestroyDevice
D3DKMTDestroyHwQueue
D3DKMTDestroyPagingQueue
D3DKMTDestroySynchronizationObject
D3DKMTEscape
D3DKMTEvict
D3DKMTFreeGpuVirtualAddress
D3DKMTGetDeviceState
D3DKMTGetDisplayModeList
D3DKMTGetMultisampleMethodList
D3DKMTGetResourcePresentPrivateDriverData
D3DKMTGetScanLine
D3DKMTGetSharedPrimaryHandle
D3DKMTInvalidateCache
D3DKMTLock
D3DKMTLock2
D3DKMTMakeResident
D3DKMTMapGpuVirtualAddress
D3DKMTMarkDeviceAsError
D3DKMTOfferAllocations
D3DKMTOpenAdapterFromHdc
D3DKMTOpenResource
D3DKMTOpenResource2
D3DKMTPresent
D3DKMTQueryAdapterInfo
D3DKMTQueryAllocationResidency
D3DKMTQueryResourceInfo
D3DKMTReclaimAllocations
D3DKMTReclaimAllocations2
D3DKMTRegisterTrimNotification
D3DKMTRender
D3DKMTReserveGpuVirtualAddress
D3DKMTSetAllocationPriority
D3DKMTSetDisplayMode
D3DKMTSetDisplayPrivateDriverFormat
D3DKMTSetGammaRamp
D3DKMTSetVidPnSourceOwner
D3DKMTSharedPrimaryLockNotification
D3DKMTSharedPrimaryUnLockNotification
D3DKMTSignalSynchronizationObject
D3DKMTSignalSynchronizationObject2
D3DKMTSignalSynchronizationObjectFromCpu
D3DKMTSignalSynchronizationObjectFromGpu
D3DKMTSignalSynchronizationObjectFromGpu2
D3DKMTSubmitCommand
D3DKMTSubmitCommandToHwQueue
D3DKMTSubmitPresentToHwQueue
D3DKMTSubmitSignalSyncObjectsToHwQueue
D3DKMTSubmitWaitForSyncObjectsToHwQueue
D3DKMTUnlock
D3DKMTUnlock2
D3DKMTUnregisterTrimNotification
D3DKMTUpdateAllocationProperty
D3DKMTUpdateGpuVirtualAddress
D3DKMTWaitForSynchronizationObject
D3DKMTWaitForSynchronizationObject2
D3DKMTWaitForSynchronizationObjectFromCpu
D3DKMTWaitForSynchronizationObjectFromGpu
D3DREF8.DLL
DebugBreak
DebugSetMute
Declaration Token #%d: Cannot set stream input without first setting stream #.  Aborting shader decl. validation.
Declaration Token #%d: Cannot set tesselator stream input without first setting tesselator stream #.  Aborting shader decl. validation.
Declaration Token #%d: Duplicate declaration of input register %d as destination for normal generation.
Declaration Token #%d: Input reg %d specified as destination for normal generation is already declared elsewhere.
Declaration Token #%d: Input register %d already declared.
Declaration Token #%d: Input register number must not be specified (does not apply) for UV tesselation.
Declaration Token #%d: Invalid input reg num: %d. Max allowed is %d.
Declaration Token #%d: Invalid reg num: %d. Max allowed is %d.
Declaration Token #%d: SKIP not permitted in fixed-function declarations.
Declaration Token #%d: Stream number %d has already been declared.  Aborting shader decl. validation.
Declaration Token #%d: Stream number %d is out of range. Max allowed is %d.  Aborting shader decl. validation.
Declaration Token #%d: Stream number %d is out of range. There are no streams available.  Aborting shader decl. validation.
Declaration Token #%d: Stream number must not be specified for tesselator stream.
Declaration Token #%d: Stream selector token must be followed by at least one stream data definition token.
Declaration Token #%d: Tess datatype must be FLOAT2 for UV generation.
Declaration Token #%d: Tesselation stream has already been declared.  Aborting shader decl. validation.
Declaration Token #%d: Unrecognized stream data type.
Declaration Token #%d: Unrecognized stream declaration token.  Aborting shader decl. validation.
Declaration Token #%d: Write to const register %d is not valid.  There are no constant registers available.
Declaration Token #%d: Write to const register %d is out of range.  Max offset is %d.
Declaration Token %d: Source input register %d for normal generation has not been declared.
def cannot be co-issued.
DefWindowProcA
DeleteCriticalSection
DeleteDC
DeleteObject
Description
Dest shift not allowed for tex* instructions.
Dest shifts not allowed for vertex shaders.
Dest write mask cannot be empty.
Dest write mask must be .rgb, .a, or .rgba (all).
Dest write mask must be .rgb, or .rgba (all) for dp3.
Destination for def instruction must be of the form c# (# = reg number, no modifiers).
Destination for texdepth must be r5.
Destination of texm3x2depth instruction (t%d) is not available elsewhere in shader.
Destination shift not allowed for tex* instructions.
DestroyIcon
Different relative addressing of constant registers cannot be combined in one instruction.
Diffuse
Direct3D Shader Validator: Out of memory.
Direct3D8EnableMaximizedWindowedModeShim
Direct3DCreate8
DisableDM
DisableGB
DisableMMX
DisableNVPS
DisableProcessWindowsGhosting
DisablePSGP
DisableST
DisableThreadLibraryCalls
DisableVBFailovers
DisableVidMemVBs
DisconnectNamedPipe
display
DisplayConfigGetDeviceInfo
Dot-product needs color/vector pipeline to execute, so instruction co-issued with it cannot write to color components.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used by the dot product.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used.
dp3 needs color pipe to execute, so instruction co-issued with it cannot write to color components.
dp3 which writes alpha cannot co-issue since it uses up both the alpha and color pipes.
dp4 cannot be co-issued.
dp4 instruction cannot be co-issued.
Driver failed to create the requested pixel shader. Please contact your friendly video card manufacturer to inquire why this problem was encountered.
DriverName
DriverStyle
Dst modifiers not allowed for vertex shaders.
DWM_DX_FULLSCREEN_TRANSITION_EVENT
dwmapi.dll
DwmIsCompositionEnabled
DXT1H
DXT1J
DXT1t
DXT1t 
DXT1t#
DXT1w0t(
DXT2t
DXT3K
DXT3M
DXT3t
DXT3u
DXT4t
DXT4w t
DXT5N
DXT5P
DXT5t
DXT5u
DXT5u>
EmptyClipboard
EmulatePointSprites
EnterCriticalSection
EnumDisplayDevicesA
EnumDisplayMonitors
EnumDisplaySettingsA
EtwEventWriteNoRegistration
EventRegister
EventSetInformation
EventUnregister
EventWriteTransfer
ext-ms-win-rtcore-ntuser-dpi-l1-1-0.dll
F _[^
F _^[
F 9N$v
f#F\f
f#V\f
F$_^[
F,_^[
f;\$$
f;L$$
F\=DXT3
F<t]3
F4;F0t
FileDescription
FileVersion
first
First arithmetic instruction cannot have co-issue ('+') set; there is no previous arithmetic instruction to pair with.
First source for cnd instruction must be 'r0.a'.
First source parameter for bem must be temp (r#) or constant (c#) register.
FlipNoVsync
floor
FlushFileBuffers
ForceDriverFlagsOff
ForceRefreshRate
Format for address register must be a0.x.
FormatMessageW
FreeLibrary
FSoftware\Microsoft\Direct3D
FtWPQ
FXj@t=
G(@t-
G(@tI
G(QPj
G,Hu$
G@+GD;
G4_^[
GD_^[
GD3BD
GDI32.dll
GdiEntry1
GdiEntry13
GetClientRect
GetCurrentDpiInfo
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetCursor
GetCursorPos
GetDC
GetDesktopWindow
GetDeviceCaps
GetDeviceGammaRamp
GetDIBits
GetFileVersionInfoExA
GetFileVersionInfoSizeExA
GetForegroundWindow
GetIconInfo
GetKeyState
GetLastError
GetLengthSid
GetModuleFileNameA
GetModuleHandleA
GetModuleHandleW
GetMonitorInfoA
GetNativeSystemInfo
GetNearestColor
GetObjectA
GetPrivateDDITable
GetProcAddress
GetProcessDpiAwarenessInternal
GetProcessHeap
GetRandomRgn
GetRegionData
GetSidLengthRequired
GetSidSubAuthority
GetSystemDirectoryA
GetSystemMetrics
GetSystemPaletteEntries
GetSystemTimeAsFileTime
GetThreadDesktop
GetTickCount
GetUserObjectInformationA
GetVersionExA
GetWindowDC
GetWindowInfo
GetWindowLongA
GetWindowRect
GetWindowThreadProcessId
GL _[]
GL$_^[
GL(_^[
GlobalAddAtomA
GLV;GHv
GPPSj
GRGBu
Gt_^[
Gxt#j
Hardware\DirectDrawDrivers
HeapAlloc
HeapFree
HIGHDPIAWARE
HPQhpz
HPQhte
Incomplete texm* sequence.
Individual instruction in co-issue pair cannot write both alpha and color component(s).
InitializeAcl
InitializeCriticalSection
InitializeSecurityDescriptor
InitializeSid
InstalledDisplayDrivers
Instruction cannot have co-issue ('+') set without a previous arithmetic instruction to pair with.
Instruction modifiers are not allowed for tex* instructions.
Instruction modifiers not allowed for tex* instructions.
Instruction not supported by version %d.%d pixel shader.
Instruction not supported by version %d.%d vertex shader.
INTERNAL ERROR:View matrix in D3DFE_PROCESSVERTICES structure must be aligned to 16 bytes
InternalName
IntersectRect
Invalid const register num: %d. Max allowed is %d.
Invalid dest reg num: %d. Max allowed for this reg type is %d.
Invalid destination register number: %d. Max allowed for this register type is %d.
Invalid destination shift.
Invalid dst modifier.
Invalid dst shift.
Invalid instruction modifier.
Invalid parameter count.
Invalid reg num %d (%s source param).  Max allowed for this type is %d.
Invalid reg num: %d for %s source param. Max allowed for this type is %d.
Invalid reg type (%s source param).
Invalid reg type for %s source param.
Invalid reg type for dest param.
Invalid register type for destination param.
Invalid src mod for %s source param.
Invalid src mod for tex* instruction (%s source param).
Invalid src swizzle for %s source param.
Invalid texm* register.
Invalid texm* sequence.
IsDebuggerPresent
IsDeveloperModeEnabled
IsIconic
IsProcessorFeaturePresent
IsValidSid
IsWindow
IsWindowVisible
IsWow64Process
IsZoomed
jjjjj
K09_4tE
K0e0q0
kD$,,
KERNEL32
KERNEL32.dll
KH_^[
KV_DISPLAY
L$ G;
L$ J;
L$ PW
L$ QP
L$$_^[3
L$(VW
L$,;L$
L$,_^
L$,_^[3
L$,_^3
L$,9L$
L$,QP
L$,QPQ
L$\_^[3
L$|_^[3
L$|_^3
L$<_^
L$<_^[3
L$<_^3
L$4_^[3
L$D;T$0
L$d_^[3
L$d_^3
L$hPW
L$l^3
L$l_^[3
L$LQS
L$p^[3
L$t_^[3
L$T_^[3
L$t_^[3
L$x)\$
LeaveCriticalSection
LegalCopyright
LoadDebugRuntime
LoadLibraryA
LoadLibraryExW
LoadLibraryW
Local\__DDrawCheckExclMode__
Local\__DDrawExclMode__
Local\D3D8CheckFullscreenSemaphore
LocalAlloc
LocalFree
LowVidMemCap
lstrcmpA
malloc
Maximum of 3 cmp instructions allowed.
Maximum of 4 dp4 instructions allowed.
MaxPixelShaderValue
memcpy
memset
Microsoft
Microsoft Corporation
Microsoft Direct3D
Microsoft.Windows.Graphics.D3D8
MinimumLocalVidMem
mscat32.dll
msvcrt.dll
MultiByteToWideChar
Multiple constant registers cannot be read by a matrix op.
Multiple dependent texture reads are disallowed (%s source param).  Texture read results can be used as an address for subsequent read, but the results from that read cannot be used as an address in yet another subsequent read.
Multiple input registers cannot be read by a matrix op.
Multiple phase markers not permitted.  Aborting shader validation.
Must use texture register a dest param for tex* instructions.
N(G;y
nop cannot be co-issued.
nop instruction cannot be co-issued.
Normal
Normal2
ntdll.dll
Number of instruction slots used too high: %d. Max. allowed is %d.
O$Pt5
O4_^[
OffsetRect
OH_^[
One of the instructions in a co-issue pair must write to alpha only (.a writemask).
Only one use of texdepth is permitted.
Only the mov instruction is allowed to write to the address register.
OP_^[
OpenAdapter
OpenClipboard
OpenEventW
OpenInputDesktop
OpenMutexA
OriginalFilename
OsThunkD3dContextCreate
OsThunkD3dContextDestroy
OsThunkD3dContextDestroyAll
OsThunkD3dDrawPrimitives2
OsThunkD3dValidateTextureStageState
OsThunkDdAttachSurface
OsThunkDdBlt
OsThunkDdCanCreateD3DBuffer
OsThunkDdCanCreateSurface
OsThunkDdCreateD3DBuffer
OsThunkDdCreateSurface
OsThunkDdCreateSurfaceEx
OsThunkDdCreateSurfaceObject
OsThunkDdDeleteDirectDrawObject
OsThunkDdDeleteSurfaceObject
OsThunkDdDestroyD3DBuffer
OsThunkDdDestroySurface
OsThunkDdFlip
OsThunkDdFlipToGDISurface
OsThunkDdGetAvailDriverMemory
OsThunkDdGetBltStatus
OsThunkDdGetDC
OsThunkDdGetDriverInfo
OsThunkDdGetDriverState
OsThunkDdGetFlipStatus
OsThunkDdGetScanLine
OsThunkDdLock
OsThunkDdLockD3D
OsThunkDdQueryDirectDrawObject
OsThunkDdReenableDirectDrawObject
OsThunkDdReleaseDC
OsThunkDdResetVisrgn
OsThunkDdSetExclusiveMode
OsThunkDdSetGammaRamp
OsThunkDdUnlock
OsThunkDdUnlockD3D
OsThunkDdWaitForVerticalBlank
Out of memory
Out of memory.
Out of memory.  Aborting shader decl. validation.
OutputDebugStringA
OutputDebugStringW
p hLj
PeekNamedPipe
Phase marker cannot be co-issued.
phase marker cannot be co-issued.
PixelShaderVersion
Point size
Position
Position2
PostMessageA
PQh@g
PQh@j
PQh0h
PQSVW
PRh0h
PRhpz
Primary Display Driver
ProcessInfo
ProductName
ProductVersion
PSh@g
QCOMu
qD9QHr
QLSVW
QQPWj
QueryPerformanceCounter
QueryPerformanceFrequency
QVPt6
r/HPSh8
r/HPWhte
r0 must be written by shader. Uninitialized component%s(*): %s
r0 must be written by shader. Uninitialized component%s(*): %s. Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd. Also: Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
Read of uninitialized component%s(*) in %s%d: %s
Read of uninitialized component%s(*) in %s%d: %s. Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first. Also: Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
ReadFile
Reg num: %d for %s source param on matrix instruction causes attempt to access out of range register number %d. Max allowed for this type is %d.
RegCloseKey
RegCreateKeyA
RegCreateKeyExA
RegEnumKeyA
RegGetValueA
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. An r# register may be used as the destination for a tex* instruction at most once before the phase marker and once after. 
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. Second use of this register as a tex* destination is only available after the phase marker. 
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. To perform two tex* instructions with the same destination register, they must be separated by inserting a phase marker. 
RegisterHotKey
RegOpenKeyA
RegOpenKeyExA
RegQueryValueExA
RegSetValueExA
Relative addressing of constant register must reference a0.x only.
ReleaseDC
ReleaseMutex
ReleaseSemaphore
Reserved bit(s) set in destination parameter token!  Aborting validation.
Reserved bit(s) set in instruction parameter token!  Aborting validation.
Reserved bit(s) set in source %d parameter token!  Aborting validation.
ResetEvent
RGBGt
rIHPR
RSDSK
RtlDllShutdownInProgress
S(+S 
schemaVersion
second
Second source parameter for bem must be temp (r#) register.
Second source parameter for texm3x3spec must be c#.
SelectObject
SendMessageA
SetClipboardData
SetCursor
SetCursorPos
SetErrorMode
SetForegroundWindow
SetNamedPipeHandleState
SetProcessDpiAwarenessInternal
SetRect
SetRectEmpty
SetSecurityDescriptorDacl
SetSecurityInfo
SetStretchBltMode
SetUnhandledExceptionFilter
SetWindowLongA
SetWindowPos
ShowFrameRate
ShowWindow
Sleep
Software\Microsoft\Direct3D\Drivers
Software\Microsoft\Direct3D\MostRecentApplication
Software\Microsoft\Direct3D\ReferenceDevice
Software\Microsoft\DirectDraw
Software\Microsoft\DirectDraw\GammaCalibrator
Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers
SoftwareOnly
Source for texcrd requires component selector .xyw(==.rga), or .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
Source swizzle not allowed for tex* instruction (%s source param).
Specular
s-QWV
Src reg for tex* instruction must be t# register (%s source param).
Src selector .b (%s source param) is only valid for instructions that occur in the alpha pipe.
sscanf_s
strcpy_s
StretchBlt
StringFileInfo
strrchr
SUBSYS_
SVWj<
SVWj0
SystemParametersInfoA
t!Qj@
t"QhH
t# registers must appear in sequence (i.e. t0 before t2 OK, but t1 before t0 not valid).
t#hDU
T$ PS
t$$9L$,uw
T$$Rj
T$(Vh
T$,;T$0
T$,;T$L
T$,9T$0
t$,PS
T$,RQ
t$0;x
t$8Wj
t$8WV
T$Lf;G
T$P;D$8u8;
t$T;B
t)=DXT1t"=DXT2
t,hTA
t.h0z
t;9^tt6
t[h,t
t0j,j
t5h0z
t9jZW
TA;L$Pr
TerminateProcess
Tex register t%d already declared.
tex* instructions cannot be after arithmetic instructions within one phase of the shader.  Each phase can have a block of tex* instructions followed by a block of arithmetic instructions. 
tex* instructions cannot be after arithmetic instructions. The exception is if a phase marker is present in the shader - this separates a shader into two phases.  Each phase may have a set of tex* instructions followed by a set of arithmetic instructions.  
tex* instructions must write all components.
texcrd must use .xyz(=.rgb) destination writemask.
texcrd with _dw(=_da) source modifier must use .xy(=.rg) destination writemask.
texld/texkill/texdepth instructions must write all components.
Texture
Texture coordinate register t%d read more than once in shader with different source selector (swizzle). Multiple reads of identical texture coordinate register throughout shader must all use identical source selector. Note this does not restrict mixing use and non-use of a source modifier (i.e. _dw/_da or _dz/_db, depending what the swizzle allows) on these coordinate register reads.
Texture register result of texbem or texbeml instruction must not be read by tex* instruction. Affected components(*) of %s source param: %s
Texture register result of texkill%s or texm*pad instructions must not be read. Affected components(*) of %s source param: %s
Texture register that has been read by a tex* instruction cannot be read by a non-tex* instruction. Affected components(*) of %s source param: %s
tGh0z
The current tex* instruction reads from %c%d, which was written earlier by another tex* instruction in the same block of tex* instructions.  Dependent reads are not permitted within a single block of tex* instructions.  To perform a dependent read, separate texture coordinate derivation from the tex* instruction using the coordinates with a 'phase' marker.
The only valid modifiers for the first source parameter of lrp are: reg (no mod) or 1-reg (complement).
The only valid write masks for the FRC instruction are .xy and .y.
third
tkhpT
tn;7uc
To use bem, a phase marker must be present later in the shader.
Too many (%d) arithmetic instructions after phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) arithmetic instructions before phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) arithmetic instructions. Max. allowed (counting any co-issued pairs as 1) is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Too many (%d) tex* instructions after phase marker. Max. allowed in a phase is %d.
Too many (%d) tex* instructions before phase marker. Max. allowed in a phase is %d.
Too many (%d) tex* instructions. Max. allowed is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Too many arithmetic instruction slots used: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
Too many texture addressing instruction slots used: %d. Max. allowed is %d. (Note that some texture addressing instructions may use up more than one instruction slot)
Total number of instruction slots used too high: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
Translation
tTPWV
u WVP
u#91t
u^h8U
u+VPS
UnhandledExceptionFilter
UnionRect
Unrecognized instruction. Aborting pixel shader validation.
Unrecognized instruction. Aborting vertex shader validation.
UnregisterHotKey
UsePSConverter
User/kernel-mode driver mismatch
USER32
user32.dll
USER32.dll
UseVSConverter
Using a temp register (r#) as source for texld requires component selector .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
Using a texture coordinate register (t#) as source for texld requires component selector .xyw(=.rga), or .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
UTCReplace_AppSessionGuid
UYVYt
UYVYtP
v#QPhP
v#RPh
v{PRh(i
v}PQh8
ValidatePixelShader
ValidateVertexShader
VarFileInfo
VerifyVersionInfoA
VerQueryValueA
VerSetConditionMask
Version Token: %d.%d is not a supported pixel shader version. Aborting pixel shader validation.
Version Token: %d.%d is not a supported vertex shader version. Aborting vertex shader validation.
Version token: 0x%x indicates a pixel shader.  Vertex shader version token must be of the form 0xfffe****.
Version Token: 0x%x indicates a vertex shader.  Pixel shader version token must be of the form 0xffff****.
Version Token: 0x%x is invalid. Pixel shader version token must be of the form 0xffff****. Aborting pixel shader validation.
Version Token: 0x%x is invalid. Vertex shader version token must be of the form 0xfffe****. Aborting vertex shader validation.
Version Token: Code and declaration pointers passed into shader vertex shader validator cannot both be NULL.
Version Token: Pixel shader version %d.%d is too high for device.  Maximum supported version is %d.%d. Aborting shader validation.
Version Token: Vertex shader version %d.%d is too high for device. Maximum supported version is %d.%d. Aborting shader validation.
Vertex shader must minimally write first two (x,y) components of oPos output register.
Vertex shader must minimally write first two (x,y) components of oPos output register.  Affected component%s(*): %s
vGPQh
VHu0;
VPQQQ
VS_VERSION_INFO
VW<0t
VWj<j
VWj0j@
w ^_[
w@SVW
w5t)=
WaitForSingleObject
wcscpy_s
wcsrchr
When a phase marker is present in a shader, texdepth is only permitted after the phase marker.
When a phase marker is present in a shader, texkill is only permitted after the phase marker.
WideCharToMultiByte
wintrust.dll
WinVerifyTrust
wIt"-
wlt^=
Wow64EnableWow64FsRedirection
WriteFile
Writemask for bem must be '.rg'
wUt&=
X,9y$t
x@;T$
Y__^[
y{_^[
y>_^[
y4_^[
YUY2t!
YUY2tH
YUY2u
